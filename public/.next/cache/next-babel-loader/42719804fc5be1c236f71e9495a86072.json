{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { contrastBorder, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, widgetShadow, activeContrastBorder, badgeBackground, badgeForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, darken, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, treeIndentGuidesStroke, resolveColorValue } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n  var styles = Object.create(null);\n\n  for (var key in styleMap) {\n    var value = styleMap[key];\n\n    if (value) {\n      styles[key] = resolveColorValue(value, theme);\n    }\n  }\n\n  return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n  function applyStyles(theme) {\n    var styles = computeStyles(themeService.getColorTheme(), styleMap);\n\n    if (typeof widgetOrCallback === 'function') {\n      widgetOrCallback(styles);\n    } else {\n      widgetOrCallback.style(styles);\n    }\n  }\n\n  applyStyles(themeService.getColorTheme());\n  return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n  return attachStyler(themeService, {\n    badgeBackground: style && style.badgeBackground || badgeBackground,\n    badgeForeground: style && style.badgeForeground || badgeForeground,\n    badgeBorder: contrastBorder\n  }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), overrides || {}), widget);\n}\nexport var defaultListStyles = {\n  listFocusBackground: listFocusBackground,\n  listFocusForeground: listFocusForeground,\n  listActiveSelectionBackground: darken(listActiveSelectionBackground, 0.1),\n  listActiveSelectionForeground: listActiveSelectionForeground,\n  listFocusAndSelectionBackground: listActiveSelectionBackground,\n  listFocusAndSelectionForeground: listActiveSelectionForeground,\n  listInactiveSelectionBackground: listInactiveSelectionBackground,\n  listInactiveSelectionForeground: listInactiveSelectionForeground,\n  listInactiveFocusBackground: listInactiveFocusBackground,\n  listHoverBackground: listHoverBackground,\n  listHoverForeground: listHoverForeground,\n  listDropBackground: listDropBackground,\n  listFocusOutline: activeContrastBorder,\n  listSelectionOutline: activeContrastBorder,\n  listHoverOutline: activeContrastBorder,\n  listFilterWidgetBackground: listFilterWidgetBackground,\n  listFilterWidgetOutline: listFilterWidgetOutline,\n  listFilterWidgetNoMatchesOutline: listFilterWidgetNoMatchesOutline,\n  listMatchesShadow: widgetShadow,\n  treeIndentGuidesStroke: treeIndentGuidesStroke\n};\nexport var defaultMenuStyles = {\n  shadowColor: widgetShadow,\n  borderColor: menuBorder,\n  foregroundColor: menuForeground,\n  backgroundColor: menuBackground,\n  selectionForegroundColor: menuSelectionForeground,\n  selectionBackgroundColor: menuSelectionBackground,\n  selectionBorderColor: menuSelectionBorder,\n  separatorColor: menuSeparatorBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n  return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/theme/common/styler.js"],"names":["contrastBorder","listFocusBackground","listFocusForeground","listActiveSelectionBackground","listActiveSelectionForeground","listInactiveSelectionForeground","listInactiveSelectionBackground","listInactiveFocusBackground","listHoverBackground","listHoverForeground","listDropBackground","widgetShadow","activeContrastBorder","badgeBackground","badgeForeground","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuBorder","menuSeparatorBackground","darken","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetBackground","treeIndentGuidesStroke","resolveColorValue","computeStyles","theme","styleMap","styles","Object","create","key","value","attachStyler","themeService","widgetOrCallback","applyStyles","getColorTheme","style","onDidColorThemeChange","attachBadgeStyler","widget","badgeBorder","attachListStyler","overrides","assign","defaultListStyles","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listFocusOutline","listSelectionOutline","listHoverOutline","listMatchesShadow","defaultMenuStyles","shadowColor","borderColor","foregroundColor","backgroundColor","selectionForegroundColor","selectionBackgroundColor","selectionBorderColor","separatorColor","attachMenuStyler"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { contrastBorder, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, widgetShadow, activeContrastBorder, badgeBackground, badgeForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, darken, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, treeIndentGuidesStroke, resolveColorValue } from './colorRegistry.js';\r\nexport function computeStyles(theme, styleMap) {\r\n    const styles = Object.create(null);\r\n    for (let key in styleMap) {\r\n        const value = styleMap[key];\r\n        if (value) {\r\n            styles[key] = resolveColorValue(value, theme);\r\n        }\r\n    }\r\n    return styles;\r\n}\r\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\r\n    function applyStyles(theme) {\r\n        const styles = computeStyles(themeService.getColorTheme(), styleMap);\r\n        if (typeof widgetOrCallback === 'function') {\r\n            widgetOrCallback(styles);\r\n        }\r\n        else {\r\n            widgetOrCallback.style(styles);\r\n        }\r\n    }\r\n    applyStyles(themeService.getColorTheme());\r\n    return themeService.onDidColorThemeChange(applyStyles);\r\n}\r\nexport function attachBadgeStyler(widget, themeService, style) {\r\n    return attachStyler(themeService, {\r\n        badgeBackground: (style && style.badgeBackground) || badgeBackground,\r\n        badgeForeground: (style && style.badgeForeground) || badgeForeground,\r\n        badgeBorder: contrastBorder\r\n    }, widget);\r\n}\r\nexport function attachListStyler(widget, themeService, overrides) {\r\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), (overrides || {})), widget);\r\n}\r\nexport const defaultListStyles = {\r\n    listFocusBackground: listFocusBackground,\r\n    listFocusForeground: listFocusForeground,\r\n    listActiveSelectionBackground: darken(listActiveSelectionBackground, 0.1),\r\n    listActiveSelectionForeground: listActiveSelectionForeground,\r\n    listFocusAndSelectionBackground: listActiveSelectionBackground,\r\n    listFocusAndSelectionForeground: listActiveSelectionForeground,\r\n    listInactiveSelectionBackground: listInactiveSelectionBackground,\r\n    listInactiveSelectionForeground: listInactiveSelectionForeground,\r\n    listInactiveFocusBackground: listInactiveFocusBackground,\r\n    listHoverBackground: listHoverBackground,\r\n    listHoverForeground: listHoverForeground,\r\n    listDropBackground: listDropBackground,\r\n    listFocusOutline: activeContrastBorder,\r\n    listSelectionOutline: activeContrastBorder,\r\n    listHoverOutline: activeContrastBorder,\r\n    listFilterWidgetBackground: listFilterWidgetBackground,\r\n    listFilterWidgetOutline: listFilterWidgetOutline,\r\n    listFilterWidgetNoMatchesOutline: listFilterWidgetNoMatchesOutline,\r\n    listMatchesShadow: widgetShadow,\r\n    treeIndentGuidesStroke: treeIndentGuidesStroke\r\n};\r\nexport const defaultMenuStyles = {\r\n    shadowColor: widgetShadow,\r\n    borderColor: menuBorder,\r\n    foregroundColor: menuForeground,\r\n    backgroundColor: menuBackground,\r\n    selectionForegroundColor: menuSelectionForeground,\r\n    selectionBackgroundColor: menuSelectionBackground,\r\n    selectionBorderColor: menuSelectionBorder,\r\n    separatorColor: menuSeparatorBackground\r\n};\r\nexport function attachMenuStyler(widget, themeService, style) {\r\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}