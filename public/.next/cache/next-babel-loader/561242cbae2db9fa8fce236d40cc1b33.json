{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { LanguageIdentifier } from '../modes.js';\nimport { LanguageConfigurationRegistry } from './languageConfigurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js'; // Define extension point ids\n\nexport var Extensions = {\n  ModesRegistry: 'editor.modesRegistry'\n};\nexport var EditorModesRegistry = /*#__PURE__*/function () {\n  function EditorModesRegistry() {\n    _classCallCheck(this, EditorModesRegistry);\n\n    this._onDidChangeLanguages = new Emitter();\n    this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n    this._languages = [];\n    this._dynamicLanguages = [];\n  } // --- languages\n\n\n  _createClass(EditorModesRegistry, [{\n    key: \"registerLanguage\",\n    value: function registerLanguage(def) {\n      var _this = this;\n\n      this._languages.push(def);\n\n      this._onDidChangeLanguages.fire(undefined);\n\n      return {\n        dispose: function dispose() {\n          for (var i = 0, len = _this._languages.length; i < len; i++) {\n            if (_this._languages[i] === def) {\n              _this._languages.splice(i, 1);\n\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"getLanguages\",\n    value: function getLanguages() {\n      return [].concat(this._languages).concat(this._dynamicLanguages);\n    }\n  }]);\n\n  return EditorModesRegistry;\n}();\nexport var ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\nexport var PLAINTEXT_MODE_ID = 'plaintext';\nexport var PLAINTEXT_LANGUAGE_IDENTIFIER = new LanguageIdentifier(PLAINTEXT_MODE_ID, 1\n/* PlainText */\n);\nModesRegistry.registerLanguage({\n  id: PLAINTEXT_MODE_ID,\n  extensions: ['.txt'],\n  aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n  mimetypes: ['text/plain']\n});\nLanguageConfigurationRegistry.register(PLAINTEXT_LANGUAGE_IDENTIFIER, {\n  brackets: [['(', ')'], ['[', ']'], ['{', '}']],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\\"',\n    close: '\\\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  folding: {\n    offSide: true\n  }\n});","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/modes/modesRegistry.js"],"names":["nls","Emitter","LanguageIdentifier","LanguageConfigurationRegistry","Registry","Extensions","ModesRegistry","EditorModesRegistry","_onDidChangeLanguages","onDidChangeLanguages","event","_languages","_dynamicLanguages","def","push","fire","undefined","dispose","i","len","length","splice","concat","add","PLAINTEXT_MODE_ID","PLAINTEXT_LANGUAGE_IDENTIFIER","registerLanguage","id","extensions","aliases","localize","mimetypes","register","brackets","surroundingPairs","open","close","folding","offSide"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,6BAAT,QAA8C,oCAA9C;AACA,SAASC,QAAT,QAAyB,+CAAzB,C,CACA;;AACA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,aAAa,EAAE;AADO,CAAnB;AAGP,WAAaC,mBAAb;AACI,iCAAc;AAAA;;AACV,SAAKC,qBAAL,GAA6B,IAAIP,OAAJ,EAA7B;AACA,SAAKQ,oBAAL,GAA4B,KAAKD,qBAAL,CAA2BE,KAAvD;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,iBAAL,GAAyB,EAAzB;AACH,GANL,CAOI;;;AAPJ;AAAA;AAAA,qCAQqBC,GARrB,EAQ0B;AAAA;;AAClB,WAAKF,UAAL,CAAgBG,IAAhB,CAAqBD,GAArB;;AACA,WAAKL,qBAAL,CAA2BO,IAA3B,CAAgCC,SAAhC;;AACA,aAAO;AACHC,QAAAA,OAAO,EAAE,mBAAM;AACX,eAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAI,CAACR,UAAL,CAAgBS,MAAtC,EAA8CF,CAAC,GAAGC,GAAlD,EAAuDD,CAAC,EAAxD,EAA4D;AACxD,gBAAI,KAAI,CAACP,UAAL,CAAgBO,CAAhB,MAAuBL,GAA3B,EAAgC;AAC5B,cAAA,KAAI,CAACF,UAAL,CAAgBU,MAAhB,CAAuBH,CAAvB,EAA0B,CAA1B;;AACA;AACH;AACJ;AACJ;AARE,OAAP;AAUH;AArBL;AAAA;AAAA,mCAsBmB;AACX,aAAO,GAAGI,MAAH,CAAU,KAAKX,UAAf,EAA2BW,MAA3B,CAAkC,KAAKV,iBAAvC,CAAP;AACH;AAxBL;;AAAA;AAAA;AA0BA,OAAO,IAAMN,aAAa,GAAG,IAAIC,mBAAJ,EAAtB;AACPH,QAAQ,CAACmB,GAAT,CAAalB,UAAU,CAACC,aAAxB,EAAuCA,aAAvC;AACA,OAAO,IAAMkB,iBAAiB,GAAG,WAA1B;AACP,OAAO,IAAMC,6BAA6B,GAAG,IAAIvB,kBAAJ,CAAuBsB,iBAAvB,EAA0C;AAAE;AAA5C,CAAtC;AACPlB,aAAa,CAACoB,gBAAd,CAA+B;AAC3BC,EAAAA,EAAE,EAAEH,iBADuB;AAE3BI,EAAAA,UAAU,EAAE,CAAC,MAAD,CAFe;AAG3BC,EAAAA,OAAO,EAAE,CAAC7B,GAAG,CAAC8B,QAAJ,CAAa,iBAAb,EAAgC,YAAhC,CAAD,EAAgD,MAAhD,CAHkB;AAI3BC,EAAAA,SAAS,EAAE,CAAC,YAAD;AAJgB,CAA/B;AAMA5B,6BAA6B,CAAC6B,QAA9B,CAAuCP,6BAAvC,EAAsE;AAClEQ,EAAAA,QAAQ,EAAE,CACN,CAAC,GAAD,EAAM,GAAN,CADM,EAEN,CAAC,GAAD,EAAM,GAAN,CAFM,EAGN,CAAC,GAAD,EAAM,GAAN,CAHM,CADwD;AAMlEC,EAAAA,gBAAgB,EAAE,CACd;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADc,EAEd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHc,EAId;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAJc,EAKd;AAAED,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALc,EAMd;AAAED,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANc,EAOd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAPc,CANgD;AAelEC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ;AAfyD,CAAtE","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nimport { LanguageConfigurationRegistry } from './languageConfigurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\n// Define extension point ids\r\nexport const Extensions = {\r\n    ModesRegistry: 'editor.modesRegistry'\r\n};\r\nexport class EditorModesRegistry {\r\n    constructor() {\r\n        this._onDidChangeLanguages = new Emitter();\r\n        this.onDidChangeLanguages = this._onDidChangeLanguages.event;\r\n        this._languages = [];\r\n        this._dynamicLanguages = [];\r\n    }\r\n    // --- languages\r\n    registerLanguage(def) {\r\n        this._languages.push(def);\r\n        this._onDidChangeLanguages.fire(undefined);\r\n        return {\r\n            dispose: () => {\r\n                for (let i = 0, len = this._languages.length; i < len; i++) {\r\n                    if (this._languages[i] === def) {\r\n                        this._languages.splice(i, 1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    getLanguages() {\r\n        return [].concat(this._languages).concat(this._dynamicLanguages);\r\n    }\r\n}\r\nexport const ModesRegistry = new EditorModesRegistry();\r\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\r\nexport const PLAINTEXT_MODE_ID = 'plaintext';\r\nexport const PLAINTEXT_LANGUAGE_IDENTIFIER = new LanguageIdentifier(PLAINTEXT_MODE_ID, 1 /* PlainText */);\r\nModesRegistry.registerLanguage({\r\n    id: PLAINTEXT_MODE_ID,\r\n    extensions: ['.txt'],\r\n    aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\r\n    mimetypes: ['text/plain']\r\n});\r\nLanguageConfigurationRegistry.register(PLAINTEXT_LANGUAGE_IDENTIFIER, {\r\n    brackets: [\r\n        ['(', ')'],\r\n        ['[', ']'],\r\n        ['{', '}'],\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\\"', close: '\\\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}