{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n\n(function (Severity) {\n  Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n  Severity[Severity[\"Info\"] = 1] = \"Info\";\n  Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n  Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n\n(function (Severity) {\n  var _error = 'error';\n  var _warning = 'warning';\n  var _warn = 'warn';\n  var _info = 'info';\n  /**\r\n   * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n   * and falls back to ignore.\r\n   */\n\n  function fromValue(value) {\n    if (!value) {\n      return Severity.Ignore;\n    }\n\n    if (strings.equalsIgnoreCase(_error, value)) {\n      return Severity.Error;\n    }\n\n    if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n      return Severity.Warning;\n    }\n\n    if (strings.equalsIgnoreCase(_info, value)) {\n      return Severity.Info;\n    }\n\n    return Severity.Ignore;\n  }\n\n  Severity.fromValue = fromValue;\n})(Severity || (Severity = {}));\n\nexport default Severity;","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/severity.js"],"names":["strings","Severity","_error","_warning","_warn","_info","fromValue","value","Ignore","equalsIgnoreCase","Error","Warning","Info"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,IAAIC,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;AACjBA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,CAAtB,CAAR,GAAmC,QAAnC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,MAAD,CAAR,GAAmB,CAApB,CAAR,GAAiC,MAAjC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,SAAD,CAAR,GAAsB,CAAvB,CAAR,GAAoC,SAApC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,OAAD,CAAR,GAAoB,CAArB,CAAR,GAAkC,OAAlC;AACH,CALD,EAKGA,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CALX;;AAMA,CAAC,UAAUA,QAAV,EAAoB;AACjB,MAAMC,MAAM,GAAG,OAAf;AACA,MAAMC,QAAQ,GAAG,SAAjB;AACA,MAAMC,KAAK,GAAG,MAAd;AACA,MAAMC,KAAK,GAAG,MAAd;AACA;AACJ;AACA;AACA;;AACI,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAI,CAACA,KAAL,EAAY;AACR,aAAON,QAAQ,CAACO,MAAhB;AACH;;AACD,QAAIR,OAAO,CAACS,gBAAR,CAAyBP,MAAzB,EAAiCK,KAAjC,CAAJ,EAA6C;AACzC,aAAON,QAAQ,CAACS,KAAhB;AACH;;AACD,QAAIV,OAAO,CAACS,gBAAR,CAAyBN,QAAzB,EAAmCI,KAAnC,KAA6CP,OAAO,CAACS,gBAAR,CAAyBL,KAAzB,EAAgCG,KAAhC,CAAjD,EAAyF;AACrF,aAAON,QAAQ,CAACU,OAAhB;AACH;;AACD,QAAIX,OAAO,CAACS,gBAAR,CAAyBJ,KAAzB,EAAgCE,KAAhC,CAAJ,EAA4C;AACxC,aAAON,QAAQ,CAACW,IAAhB;AACH;;AACD,WAAOX,QAAQ,CAACO,MAAhB;AACH;;AACDP,EAAAA,QAAQ,CAACK,SAAT,GAAqBA,SAArB;AACH,CAzBD,EAyBGL,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CAzBX;;AA0BA,eAAeA,QAAf","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nvar Severity;\r\n(function (Severity) {\r\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\r\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\r\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\r\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\r\n})(Severity || (Severity = {}));\r\n(function (Severity) {\r\n    const _error = 'error';\r\n    const _warning = 'warning';\r\n    const _warn = 'warn';\r\n    const _info = 'info';\r\n    /**\r\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n     * and falls back to ignore.\r\n     */\r\n    function fromValue(value) {\r\n        if (!value) {\r\n            return Severity.Ignore;\r\n        }\r\n        if (strings.equalsIgnoreCase(_error, value)) {\r\n            return Severity.Error;\r\n        }\r\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\r\n            return Severity.Warning;\r\n        }\r\n        if (strings.equalsIgnoreCase(_info, value)) {\r\n            return Severity.Info;\r\n        }\r\n        return Severity.Ignore;\r\n    }\r\n    Severity.fromValue = fromValue;\r\n})(Severity || (Severity = {}));\r\nexport default Severity;\r\n"]},"metadata":{},"sourceType":"module"}