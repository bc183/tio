{"ast":null,"code":"import _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar _a;\n\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Configuration } from '../config/configuration.js';\nimport { StableEditorScrollState } from '../core/editorState.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption } from '../../common/config/editorOptions.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { OverviewRulerZone } from '../../common/view/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\n\nvar VisualEditorState = /*#__PURE__*/function () {\n  function VisualEditorState(_contextMenuService, _clipboardService) {\n    _classCallCheck(this, VisualEditorState);\n\n    this._contextMenuService = _contextMenuService;\n    this._clipboardService = _clipboardService;\n    this._zones = [];\n    this._inlineDiffMargins = [];\n    this._zonesMap = {};\n    this._decorations = [];\n  }\n\n  _createClass(VisualEditorState, [{\n    key: \"getForeignViewZones\",\n    value: function getForeignViewZones(allViewZones) {\n      var _this = this;\n\n      return allViewZones.filter(function (z) {\n        return !_this._zonesMap[String(z.id)];\n      });\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(editor) {\n      var _this2 = this;\n\n      // (1) View zones\n      if (this._zones.length > 0) {\n        editor.changeViewZones(function (viewChangeAccessor) {\n          var _iterator = _createForOfIteratorHelper(_this2._zones),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var zoneId = _step.value;\n              viewChangeAccessor.removeZone(zoneId);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      }\n\n      this._zones = [];\n      this._zonesMap = {}; // (2) Model decorations\n\n      this._decorations = editor.deltaDecorations(this._decorations, []);\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n      var _this3 = this;\n\n      var scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null; // view zones\n\n      editor.changeViewZones(function (viewChangeAccessor) {\n        var _iterator2 = _createForOfIteratorHelper(_this3._zones),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _zoneId = _step2.value;\n            viewChangeAccessor.removeZone(_zoneId);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        var _iterator3 = _createForOfIteratorHelper(_this3._inlineDiffMargins),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var inlineDiffMargin = _step3.value;\n            inlineDiffMargin.dispose();\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        _this3._zones = [];\n        _this3._zonesMap = {};\n        _this3._inlineDiffMargins = [];\n\n        for (var i = 0, length = newDecorations.zones.length; i < length; i++) {\n          var viewZone = newDecorations.zones[i];\n          viewZone.suppressMouseDown = true;\n          var zoneId = viewChangeAccessor.addZone(viewZone);\n\n          _this3._zones.push(zoneId);\n\n          _this3._zonesMap[String(zoneId)] = true;\n\n          if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n            viewZone.suppressMouseDown = false;\n\n            _this3._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, _this3._contextMenuService, _this3._clipboardService));\n          }\n        }\n      });\n\n      if (scrollState) {\n        scrollState.restore(editor);\n      } // decorations\n\n\n      this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations); // overview ruler\n\n      if (overviewRuler) {\n        overviewRuler.setZones(newDecorations.overviewZones);\n      }\n    }\n  }]);\n\n  return VisualEditorState;\n}();\n\nvar DIFF_EDITOR_ID = 0;\nvar diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nvar diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nvar ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', {\n  createHTML: function createHTML(value) {\n    return value;\n  }\n});\n\nvar DiffEditorWidget = /*#__PURE__*/function (_Disposable) {\n  _inherits(DiffEditorWidget, _Disposable);\n\n  var _super = _createSuper(DiffEditorWidget);\n\n  function DiffEditorWidget(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n    var _this4;\n\n    _classCallCheck(this, DiffEditorWidget);\n\n    _this4 = _super.call(this);\n    _this4._editorProgressService = _editorProgressService;\n    _this4._onDidDispose = _this4._register(new Emitter());\n    _this4.onDidDispose = _this4._onDidDispose.event;\n    _this4._onDidUpdateDiff = _this4._register(new Emitter());\n    _this4.onDidUpdateDiff = _this4._onDidUpdateDiff.event;\n    _this4._onDidContentSizeChange = _this4._register(new Emitter());\n    _this4._lastOriginalWarning = null;\n    _this4._lastModifiedWarning = null;\n    _this4._editorWorkerService = editorWorkerService;\n    _this4._codeEditorService = codeEditorService;\n    _this4._contextKeyService = _this4._register(contextKeyService.createScoped(domElement));\n\n    _this4._contextKeyService.createKey('isInDiffEditor', true);\n\n    _this4._themeService = themeService;\n    _this4._notificationService = notificationService;\n    _this4._id = ++DIFF_EDITOR_ID;\n    _this4._state = 0\n    /* Idle */\n    ;\n    _this4._updatingDiffProgress = null;\n    _this4._domElement = domElement;\n    options = options || {}; // renderSideBySide\n\n    _this4._renderSideBySide = true;\n\n    if (typeof options.renderSideBySide !== 'undefined') {\n      _this4._renderSideBySide = options.renderSideBySide;\n    } // maxComputationTime\n\n\n    _this4._maxComputationTime = 5000;\n\n    if (typeof options.maxComputationTime !== 'undefined') {\n      _this4._maxComputationTime = options.maxComputationTime;\n    } // ignoreTrimWhitespace\n\n\n    _this4._ignoreTrimWhitespace = true;\n\n    if (typeof options.ignoreTrimWhitespace !== 'undefined') {\n      _this4._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\n    } // renderIndicators\n\n\n    _this4._renderIndicators = true;\n\n    if (typeof options.renderIndicators !== 'undefined') {\n      _this4._renderIndicators = options.renderIndicators;\n    }\n\n    _this4._originalIsEditable = validateBooleanOption(options.originalEditable, false);\n    _this4._diffCodeLens = validateBooleanOption(options.diffCodeLens, false);\n    _this4._diffWordWrap = validateDiffWordWrap(options.diffWordWrap, 'inherit');\n\n    if (typeof options.isInEmbeddedEditor !== 'undefined') {\n      _this4._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n    } else {\n      _this4._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n    }\n\n    _this4._renderOverviewRuler = true;\n\n    if (typeof options.renderOverviewRuler !== 'undefined') {\n      _this4._renderOverviewRuler = Boolean(options.renderOverviewRuler);\n    }\n\n    _this4._updateDecorationsRunner = _this4._register(new RunOnceScheduler(function () {\n      return _this4._updateDecorations();\n    }, 0));\n    _this4._containerDomElement = document.createElement('div');\n    _this4._containerDomElement.className = DiffEditorWidget._getClassName(_this4._themeService.getColorTheme(), _this4._renderSideBySide);\n    _this4._containerDomElement.style.position = 'relative';\n    _this4._containerDomElement.style.height = '100%';\n\n    _this4._domElement.appendChild(_this4._containerDomElement);\n\n    _this4._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n\n    _this4._overviewViewportDomElement.setClassName('diffViewport');\n\n    _this4._overviewViewportDomElement.setPosition('absolute');\n\n    _this4._overviewDomElement = document.createElement('div');\n    _this4._overviewDomElement.className = 'diffOverview';\n    _this4._overviewDomElement.style.position = 'absolute';\n\n    _this4._overviewDomElement.appendChild(_this4._overviewViewportDomElement.domNode);\n\n    _this4._register(dom.addStandardDisposableListener(_this4._overviewDomElement, 'mousedown', function (e) {\n      _this4._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n    }));\n\n    if (_this4._renderOverviewRuler) {\n      _this4._containerDomElement.appendChild(_this4._overviewDomElement);\n    } // Create left side\n\n\n    _this4._originalDomNode = document.createElement('div');\n    _this4._originalDomNode.className = 'editor original';\n    _this4._originalDomNode.style.position = 'absolute';\n    _this4._originalDomNode.style.height = '100%';\n\n    _this4._containerDomElement.appendChild(_this4._originalDomNode); // Create right side\n\n\n    _this4._modifiedDomNode = document.createElement('div');\n    _this4._modifiedDomNode.className = 'editor modified';\n    _this4._modifiedDomNode.style.position = 'absolute';\n    _this4._modifiedDomNode.style.height = '100%';\n\n    _this4._containerDomElement.appendChild(_this4._modifiedDomNode);\n\n    _this4._beginUpdateDecorationsTimeout = -1;\n    _this4._currentlyChangingViewZones = false;\n    _this4._diffComputationToken = 0;\n    _this4._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n    _this4._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n    _this4._isVisible = true;\n    _this4._isHandlingScrollEvent = false;\n    _this4._elementSizeObserver = _this4._register(new ElementSizeObserver(_this4._containerDomElement, options.dimension, function () {\n      return _this4._onDidContainerSizeChanged();\n    }));\n\n    if (options.automaticLayout) {\n      _this4._elementSizeObserver.startObserving();\n    }\n\n    _this4._diffComputationResult = null;\n\n    var leftContextKeyService = _this4._contextKeyService.createScoped();\n\n    var leftServices = new ServiceCollection();\n    leftServices.set(IContextKeyService, leftContextKeyService);\n    var leftScopedInstantiationService = instantiationService.createChild(leftServices);\n\n    var rightContextKeyService = _this4._contextKeyService.createScoped();\n\n    var rightServices = new ServiceCollection();\n    rightServices.set(IContextKeyService, rightContextKeyService);\n    var rightScopedInstantiationService = instantiationService.createChild(rightServices);\n    _this4._originalEditor = _this4._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {}, leftScopedInstantiationService, leftContextKeyService);\n    _this4._modifiedEditor = _this4._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {}, rightScopedInstantiationService, rightContextKeyService);\n    _this4._originalOverviewRuler = null;\n    _this4._modifiedOverviewRuler = null;\n    _this4._reviewPane = new DiffReview(_assertThisInitialized(_this4));\n\n    _this4._containerDomElement.appendChild(_this4._reviewPane.domNode.domNode);\n\n    _this4._containerDomElement.appendChild(_this4._reviewPane.shadow.domNode);\n\n    _this4._containerDomElement.appendChild(_this4._reviewPane.actionBarContainer.domNode); // enableSplitViewResizing\n\n\n    _this4._enableSplitViewResizing = true;\n\n    if (typeof options.enableSplitViewResizing !== 'undefined') {\n      _this4._enableSplitViewResizing = options.enableSplitViewResizing;\n    }\n\n    if (_this4._renderSideBySide) {\n      _this4._setStrategy(new DiffEditorWidgetSideBySide(_this4._createDataSource(), _this4._enableSplitViewResizing));\n    } else {\n      _this4._setStrategy(new DiffEditorWidgetInline(_this4._createDataSource(), _this4._enableSplitViewResizing));\n    }\n\n    _this4._register(themeService.onDidColorThemeChange(function (t) {\n      if (_this4._strategy && _this4._strategy.applyColors(t)) {\n        _this4._updateDecorationsRunner.schedule();\n      }\n\n      _this4._containerDomElement.className = DiffEditorWidget._getClassName(_this4._themeService.getColorTheme(), _this4._renderSideBySide);\n    }));\n\n    var contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n\n    var _iterator4 = _createForOfIteratorHelper(contributions),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var desc = _step4.value;\n\n        try {\n          _this4._register(instantiationService.createInstance(desc.ctor, _assertThisInitialized(_this4)));\n        } catch (err) {\n          onUnexpectedError(err);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    _this4._codeEditorService.addDiffEditor(_assertThisInitialized(_this4));\n\n    return _this4;\n  }\n\n  _createClass(DiffEditorWidget, [{\n    key: \"_setState\",\n    value: function _setState(newState) {\n      if (this._state === newState) {\n        return;\n      }\n\n      this._state = newState;\n\n      if (this._updatingDiffProgress) {\n        this._updatingDiffProgress.done();\n\n        this._updatingDiffProgress = null;\n      }\n\n      if (this._state === 1\n      /* ComputingDiff */\n      ) {\n          this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n  }, {\n    key: \"diffReviewNext\",\n    value: function diffReviewNext() {\n      this._reviewPane.next();\n    }\n  }, {\n    key: \"diffReviewPrev\",\n    value: function diffReviewPrev() {\n      this._reviewPane.prev();\n    }\n  }, {\n    key: \"_recreateOverviewRulers\",\n    value: function _recreateOverviewRulers() {\n      if (!this._renderOverviewRuler) {\n        return;\n      }\n\n      if (this._originalOverviewRuler) {\n        this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n\n        this._originalOverviewRuler.dispose();\n      }\n\n      if (this._originalEditor.hasModel()) {\n        this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n\n        this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n      }\n\n      if (this._modifiedOverviewRuler) {\n        this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n\n        this._modifiedOverviewRuler.dispose();\n      }\n\n      if (this._modifiedEditor.hasModel()) {\n        this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n\n        this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n      }\n\n      this._layoutOverviewRulers();\n    }\n  }, {\n    key: \"_createLeftHandSideEditor\",\n    value: function _createLeftHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\n      var _this5 = this;\n\n      var editor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n\n      this._register(editor.onDidScrollChange(function (e) {\n        if (_this5._isHandlingScrollEvent) {\n          return;\n        }\n\n        if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n          return;\n        }\n\n        _this5._isHandlingScrollEvent = true;\n\n        _this5._modifiedEditor.setScrollPosition({\n          scrollLeft: e.scrollLeft,\n          scrollTop: e.scrollTop\n        });\n\n        _this5._isHandlingScrollEvent = false;\n\n        _this5._layoutOverviewViewport();\n      }));\n\n      this._register(editor.onDidChangeViewZones(function () {\n        _this5._onViewZonesChanged();\n      }));\n\n      this._register(editor.onDidChangeConfiguration(function (e) {\n        if (!editor.getModel()) {\n          return;\n        }\n\n        if (e.hasChanged(38\n        /* fontInfo */\n        )) {\n          _this5._updateDecorationsRunner.schedule();\n        }\n\n        if (e.hasChanged(125\n        /* wrappingInfo */\n        )) {\n          _this5._updateDecorationsRunner.cancel();\n\n          _this5._updateDecorations();\n        }\n      }));\n\n      this._register(editor.onDidChangeModelContent(function () {\n        if (_this5._isVisible) {\n          _this5._beginUpdateDecorationsSoon();\n        }\n      }));\n\n      var isInDiffLeftEditorKey = contextKeyService.createKey('isInDiffLeftEditor', undefined);\n\n      this._register(editor.onDidFocusEditorWidget(function () {\n        return isInDiffLeftEditorKey.set(true);\n      }));\n\n      this._register(editor.onDidBlurEditorWidget(function () {\n        return isInDiffLeftEditorKey.set(false);\n      }));\n\n      this._register(editor.onDidContentSizeChange(function (e) {\n        var width = _this5._originalEditor.getContentWidth() + _this5._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        var height = Math.max(_this5._modifiedEditor.getContentHeight(), _this5._originalEditor.getContentHeight());\n\n        _this5._onDidContentSizeChange.fire({\n          contentHeight: height,\n          contentWidth: width,\n          contentHeightChanged: e.contentHeightChanged,\n          contentWidthChanged: e.contentWidthChanged\n        });\n      }));\n\n      return editor;\n    }\n  }, {\n    key: \"_createRightHandSideEditor\",\n    value: function _createRightHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\n      var _this6 = this;\n\n      var editor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n\n      this._register(editor.onDidScrollChange(function (e) {\n        if (_this6._isHandlingScrollEvent) {\n          return;\n        }\n\n        if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n          return;\n        }\n\n        _this6._isHandlingScrollEvent = true;\n\n        _this6._originalEditor.setScrollPosition({\n          scrollLeft: e.scrollLeft,\n          scrollTop: e.scrollTop\n        });\n\n        _this6._isHandlingScrollEvent = false;\n\n        _this6._layoutOverviewViewport();\n      }));\n\n      this._register(editor.onDidChangeViewZones(function () {\n        _this6._onViewZonesChanged();\n      }));\n\n      this._register(editor.onDidChangeConfiguration(function (e) {\n        if (!editor.getModel()) {\n          return;\n        }\n\n        if (e.hasChanged(38\n        /* fontInfo */\n        )) {\n          _this6._updateDecorationsRunner.schedule();\n        }\n\n        if (e.hasChanged(125\n        /* wrappingInfo */\n        )) {\n          _this6._updateDecorationsRunner.cancel();\n\n          _this6._updateDecorations();\n        }\n      }));\n\n      this._register(editor.onDidChangeModelContent(function () {\n        if (_this6._isVisible) {\n          _this6._beginUpdateDecorationsSoon();\n        }\n      }));\n\n      this._register(editor.onDidChangeModelOptions(function (e) {\n        if (e.tabSize) {\n          _this6._updateDecorationsRunner.schedule();\n        }\n      }));\n\n      var isInDiffRightEditorKey = contextKeyService.createKey('isInDiffRightEditor', undefined);\n\n      this._register(editor.onDidFocusEditorWidget(function () {\n        return isInDiffRightEditorKey.set(true);\n      }));\n\n      this._register(editor.onDidBlurEditorWidget(function () {\n        return isInDiffRightEditorKey.set(false);\n      }));\n\n      this._register(editor.onDidContentSizeChange(function (e) {\n        var width = _this6._originalEditor.getContentWidth() + _this6._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        var height = Math.max(_this6._modifiedEditor.getContentHeight(), _this6._originalEditor.getContentHeight());\n\n        _this6._onDidContentSizeChange.fire({\n          contentHeight: height,\n          contentWidth: width,\n          contentHeightChanged: e.contentHeightChanged,\n          contentWidthChanged: e.contentWidthChanged\n        });\n      }));\n\n      return editor;\n    }\n  }, {\n    key: \"_createInnerEditor\",\n    value: function _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n      return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._codeEditorService.removeDiffEditor(this);\n\n      if (this._beginUpdateDecorationsTimeout !== -1) {\n        window.clearTimeout(this._beginUpdateDecorationsTimeout);\n        this._beginUpdateDecorationsTimeout = -1;\n      }\n\n      this._cleanViewZonesAndDecorations();\n\n      if (this._originalOverviewRuler) {\n        this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n\n        this._originalOverviewRuler.dispose();\n      }\n\n      if (this._modifiedOverviewRuler) {\n        this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n\n        this._modifiedOverviewRuler.dispose();\n      }\n\n      this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n\n      if (this._renderOverviewRuler) {\n        this._containerDomElement.removeChild(this._overviewDomElement);\n      }\n\n      this._containerDomElement.removeChild(this._originalDomNode);\n\n      this._originalEditor.dispose();\n\n      this._containerDomElement.removeChild(this._modifiedDomNode);\n\n      this._modifiedEditor.dispose();\n\n      this._strategy.dispose();\n\n      this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n\n      this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n\n      this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n\n      this._reviewPane.dispose();\n\n      this._domElement.removeChild(this._containerDomElement);\n\n      this._onDidDispose.fire();\n\n      _get(_getPrototypeOf(DiffEditorWidget.prototype), \"dispose\", this).call(this);\n    } //------------ begin IDiffEditor methods\n\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.getEditorType() + ':' + this._id;\n    }\n  }, {\n    key: \"getEditorType\",\n    value: function getEditorType() {\n      return editorCommon.EditorType.IDiffEditor;\n    }\n  }, {\n    key: \"getLineChanges\",\n    value: function getLineChanges() {\n      if (!this._diffComputationResult) {\n        return null;\n      }\n\n      return this._diffComputationResult.changes;\n    }\n  }, {\n    key: \"getOriginalEditor\",\n    value: function getOriginalEditor() {\n      return this._originalEditor;\n    }\n  }, {\n    key: \"getModifiedEditor\",\n    value: function getModifiedEditor() {\n      return this._modifiedEditor;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(newOptions) {\n      // Handle side by side\n      var renderSideBySideChanged = false;\n\n      if (typeof newOptions.renderSideBySide !== 'undefined') {\n        if (this._renderSideBySide !== newOptions.renderSideBySide) {\n          this._renderSideBySide = newOptions.renderSideBySide;\n          renderSideBySideChanged = true;\n        }\n      }\n\n      if (typeof newOptions.maxComputationTime !== 'undefined') {\n        this._maxComputationTime = newOptions.maxComputationTime;\n\n        if (this._isVisible) {\n          this._beginUpdateDecorationsSoon();\n        }\n      }\n\n      var beginUpdateDecorations = false;\n\n      if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\n        if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\n          this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace; // Begin comparing\n\n          beginUpdateDecorations = true;\n        }\n      }\n\n      if (typeof newOptions.renderIndicators !== 'undefined') {\n        if (this._renderIndicators !== newOptions.renderIndicators) {\n          this._renderIndicators = newOptions.renderIndicators;\n          beginUpdateDecorations = true;\n        }\n      }\n\n      if (beginUpdateDecorations) {\n        this._beginUpdateDecorations();\n      }\n\n      this._originalIsEditable = validateBooleanOption(newOptions.originalEditable, this._originalIsEditable);\n      this._diffCodeLens = validateBooleanOption(newOptions.diffCodeLens, this._diffCodeLens);\n      this._diffWordWrap = validateDiffWordWrap(newOptions.diffWordWrap, this._diffWordWrap);\n\n      this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\n\n      this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions)); // enableSplitViewResizing\n\n\n      if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\n        this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\n      }\n\n      this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing); // renderSideBySide\n\n\n      if (renderSideBySideChanged) {\n        if (this._renderSideBySide) {\n          this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n        } else {\n          this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n        } // Update class name\n\n\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\n      } // renderOverviewRuler\n\n\n      if (typeof newOptions.renderOverviewRuler !== 'undefined' && this._renderOverviewRuler !== newOptions.renderOverviewRuler) {\n        this._renderOverviewRuler = newOptions.renderOverviewRuler;\n\n        if (this._renderOverviewRuler) {\n          this._containerDomElement.appendChild(this._overviewDomElement);\n        } else {\n          this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n      }\n    }\n  }, {\n    key: \"getModel\",\n    value: function getModel() {\n      return {\n        original: this._originalEditor.getModel(),\n        modified: this._modifiedEditor.getModel()\n      };\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      // Guard us against partial null model\n      if (model && (!model.original || !model.modified)) {\n        throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n      } // Remove all view zones & decorations\n\n\n      this._cleanViewZonesAndDecorations(); // Update code editor models\n\n\n      this._originalEditor.setModel(model ? model.original : null);\n\n      this._modifiedEditor.setModel(model ? model.modified : null);\n\n      this._updateDecorationsRunner.cancel(); // this.originalEditor.onDidChangeModelOptions\n\n\n      if (model) {\n        this._originalEditor.setScrollTop(0);\n\n        this._modifiedEditor.setScrollTop(0);\n      } // Disable any diff computations that will come in\n\n\n      this._diffComputationResult = null;\n      this._diffComputationToken++;\n\n      this._setState(0\n      /* Idle */\n      );\n\n      if (model) {\n        this._recreateOverviewRulers(); // Begin comparing\n\n\n        this._beginUpdateDecorations();\n      }\n\n      this._layoutOverviewViewport();\n    }\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._domElement;\n    }\n  }, {\n    key: \"getVisibleColumnFromPosition\",\n    value: function getVisibleColumnFromPosition(position) {\n      return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this._modifiedEditor.getPosition();\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position) {\n      this._modifiedEditor.setPosition(position);\n    }\n  }, {\n    key: \"revealLine\",\n    value: function revealLine(lineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLineInCenter\",\n    value: function revealLineInCenter(lineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLineInCenterIfOutsideViewport\",\n    value: function revealLineInCenterIfOutsideViewport(lineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLineNearTop\",\n    value: function revealLineNearTop(lineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n  }, {\n    key: \"revealPosition\",\n    value: function revealPosition(position)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealPosition(position, scrollType);\n    }\n  }, {\n    key: \"revealPositionInCenter\",\n    value: function revealPositionInCenter(position)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n  }, {\n    key: \"revealPositionInCenterIfOutsideViewport\",\n    value: function revealPositionInCenterIfOutsideViewport(position)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n  }, {\n    key: \"revealPositionNearTop\",\n    value: function revealPositionNearTop(position)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this._modifiedEditor.getSelection();\n    }\n  }, {\n    key: \"getSelections\",\n    value: function getSelections() {\n      return this._modifiedEditor.getSelections();\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(something) {\n      this._modifiedEditor.setSelection(something);\n    }\n  }, {\n    key: \"setSelections\",\n    value: function setSelections(ranges) {\n      this._modifiedEditor.setSelections(ranges);\n    }\n  }, {\n    key: \"revealLines\",\n    value: function revealLines(startLineNumber, endLineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLinesInCenter\",\n    value: function revealLinesInCenter(startLineNumber, endLineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLinesInCenterIfOutsideViewport\",\n    value: function revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n  }, {\n    key: \"revealLinesNearTop\",\n    value: function revealLinesNearTop(startLineNumber, endLineNumber)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n  }, {\n    key: \"revealRange\",\n    value: function revealRange(range) {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var revealVerticalInCenter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var revealHorizontal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n      this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n  }, {\n    key: \"revealRangeInCenter\",\n    value: function revealRangeInCenter(range)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n  }, {\n    key: \"revealRangeInCenterIfOutsideViewport\",\n    value: function revealRangeInCenterIfOutsideViewport(range)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n  }, {\n    key: \"revealRangeNearTop\",\n    value: function revealRangeNearTop(range)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n  }, {\n    key: \"revealRangeNearTopIfOutsideViewport\",\n    value: function revealRangeNearTopIfOutsideViewport(range)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n  }, {\n    key: \"revealRangeAtTop\",\n    value: function revealRangeAtTop(range)\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n  }, {\n    key: \"getSupportedActions\",\n    value: function getSupportedActions() {\n      return this._modifiedEditor.getSupportedActions();\n    }\n  }, {\n    key: \"saveViewState\",\n    value: function saveViewState() {\n      var originalViewState = this._originalEditor.saveViewState();\n\n      var modifiedViewState = this._modifiedEditor.saveViewState();\n\n      return {\n        original: originalViewState,\n        modified: modifiedViewState\n      };\n    }\n  }, {\n    key: \"restoreViewState\",\n    value: function restoreViewState(s) {\n      if (s && s.original && s.modified) {\n        var diffEditorState = s;\n\n        this._originalEditor.restoreViewState(diffEditorState.original);\n\n        this._modifiedEditor.restoreViewState(diffEditorState.modified);\n      }\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(dimension) {\n      this._elementSizeObserver.observe(dimension);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._modifiedEditor.focus();\n    }\n  }, {\n    key: \"hasTextFocus\",\n    value: function hasTextFocus() {\n      return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(source, handlerId, payload) {\n      this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n  }, {\n    key: \"changeDecorations\",\n    value: function changeDecorations(callback) {\n      return this._modifiedEditor.changeDecorations(callback);\n    } //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n\n  }, {\n    key: \"_onDidContainerSizeChanged\",\n    value: function _onDidContainerSizeChanged() {\n      this._doLayout();\n    }\n  }, {\n    key: \"_getReviewHeight\",\n    value: function _getReviewHeight() {\n      return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n  }, {\n    key: \"_layoutOverviewRulers\",\n    value: function _layoutOverviewRulers() {\n      if (!this._renderOverviewRuler) {\n        return;\n      }\n\n      if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n        return;\n      }\n\n      var height = this._elementSizeObserver.getHeight();\n\n      var reviewHeight = this._getReviewHeight();\n\n      var freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n\n      var layoutInfo = this._modifiedEditor.getLayoutInfo();\n\n      if (layoutInfo) {\n        this._originalOverviewRuler.setLayout({\n          top: 0,\n          width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n          right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n          height: height - reviewHeight\n        });\n\n        this._modifiedOverviewRuler.setLayout({\n          top: 0,\n          right: 0,\n          width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n          height: height - reviewHeight\n        });\n      }\n    } //------------ end layouting methods\n\n  }, {\n    key: \"_onViewZonesChanged\",\n    value: function _onViewZonesChanged() {\n      if (this._currentlyChangingViewZones) {\n        return;\n      }\n\n      this._updateDecorationsRunner.schedule();\n    }\n  }, {\n    key: \"_beginUpdateDecorationsSoon\",\n    value: function _beginUpdateDecorationsSoon() {\n      var _this7 = this;\n\n      // Clear previous timeout if necessary\n      if (this._beginUpdateDecorationsTimeout !== -1) {\n        window.clearTimeout(this._beginUpdateDecorationsTimeout);\n        this._beginUpdateDecorationsTimeout = -1;\n      }\n\n      this._beginUpdateDecorationsTimeout = window.setTimeout(function () {\n        return _this7._beginUpdateDecorations();\n      }, DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n  }, {\n    key: \"_beginUpdateDecorations\",\n    value: function _beginUpdateDecorations() {\n      var _this8 = this;\n\n      this._beginUpdateDecorationsTimeout = -1;\n\n      var currentOriginalModel = this._originalEditor.getModel();\n\n      var currentModifiedModel = this._modifiedEditor.getModel();\n\n      if (!currentOriginalModel || !currentModifiedModel) {\n        return;\n      } // Prevent old diff requests to come if a new request has been initiated\n      // The best method would be to call cancel on the Promise, but this is not\n      // yet supported, so using tokens for now.\n\n\n      this._diffComputationToken++;\n      var currentToken = this._diffComputationToken;\n\n      this._setState(1\n      /* ComputingDiff */\n      );\n\n      if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\n        if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning) || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n          this._lastOriginalWarning = currentOriginalModel.uri;\n          this._lastModifiedWarning = currentModifiedModel.uri;\n\n          this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n        }\n\n        return;\n      }\n\n      this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace, this._maxComputationTime).then(function (result) {\n        if (currentToken === _this8._diffComputationToken && currentOriginalModel === _this8._originalEditor.getModel() && currentModifiedModel === _this8._modifiedEditor.getModel()) {\n          _this8._setState(2\n          /* DiffComputed */\n          );\n\n          _this8._diffComputationResult = result;\n\n          _this8._updateDecorationsRunner.schedule();\n\n          _this8._onDidUpdateDiff.fire();\n        }\n      }, function (error) {\n        if (currentToken === _this8._diffComputationToken && currentOriginalModel === _this8._originalEditor.getModel() && currentModifiedModel === _this8._modifiedEditor.getModel()) {\n          _this8._setState(2\n          /* DiffComputed */\n          );\n\n          _this8._diffComputationResult = null;\n\n          _this8._updateDecorationsRunner.schedule();\n        }\n      });\n    }\n  }, {\n    key: \"_cleanViewZonesAndDecorations\",\n    value: function _cleanViewZonesAndDecorations() {\n      this._originalEditorState.clean(this._originalEditor);\n\n      this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n  }, {\n    key: \"_updateDecorations\",\n    value: function _updateDecorations() {\n      if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n        return;\n      }\n\n      var lineChanges = this._diffComputationResult ? this._diffComputationResult.changes : [];\n\n      var foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n\n      var foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n\n      var diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified);\n\n      try {\n        this._currentlyChangingViewZones = true;\n\n        this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n\n        this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n      } finally {\n        this._currentlyChangingViewZones = false;\n      }\n    }\n  }, {\n    key: \"_adjustOptionsForSubEditor\",\n    value: function _adjustOptionsForSubEditor(options) {\n      var clonedOptions = Object.assign({}, options);\n      clonedOptions.inDiffEditor = true;\n      clonedOptions.automaticLayout = false;\n      clonedOptions.scrollbar = clonedOptions.scrollbar || {};\n      clonedOptions.scrollbar.vertical = 'visible';\n      clonedOptions.folding = false;\n      clonedOptions.codeLens = this._diffCodeLens;\n      clonedOptions.fixedOverflowWidgets = true; // clonedOptions.lineDecorationsWidth = '2ch';\n\n      if (!clonedOptions.minimap) {\n        clonedOptions.minimap = {};\n      }\n\n      clonedOptions.minimap.enabled = false;\n      return clonedOptions;\n    }\n  }, {\n    key: \"_adjustOptionsForLeftHandSide\",\n    value: function _adjustOptionsForLeftHandSide(options) {\n      var result = this._adjustOptionsForSubEditor(options);\n\n      if (!this._renderSideBySide) {\n        // never wrap hidden editor\n        result.wordWrapOverride1 = 'off';\n      } else {\n        result.wordWrapOverride1 = this._diffWordWrap;\n      }\n\n      result.readOnly = !this._originalIsEditable;\n      result.extraEditorClassName = 'original-in-monaco-diff-editor';\n      return Object.assign(Object.assign({}, result), {\n        dimension: {\n          height: 0,\n          width: 0\n        }\n      });\n    }\n  }, {\n    key: \"_adjustOptionsForRightHandSide\",\n    value: function _adjustOptionsForRightHandSide(options) {\n      var result = this._adjustOptionsForSubEditor(options);\n\n      result.wordWrapOverride1 = this._diffWordWrap;\n      result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n      result.scrollbar.verticalHasArrows = false;\n      result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n      return Object.assign(Object.assign({}, result), {\n        dimension: {\n          height: 0,\n          width: 0\n        }\n      });\n    }\n  }, {\n    key: \"doLayout\",\n    value: function doLayout() {\n      this._elementSizeObserver.observe();\n\n      this._doLayout();\n    }\n  }, {\n    key: \"_doLayout\",\n    value: function _doLayout() {\n      var width = this._elementSizeObserver.getWidth();\n\n      var height = this._elementSizeObserver.getHeight();\n\n      var reviewHeight = this._getReviewHeight();\n\n      var splitPoint = this._strategy.layout();\n\n      this._originalDomNode.style.width = splitPoint + 'px';\n      this._originalDomNode.style.left = '0px';\n      this._modifiedDomNode.style.width = width - splitPoint + 'px';\n      this._modifiedDomNode.style.left = splitPoint + 'px';\n      this._overviewDomElement.style.top = '0px';\n      this._overviewDomElement.style.height = height - reviewHeight + 'px';\n      this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n      this._overviewDomElement.style.left = width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n\n      this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n\n      this._overviewViewportDomElement.setHeight(30);\n\n      this._originalEditor.layout({\n        width: splitPoint,\n        height: height - reviewHeight\n      });\n\n      this._modifiedEditor.layout({\n        width: width - splitPoint - (this._renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0),\n        height: height - reviewHeight\n      });\n\n      if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n        this._layoutOverviewRulers();\n      }\n\n      this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n\n      this._layoutOverviewViewport();\n    }\n  }, {\n    key: \"_layoutOverviewViewport\",\n    value: function _layoutOverviewViewport() {\n      var layout = this._computeOverviewViewport();\n\n      if (!layout) {\n        this._overviewViewportDomElement.setTop(0);\n\n        this._overviewViewportDomElement.setHeight(0);\n      } else {\n        this._overviewViewportDomElement.setTop(layout.top);\n\n        this._overviewViewportDomElement.setHeight(layout.height);\n      }\n    }\n  }, {\n    key: \"_computeOverviewViewport\",\n    value: function _computeOverviewViewport() {\n      var layoutInfo = this._modifiedEditor.getLayoutInfo();\n\n      if (!layoutInfo) {\n        return null;\n      }\n\n      var scrollTop = this._modifiedEditor.getScrollTop();\n\n      var scrollHeight = this._modifiedEditor.getScrollHeight();\n\n      var computedAvailableSize = Math.max(0, layoutInfo.height);\n      var computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n      var computedRatio = scrollHeight > 0 ? computedRepresentableSize / scrollHeight : 0;\n      var computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n      var computedSliderPosition = Math.floor(scrollTop * computedRatio);\n      return {\n        height: computedSliderSize,\n        top: computedSliderPosition\n      };\n    }\n  }, {\n    key: \"_createDataSource\",\n    value: function _createDataSource() {\n      var _this9 = this;\n\n      return {\n        getWidth: function getWidth() {\n          return _this9._elementSizeObserver.getWidth();\n        },\n        getHeight: function getHeight() {\n          return _this9._elementSizeObserver.getHeight() - _this9._getReviewHeight();\n        },\n        getOptions: function getOptions() {\n          return {\n            renderOverviewRuler: _this9._renderOverviewRuler\n          };\n        },\n        getContainerDomNode: function getContainerDomNode() {\n          return _this9._containerDomElement;\n        },\n        relayoutEditors: function relayoutEditors() {\n          _this9._doLayout();\n        },\n        getOriginalEditor: function getOriginalEditor() {\n          return _this9._originalEditor;\n        },\n        getModifiedEditor: function getModifiedEditor() {\n          return _this9._modifiedEditor;\n        }\n      };\n    }\n  }, {\n    key: \"_setStrategy\",\n    value: function _setStrategy(newStrategy) {\n      if (this._strategy) {\n        this._strategy.dispose();\n      }\n\n      this._strategy = newStrategy;\n      newStrategy.applyColors(this._themeService.getColorTheme());\n\n      if (this._diffComputationResult) {\n        this._updateDecorations();\n      } // Just do a layout, the strategy might need it\n\n\n      this._doLayout();\n    }\n  }, {\n    key: \"_getLineChangeAtOrBeforeLineNumber\",\n    value: function _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n      var lineChanges = this._diffComputationResult ? this._diffComputationResult.changes : [];\n\n      if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n        // There are no changes or `lineNumber` is before the first change\n        return null;\n      }\n\n      var min = 0;\n      var max = lineChanges.length - 1;\n\n      while (min < max) {\n        var mid = Math.floor((min + max) / 2);\n        var midStart = startLineNumberExtractor(lineChanges[mid]);\n        var midEnd = mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824\n        /* MAX_SAFE_SMALL_INTEGER */\n        ;\n\n        if (lineNumber < midStart) {\n          max = mid - 1;\n        } else if (lineNumber >= midEnd) {\n          min = mid + 1;\n        } else {\n          // HIT!\n          min = mid;\n          max = mid;\n        }\n      }\n\n      return lineChanges[min];\n    }\n  }, {\n    key: \"_getEquivalentLineForOriginalLineNumber\",\n    value: function _getEquivalentLineForOriginalLineNumber(lineNumber) {\n      var lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, function (lineChange) {\n        return lineChange.originalStartLineNumber;\n      });\n\n      if (!lineChange) {\n        return lineNumber;\n      }\n\n      var originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n      var modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n      var lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1 : 0;\n      var lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1 : 0;\n      var delta = lineNumber - originalEquivalentLineNumber;\n\n      if (delta <= lineChangeOriginalLength) {\n        return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n      }\n\n      return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n  }, {\n    key: \"_getEquivalentLineForModifiedLineNumber\",\n    value: function _getEquivalentLineForModifiedLineNumber(lineNumber) {\n      var lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, function (lineChange) {\n        return lineChange.modifiedStartLineNumber;\n      });\n\n      if (!lineChange) {\n        return lineNumber;\n      }\n\n      var originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n      var modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n      var lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1 : 0;\n      var lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1 : 0;\n      var delta = lineNumber - modifiedEquivalentLineNumber;\n\n      if (delta <= lineChangeModifiedLength) {\n        return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n      }\n\n      return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n  }, {\n    key: \"getDiffLineInformationForOriginal\",\n    value: function getDiffLineInformationForOriginal(lineNumber) {\n      if (!this._diffComputationResult) {\n        // Cannot answer that which I don't know\n        return null;\n      }\n\n      return {\n        equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n      };\n    }\n  }, {\n    key: \"getDiffLineInformationForModified\",\n    value: function getDiffLineInformationForModified(lineNumber) {\n      if (!this._diffComputationResult) {\n        // Cannot answer that which I don't know\n        return null;\n      }\n\n      return {\n        equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n      };\n    }\n  }], [{\n    key: \"_getClassName\",\n    value: function _getClassName(theme, renderSideBySide) {\n      var result = 'monaco-diff-editor monaco-editor-background ';\n\n      if (renderSideBySide) {\n        result += 'side-by-side ';\n      }\n\n      result += getThemeTypeSelector(theme.type);\n      return result;\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(a, b) {\n      if (!a && !b) {\n        return true;\n      }\n\n      if (!a || !b) {\n        return false;\n      }\n\n      return a.toString() === b.toString();\n    }\n  }]);\n\n  return DiffEditorWidget;\n}(Disposable);\n\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\n\nDiffEditorWidget = __decorate([__param(3, IClipboardService), __param(4, IEditorWorkerService), __param(5, IContextKeyService), __param(6, IInstantiationService), __param(7, ICodeEditorService), __param(8, IThemeService), __param(9, INotificationService), __param(10, IContextMenuService), __param(11, IEditorProgressService)], DiffEditorWidget);\nexport { DiffEditorWidget };\n\nvar DiffEditorWidgetStyle = /*#__PURE__*/function (_Disposable2) {\n  _inherits(DiffEditorWidgetStyle, _Disposable2);\n\n  var _super2 = _createSuper(DiffEditorWidgetStyle);\n\n  function DiffEditorWidgetStyle(dataSource) {\n    var _this10;\n\n    _classCallCheck(this, DiffEditorWidgetStyle);\n\n    _this10 = _super2.call(this);\n    _this10._dataSource = dataSource;\n    _this10._insertColor = null;\n    _this10._removeColor = null;\n    return _this10;\n  }\n\n  _createClass(DiffEditorWidgetStyle, [{\n    key: \"applyColors\",\n    value: function applyColors(theme) {\n      var newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n      var newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n      var hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n      this._insertColor = newInsertColor;\n      this._removeColor = newRemoveColor;\n      return hasChanges;\n    }\n  }, {\n    key: \"getEditorsDiffDecorations\",\n    value: function getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\n      // Get view zones\n      modifiedWhitespaces = modifiedWhitespaces.sort(function (a, b) {\n        return a.afterLineNumber - b.afterLineNumber;\n      });\n      originalWhitespaces = originalWhitespaces.sort(function (a, b) {\n        return a.afterLineNumber - b.afterLineNumber;\n      });\n\n      var zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators); // Get decorations & overview ruler zones\n\n\n      var originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n\n      var modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n\n      return {\n        original: {\n          decorations: originalDecorations.decorations,\n          overviewZones: originalDecorations.overviewZones,\n          zones: zones.original\n        },\n        modified: {\n          decorations: modifiedDecorations.decorations,\n          overviewZones: modifiedDecorations.overviewZones,\n          zones: zones.modified\n        }\n      };\n    }\n  }]);\n\n  return DiffEditorWidgetStyle;\n}(Disposable);\n\nvar ForeignViewZonesIterator = /*#__PURE__*/function () {\n  function ForeignViewZonesIterator(source) {\n    _classCallCheck(this, ForeignViewZonesIterator);\n\n    this._source = source;\n    this._index = -1;\n    this.current = null;\n    this.advance();\n  }\n\n  _createClass(ForeignViewZonesIterator, [{\n    key: \"advance\",\n    value: function advance() {\n      this._index++;\n\n      if (this._index < this._source.length) {\n        this.current = this._source[this._index];\n      } else {\n        this.current = null;\n      }\n    }\n  }]);\n\n  return ForeignViewZonesIterator;\n}();\n\nvar ViewZonesComputer = /*#__PURE__*/function () {\n  function ViewZonesComputer(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n    _classCallCheck(this, ViewZonesComputer);\n\n    this._lineChanges = _lineChanges;\n    this._originalForeignVZ = _originalForeignVZ;\n    this._modifiedForeignVZ = _modifiedForeignVZ;\n    this._originalEditor = _originalEditor;\n    this._modifiedEditor = _modifiedEditor;\n  }\n\n  _createClass(ViewZonesComputer, [{\n    key: \"getViewZones\",\n    value: function getViewZones() {\n      var originalLineHeight = this._originalEditor.getOption(53\n      /* lineHeight */\n      );\n\n      var modifiedLineHeight = this._modifiedEditor.getOption(53\n      /* lineHeight */\n      );\n\n      var originalHasWrapping = this._originalEditor.getOption(125\n      /* wrappingInfo */\n      ).wrappingColumn !== -1;\n      var modifiedHasWrapping = this._modifiedEditor.getOption(125\n      /* wrappingInfo */\n      ).wrappingColumn !== -1;\n      var hasWrapping = originalHasWrapping || modifiedHasWrapping;\n\n      var originalModel = this._originalEditor.getModel();\n\n      var originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n\n      var modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n\n      var result = {\n        original: [],\n        modified: []\n      };\n      var lineChangeModifiedLength = 0;\n      var lineChangeOriginalLength = 0;\n      var originalEquivalentLineNumber = 0;\n      var modifiedEquivalentLineNumber = 0;\n      var originalEndEquivalentLineNumber = 0;\n      var modifiedEndEquivalentLineNumber = 0;\n\n      var sortMyViewZones = function sortMyViewZones(a, b) {\n        return a.afterLineNumber - b.afterLineNumber;\n      };\n\n      var addAndCombineIfPossible = function addAndCombineIfPossible(destination, item) {\n        if (item.domNode === null && destination.length > 0) {\n          var lastItem = destination[destination.length - 1];\n\n          if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n            lastItem.heightInLines += item.heightInLines;\n            return;\n          }\n        }\n\n        destination.push(item);\n      };\n\n      var modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n      var originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n      var lastOriginalLineNumber = 1;\n      var lastModifiedLineNumber = 1; // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n\n      for (var i = 0, length = this._lineChanges.length; i <= length; i++) {\n        var lineChange = i < length ? this._lineChanges[i] : null;\n\n        if (lineChange !== null) {\n          originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n          modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n          lineChangeOriginalLength = lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0;\n          lineChangeModifiedLength = lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0;\n          originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n          modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n        } else {\n          // Increase to very large value to get the producing tests of foreign view zones running\n          originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n          modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n          originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n          modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n        } // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n\n\n        var stepOriginal = [];\n        var stepModified = []; // ---------------------------- PRODUCE VIEW ZONES\n        // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n\n        if (hasWrapping) {\n          var count = void 0;\n\n          if (lineChange) {\n            if (lineChange.originalEndLineNumber > 0) {\n              count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n            } else {\n              count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n            }\n          } else {\n            count = originalModel.getLineCount() - lastOriginalLineNumber;\n          }\n\n          for (var _i = 0; _i < count; _i++) {\n            var originalLineNumber = lastOriginalLineNumber + _i;\n            var modifiedLineNumber = lastModifiedLineNumber + _i;\n            var originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n            var modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n\n            if (originalViewLineCount < modifiedViewLineCount) {\n              stepOriginal.push({\n                afterLineNumber: originalLineNumber,\n                heightInLines: modifiedViewLineCount - originalViewLineCount,\n                domNode: null,\n                marginDomNode: null\n              });\n            } else if (originalViewLineCount > modifiedViewLineCount) {\n              stepModified.push({\n                afterLineNumber: modifiedLineNumber,\n                heightInLines: originalViewLineCount - modifiedViewLineCount,\n                domNode: null,\n                marginDomNode: null\n              });\n            }\n          }\n\n          if (lineChange) {\n            lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n            lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n          }\n        } // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n\n\n        while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n          var viewZoneLineNumber = void 0;\n\n          if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n            viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n          } else {\n            viewZoneLineNumber = originalEndEquivalentLineNumber;\n          }\n\n          var marginDomNode = null;\n\n          if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n            marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n          }\n\n          stepOriginal.push({\n            afterLineNumber: viewZoneLineNumber,\n            heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n            domNode: null,\n            marginDomNode: marginDomNode\n          });\n          modifiedForeignVZ.advance();\n        } // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n\n\n        while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n          var _viewZoneLineNumber = void 0;\n\n          if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n            _viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n          } else {\n            _viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n          }\n\n          stepModified.push({\n            afterLineNumber: _viewZoneLineNumber,\n            heightInLines: originalForeignVZ.current.height / originalLineHeight,\n            domNode: null\n          });\n          originalForeignVZ.advance();\n        }\n\n        if (lineChange !== null && isChangeOrInsert(lineChange)) {\n          var r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n\n          if (r) {\n            stepOriginal.push(r);\n          }\n        }\n\n        if (lineChange !== null && isChangeOrDelete(lineChange)) {\n          var _r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n\n          if (_r) {\n            stepModified.push(_r);\n          }\n        } // ---------------------------- END PRODUCE VIEW ZONES\n        // ---------------------------- EMIT MINIMAL VIEW ZONES\n        // [CANCEL & EMIT] Try to cancel view zones out\n\n\n        var stepOriginalIndex = 0;\n        var stepModifiedIndex = 0;\n        stepOriginal = stepOriginal.sort(sortMyViewZones);\n        stepModified = stepModified.sort(sortMyViewZones);\n\n        while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n          var original = stepOriginal[stepOriginalIndex];\n          var modified = stepModified[stepModifiedIndex];\n          var originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n          var modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n\n          if (originalDelta < modifiedDelta) {\n            addAndCombineIfPossible(result.original, original);\n            stepOriginalIndex++;\n          } else if (modifiedDelta < originalDelta) {\n            addAndCombineIfPossible(result.modified, modified);\n            stepModifiedIndex++;\n          } else if (original.shouldNotShrink) {\n            addAndCombineIfPossible(result.original, original);\n            stepOriginalIndex++;\n          } else if (modified.shouldNotShrink) {\n            addAndCombineIfPossible(result.modified, modified);\n            stepModifiedIndex++;\n          } else {\n            if (original.heightInLines >= modified.heightInLines) {\n              // modified view zone gets removed\n              original.heightInLines -= modified.heightInLines;\n              stepModifiedIndex++;\n            } else {\n              // original view zone gets removed\n              modified.heightInLines -= original.heightInLines;\n              stepOriginalIndex++;\n            }\n          }\n        } // [EMIT] Remaining original view zones\n\n\n        while (stepOriginalIndex < stepOriginal.length) {\n          addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n          stepOriginalIndex++;\n        } // [EMIT] Remaining modified view zones\n\n\n        while (stepModifiedIndex < stepModified.length) {\n          addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n          stepModifiedIndex++;\n        } // ---------------------------- END EMIT MINIMAL VIEW ZONES\n\n      }\n\n      return {\n        original: ViewZonesComputer._ensureDomNodes(result.original),\n        modified: ViewZonesComputer._ensureDomNodes(result.modified)\n      };\n    }\n  }], [{\n    key: \"_getViewLineCount\",\n    value: function _getViewLineCount(editor, startLineNumber, endLineNumber) {\n      var model = editor.getModel();\n\n      var viewModel = editor._getViewModel();\n\n      if (model && viewModel) {\n        var viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n        return viewRange.endLineNumber - viewRange.startLineNumber + 1;\n      }\n\n      return endLineNumber - startLineNumber + 1;\n    }\n  }, {\n    key: \"_ensureDomNodes\",\n    value: function _ensureDomNodes(zones) {\n      return zones.map(function (z) {\n        if (!z.domNode) {\n          z.domNode = createFakeLinesDiv();\n        }\n\n        return z;\n      });\n    }\n  }]);\n\n  return ViewZonesComputer;\n}();\n\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n  return {\n    range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n    options: options\n  };\n}\n\nvar DECORATIONS = {\n  charDelete: ModelDecorationOptions.register({\n    className: 'char-delete'\n  }),\n  charDeleteWholeLine: ModelDecorationOptions.register({\n    className: 'char-delete',\n    isWholeLine: true\n  }),\n  charInsert: ModelDecorationOptions.register({\n    className: 'char-insert'\n  }),\n  charInsertWholeLine: ModelDecorationOptions.register({\n    className: 'char-insert',\n    isWholeLine: true\n  }),\n  lineInsert: ModelDecorationOptions.register({\n    className: 'line-insert',\n    marginClassName: 'line-insert',\n    isWholeLine: true\n  }),\n  lineInsertWithSign: ModelDecorationOptions.register({\n    className: 'line-insert',\n    linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n    marginClassName: 'line-insert',\n    isWholeLine: true\n  }),\n  lineDelete: ModelDecorationOptions.register({\n    className: 'line-delete',\n    marginClassName: 'line-delete',\n    isWholeLine: true\n  }),\n  lineDeleteWithSign: ModelDecorationOptions.register({\n    className: 'line-delete',\n    linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n    marginClassName: 'line-delete',\n    isWholeLine: true\n  }),\n  lineDeleteMargin: ModelDecorationOptions.register({\n    marginClassName: 'line-delete'\n  })\n};\n\nvar DiffEditorWidgetSideBySide = /*#__PURE__*/function (_DiffEditorWidgetStyl) {\n  _inherits(DiffEditorWidgetSideBySide, _DiffEditorWidgetStyl);\n\n  var _super3 = _createSuper(DiffEditorWidgetSideBySide);\n\n  function DiffEditorWidgetSideBySide(dataSource, enableSplitViewResizing) {\n    var _this11;\n\n    _classCallCheck(this, DiffEditorWidgetSideBySide);\n\n    _this11 = _super3.call(this, dataSource);\n    _this11._disableSash = enableSplitViewResizing === false;\n    _this11._sashRatio = null;\n    _this11._sashPosition = null;\n    _this11._startSashPosition = null;\n    _this11._sash = _this11._register(new Sash(_this11._dataSource.getContainerDomNode(), _assertThisInitialized(_this11), {\n      orientation: 0\n      /* VERTICAL */\n\n    }));\n\n    if (_this11._disableSash) {\n      _this11._sash.state = 0\n      /* Disabled */\n      ;\n    }\n\n    _this11._sash.onDidStart(function () {\n      return _this11._onSashDragStart();\n    });\n\n    _this11._sash.onDidChange(function (e) {\n      return _this11._onSashDrag(e);\n    });\n\n    _this11._sash.onDidEnd(function () {\n      return _this11._onSashDragEnd();\n    });\n\n    _this11._sash.onDidReset(function () {\n      return _this11._onSashReset();\n    });\n\n    return _this11;\n  }\n\n  _createClass(DiffEditorWidgetSideBySide, [{\n    key: \"setEnableSplitViewResizing\",\n    value: function setEnableSplitViewResizing(enableSplitViewResizing) {\n      var newDisableSash = enableSplitViewResizing === false;\n\n      if (this._disableSash !== newDisableSash) {\n        this._disableSash = newDisableSash;\n        this._sash.state = this._disableSash ? 0\n        /* Disabled */\n        : 3\n        /* Enabled */\n        ;\n      }\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      var sashRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._sashRatio;\n\n      var w = this._dataSource.getWidth();\n\n      var contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n      var sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n      var midPoint = Math.floor(0.5 * contentWidth);\n      sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n\n      if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n        if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n          sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n        }\n\n        if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n          sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n        }\n      } else {\n        sashPosition = midPoint;\n      }\n\n      if (this._sashPosition !== sashPosition) {\n        this._sashPosition = sashPosition;\n\n        this._sash.layout();\n      }\n\n      return this._sashPosition;\n    }\n  }, {\n    key: \"_onSashDragStart\",\n    value: function _onSashDragStart() {\n      this._startSashPosition = this._sashPosition;\n    }\n  }, {\n    key: \"_onSashDrag\",\n    value: function _onSashDrag(e) {\n      var w = this._dataSource.getWidth();\n\n      var contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n      var sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n      this._sashRatio = sashPosition / contentWidth;\n\n      this._dataSource.relayoutEditors();\n    }\n  }, {\n    key: \"_onSashDragEnd\",\n    value: function _onSashDragEnd() {\n      this._sash.layout();\n    }\n  }, {\n    key: \"_onSashReset\",\n    value: function _onSashReset() {\n      this._sashRatio = 0.5;\n\n      this._dataSource.relayoutEditors();\n\n      this._sash.layout();\n    }\n  }, {\n    key: \"getVerticalSashTop\",\n    value: function getVerticalSashTop(sash) {\n      return 0;\n    }\n  }, {\n    key: \"getVerticalSashLeft\",\n    value: function getVerticalSashLeft(sash) {\n      return this._sashPosition;\n    }\n  }, {\n    key: \"getVerticalSashHeight\",\n    value: function getVerticalSashHeight(sash) {\n      return this._dataSource.getHeight();\n    }\n  }, {\n    key: \"_getViewZones\",\n    value: function _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n      var originalEditor = this._dataSource.getOriginalEditor();\n\n      var modifiedEditor = this._dataSource.getModifiedEditor();\n\n      var c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n      return c.getViewZones();\n    }\n  }, {\n    key: \"_getOriginalEditorDecorations\",\n    value: function _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n      var originalEditor = this._dataSource.getOriginalEditor();\n\n      var overviewZoneColor = String(this._removeColor);\n      var result = {\n        decorations: [],\n        overviewZones: []\n      };\n      var originalModel = originalEditor.getModel();\n\n      var originalViewModel = originalEditor._getViewModel();\n\n      var _iterator5 = _createForOfIteratorHelper(lineChanges),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var lineChange = _step5.value;\n\n          if (isChangeOrDelete(lineChange)) {\n            result.decorations.push({\n              range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              ),\n              options: renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete\n            });\n\n            if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n              result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              , DECORATIONS.charDeleteWholeLine));\n            }\n\n            var viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n            result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n\n            if (lineChange.charChanges) {\n              var _iterator6 = _createForOfIteratorHelper(lineChange.charChanges),\n                  _step6;\n\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var charChange = _step6.value;\n\n                  if (isChangeOrDelete(charChange)) {\n                    if (ignoreTrimWhitespace) {\n                      for (var lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                        var startColumn = void 0;\n                        var endColumn = void 0;\n\n                        if (lineNumber === charChange.originalStartLineNumber) {\n                          startColumn = charChange.originalStartColumn;\n                        } else {\n                          startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                        }\n\n                        if (lineNumber === charChange.originalEndLineNumber) {\n                          endColumn = charChange.originalEndColumn;\n                        } else {\n                          endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                        }\n\n                        result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                      }\n                    } else {\n                      result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getModifiedEditorDecorations\",\n    value: function _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n      var modifiedEditor = this._dataSource.getModifiedEditor();\n\n      var overviewZoneColor = String(this._insertColor);\n      var result = {\n        decorations: [],\n        overviewZones: []\n      };\n      var modifiedModel = modifiedEditor.getModel();\n\n      var modifiedViewModel = modifiedEditor._getViewModel();\n\n      var _iterator7 = _createForOfIteratorHelper(lineChanges),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var lineChange = _step7.value;\n\n          if (isChangeOrInsert(lineChange)) {\n            result.decorations.push({\n              range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              ),\n              options: renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert\n            });\n\n            if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n              result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              , DECORATIONS.charInsertWholeLine));\n            }\n\n            var viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n\n            if (lineChange.charChanges) {\n              var _iterator8 = _createForOfIteratorHelper(lineChange.charChanges),\n                  _step8;\n\n              try {\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                  var charChange = _step8.value;\n\n                  if (isChangeOrInsert(charChange)) {\n                    if (ignoreTrimWhitespace) {\n                      for (var lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                        var startColumn = void 0;\n                        var endColumn = void 0;\n\n                        if (lineNumber === charChange.modifiedStartLineNumber) {\n                          startColumn = charChange.modifiedStartColumn;\n                        } else {\n                          startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                        }\n\n                        if (lineNumber === charChange.modifiedEndLineNumber) {\n                          endColumn = charChange.modifiedEndColumn;\n                        } else {\n                          endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                        }\n\n                        result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                      }\n                    } else {\n                      result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator8.e(err);\n              } finally {\n                _iterator8.f();\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return result;\n    }\n  }]);\n\n  return DiffEditorWidgetSideBySide;\n}(DiffEditorWidgetStyle);\n\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\n\nvar SideBySideViewZonesComputer = /*#__PURE__*/function (_ViewZonesComputer) {\n  _inherits(SideBySideViewZonesComputer, _ViewZonesComputer);\n\n  var _super4 = _createSuper(SideBySideViewZonesComputer);\n\n  function SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n    _classCallCheck(this, SideBySideViewZonesComputer);\n\n    return _super4.call(this, lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n  }\n\n  _createClass(SideBySideViewZonesComputer, [{\n    key: \"_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion\",\n    value: function _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n      return null;\n    }\n  }, {\n    key: \"_produceOriginalFromDiff\",\n    value: function _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n      if (lineChangeModifiedLength > lineChangeOriginalLength) {\n        return {\n          afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n          heightInLines: lineChangeModifiedLength - lineChangeOriginalLength,\n          domNode: null\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_produceModifiedFromDiff\",\n    value: function _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n      if (lineChangeOriginalLength > lineChangeModifiedLength) {\n        return {\n          afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n          heightInLines: lineChangeOriginalLength - lineChangeModifiedLength,\n          domNode: null\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return SideBySideViewZonesComputer;\n}(ViewZonesComputer);\n\nvar DiffEditorWidgetInline = /*#__PURE__*/function (_DiffEditorWidgetStyl2) {\n  _inherits(DiffEditorWidgetInline, _DiffEditorWidgetStyl2);\n\n  var _super5 = _createSuper(DiffEditorWidgetInline);\n\n  function DiffEditorWidgetInline(dataSource, enableSplitViewResizing) {\n    var _this12;\n\n    _classCallCheck(this, DiffEditorWidgetInline);\n\n    _this12 = _super5.call(this, dataSource);\n    _this12._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n\n    _this12._register(dataSource.getOriginalEditor().onDidLayoutChange(function (layoutInfo) {\n      if (_this12._decorationsLeft !== layoutInfo.decorationsLeft) {\n        _this12._decorationsLeft = layoutInfo.decorationsLeft;\n        dataSource.relayoutEditors();\n      }\n    }));\n\n    return _this12;\n  }\n\n  _createClass(DiffEditorWidgetInline, [{\n    key: \"setEnableSplitViewResizing\",\n    value: function setEnableSplitViewResizing(enableSplitViewResizing) {// Nothing to do..\n    }\n  }, {\n    key: \"_getViewZones\",\n    value: function _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n      var originalEditor = this._dataSource.getOriginalEditor();\n\n      var modifiedEditor = this._dataSource.getModifiedEditor();\n\n      var computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n      return computer.getViewZones();\n    }\n  }, {\n    key: \"_getOriginalEditorDecorations\",\n    value: function _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n      var overviewZoneColor = String(this._removeColor);\n      var result = {\n        decorations: [],\n        overviewZones: []\n      };\n\n      var originalEditor = this._dataSource.getOriginalEditor();\n\n      var originalModel = originalEditor.getModel();\n\n      var originalViewModel = originalEditor._getViewModel();\n\n      var _iterator9 = _createForOfIteratorHelper(lineChanges),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var lineChange = _step9.value;\n\n          // Add overview zones in the overview ruler\n          if (isChangeOrDelete(lineChange)) {\n            result.decorations.push({\n              range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              ),\n              options: DECORATIONS.lineDeleteMargin\n            });\n            var viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n            result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getModifiedEditorDecorations\",\n    value: function _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n      var modifiedEditor = this._dataSource.getModifiedEditor();\n\n      var overviewZoneColor = String(this._insertColor);\n      var result = {\n        decorations: [],\n        overviewZones: []\n      };\n      var modifiedModel = modifiedEditor.getModel();\n\n      var modifiedViewModel = modifiedEditor._getViewModel();\n\n      var _iterator10 = _createForOfIteratorHelper(lineChanges),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var lineChange = _step10.value;\n\n          // Add decorations & overview zones\n          if (isChangeOrInsert(lineChange)) {\n            result.decorations.push({\n              range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              ),\n              options: renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert\n            });\n            var viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n\n            if (lineChange.charChanges) {\n              var _iterator11 = _createForOfIteratorHelper(lineChange.charChanges),\n                  _step11;\n\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var charChange = _step11.value;\n\n                  if (isChangeOrInsert(charChange)) {\n                    if (ignoreTrimWhitespace) {\n                      for (var lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                        var startColumn = void 0;\n                        var endColumn = void 0;\n\n                        if (lineNumber === charChange.modifiedStartLineNumber) {\n                          startColumn = charChange.modifiedStartColumn;\n                        } else {\n                          startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                        }\n\n                        if (lineNumber === charChange.modifiedEndLineNumber) {\n                          endColumn = charChange.modifiedEndColumn;\n                        } else {\n                          endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                        }\n\n                        result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                      }\n                    } else {\n                      result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n            } else {\n              result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824\n              /* MAX_SAFE_SMALL_INTEGER */\n              , DECORATIONS.charInsertWholeLine));\n            }\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      // An editor should not be smaller than 5px\n      return Math.max(5, this._decorationsLeft);\n    }\n  }]);\n\n  return DiffEditorWidgetInline;\n}(DiffEditorWidgetStyle);\n\nvar InlineViewZonesComputer = /*#__PURE__*/function (_ViewZonesComputer2) {\n  _inherits(InlineViewZonesComputer, _ViewZonesComputer2);\n\n  var _super6 = _createSuper(InlineViewZonesComputer);\n\n  function InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n    var _this13;\n\n    _classCallCheck(this, InlineViewZonesComputer);\n\n    _this13 = _super6.call(this, lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    _this13._originalModel = originalEditor.getModel();\n    _this13._renderIndicators = renderIndicators;\n    _this13._pendingLineChange = [];\n    _this13._pendingViewZones = [];\n    _this13._lineBreaksComputer = _this13._modifiedEditor._getViewModel().createLineBreaksComputer();\n    return _this13;\n  }\n\n  _createClass(InlineViewZonesComputer, [{\n    key: \"getViewZones\",\n    value: function getViewZones() {\n      var result = _get(_getPrototypeOf(InlineViewZonesComputer.prototype), \"getViewZones\", this).call(this);\n\n      this._finalize(result);\n\n      return result;\n    }\n  }, {\n    key: \"_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion\",\n    value: function _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n      var result = document.createElement('div');\n      result.className = 'inline-added-margin-view-zone';\n      return result;\n    }\n  }, {\n    key: \"_produceOriginalFromDiff\",\n    value: function _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n      var marginDomNode = document.createElement('div');\n      marginDomNode.className = 'inline-added-margin-view-zone';\n      return {\n        afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n        heightInLines: lineChangeModifiedLength,\n        domNode: document.createElement('div'),\n        marginDomNode: marginDomNode\n      };\n    }\n  }, {\n    key: \"_produceModifiedFromDiff\",\n    value: function _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n      var domNode = document.createElement('div');\n      domNode.className = \"view-lines line-delete \".concat(MOUSE_CURSOR_TEXT_CSS_CLASS_NAME);\n      var marginDomNode = document.createElement('div');\n      marginDomNode.className = 'inline-deleted-margin-view-zone';\n      var viewZone = {\n        shouldNotShrink: true,\n        afterLineNumber: lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1,\n        heightInLines: lineChangeOriginalLength,\n        minWidthInPx: 0,\n        domNode: domNode,\n        marginDomNode: marginDomNode,\n        diff: {\n          originalStartLineNumber: lineChange.originalStartLineNumber,\n          originalEndLineNumber: lineChange.originalEndLineNumber,\n          modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n          modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n          originalModel: this._originalModel,\n          viewLineCounts: null\n        }\n      };\n\n      for (var lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n        this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null);\n      }\n\n      this._pendingLineChange.push(lineChange);\n\n      this._pendingViewZones.push(viewZone);\n\n      return viewZone;\n    }\n  }, {\n    key: \"_finalize\",\n    value: function _finalize(result) {\n      var modifiedEditorOptions = this._modifiedEditor.getOptions();\n\n      var tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n\n      var fontInfo = modifiedEditorOptions.get(38\n      /* fontInfo */\n      );\n      var disableMonospaceOptimizations = modifiedEditorOptions.get(26\n      /* disableMonospaceOptimizations */\n      );\n      var typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n      var scrollBeyondLastColumn = modifiedEditorOptions.get(88\n      /* scrollBeyondLastColumn */\n      );\n\n      var mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n\n      var mightContainRTL = this._originalModel.mightContainRTL();\n\n      var lineHeight = modifiedEditorOptions.get(53\n      /* lineHeight */\n      );\n      var layoutInfo = modifiedEditorOptions.get(124\n      /* layoutInfo */\n      );\n      var lineDecorationsWidth = layoutInfo.decorationsWidth;\n      var stopRenderingLineAfter = modifiedEditorOptions.get(100\n      /* stopRenderingLineAfter */\n      );\n      var renderWhitespace = modifiedEditorOptions.get(83\n      /* renderWhitespace */\n      );\n      var renderControlCharacters = modifiedEditorOptions.get(77\n      /* renderControlCharacters */\n      );\n      var fontLigatures = modifiedEditorOptions.get(39\n      /* fontLigatures */\n      );\n\n      var lineBreaks = this._lineBreaksComputer.finalize();\n\n      var lineBreakIndex = 0;\n\n      for (var i = 0; i < this._pendingLineChange.length; i++) {\n        var lineChange = this._pendingLineChange[i];\n        var viewZone = this._pendingViewZones[i];\n        var domNode = viewZone.domNode;\n        Configuration.applyFontInfoSlow(domNode, fontInfo);\n        var marginDomNode = viewZone.marginDomNode;\n        Configuration.applyFontInfoSlow(marginDomNode, fontInfo);\n        var decorations = [];\n\n        if (lineChange.charChanges) {\n          var _iterator12 = _createForOfIteratorHelper(lineChange.charChanges),\n              _step12;\n\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var charChange = _step12.value;\n\n              if (isChangeOrDelete(charChange)) {\n                decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0\n                /* Regular */\n                ));\n              }\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        }\n\n        var hasCharChanges = decorations.length > 0;\n        var sb = createStringBuilder(10000);\n        var maxCharsPerLine = 0;\n        var renderedLineCount = 0;\n        var viewLineCounts = null;\n\n        for (var lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n          var lineIndex = lineNumber - lineChange.originalStartLineNumber;\n\n          var lineTokens = this._originalModel.getLineTokens(lineNumber);\n\n          var lineContent = lineTokens.getLineContent();\n          var lineBreakData = lineBreaks[lineBreakIndex++];\n          var actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n\n          if (lineBreakData) {\n            var lastBreakOffset = 0;\n\n            var _iterator13 = _createForOfIteratorHelper(lineBreakData.breakOffsets),\n                _step13;\n\n            try {\n              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                var breakOffset = _step13.value;\n                var viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                var viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                lastBreakOffset = breakOffset;\n              }\n            } catch (err) {\n              _iterator13.e(err);\n            } finally {\n              _iterator13.f();\n            }\n\n            if (!viewLineCounts) {\n              viewLineCounts = [];\n            } // make sure all lines before this one have an entry in `viewLineCounts`\n\n\n            while (viewLineCounts.length < lineIndex) {\n              viewLineCounts[viewLineCounts.length] = 1;\n            }\n\n            viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n            viewZone.heightInLines += lineBreakData.breakOffsets.length - 1;\n            var marginDomNode2 = document.createElement('div');\n            marginDomNode2.className = 'line-delete';\n            result.original.push({\n              afterLineNumber: lineNumber,\n              afterColumn: 0,\n              heightInLines: lineBreakData.breakOffsets.length - 1,\n              domNode: createFakeLinesDiv(),\n              marginDomNode: marginDomNode2\n            });\n          } else {\n            maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n          }\n        }\n\n        maxCharsPerLine += scrollBeyondLastColumn;\n        var html = sb.build();\n        var trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n        domNode.innerHTML = trustedhtml;\n        viewZone.minWidthInPx = maxCharsPerLine * typicalHalfwidthCharacterWidth;\n\n        if (viewLineCounts) {\n          // make sure all lines have an entry in `viewLineCounts`\n          var cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n\n          while (viewLineCounts.length <= cnt) {\n            viewLineCounts[viewLineCounts.length] = 1;\n          }\n        }\n\n        viewZone.diff.viewLineCounts = viewLineCounts;\n      }\n\n      result.original.sort(function (a, b) {\n        return a.afterLineNumber - b.afterLineNumber;\n      });\n    }\n  }, {\n    key: \"_renderOriginalLine\",\n    value: function _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n      sb.appendASCIIString('<div class=\"view-line');\n\n      if (!hasCharChanges) {\n        // No char changes\n        sb.appendASCIIString(' char-delete');\n      }\n\n      sb.appendASCIIString('\" style=\"top:');\n      sb.appendASCIIString(String(renderedLineCount * lineHeight));\n      sb.appendASCIIString('px;width:1000000px;\">');\n      var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n      var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n      var output = renderViewLine(new RenderLineInput(fontInfo.isMonospace && !disableMonospaceOptimizations, fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n      ), sb);\n      sb.appendASCIIString('</div>');\n\n      if (this._renderIndicators) {\n        var marginElement = document.createElement('div');\n        marginElement.className = \"delete-sign \".concat(ThemeIcon.asClassName(diffRemoveIcon));\n        marginElement.setAttribute('style', \"position:absolute;top:\".concat(renderedLineCount * lineHeight, \"px;width:\").concat(lineDecorationsWidth, \"px;height:\").concat(lineHeight, \"px;right:0;\"));\n        marginDomNode.appendChild(marginElement);\n      }\n\n      var absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\n      return absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\n    }\n  }]);\n\n  return InlineViewZonesComputer;\n}(ViewZonesComputer);\n\nfunction validateDiffWordWrap(value, defaultValue) {\n  return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\n\nfunction isChangeOrInsert(lineChange) {\n  return lineChange.modifiedEndLineNumber > 0;\n}\n\nfunction isChangeOrDelete(lineChange) {\n  return lineChange.originalEndLineNumber > 0;\n}\n\nfunction createFakeLinesDiv() {\n  var r = document.createElement('div');\n  r.className = 'diagonal-fill';\n  return r;\n}\n\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n  var lineCount = model.getLineCount();\n  startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n  endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n  return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\n\nregisterThemingParticipant(function (theme, collector) {\n  var added = theme.getColor(diffInserted);\n\n  if (added) {\n    collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { background-color: \".concat(added, \"; }\"));\n    collector.addRule(\".monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: \".concat(added, \"; }\"));\n    collector.addRule(\".monaco-editor .inline-added-margin-view-zone { background-color: \".concat(added, \"; }\"));\n  }\n\n  var removed = theme.getColor(diffRemoved);\n\n  if (removed) {\n    collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { background-color: \".concat(removed, \"; }\"));\n    collector.addRule(\".monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: \".concat(removed, \"; }\"));\n    collector.addRule(\".monaco-editor .inline-deleted-margin-view-zone { background-color: \".concat(removed, \"; }\"));\n  }\n\n  var addedOutline = theme.getColor(diffInsertedOutline);\n\n  if (addedOutline) {\n    collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px \".concat(theme.type === 'hc' ? 'dashed' : 'solid', \" \").concat(addedOutline, \"; }\"));\n  }\n\n  var removedOutline = theme.getColor(diffRemovedOutline);\n\n  if (removedOutline) {\n    collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px \".concat(theme.type === 'hc' ? 'dashed' : 'solid', \" \").concat(removedOutline, \"; }\"));\n  }\n\n  var shadow = theme.getColor(scrollbarShadow);\n\n  if (shadow) {\n    collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px \".concat(shadow, \"; }\"));\n  }\n\n  var border = theme.getColor(diffBorder);\n\n  if (border) {\n    collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid \".concat(border, \"; }\"));\n  }\n\n  var scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n\n  if (scrollbarSliderBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n\n  var scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n\n  if (scrollbarSliderHoverBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport:hover {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderHoverBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n\n  var scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n\n  if (scrollbarSliderActiveBackgroundColor) {\n    collector.addRule(\"\\n\\t\\t\\t.monaco-diff-editor .diffViewport:active {\\n\\t\\t\\t\\tbackground: \".concat(scrollbarSliderActiveBackgroundColor, \";\\n\\t\\t\\t}\\n\\t\\t\"));\n  }\n\n  var diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n  collector.addRule(\"\\n\\t.monaco-editor .diagonal-fill {\\n\\t\\tbackground-image: linear-gradient(\\n\\t\\t\\t-45deg,\\n\\t\\t\\t\".concat(diffDiagonalFillColor, \" 12.5%,\\n\\t\\t\\t#0000 12.5%, #0000 50%,\\n\\t\\t\\t\").concat(diffDiagonalFillColor, \" 50%, \").concat(diffDiagonalFillColor, \" 62.5%,\\n\\t\\t\\t#0000 62.5%, #0000 100%\\n\\t\\t);\\n\\t\\tbackground-size: 8px 8px;\\n\\t}\\n\\t\"));\n});","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","_a","nls","dom","createFastDomNode","Sash","RunOnceScheduler","Emitter","Disposable","Configuration","StableEditorScrollState","ICodeEditorService","CodeEditorWidget","DiffReview","EditorOptions","EditorFontLigatures","stringSet","validateStringSetOption","boolean","validateBooleanOption","Range","createStringBuilder","editorCommon","ModelDecorationOptions","IEditorWorkerService","OverviewRulerZone","LineDecoration","RenderLineInput","renderViewLine","InlineDecoration","ViewLineRenderingData","IContextKeyService","IInstantiationService","ServiceCollection","INotificationService","defaultInsertColor","defaultRemoveColor","diffBorder","diffInserted","diffInsertedOutline","diffRemoved","diffRemovedOutline","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","diffDiagonalFill","IThemeService","getThemeTypeSelector","registerThemingParticipant","ThemeIcon","IContextMenuService","InlineDiffMargin","IClipboardService","EditorExtensionsRegistry","onUnexpectedError","IEditorProgressService","ElementSizeObserver","Codicon","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","registerIcon","VisualEditorState","_contextMenuService","_clipboardService","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","filter","z","String","id","editor","changeViewZones","viewChangeAccessor","zoneId","removeZone","deltaDecorations","overviewRuler","newDecorations","restoreScrollState","scrollState","capture","inlineDiffMargin","dispose","zones","viewZone","suppressMouseDown","addZone","push","diff","marginDomNode","restore","decorations","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","add","localize","diffRemoveIcon","remove","ttPolicy","window","trustedTypes","createPolicy","createHTML","value","DiffEditorWidget","domElement","options","codeEditorWidgetOptions","clipboardService","editorWorkerService","contextKeyService","instantiationService","codeEditorService","themeService","notificationService","contextMenuService","_editorProgressService","_onDidDispose","_register","onDidDispose","event","_onDidUpdateDiff","onDidUpdateDiff","_onDidContentSizeChange","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_codeEditorService","_contextKeyService","createScoped","createKey","_themeService","_notificationService","_id","_state","_updatingDiffProgress","_domElement","_renderSideBySide","renderSideBySide","_maxComputationTime","maxComputationTime","_ignoreTrimWhitespace","ignoreTrimWhitespace","_renderIndicators","renderIndicators","_originalIsEditable","originalEditable","_diffCodeLens","diffCodeLens","_diffWordWrap","validateDiffWordWrap","diffWordWrap","isInEmbeddedEditor","_renderOverviewRuler","renderOverviewRuler","Boolean","_updateDecorationsRunner","_updateDecorations","_containerDomElement","document","createElement","className","_getClassName","getColorTheme","style","position","height","appendChild","_overviewViewportDomElement","setClassName","setPosition","_overviewDomElement","domNode","addStandardDisposableListener","e","_modifiedEditor","delegateVerticalScrollbarMouseDown","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isVisible","_isHandlingScrollEvent","_elementSizeObserver","dimension","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","leftContextKeyService","leftServices","set","leftScopedInstantiationService","createChild","rightContextKeyService","rightServices","rightScopedInstantiationService","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","shadow","actionBarContainer","_enableSplitViewResizing","enableSplitViewResizing","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","contributions","getDiffEditorContributions","createInstance","ctor","err","addDiffEditor","newState","done","show","next","prev","removeChild","getDomNode","hasModel","createOverviewRuler","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","onDidScrollChange","scrollTopChanged","scrollLeftChanged","scrollHeightChanged","setScrollPosition","scrollLeft","scrollTop","_layoutOverviewViewport","onDidChangeViewZones","_onViewZonesChanged","onDidChangeConfiguration","getModel","hasChanged","cancel","onDidChangeModelContent","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","undefined","onDidFocusEditorWidget","onDidBlurEditorWidget","onDidContentSizeChange","width","getContentWidth","ONE_OVERVIEW_WIDTH","Math","max","getContentHeight","fire","contentHeight","contentWidth","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","onDidChangeModelOptions","tabSize","isInDiffRightEditorKey","container","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","getEditorType","EditorType","IDiffEditor","changes","newOptions","renderSideBySideChanged","beginUpdateDecorations","_beginUpdateDecorations","updateOptions","setEnableSplitViewResizing","original","modified","model","Error","setModel","setScrollTop","_setState","_recreateOverviewRulers","getVisibleColumnFromPosition","getPosition","lineNumber","scrollType","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPosition","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","getSelection","getSelections","something","setSelection","ranges","setSelections","startLineNumber","endLineNumber","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","range","revealVerticalInCenter","revealHorizontal","revealRange","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","originalViewState","saveViewState","modifiedViewState","s","diffEditorState","restoreViewState","observe","focus","hasTextFocus","source","handlerId","payload","trigger","callback","changeDecorations","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","layoutInfo","getLayoutInfo","setLayout","top","right","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","canComputeDiff","uri","_equals","warn","computeDiff","then","result","error","clean","lineChanges","foreignOriginal","getForeignViewZones","getWhitespaces","foreignModified","diffDecorations","getEditorsDiffDecorations","apply","clonedOptions","assign","inDiffEditor","scrollbar","vertical","folding","codeLens","fixedOverflowWidgets","minimap","enabled","_adjustOptionsForSubEditor","wordWrapOverride1","readOnly","extraEditorClassName","revealHorizontalRightPadding","defaultValue","verticalHasArrows","getWidth","splitPoint","layout","left","setWidth","setHeight","_computeOverviewViewport","setTop","getScrollTop","scrollHeight","getScrollHeight","computedAvailableSize","computedRepresentableSize","computedRatio","computedSliderSize","floor","computedSliderPosition","getOptions","getContainerDomNode","relayoutEditors","getOriginalEditor","getModifiedEditor","newStrategy","startLineNumberExtractor","min","mid","midStart","midEnd","lineChange","_getLineChangeAtOrBeforeLineNumber","originalStartLineNumber","originalEquivalentLineNumber","originalEndLineNumber","modifiedEquivalentLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","delta","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","theme","type","a","b","toString","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","getColor","transparent","newRemoveColor","hasChanges","equals","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","current","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","getOption","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalModel","originalCoordinatesConverter","_getViewModel","coordinatesConverter","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","count","getLineCount","originalLineNumber","modifiedLineNumber","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","viewModel","viewRange","getViewRange","map","createFakeLinesDiv","createDecoration","startColumn","endColumn","DECORATIONS","charDelete","register","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","asClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","orientation","state","onDidStart","_onSashDragStart","onDidChange","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","charChanges","charChange","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedModel","modifiedViewModel","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","onDidLayoutChange","computer","InlineViewZonesComputer","_originalModel","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","minWidthInPx","viewLineCounts","addRequest","getLineContent","modifiedEditorOptions","fontInfo","get","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","mightContainNonBasicASCII","mightContainRTL","lineHeight","lineDecorationsWidth","decorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","applyFontInfoSlow","hasCharChanges","sb","maxCharsPerLine","renderedLineCount","lineIndex","lineTokens","getLineTokens","lineContent","lineBreakData","actualDecorations","lastBreakOffset","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","extractWrapped","marginDomNode2","afterColumn","html","build","trustedhtml","innerHTML","cnt","appendASCIIString","isBasicASCII","containsRTL","output","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","marginElement","setAttribute","absoluteOffsets","characterMapping","getAbsoluteOffsets","lineCount","convertModelRangeToViewRange","getLineMinColumn","getLineMaxColumn","collector","added","addRule","removed","addedOutline","removedOutline","border","scrollbarSliderBackgroundColor","scrollbarSliderHoverBackgroundColor","scrollbarSliderActiveBackgroundColor","diffDiagonalFillColor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './media/diffEditor.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { StableEditorScrollState } from '../core/editorState.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { DiffReview } from './diffReview.js';\r\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption } from '../../common/config/editorOptions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport * as editorCommon from '../../common/editorCommon.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { OverviewRulerZone } from '../../common/view/overviewZoneManager.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nclass VisualEditorState {\r\n    constructor(_contextMenuService, _clipboardService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._clipboardService = _clipboardService;\r\n        this._zones = [];\r\n        this._inlineDiffMargins = [];\r\n        this._zonesMap = {};\r\n        this._decorations = [];\r\n    }\r\n    getForeignViewZones(allViewZones) {\r\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\r\n    }\r\n    clean(editor) {\r\n        // (1) View zones\r\n        if (this._zones.length > 0) {\r\n            editor.changeViewZones((viewChangeAccessor) => {\r\n                for (const zoneId of this._zones) {\r\n                    viewChangeAccessor.removeZone(zoneId);\r\n                }\r\n            });\r\n        }\r\n        this._zones = [];\r\n        this._zonesMap = {};\r\n        // (2) Model decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, []);\r\n    }\r\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\r\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\r\n        // view zones\r\n        editor.changeViewZones((viewChangeAccessor) => {\r\n            for (const zoneId of this._zones) {\r\n                viewChangeAccessor.removeZone(zoneId);\r\n            }\r\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\r\n                inlineDiffMargin.dispose();\r\n            }\r\n            this._zones = [];\r\n            this._zonesMap = {};\r\n            this._inlineDiffMargins = [];\r\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\r\n                const viewZone = newDecorations.zones[i];\r\n                viewZone.suppressMouseDown = true;\r\n                const zoneId = viewChangeAccessor.addZone(viewZone);\r\n                this._zones.push(zoneId);\r\n                this._zonesMap[String(zoneId)] = true;\r\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\r\n                    viewZone.suppressMouseDown = false;\r\n                    this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\r\n                }\r\n            }\r\n        });\r\n        if (scrollState) {\r\n            scrollState.restore(editor);\r\n        }\r\n        // decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\r\n        // overview ruler\r\n        if (overviewRuler) {\r\n            overviewRuler.setZones(newDecorations.overviewZones);\r\n        }\r\n    }\r\n}\r\nlet DIFF_EDITOR_ID = 0;\r\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\r\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\r\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\r\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\r\n        super();\r\n        this._editorProgressService = _editorProgressService;\r\n        this._onDidDispose = this._register(new Emitter());\r\n        this.onDidDispose = this._onDidDispose.event;\r\n        this._onDidUpdateDiff = this._register(new Emitter());\r\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\r\n        this._onDidContentSizeChange = this._register(new Emitter());\r\n        this._lastOriginalWarning = null;\r\n        this._lastModifiedWarning = null;\r\n        this._editorWorkerService = editorWorkerService;\r\n        this._codeEditorService = codeEditorService;\r\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\r\n        this._contextKeyService.createKey('isInDiffEditor', true);\r\n        this._themeService = themeService;\r\n        this._notificationService = notificationService;\r\n        this._id = (++DIFF_EDITOR_ID);\r\n        this._state = 0 /* Idle */;\r\n        this._updatingDiffProgress = null;\r\n        this._domElement = domElement;\r\n        options = options || {};\r\n        // renderSideBySide\r\n        this._renderSideBySide = true;\r\n        if (typeof options.renderSideBySide !== 'undefined') {\r\n            this._renderSideBySide = options.renderSideBySide;\r\n        }\r\n        // maxComputationTime\r\n        this._maxComputationTime = 5000;\r\n        if (typeof options.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = options.maxComputationTime;\r\n        }\r\n        // ignoreTrimWhitespace\r\n        this._ignoreTrimWhitespace = true;\r\n        if (typeof options.ignoreTrimWhitespace !== 'undefined') {\r\n            this._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\r\n        }\r\n        // renderIndicators\r\n        this._renderIndicators = true;\r\n        if (typeof options.renderIndicators !== 'undefined') {\r\n            this._renderIndicators = options.renderIndicators;\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(options.originalEditable, false);\r\n        this._diffCodeLens = validateBooleanOption(options.diffCodeLens, false);\r\n        this._diffWordWrap = validateDiffWordWrap(options.diffWordWrap, 'inherit');\r\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\r\n        }\r\n        else {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\r\n        }\r\n        this._renderOverviewRuler = true;\r\n        if (typeof options.renderOverviewRuler !== 'undefined') {\r\n            this._renderOverviewRuler = Boolean(options.renderOverviewRuler);\r\n        }\r\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\r\n        this._containerDomElement = document.createElement('div');\r\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        this._containerDomElement.style.position = 'relative';\r\n        this._containerDomElement.style.height = '100%';\r\n        this._domElement.appendChild(this._containerDomElement);\r\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\r\n        this._overviewViewportDomElement.setClassName('diffViewport');\r\n        this._overviewViewportDomElement.setPosition('absolute');\r\n        this._overviewDomElement = document.createElement('div');\r\n        this._overviewDomElement.className = 'diffOverview';\r\n        this._overviewDomElement.style.position = 'absolute';\r\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\r\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\r\n            this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\r\n        }));\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.appendChild(this._overviewDomElement);\r\n        }\r\n        // Create left side\r\n        this._originalDomNode = document.createElement('div');\r\n        this._originalDomNode.className = 'editor original';\r\n        this._originalDomNode.style.position = 'absolute';\r\n        this._originalDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._originalDomNode);\r\n        // Create right side\r\n        this._modifiedDomNode = document.createElement('div');\r\n        this._modifiedDomNode.className = 'editor modified';\r\n        this._modifiedDomNode.style.position = 'absolute';\r\n        this._modifiedDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._modifiedDomNode);\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        this._currentlyChangingViewZones = false;\r\n        this._diffComputationToken = 0;\r\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._isVisible = true;\r\n        this._isHandlingScrollEvent = false;\r\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension, () => this._onDidContainerSizeChanged()));\r\n        if (options.automaticLayout) {\r\n            this._elementSizeObserver.startObserving();\r\n        }\r\n        this._diffComputationResult = null;\r\n        const leftContextKeyService = this._contextKeyService.createScoped();\r\n        const leftServices = new ServiceCollection();\r\n        leftServices.set(IContextKeyService, leftContextKeyService);\r\n        const leftScopedInstantiationService = instantiationService.createChild(leftServices);\r\n        const rightContextKeyService = this._contextKeyService.createScoped();\r\n        const rightServices = new ServiceCollection();\r\n        rightServices.set(IContextKeyService, rightContextKeyService);\r\n        const rightScopedInstantiationService = instantiationService.createChild(rightServices);\r\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {}, leftScopedInstantiationService, leftContextKeyService);\r\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {}, rightScopedInstantiationService, rightContextKeyService);\r\n        this._originalOverviewRuler = null;\r\n        this._modifiedOverviewRuler = null;\r\n        this._reviewPane = new DiffReview(this);\r\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\r\n        // enableSplitViewResizing\r\n        this._enableSplitViewResizing = true;\r\n        if (typeof options.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = options.enableSplitViewResizing;\r\n        }\r\n        if (this._renderSideBySide) {\r\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        else {\r\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        this._register(themeService.onDidColorThemeChange(t => {\r\n            if (this._strategy && this._strategy.applyColors(t)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }));\r\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\r\n        for (const desc of contributions) {\r\n            try {\r\n                this._register(instantiationService.createInstance(desc.ctor, this));\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        this._codeEditorService.addDiffEditor(this);\r\n    }\r\n    _setState(newState) {\r\n        if (this._state === newState) {\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        if (this._updatingDiffProgress) {\r\n            this._updatingDiffProgress.done();\r\n            this._updatingDiffProgress = null;\r\n        }\r\n        if (this._state === 1 /* ComputingDiff */) {\r\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\r\n        }\r\n    }\r\n    diffReviewNext() {\r\n        this._reviewPane.next();\r\n    }\r\n    diffReviewPrev() {\r\n        this._reviewPane.prev();\r\n    }\r\n    static _getClassName(theme, renderSideBySide) {\r\n        let result = 'monaco-diff-editor monaco-editor-background ';\r\n        if (renderSideBySide) {\r\n            result += 'side-by-side ';\r\n        }\r\n        result += getThemeTypeSelector(theme.type);\r\n        return result;\r\n    }\r\n    _recreateOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._originalEditor.hasModel()) {\r\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedEditor.hasModel()) {\r\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\r\n        }\r\n        this._layoutOverviewRulers();\r\n    }\r\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\r\n        const editor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._modifiedEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(38 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(125 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        const isInDiffLeftEditorKey = contextKeyService.createKey('isInDiffLeftEditor', undefined);\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createRightHandSideEditor(options, codeEditorWidgetOptions, instantiationService, contextKeyService) {\r\n        const editor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._originalEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(38 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(125 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelOptions((e) => {\r\n            if (e.tabSize) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        }));\r\n        const isInDiffRightEditorKey = contextKeyService.createKey('isInDiffRightEditor', undefined);\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\r\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\r\n    }\r\n    dispose() {\r\n        this._codeEditorService.removeDiffEditor(this);\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._cleanViewZonesAndDecorations();\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.removeChild(this._overviewDomElement);\r\n        }\r\n        this._containerDomElement.removeChild(this._originalDomNode);\r\n        this._originalEditor.dispose();\r\n        this._containerDomElement.removeChild(this._modifiedDomNode);\r\n        this._modifiedEditor.dispose();\r\n        this._strategy.dispose();\r\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\r\n        this._reviewPane.dispose();\r\n        this._domElement.removeChild(this._containerDomElement);\r\n        this._onDidDispose.fire();\r\n        super.dispose();\r\n    }\r\n    //------------ begin IDiffEditor methods\r\n    getId() {\r\n        return this.getEditorType() + ':' + this._id;\r\n    }\r\n    getEditorType() {\r\n        return editorCommon.EditorType.IDiffEditor;\r\n    }\r\n    getLineChanges() {\r\n        if (!this._diffComputationResult) {\r\n            return null;\r\n        }\r\n        return this._diffComputationResult.changes;\r\n    }\r\n    getOriginalEditor() {\r\n        return this._originalEditor;\r\n    }\r\n    getModifiedEditor() {\r\n        return this._modifiedEditor;\r\n    }\r\n    updateOptions(newOptions) {\r\n        // Handle side by side\r\n        let renderSideBySideChanged = false;\r\n        if (typeof newOptions.renderSideBySide !== 'undefined') {\r\n            if (this._renderSideBySide !== newOptions.renderSideBySide) {\r\n                this._renderSideBySide = newOptions.renderSideBySide;\r\n                renderSideBySideChanged = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = newOptions.maxComputationTime;\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }\r\n        let beginUpdateDecorations = false;\r\n        if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\r\n            if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\r\n                this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\r\n                // Begin comparing\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.renderIndicators !== 'undefined') {\r\n            if (this._renderIndicators !== newOptions.renderIndicators) {\r\n                this._renderIndicators = newOptions.renderIndicators;\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (beginUpdateDecorations) {\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(newOptions.originalEditable, this._originalIsEditable);\r\n        this._diffCodeLens = validateBooleanOption(newOptions.diffCodeLens, this._diffCodeLens);\r\n        this._diffWordWrap = validateDiffWordWrap(newOptions.diffWordWrap, this._diffWordWrap);\r\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\r\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions));\r\n        // enableSplitViewResizing\r\n        if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\r\n        }\r\n        this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\r\n        // renderSideBySide\r\n        if (renderSideBySideChanged) {\r\n            if (this._renderSideBySide) {\r\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            else {\r\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            // Update class name\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }\r\n        // renderOverviewRuler\r\n        if (typeof newOptions.renderOverviewRuler !== 'undefined' && this._renderOverviewRuler !== newOptions.renderOverviewRuler) {\r\n            this._renderOverviewRuler = newOptions.renderOverviewRuler;\r\n            if (this._renderOverviewRuler) {\r\n                this._containerDomElement.appendChild(this._overviewDomElement);\r\n            }\r\n            else {\r\n                this._containerDomElement.removeChild(this._overviewDomElement);\r\n            }\r\n        }\r\n    }\r\n    getModel() {\r\n        return {\r\n            original: this._originalEditor.getModel(),\r\n            modified: this._modifiedEditor.getModel()\r\n        };\r\n    }\r\n    setModel(model) {\r\n        // Guard us against partial null model\r\n        if (model && (!model.original || !model.modified)) {\r\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\r\n        }\r\n        // Remove all view zones & decorations\r\n        this._cleanViewZonesAndDecorations();\r\n        // Update code editor models\r\n        this._originalEditor.setModel(model ? model.original : null);\r\n        this._modifiedEditor.setModel(model ? model.modified : null);\r\n        this._updateDecorationsRunner.cancel();\r\n        // this.originalEditor.onDidChangeModelOptions\r\n        if (model) {\r\n            this._originalEditor.setScrollTop(0);\r\n            this._modifiedEditor.setScrollTop(0);\r\n        }\r\n        // Disable any diff computations that will come in\r\n        this._diffComputationResult = null;\r\n        this._diffComputationToken++;\r\n        this._setState(0 /* Idle */);\r\n        if (model) {\r\n            this._recreateOverviewRulers();\r\n            // Begin comparing\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._layoutOverviewViewport();\r\n    }\r\n    getDomNode() {\r\n        return this._domElement;\r\n    }\r\n    getVisibleColumnFromPosition(position) {\r\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\r\n    }\r\n    getPosition() {\r\n        return this._modifiedEditor.getPosition();\r\n    }\r\n    setPosition(position) {\r\n        this._modifiedEditor.setPosition(position);\r\n    }\r\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\r\n    }\r\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\r\n    }\r\n    revealPosition(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPosition(position, scrollType);\r\n    }\r\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\r\n    }\r\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\r\n    }\r\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\r\n    }\r\n    getSelection() {\r\n        return this._modifiedEditor.getSelection();\r\n    }\r\n    getSelections() {\r\n        return this._modifiedEditor.getSelections();\r\n    }\r\n    setSelection(something) {\r\n        this._modifiedEditor.setSelection(something);\r\n    }\r\n    setSelections(ranges) {\r\n        this._modifiedEditor.setSelections(ranges);\r\n    }\r\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\r\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\r\n    }\r\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\r\n    }\r\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\r\n    }\r\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\r\n    }\r\n    getSupportedActions() {\r\n        return this._modifiedEditor.getSupportedActions();\r\n    }\r\n    saveViewState() {\r\n        const originalViewState = this._originalEditor.saveViewState();\r\n        const modifiedViewState = this._modifiedEditor.saveViewState();\r\n        return {\r\n            original: originalViewState,\r\n            modified: modifiedViewState\r\n        };\r\n    }\r\n    restoreViewState(s) {\r\n        if (s && s.original && s.modified) {\r\n            const diffEditorState = s;\r\n            this._originalEditor.restoreViewState(diffEditorState.original);\r\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\r\n        }\r\n    }\r\n    layout(dimension) {\r\n        this._elementSizeObserver.observe(dimension);\r\n    }\r\n    focus() {\r\n        this._modifiedEditor.focus();\r\n    }\r\n    hasTextFocus() {\r\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\r\n    }\r\n    trigger(source, handlerId, payload) {\r\n        this._modifiedEditor.trigger(source, handlerId, payload);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this._modifiedEditor.changeDecorations(callback);\r\n    }\r\n    //------------ end IDiffEditor methods\r\n    //------------ begin layouting methods\r\n    _onDidContainerSizeChanged() {\r\n        this._doLayout();\r\n    }\r\n    _getReviewHeight() {\r\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\r\n    }\r\n    _layoutOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\r\n            return;\r\n        }\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (layoutInfo) {\r\n            this._originalOverviewRuler.setLayout({\r\n                top: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n            this._modifiedOverviewRuler.setLayout({\r\n                top: 0,\r\n                right: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n        }\r\n    }\r\n    //------------ end layouting methods\r\n    _onViewZonesChanged() {\r\n        if (this._currentlyChangingViewZones) {\r\n            return;\r\n        }\r\n        this._updateDecorationsRunner.schedule();\r\n    }\r\n    _beginUpdateDecorationsSoon() {\r\n        // Clear previous timeout if necessary\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\r\n    }\r\n    static _equals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.toString() === b.toString());\r\n    }\r\n    _beginUpdateDecorations() {\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        const currentOriginalModel = this._originalEditor.getModel();\r\n        const currentModifiedModel = this._modifiedEditor.getModel();\r\n        if (!currentOriginalModel || !currentModifiedModel) {\r\n            return;\r\n        }\r\n        // Prevent old diff requests to come if a new request has been initiated\r\n        // The best method would be to call cancel on the Promise, but this is not\r\n        // yet supported, so using tokens for now.\r\n        this._diffComputationToken++;\r\n        const currentToken = this._diffComputationToken;\r\n        this._setState(1 /* ComputingDiff */);\r\n        if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\r\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\r\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\r\n                this._lastOriginalWarning = currentOriginalModel.uri;\r\n                this._lastModifiedWarning = currentModifiedModel.uri;\r\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\r\n            }\r\n            return;\r\n        }\r\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace, this._maxComputationTime).then((result) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = result;\r\n                this._updateDecorationsRunner.schedule();\r\n                this._onDidUpdateDiff.fire();\r\n            }\r\n        }, (error) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = null;\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        });\r\n    }\r\n    _cleanViewZonesAndDecorations() {\r\n        this._originalEditorState.clean(this._originalEditor);\r\n        this._modifiedEditorState.clean(this._modifiedEditor);\r\n    }\r\n    _updateDecorations() {\r\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\r\n            return;\r\n        }\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\r\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\r\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified);\r\n        try {\r\n            this._currentlyChangingViewZones = true;\r\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\r\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\r\n        }\r\n        finally {\r\n            this._currentlyChangingViewZones = false;\r\n        }\r\n    }\r\n    _adjustOptionsForSubEditor(options) {\r\n        const clonedOptions = Object.assign({}, options);\r\n        clonedOptions.inDiffEditor = true;\r\n        clonedOptions.automaticLayout = false;\r\n        clonedOptions.scrollbar = clonedOptions.scrollbar || {};\r\n        clonedOptions.scrollbar.vertical = 'visible';\r\n        clonedOptions.folding = false;\r\n        clonedOptions.codeLens = this._diffCodeLens;\r\n        clonedOptions.fixedOverflowWidgets = true;\r\n        // clonedOptions.lineDecorationsWidth = '2ch';\r\n        if (!clonedOptions.minimap) {\r\n            clonedOptions.minimap = {};\r\n        }\r\n        clonedOptions.minimap.enabled = false;\r\n        return clonedOptions;\r\n    }\r\n    _adjustOptionsForLeftHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        if (!this._renderSideBySide) {\r\n            // never wrap hidden editor\r\n            result.wordWrapOverride1 = 'off';\r\n        }\r\n        else {\r\n            result.wordWrapOverride1 = this._diffWordWrap;\r\n        }\r\n        result.readOnly = !this._originalIsEditable;\r\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    _adjustOptionsForRightHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        result.wordWrapOverride1 = this._diffWordWrap;\r\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\r\n        result.scrollbar.verticalHasArrows = false;\r\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    doLayout() {\r\n        this._elementSizeObserver.observe();\r\n        this._doLayout();\r\n    }\r\n    _doLayout() {\r\n        const width = this._elementSizeObserver.getWidth();\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const splitPoint = this._strategy.layout();\r\n        this._originalDomNode.style.width = splitPoint + 'px';\r\n        this._originalDomNode.style.left = '0px';\r\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\r\n        this._modifiedDomNode.style.left = splitPoint + 'px';\r\n        this._overviewDomElement.style.top = '0px';\r\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\r\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\r\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\r\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\r\n        this._overviewViewportDomElement.setHeight(30);\r\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\r\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\r\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\r\n            this._layoutOverviewRulers();\r\n        }\r\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\r\n        this._layoutOverviewViewport();\r\n    }\r\n    _layoutOverviewViewport() {\r\n        const layout = this._computeOverviewViewport();\r\n        if (!layout) {\r\n            this._overviewViewportDomElement.setTop(0);\r\n            this._overviewViewportDomElement.setHeight(0);\r\n        }\r\n        else {\r\n            this._overviewViewportDomElement.setTop(layout.top);\r\n            this._overviewViewportDomElement.setHeight(layout.height);\r\n        }\r\n    }\r\n    _computeOverviewViewport() {\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (!layoutInfo) {\r\n            return null;\r\n        }\r\n        const scrollTop = this._modifiedEditor.getScrollTop();\r\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\r\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\r\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\r\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\r\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\r\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\r\n        return {\r\n            height: computedSliderSize,\r\n            top: computedSliderPosition\r\n        };\r\n    }\r\n    _createDataSource() {\r\n        return {\r\n            getWidth: () => {\r\n                return this._elementSizeObserver.getWidth();\r\n            },\r\n            getHeight: () => {\r\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\r\n            },\r\n            getOptions: () => {\r\n                return {\r\n                    renderOverviewRuler: this._renderOverviewRuler\r\n                };\r\n            },\r\n            getContainerDomNode: () => {\r\n                return this._containerDomElement;\r\n            },\r\n            relayoutEditors: () => {\r\n                this._doLayout();\r\n            },\r\n            getOriginalEditor: () => {\r\n                return this._originalEditor;\r\n            },\r\n            getModifiedEditor: () => {\r\n                return this._modifiedEditor;\r\n            }\r\n        };\r\n    }\r\n    _setStrategy(newStrategy) {\r\n        if (this._strategy) {\r\n            this._strategy.dispose();\r\n        }\r\n        this._strategy = newStrategy;\r\n        newStrategy.applyColors(this._themeService.getColorTheme());\r\n        if (this._diffComputationResult) {\r\n            this._updateDecorations();\r\n        }\r\n        // Just do a layout, the strategy might need it\r\n        this._doLayout();\r\n    }\r\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\r\n            // There are no changes or `lineNumber` is before the first change\r\n            return null;\r\n        }\r\n        let min = 0;\r\n        let max = lineChanges.length - 1;\r\n        while (min < max) {\r\n            const mid = Math.floor((min + max) / 2);\r\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\r\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n            if (lineNumber < midStart) {\r\n                max = mid - 1;\r\n            }\r\n            else if (lineNumber >= midEnd) {\r\n                min = mid + 1;\r\n            }\r\n            else {\r\n                // HIT!\r\n                min = mid;\r\n                max = mid;\r\n            }\r\n        }\r\n        return lineChanges[min];\r\n    }\r\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - originalEquivalentLineNumber;\r\n        if (delta <= lineChangeOriginalLength) {\r\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\r\n        }\r\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\r\n    }\r\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - modifiedEquivalentLineNumber;\r\n        if (delta <= lineChangeModifiedLength) {\r\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\r\n        }\r\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\r\n    }\r\n    getDiffLineInformationForOriginal(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\r\n        };\r\n    }\r\n    getDiffLineInformationForModified(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\r\n        };\r\n    }\r\n};\r\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\r\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\r\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\r\nDiffEditorWidget = __decorate([\r\n    __param(3, IClipboardService),\r\n    __param(4, IEditorWorkerService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IInstantiationService),\r\n    __param(7, ICodeEditorService),\r\n    __param(8, IThemeService),\r\n    __param(9, INotificationService),\r\n    __param(10, IContextMenuService),\r\n    __param(11, IEditorProgressService)\r\n], DiffEditorWidget);\r\nexport { DiffEditorWidget };\r\nclass DiffEditorWidgetStyle extends Disposable {\r\n    constructor(dataSource) {\r\n        super();\r\n        this._dataSource = dataSource;\r\n        this._insertColor = null;\r\n        this._removeColor = null;\r\n    }\r\n    applyColors(theme) {\r\n        const newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\r\n        const newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\r\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\r\n        this._insertColor = newInsertColor;\r\n        this._removeColor = newRemoveColor;\r\n        return hasChanges;\r\n    }\r\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\r\n        // Get view zones\r\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\r\n        // Get decorations & overview ruler zones\r\n        const originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        const modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        return {\r\n            original: {\r\n                decorations: originalDecorations.decorations,\r\n                overviewZones: originalDecorations.overviewZones,\r\n                zones: zones.original\r\n            },\r\n            modified: {\r\n                decorations: modifiedDecorations.decorations,\r\n                overviewZones: modifiedDecorations.overviewZones,\r\n                zones: zones.modified\r\n            }\r\n        };\r\n    }\r\n}\r\nclass ForeignViewZonesIterator {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._index = -1;\r\n        this.current = null;\r\n        this.advance();\r\n    }\r\n    advance() {\r\n        this._index++;\r\n        if (this._index < this._source.length) {\r\n            this.current = this._source[this._index];\r\n        }\r\n        else {\r\n            this.current = null;\r\n        }\r\n    }\r\n}\r\nclass ViewZonesComputer {\r\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\r\n        this._lineChanges = _lineChanges;\r\n        this._originalForeignVZ = _originalForeignVZ;\r\n        this._modifiedForeignVZ = _modifiedForeignVZ;\r\n        this._originalEditor = _originalEditor;\r\n        this._modifiedEditor = _modifiedEditor;\r\n    }\r\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\r\n        const model = editor.getModel();\r\n        const viewModel = editor._getViewModel();\r\n        if (model && viewModel) {\r\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\r\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\r\n        }\r\n        return (endLineNumber - startLineNumber + 1);\r\n    }\r\n    getViewZones() {\r\n        const originalLineHeight = this._originalEditor.getOption(53 /* lineHeight */);\r\n        const modifiedLineHeight = this._modifiedEditor.getOption(53 /* lineHeight */);\r\n        const originalHasWrapping = (this._originalEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(125 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\r\n        const originalModel = this._originalEditor.getModel();\r\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\r\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\r\n        const result = {\r\n            original: [],\r\n            modified: []\r\n        };\r\n        let lineChangeModifiedLength = 0;\r\n        let lineChangeOriginalLength = 0;\r\n        let originalEquivalentLineNumber = 0;\r\n        let modifiedEquivalentLineNumber = 0;\r\n        let originalEndEquivalentLineNumber = 0;\r\n        let modifiedEndEquivalentLineNumber = 0;\r\n        const sortMyViewZones = (a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        };\r\n        const addAndCombineIfPossible = (destination, item) => {\r\n            if (item.domNode === null && destination.length > 0) {\r\n                const lastItem = destination[destination.length - 1];\r\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\r\n                    lastItem.heightInLines += item.heightInLines;\r\n                    return;\r\n                }\r\n            }\r\n            destination.push(item);\r\n        };\r\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\r\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\r\n        let lastOriginalLineNumber = 1;\r\n        let lastModifiedLineNumber = 1;\r\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\r\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\r\n            const lineChange = (i < length ? this._lineChanges[i] : null);\r\n            if (lineChange !== null) {\r\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\r\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\r\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n            }\r\n            else {\r\n                // Increase to very large value to get the producing tests of foreign view zones running\r\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\r\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\r\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\r\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\r\n            }\r\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\r\n            let stepOriginal = [];\r\n            let stepModified = [];\r\n            // ---------------------------- PRODUCE VIEW ZONES\r\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\r\n            if (hasWrapping) {\r\n                let count;\r\n                if (lineChange) {\r\n                    if (lineChange.originalEndLineNumber > 0) {\r\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\r\n                    }\r\n                    else {\r\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\r\n                    }\r\n                }\r\n                else {\r\n                    count = originalModel.getLineCount() - lastOriginalLineNumber;\r\n                }\r\n                for (let i = 0; i < count; i++) {\r\n                    const originalLineNumber = lastOriginalLineNumber + i;\r\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\r\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\r\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\r\n                    if (originalViewLineCount < modifiedViewLineCount) {\r\n                        stepOriginal.push({\r\n                            afterLineNumber: originalLineNumber,\r\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                    else if (originalViewLineCount > modifiedViewLineCount) {\r\n                        stepModified.push({\r\n                            afterLineNumber: modifiedLineNumber,\r\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                }\r\n                if (lineChange) {\r\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\r\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\r\n                }\r\n            }\r\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\r\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\r\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\r\n                }\r\n                let marginDomNode = null;\r\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\r\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\r\n                }\r\n                stepOriginal.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\r\n                    domNode: null,\r\n                    marginDomNode: marginDomNode\r\n                });\r\n                modifiedForeignVZ.advance();\r\n            }\r\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\r\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\r\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\r\n                }\r\n                stepModified.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\r\n                    domNode: null\r\n                });\r\n                originalForeignVZ.advance();\r\n            }\r\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\r\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepOriginal.push(r);\r\n                }\r\n            }\r\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\r\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepModified.push(r);\r\n                }\r\n            }\r\n            // ---------------------------- END PRODUCE VIEW ZONES\r\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\r\n            // [CANCEL & EMIT] Try to cancel view zones out\r\n            let stepOriginalIndex = 0;\r\n            let stepModifiedIndex = 0;\r\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\r\n            stepModified = stepModified.sort(sortMyViewZones);\r\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\r\n                const original = stepOriginal[stepOriginalIndex];\r\n                const modified = stepModified[stepModifiedIndex];\r\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\r\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\r\n                if (originalDelta < modifiedDelta) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modifiedDelta < originalDelta) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else if (original.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modified.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else {\r\n                    if (original.heightInLines >= modified.heightInLines) {\r\n                        // modified view zone gets removed\r\n                        original.heightInLines -= modified.heightInLines;\r\n                        stepModifiedIndex++;\r\n                    }\r\n                    else {\r\n                        // original view zone gets removed\r\n                        modified.heightInLines -= original.heightInLines;\r\n                        stepOriginalIndex++;\r\n                    }\r\n                }\r\n            }\r\n            // [EMIT] Remaining original view zones\r\n            while (stepOriginalIndex < stepOriginal.length) {\r\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\r\n                stepOriginalIndex++;\r\n            }\r\n            // [EMIT] Remaining modified view zones\r\n            while (stepModifiedIndex < stepModified.length) {\r\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\r\n                stepModifiedIndex++;\r\n            }\r\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\r\n        }\r\n        return {\r\n            original: ViewZonesComputer._ensureDomNodes(result.original),\r\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\r\n        };\r\n    }\r\n    static _ensureDomNodes(zones) {\r\n        return zones.map((z) => {\r\n            if (!z.domNode) {\r\n                z.domNode = createFakeLinesDiv();\r\n            }\r\n            return z;\r\n        });\r\n    }\r\n}\r\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\r\n    return {\r\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\r\n        options: options\r\n    };\r\n}\r\nconst DECORATIONS = {\r\n    charDelete: ModelDecorationOptions.register({\r\n        className: 'char-delete'\r\n    }),\r\n    charDeleteWholeLine: ModelDecorationOptions.register({\r\n        className: 'char-delete',\r\n        isWholeLine: true\r\n    }),\r\n    charInsert: ModelDecorationOptions.register({\r\n        className: 'char-insert'\r\n    }),\r\n    charInsertWholeLine: ModelDecorationOptions.register({\r\n        className: 'char-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsert: ModelDecorationOptions.register({\r\n        className: 'line-insert',\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsertWithSign: ModelDecorationOptions.register({\r\n        className: 'line-insert',\r\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineDelete: ModelDecorationOptions.register({\r\n        className: 'line-delete',\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteWithSign: ModelDecorationOptions.register({\r\n        className: 'line-delete',\r\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteMargin: ModelDecorationOptions.register({\r\n        marginClassName: 'line-delete',\r\n    })\r\n};\r\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._disableSash = (enableSplitViewResizing === false);\r\n        this._sashRatio = null;\r\n        this._sashPosition = null;\r\n        this._startSashPosition = null;\r\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* VERTICAL */ }));\r\n        if (this._disableSash) {\r\n            this._sash.state = 0 /* Disabled */;\r\n        }\r\n        this._sash.onDidStart(() => this._onSashDragStart());\r\n        this._sash.onDidChange((e) => this._onSashDrag(e));\r\n        this._sash.onDidEnd(() => this._onSashDragEnd());\r\n        this._sash.onDidReset(() => this._onSashReset());\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        const newDisableSash = (enableSplitViewResizing === false);\r\n        if (this._disableSash !== newDisableSash) {\r\n            this._disableSash = newDisableSash;\r\n            this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\r\n        }\r\n    }\r\n    layout(sashRatio = this._sashRatio) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\r\n        const midPoint = Math.floor(0.5 * contentWidth);\r\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\r\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\r\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n        }\r\n        else {\r\n            sashPosition = midPoint;\r\n        }\r\n        if (this._sashPosition !== sashPosition) {\r\n            this._sashPosition = sashPosition;\r\n            this._sash.layout();\r\n        }\r\n        return this._sashPosition;\r\n    }\r\n    _onSashDragStart() {\r\n        this._startSashPosition = this._sashPosition;\r\n    }\r\n    _onSashDrag(e) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\r\n        this._sashRatio = sashPosition / contentWidth;\r\n        this._dataSource.relayoutEditors();\r\n    }\r\n    _onSashDragEnd() {\r\n        this._sash.layout();\r\n    }\r\n    _onSashReset() {\r\n        this._sashRatio = 0.5;\r\n        this._dataSource.relayoutEditors();\r\n        this._sash.layout();\r\n    }\r\n    getVerticalSashTop(sash) {\r\n        return 0;\r\n    }\r\n    getVerticalSashLeft(sash) {\r\n        return this._sashPosition;\r\n    }\r\n    getVerticalSashHeight(sash) {\r\n        return this._dataSource.getHeight();\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        return c.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\r\n                });\r\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\r\n                }\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrDelete(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.originalStartLineNumber) {\r\n                                        startColumn = charChange.originalStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.originalEndLineNumber) {\r\n                                        endColumn = charChange.originalEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\r\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        return null;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\r\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\r\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\r\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\r\n                this._decorationsLeft = layoutInfo.decorationsLeft;\r\n                dataSource.relayoutEditors();\r\n            }\r\n        }));\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        // Nothing to do..\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\r\n        return computer.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add overview zones in the overview ruler\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: DECORATIONS.lineDeleteMargin\r\n                });\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add decorations & overview zones\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    layout() {\r\n        // An editor should not be smaller than 5px\r\n        return Math.max(5, this._decorationsLeft);\r\n    }\r\n}\r\nclass InlineViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        this._originalModel = originalEditor.getModel();\r\n        this._renderIndicators = renderIndicators;\r\n        this._pendingLineChange = [];\r\n        this._pendingViewZones = [];\r\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\r\n    }\r\n    getViewZones() {\r\n        const result = super.getViewZones();\r\n        this._finalize(result);\r\n        return result;\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        const result = document.createElement('div');\r\n        result.className = 'inline-added-margin-view-zone';\r\n        return result;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-added-margin-view-zone';\r\n        return {\r\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n            heightInLines: lineChangeModifiedLength,\r\n            domNode: document.createElement('div'),\r\n            marginDomNode: marginDomNode\r\n        };\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const domNode = document.createElement('div');\r\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\r\n        const viewZone = {\r\n            shouldNotShrink: true,\r\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\r\n            heightInLines: lineChangeOriginalLength,\r\n            minWidthInPx: 0,\r\n            domNode: domNode,\r\n            marginDomNode: marginDomNode,\r\n            diff: {\r\n                originalStartLineNumber: lineChange.originalStartLineNumber,\r\n                originalEndLineNumber: lineChange.originalEndLineNumber,\r\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\r\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\r\n                originalModel: this._originalModel,\r\n                viewLineCounts: null,\r\n            }\r\n        };\r\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null);\r\n        }\r\n        this._pendingLineChange.push(lineChange);\r\n        this._pendingViewZones.push(viewZone);\r\n        return viewZone;\r\n    }\r\n    _finalize(result) {\r\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\r\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\r\n        const fontInfo = modifiedEditorOptions.get(38 /* fontInfo */);\r\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(26 /* disableMonospaceOptimizations */);\r\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(88 /* scrollBeyondLastColumn */);\r\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\r\n        const mightContainRTL = this._originalModel.mightContainRTL();\r\n        const lineHeight = modifiedEditorOptions.get(53 /* lineHeight */);\r\n        const layoutInfo = modifiedEditorOptions.get(124 /* layoutInfo */);\r\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\r\n        const stopRenderingLineAfter = modifiedEditorOptions.get(100 /* stopRenderingLineAfter */);\r\n        const renderWhitespace = modifiedEditorOptions.get(83 /* renderWhitespace */);\r\n        const renderControlCharacters = modifiedEditorOptions.get(77 /* renderControlCharacters */);\r\n        const fontLigatures = modifiedEditorOptions.get(39 /* fontLigatures */);\r\n        const lineBreaks = this._lineBreaksComputer.finalize();\r\n        let lineBreakIndex = 0;\r\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\r\n            const lineChange = this._pendingLineChange[i];\r\n            const viewZone = this._pendingViewZones[i];\r\n            const domNode = viewZone.domNode;\r\n            Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n            const marginDomNode = viewZone.marginDomNode;\r\n            Configuration.applyFontInfoSlow(marginDomNode, fontInfo);\r\n            const decorations = [];\r\n            if (lineChange.charChanges) {\r\n                for (const charChange of lineChange.charChanges) {\r\n                    if (isChangeOrDelete(charChange)) {\r\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\r\n                    }\r\n                }\r\n            }\r\n            const hasCharChanges = (decorations.length > 0);\r\n            const sb = createStringBuilder(10000);\r\n            let maxCharsPerLine = 0;\r\n            let renderedLineCount = 0;\r\n            let viewLineCounts = null;\r\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\r\n                const lineTokens = this._originalModel.getLineTokens(lineNumber);\r\n                const lineContent = lineTokens.getLineContent();\r\n                const lineBreakData = lineBreaks[lineBreakIndex++];\r\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\r\n                if (lineBreakData) {\r\n                    let lastBreakOffset = 0;\r\n                    for (const breakOffset of lineBreakData.breakOffsets) {\r\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\r\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\r\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                        lastBreakOffset = breakOffset;\r\n                    }\r\n                    if (!viewLineCounts) {\r\n                        viewLineCounts = [];\r\n                    }\r\n                    // make sure all lines before this one have an entry in `viewLineCounts`\r\n                    while (viewLineCounts.length < lineIndex) {\r\n                        viewLineCounts[viewLineCounts.length] = 1;\r\n                    }\r\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\r\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\r\n                    const marginDomNode2 = document.createElement('div');\r\n                    marginDomNode2.className = 'line-delete';\r\n                    result.original.push({\r\n                        afterLineNumber: lineNumber,\r\n                        afterColumn: 0,\r\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\r\n                        domNode: createFakeLinesDiv(),\r\n                        marginDomNode: marginDomNode2\r\n                    });\r\n                }\r\n                else {\r\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                }\r\n            }\r\n            maxCharsPerLine += scrollBeyondLastColumn;\r\n            const html = sb.build();\r\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n            domNode.innerHTML = trustedhtml;\r\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\r\n            if (viewLineCounts) {\r\n                // make sure all lines have an entry in `viewLineCounts`\r\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\r\n                while (viewLineCounts.length <= cnt) {\r\n                    viewLineCounts[viewLineCounts.length] = 1;\r\n                }\r\n            }\r\n            viewZone.diff.viewLineCounts = viewLineCounts;\r\n        }\r\n        result.original.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n    }\r\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        if (!hasCharChanges) {\r\n            // No char changes\r\n            sb.appendASCIIString(' char-delete');\r\n        }\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\r\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\r\n        ), sb);\r\n        sb.appendASCIIString('</div>');\r\n        if (this._renderIndicators) {\r\n            const marginElement = document.createElement('div');\r\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\r\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\r\n            marginDomNode.appendChild(marginElement);\r\n        }\r\n        const absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\r\n        return absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\r\n    }\r\n}\r\nfunction validateDiffWordWrap(value, defaultValue) {\r\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\r\n}\r\nfunction isChangeOrInsert(lineChange) {\r\n    return lineChange.modifiedEndLineNumber > 0;\r\n}\r\nfunction isChangeOrDelete(lineChange) {\r\n    return lineChange.originalEndLineNumber > 0;\r\n}\r\nfunction createFakeLinesDiv() {\r\n    const r = document.createElement('div');\r\n    r.className = 'diagonal-fill';\r\n    return r;\r\n}\r\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\r\n    const lineCount = model.getLineCount();\r\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\r\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\r\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const added = theme.getColor(diffInserted);\r\n    if (added) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`);\r\n    }\r\n    const removed = theme.getColor(diffRemoved);\r\n    if (removed) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`);\r\n    }\r\n    const addedOutline = theme.getColor(diffInsertedOutline);\r\n    if (addedOutline) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\r\n    }\r\n    const removedOutline = theme.getColor(diffRemovedOutline);\r\n    if (removedOutline) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\r\n    }\r\n    const shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\r\n    }\r\n    const border = theme.getColor(diffBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\r\n    }\r\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\r\n    if (scrollbarSliderBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\r\n    if (scrollbarSliderHoverBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\r\n    if (scrollbarSliderActiveBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\r\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\r\n});\r\n"]},"metadata":{},"sourceType":"module"}