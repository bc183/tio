{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from './textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\n\nfunction uriGetComparisonKey(resource) {\n  return resource.toString();\n}\n\nvar SingleModelEditStackData = /*#__PURE__*/function () {\n  function SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n    _classCallCheck(this, SingleModelEditStackData);\n\n    this.beforeVersionId = beforeVersionId;\n    this.afterVersionId = afterVersionId;\n    this.beforeEOL = beforeEOL;\n    this.afterEOL = afterEOL;\n    this.beforeCursorState = beforeCursorState;\n    this.afterCursorState = afterCursorState;\n    this.changes = changes;\n  }\n\n  _createClass(SingleModelEditStackData, [{\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      if (textChanges.length > 0) {\n        this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n      }\n\n      this.afterEOL = afterEOL;\n      this.afterVersionId = afterVersionId;\n      this.afterCursorState = afterCursorState;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      var necessarySize = +4 // beforeVersionId\n      + 4 // afterVersionId\n      + 1 // beforeEOL\n      + 1 // afterEOL\n      + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState) + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState) + 4 // change count\n      ;\n\n      var _iterator = _createForOfIteratorHelper(this.changes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          necessarySize += change.writeSize();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var b = new Uint8Array(necessarySize);\n      var offset = 0;\n      buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n      offset += 4;\n      buffer.writeUInt32BE(b, this.afterVersionId, offset);\n      offset += 4;\n      buffer.writeUInt8(b, this.beforeEOL, offset);\n      offset += 1;\n      buffer.writeUInt8(b, this.afterEOL, offset);\n      offset += 1;\n      offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n      offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n      buffer.writeUInt32BE(b, this.changes.length, offset);\n      offset += 4;\n\n      var _iterator2 = _createForOfIteratorHelper(this.changes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _change = _step2.value;\n          offset = _change.write(b, offset);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return b.buffer;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(model, beforeCursorState) {\n      var alternativeVersionId = model.getAlternativeVersionId();\n      var eol = getModelEOL(model);\n      return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n  }, {\n    key: \"_writeSelectionsSize\",\n    value: function _writeSelectionsSize(selections) {\n      return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n  }, {\n    key: \"_writeSelections\",\n    value: function _writeSelections(b, selections, offset) {\n      buffer.writeUInt32BE(b, selections ? selections.length : 0, offset);\n      offset += 4;\n\n      if (selections) {\n        var _iterator3 = _createForOfIteratorHelper(selections),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var selection = _step3.value;\n            buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.positionColumn, offset);\n            offset += 4;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"_readSelections\",\n    value: function _readSelections(b, offset, dest) {\n      var count = buffer.readUInt32BE(b, offset);\n      offset += 4;\n\n      for (var i = 0; i < count; i++) {\n        var selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var selectionStartColumn = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var positionLineNumber = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var positionColumn = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(source) {\n      var b = new Uint8Array(source);\n      var offset = 0;\n      var beforeVersionId = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var afterVersionId = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var beforeEOL = buffer.readUInt8(b, offset);\n      offset += 1;\n      var afterEOL = buffer.readUInt8(b, offset);\n      offset += 1;\n      var beforeCursorState = [];\n      offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n      var afterCursorState = [];\n      offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n      var changeCount = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var changes = [];\n\n      for (var i = 0; i < changeCount; i++) {\n        offset = TextChange.read(b, offset, changes);\n      }\n\n      return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n  }]);\n\n  return SingleModelEditStackData;\n}();\n\nexport var SingleModelEditStackElement = /*#__PURE__*/function () {\n  function SingleModelEditStackElement(model, beforeCursorState) {\n    _classCallCheck(this, SingleModelEditStackElement);\n\n    this.model = model;\n    this._data = SingleModelEditStackData.create(model, beforeCursorState);\n  }\n\n  _createClass(SingleModelEditStackElement, [{\n    key: \"toString\",\n    value: function toString() {\n      var data = this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data);\n      return data.changes.map(function (change) {\n        return change.toString();\n      }).join(', ');\n    }\n  }, {\n    key: \"matchesResource\",\n    value: function matchesResource(resource) {\n      var uri = URI.isUri(this.model) ? this.model : this.model.uri;\n      return uri.toString() === resource.toString();\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      this.model = model;\n    }\n  }, {\n    key: \"canAppend\",\n    value: function canAppend(model) {\n      return this.model === model && this._data instanceof SingleModelEditStackData;\n    }\n  }, {\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!(this._data instanceof SingleModelEditStackData)) {\n        this._data = SingleModelEditStackData.deserialize(this._data);\n      }\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      if (URI.isUri(this.model)) {\n        // don't have a model\n        throw new Error(\"Invalid SingleModelEditStackElement\");\n      }\n\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n\n      var data = SingleModelEditStackData.deserialize(this._data);\n\n      this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      if (URI.isUri(this.model)) {\n        // don't have a model\n        throw new Error(\"Invalid SingleModelEditStackElement\");\n      }\n\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n\n      var data = SingleModelEditStackData.deserialize(this._data);\n\n      this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n  }, {\n    key: \"heapSize\",\n    value: function heapSize() {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n\n      return this._data.byteLength + 168\n      /*heap overhead*/\n      ;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 0\n      /* Resource */\n      ;\n    }\n  }, {\n    key: \"resource\",\n    get: function get() {\n      if (URI.isUri(this.model)) {\n        return this.model;\n      }\n\n      return this.model.uri;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return nls.localize('edit', \"Typing\");\n    }\n  }]);\n\n  return SingleModelEditStackElement;\n}();\nexport var MultiModelEditStackElement = /*#__PURE__*/function () {\n  function MultiModelEditStackElement(label, editStackElements) {\n    _classCallCheck(this, MultiModelEditStackElement);\n\n    this.type = 1\n    /* Workspace */\n    ;\n    this.label = label;\n    this._isOpen = true;\n    this._editStackElementsArr = editStackElements.slice(0);\n    this._editStackElementsMap = new Map();\n\n    var _iterator4 = _createForOfIteratorHelper(this._editStackElementsArr),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var editStackElement = _step4.value;\n        var key = uriGetComparisonKey(editStackElement.resource);\n\n        this._editStackElementsMap.set(key, editStackElement);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    this._delegate = null;\n  }\n\n  _createClass(MultiModelEditStackElement, [{\n    key: \"prepareUndoRedo\",\n    value: function prepareUndoRedo() {\n      if (this._delegate) {\n        return this._delegate.prepareUndoRedo(this);\n      }\n    }\n  }, {\n    key: \"matchesResource\",\n    value: function matchesResource(resource) {\n      var key = uriGetComparisonKey(resource);\n      return this._editStackElementsMap.has(key);\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      var key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n\n      if (this._editStackElementsMap.has(key)) {\n        this._editStackElementsMap.get(key).setModel(model);\n      }\n    }\n  }, {\n    key: \"canAppend\",\n    value: function canAppend(model) {\n      if (!this._isOpen) {\n        return false;\n      }\n\n      var key = uriGetComparisonKey(model.uri);\n\n      if (this._editStackElementsMap.has(key)) {\n        var editStackElement = this._editStackElementsMap.get(key);\n\n        return editStackElement.canAppend(model);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      var key = uriGetComparisonKey(model.uri);\n\n      var editStackElement = this._editStackElementsMap.get(key);\n\n      editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._isOpen = false;\n    }\n  }, {\n    key: \"open\",\n    value: function open() {// cannot reopen\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      this._isOpen = false;\n\n      var _iterator5 = _createForOfIteratorHelper(this._editStackElementsArr),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var editStackElement = _step5.value;\n          editStackElement.undo();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      var _iterator6 = _createForOfIteratorHelper(this._editStackElementsArr),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var editStackElement = _step6.value;\n          editStackElement.redo();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"heapSize\",\n    value: function heapSize(resource) {\n      var key = uriGetComparisonKey(resource);\n\n      if (this._editStackElementsMap.has(key)) {\n        var editStackElement = this._editStackElementsMap.get(key);\n\n        return editStackElement.heapSize();\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"split\",\n    value: function split() {\n      return this._editStackElementsArr;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var result = [];\n\n      var _iterator7 = _createForOfIteratorHelper(this._editStackElementsArr),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var editStackElement = _step7.value;\n          result.push(\"\".concat(basename(editStackElement.resource), \": \").concat(editStackElement));\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return \"{\".concat(result.join(', '), \"}\");\n    }\n  }, {\n    key: \"resources\",\n    get: function get() {\n      return this._editStackElementsArr.map(function (editStackElement) {\n        return editStackElement.resource;\n      });\n    }\n  }]);\n\n  return MultiModelEditStackElement;\n}();\n\nfunction getModelEOL(model) {\n  var eol = model.getEOL();\n\n  if (eol === '\\n') {\n    return 0\n    /* LF */\n    ;\n  } else {\n      return 1\n      /* CRLF */\n      ;\n    }\n}\n\nexport function isEditStackElement(element) {\n  if (!element) {\n    return false;\n  }\n\n  return element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement;\n}\nexport var EditStack = /*#__PURE__*/function () {\n  function EditStack(model, undoRedoService) {\n    _classCallCheck(this, EditStack);\n\n    this._model = model;\n    this._undoRedoService = undoRedoService;\n  }\n\n  _createClass(EditStack, [{\n    key: \"pushStackElement\",\n    value: function pushStackElement() {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n\n      if (isEditStackElement(lastElement)) {\n        lastElement.close();\n      }\n    }\n  }, {\n    key: \"popStackElement\",\n    value: function popStackElement() {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n\n      if (isEditStackElement(lastElement)) {\n        lastElement.open();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._undoRedoService.removeElements(this._model.uri);\n    }\n  }, {\n    key: \"_getOrCreateEditStackElement\",\n    value: function _getOrCreateEditStackElement(beforeCursorState) {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n\n      if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n        return lastElement;\n      }\n\n      var newElement = new SingleModelEditStackElement(this._model, beforeCursorState);\n\n      this._undoRedoService.pushElement(newElement);\n\n      return newElement;\n    }\n  }, {\n    key: \"pushEOL\",\n    value: function pushEOL(eol) {\n      var editStackElement = this._getOrCreateEditStackElement(null);\n\n      this._model.setEOL(eol);\n\n      editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n  }, {\n    key: \"pushEditOperation\",\n    value: function pushEditOperation(beforeCursorState, editOperations, cursorStateComputer) {\n      var editStackElement = this._getOrCreateEditStackElement(beforeCursorState);\n\n      var inverseEditOperations = this._model.applyEdits(editOperations, true);\n\n      var afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n\n      var textChanges = inverseEditOperations.map(function (op, index) {\n        return {\n          index: index,\n          textChange: op.textChange\n        };\n      });\n      textChanges.sort(function (a, b) {\n        if (a.textChange.oldPosition === b.textChange.oldPosition) {\n          return a.index - b.index;\n        }\n\n        return a.textChange.oldPosition - b.textChange.oldPosition;\n      });\n      editStackElement.append(this._model, textChanges.map(function (op) {\n        return op.textChange;\n      }), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n      return afterCursorState;\n    }\n  }], [{\n    key: \"_computeCursorState\",\n    value: function _computeCursorState(cursorStateComputer, inverseEditOperations) {\n      try {\n        return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n      } catch (e) {\n        onUnexpectedError(e);\n        return null;\n      }\n    }\n  }]);\n\n  return EditStack;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js"],"names":["nls","onUnexpectedError","Selection","URI","TextChange","compressConsecutiveTextChanges","buffer","basename","uriGetComparisonKey","resource","toString","SingleModelEditStackData","beforeVersionId","afterVersionId","beforeEOL","afterEOL","beforeCursorState","afterCursorState","changes","model","textChanges","length","necessarySize","_writeSelectionsSize","change","writeSize","b","Uint8Array","offset","writeUInt32BE","writeUInt8","_writeSelections","write","alternativeVersionId","getAlternativeVersionId","eol","getModelEOL","selections","selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","dest","count","readUInt32BE","i","push","source","readUInt8","_readSelections","changeCount","read","SingleModelEditStackElement","_data","create","data","deserialize","map","join","uri","isUri","append","serialize","Error","_applyUndo","_applyRedo","byteLength","localize","MultiModelEditStackElement","label","editStackElements","type","_isOpen","_editStackElementsArr","slice","_editStackElementsMap","Map","editStackElement","key","set","_delegate","prepareUndoRedo","has","get","setModel","canAppend","undo","redo","heapSize","result","getEOL","isEditStackElement","element","EditStack","undoRedoService","_model","_undoRedoService","lastElement","getLastElement","close","open","removeElements","newElement","pushElement","_getOrCreateEditStackElement","setEOL","editOperations","cursorStateComputer","inverseEditOperations","applyEdits","_computeCursorState","op","index","textChange","sort","a","oldPosition","e"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TextChange, compressConsecutiveTextChanges } from './textChange.js';\r\nimport * as buffer from '../../../base/common/buffer.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nfunction uriGetComparisonKey(resource) {\r\n    return resource.toString();\r\n}\r\nclass SingleModelEditStackData {\r\n    constructor(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\r\n        this.beforeVersionId = beforeVersionId;\r\n        this.afterVersionId = afterVersionId;\r\n        this.beforeEOL = beforeEOL;\r\n        this.afterEOL = afterEOL;\r\n        this.beforeCursorState = beforeCursorState;\r\n        this.afterCursorState = afterCursorState;\r\n        this.changes = changes;\r\n    }\r\n    static create(model, beforeCursorState) {\r\n        const alternativeVersionId = model.getAlternativeVersionId();\r\n        const eol = getModelEOL(model);\r\n        return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\r\n    }\r\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\r\n        if (textChanges.length > 0) {\r\n            this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\r\n        }\r\n        this.afterEOL = afterEOL;\r\n        this.afterVersionId = afterVersionId;\r\n        this.afterCursorState = afterCursorState;\r\n    }\r\n    static _writeSelectionsSize(selections) {\r\n        return 4 + 4 * 4 * (selections ? selections.length : 0);\r\n    }\r\n    static _writeSelections(b, selections, offset) {\r\n        buffer.writeUInt32BE(b, (selections ? selections.length : 0), offset);\r\n        offset += 4;\r\n        if (selections) {\r\n            for (const selection of selections) {\r\n                buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\r\n                offset += 4;\r\n                buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\r\n                offset += 4;\r\n                buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\r\n                offset += 4;\r\n                buffer.writeUInt32BE(b, selection.positionColumn, offset);\r\n                offset += 4;\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    static _readSelections(b, offset, dest) {\r\n        const count = buffer.readUInt32BE(b, offset);\r\n        offset += 4;\r\n        for (let i = 0; i < count; i++) {\r\n            const selectionStartLineNumber = buffer.readUInt32BE(b, offset);\r\n            offset += 4;\r\n            const selectionStartColumn = buffer.readUInt32BE(b, offset);\r\n            offset += 4;\r\n            const positionLineNumber = buffer.readUInt32BE(b, offset);\r\n            offset += 4;\r\n            const positionColumn = buffer.readUInt32BE(b, offset);\r\n            offset += 4;\r\n            dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\r\n        }\r\n        return offset;\r\n    }\r\n    serialize() {\r\n        let necessarySize = (+4 // beforeVersionId\r\n            + 4 // afterVersionId\r\n            + 1 // beforeEOL\r\n            + 1 // afterEOL\r\n            + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState)\r\n            + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState)\r\n            + 4 // change count\r\n        );\r\n        for (const change of this.changes) {\r\n            necessarySize += change.writeSize();\r\n        }\r\n        const b = new Uint8Array(necessarySize);\r\n        let offset = 0;\r\n        buffer.writeUInt32BE(b, this.beforeVersionId, offset);\r\n        offset += 4;\r\n        buffer.writeUInt32BE(b, this.afterVersionId, offset);\r\n        offset += 4;\r\n        buffer.writeUInt8(b, this.beforeEOL, offset);\r\n        offset += 1;\r\n        buffer.writeUInt8(b, this.afterEOL, offset);\r\n        offset += 1;\r\n        offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\r\n        offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\r\n        buffer.writeUInt32BE(b, this.changes.length, offset);\r\n        offset += 4;\r\n        for (const change of this.changes) {\r\n            offset = change.write(b, offset);\r\n        }\r\n        return b.buffer;\r\n    }\r\n    static deserialize(source) {\r\n        const b = new Uint8Array(source);\r\n        let offset = 0;\r\n        const beforeVersionId = buffer.readUInt32BE(b, offset);\r\n        offset += 4;\r\n        const afterVersionId = buffer.readUInt32BE(b, offset);\r\n        offset += 4;\r\n        const beforeEOL = buffer.readUInt8(b, offset);\r\n        offset += 1;\r\n        const afterEOL = buffer.readUInt8(b, offset);\r\n        offset += 1;\r\n        const beforeCursorState = [];\r\n        offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\r\n        const afterCursorState = [];\r\n        offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\r\n        const changeCount = buffer.readUInt32BE(b, offset);\r\n        offset += 4;\r\n        const changes = [];\r\n        for (let i = 0; i < changeCount; i++) {\r\n            offset = TextChange.read(b, offset, changes);\r\n        }\r\n        return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\r\n    }\r\n}\r\nexport class SingleModelEditStackElement {\r\n    constructor(model, beforeCursorState) {\r\n        this.model = model;\r\n        this._data = SingleModelEditStackData.create(model, beforeCursorState);\r\n    }\r\n    get type() {\r\n        return 0 /* Resource */;\r\n    }\r\n    get resource() {\r\n        if (URI.isUri(this.model)) {\r\n            return this.model;\r\n        }\r\n        return this.model.uri;\r\n    }\r\n    get label() {\r\n        return nls.localize('edit', \"Typing\");\r\n    }\r\n    toString() {\r\n        const data = (this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data));\r\n        return data.changes.map(change => change.toString()).join(', ');\r\n    }\r\n    matchesResource(resource) {\r\n        const uri = (URI.isUri(this.model) ? this.model : this.model.uri);\r\n        return (uri.toString() === resource.toString());\r\n    }\r\n    setModel(model) {\r\n        this.model = model;\r\n    }\r\n    canAppend(model) {\r\n        return (this.model === model && this._data instanceof SingleModelEditStackData);\r\n    }\r\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\r\n        if (this._data instanceof SingleModelEditStackData) {\r\n            this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\r\n        }\r\n    }\r\n    close() {\r\n        if (this._data instanceof SingleModelEditStackData) {\r\n            this._data = this._data.serialize();\r\n        }\r\n    }\r\n    open() {\r\n        if (!(this._data instanceof SingleModelEditStackData)) {\r\n            this._data = SingleModelEditStackData.deserialize(this._data);\r\n        }\r\n    }\r\n    undo() {\r\n        if (URI.isUri(this.model)) {\r\n            // don't have a model\r\n            throw new Error(`Invalid SingleModelEditStackElement`);\r\n        }\r\n        if (this._data instanceof SingleModelEditStackData) {\r\n            this._data = this._data.serialize();\r\n        }\r\n        const data = SingleModelEditStackData.deserialize(this._data);\r\n        this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\r\n    }\r\n    redo() {\r\n        if (URI.isUri(this.model)) {\r\n            // don't have a model\r\n            throw new Error(`Invalid SingleModelEditStackElement`);\r\n        }\r\n        if (this._data instanceof SingleModelEditStackData) {\r\n            this._data = this._data.serialize();\r\n        }\r\n        const data = SingleModelEditStackData.deserialize(this._data);\r\n        this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\r\n    }\r\n    heapSize() {\r\n        if (this._data instanceof SingleModelEditStackData) {\r\n            this._data = this._data.serialize();\r\n        }\r\n        return this._data.byteLength + 168 /*heap overhead*/;\r\n    }\r\n}\r\nexport class MultiModelEditStackElement {\r\n    constructor(label, editStackElements) {\r\n        this.type = 1 /* Workspace */;\r\n        this.label = label;\r\n        this._isOpen = true;\r\n        this._editStackElementsArr = editStackElements.slice(0);\r\n        this._editStackElementsMap = new Map();\r\n        for (const editStackElement of this._editStackElementsArr) {\r\n            const key = uriGetComparisonKey(editStackElement.resource);\r\n            this._editStackElementsMap.set(key, editStackElement);\r\n        }\r\n        this._delegate = null;\r\n    }\r\n    get resources() {\r\n        return this._editStackElementsArr.map(editStackElement => editStackElement.resource);\r\n    }\r\n    prepareUndoRedo() {\r\n        if (this._delegate) {\r\n            return this._delegate.prepareUndoRedo(this);\r\n        }\r\n    }\r\n    matchesResource(resource) {\r\n        const key = uriGetComparisonKey(resource);\r\n        return (this._editStackElementsMap.has(key));\r\n    }\r\n    setModel(model) {\r\n        const key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\r\n        if (this._editStackElementsMap.has(key)) {\r\n            this._editStackElementsMap.get(key).setModel(model);\r\n        }\r\n    }\r\n    canAppend(model) {\r\n        if (!this._isOpen) {\r\n            return false;\r\n        }\r\n        const key = uriGetComparisonKey(model.uri);\r\n        if (this._editStackElementsMap.has(key)) {\r\n            const editStackElement = this._editStackElementsMap.get(key);\r\n            return editStackElement.canAppend(model);\r\n        }\r\n        return false;\r\n    }\r\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\r\n        const key = uriGetComparisonKey(model.uri);\r\n        const editStackElement = this._editStackElementsMap.get(key);\r\n        editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\r\n    }\r\n    close() {\r\n        this._isOpen = false;\r\n    }\r\n    open() {\r\n        // cannot reopen\r\n    }\r\n    undo() {\r\n        this._isOpen = false;\r\n        for (const editStackElement of this._editStackElementsArr) {\r\n            editStackElement.undo();\r\n        }\r\n    }\r\n    redo() {\r\n        for (const editStackElement of this._editStackElementsArr) {\r\n            editStackElement.redo();\r\n        }\r\n    }\r\n    heapSize(resource) {\r\n        const key = uriGetComparisonKey(resource);\r\n        if (this._editStackElementsMap.has(key)) {\r\n            const editStackElement = this._editStackElementsMap.get(key);\r\n            return editStackElement.heapSize();\r\n        }\r\n        return 0;\r\n    }\r\n    split() {\r\n        return this._editStackElementsArr;\r\n    }\r\n    toString() {\r\n        let result = [];\r\n        for (const editStackElement of this._editStackElementsArr) {\r\n            result.push(`${basename(editStackElement.resource)}: ${editStackElement}`);\r\n        }\r\n        return `{${result.join(', ')}}`;\r\n    }\r\n}\r\nfunction getModelEOL(model) {\r\n    const eol = model.getEOL();\r\n    if (eol === '\\n') {\r\n        return 0 /* LF */;\r\n    }\r\n    else {\r\n        return 1 /* CRLF */;\r\n    }\r\n}\r\nexport function isEditStackElement(element) {\r\n    if (!element) {\r\n        return false;\r\n    }\r\n    return ((element instanceof SingleModelEditStackElement) || (element instanceof MultiModelEditStackElement));\r\n}\r\nexport class EditStack {\r\n    constructor(model, undoRedoService) {\r\n        this._model = model;\r\n        this._undoRedoService = undoRedoService;\r\n    }\r\n    pushStackElement() {\r\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\r\n        if (isEditStackElement(lastElement)) {\r\n            lastElement.close();\r\n        }\r\n    }\r\n    popStackElement() {\r\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\r\n        if (isEditStackElement(lastElement)) {\r\n            lastElement.open();\r\n        }\r\n    }\r\n    clear() {\r\n        this._undoRedoService.removeElements(this._model.uri);\r\n    }\r\n    _getOrCreateEditStackElement(beforeCursorState) {\r\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\r\n        if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\r\n            return lastElement;\r\n        }\r\n        const newElement = new SingleModelEditStackElement(this._model, beforeCursorState);\r\n        this._undoRedoService.pushElement(newElement);\r\n        return newElement;\r\n    }\r\n    pushEOL(eol) {\r\n        const editStackElement = this._getOrCreateEditStackElement(null);\r\n        this._model.setEOL(eol);\r\n        editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\r\n    }\r\n    pushEditOperation(beforeCursorState, editOperations, cursorStateComputer) {\r\n        const editStackElement = this._getOrCreateEditStackElement(beforeCursorState);\r\n        const inverseEditOperations = this._model.applyEdits(editOperations, true);\r\n        const afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\r\n        const textChanges = inverseEditOperations.map((op, index) => ({ index: index, textChange: op.textChange }));\r\n        textChanges.sort((a, b) => {\r\n            if (a.textChange.oldPosition === b.textChange.oldPosition) {\r\n                return a.index - b.index;\r\n            }\r\n            return a.textChange.oldPosition - b.textChange.oldPosition;\r\n        });\r\n        editStackElement.append(this._model, textChanges.map(op => op.textChange), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\r\n        return afterCursorState;\r\n    }\r\n    static _computeCursorState(cursorStateComputer, inverseEditOperations) {\r\n        try {\r\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\r\n        }\r\n        catch (e) {\r\n            onUnexpectedError(e);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}