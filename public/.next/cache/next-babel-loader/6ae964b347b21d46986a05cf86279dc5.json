{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _wrapNativeSuper from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var ListError = /*#__PURE__*/function (_Error) {\n  _inherits(ListError, _Error);\n\n  var _super = _createSuper(ListError);\n\n  function ListError(user, message) {\n    _classCallCheck(this, ListError);\n\n    return _super.call(this, \"ListError [\".concat(user, \"] \").concat(message));\n  }\n\n  return ListError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/list/list.js"],"names":["ListError","user","message","Error"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,SAAb;AAAA;;AAAA;;AACI,qBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,kDACHD,IADG,eACMC,OADN;AAE1B;;AAHL;AAAA,iCAA+BC,KAA/B","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class ListError extends Error {\r\n    constructor(user, message) {\r\n        super(`ListError [${user}] ${message}`);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}