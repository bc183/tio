{"ast":null,"code":"import _regeneratorRuntime from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/regenerator\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { DocumentSemanticTokensProviderRegistry, DocumentRangeSemanticTokensProviderRegistry } from '../modes.js';\nimport { IModelService } from './modelService.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { encodeSemanticTokensDto } from './semanticTokensDto.js';\nimport { Range } from '../core/range.js';\nexport function isSemanticTokens(v) {\n  return v && !!v.data;\n}\nexport function isSemanticTokensEdits(v) {\n  return v && Array.isArray(v.edits);\n}\nexport function getDocumentSemanticTokens(model, lastResultId, token) {\n  var provider = _getDocumentSemanticTokensProvider(model);\n\n  if (!provider) {\n    return null;\n  }\n\n  return {\n    provider: provider,\n    request: Promise.resolve(provider.provideDocumentSemanticTokens(model, lastResultId, token))\n  };\n}\n\nfunction _getDocumentSemanticTokensProvider(model) {\n  var result = DocumentSemanticTokensProviderRegistry.ordered(model);\n  return result.length > 0 ? result[0] : null;\n}\n\nexport function getDocumentRangeSemanticTokensProvider(model) {\n  var result = DocumentRangeSemanticTokensProviderRegistry.ordered(model);\n  return result.length > 0 ? result[0] : null;\n}\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', function (accessor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var uri, model, provider;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = args[0];\n            assertType(uri instanceof URI);\n            model = accessor.get(IModelService).getModel(uri);\n\n            if (model) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = _getDocumentSemanticTokensProvider(model);\n\n            if (provider) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri));\n\n          case 8:\n            return _context.abrupt(\"return\", provider.getLegend());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n});\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', function (accessor) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var uri, model, r, provider, request, result, buff;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uri = args[0];\n            assertType(uri instanceof URI);\n            model = accessor.get(IModelService).getModel(uri);\n\n            if (model) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", undefined);\n\n          case 5:\n            r = getDocumentSemanticTokens(model, null, CancellationToken.None);\n\n            if (r) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange()));\n\n          case 8:\n            provider = r.provider, request = r.request;\n            _context2.prev = 9;\n            _context2.next = 12;\n            return request;\n\n          case 12:\n            result = _context2.sent;\n            _context2.next = 19;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](9);\n            onUnexpectedExternalError(_context2.t0);\n            return _context2.abrupt(\"return\", undefined);\n\n          case 19:\n            if (!(!result || !isSemanticTokens(result))) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", undefined);\n\n          case 21:\n            buff = encodeSemanticTokensDto({\n              id: 0,\n              type: 'full',\n              data: result.data\n            });\n\n            if (result.resultId) {\n              provider.releaseDocumentSemanticTokens(result.resultId);\n            }\n\n            return _context2.abrupt(\"return\", buff);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[9, 15]]);\n  }));\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', function (accessor) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var uri, model, provider;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            uri = args[0];\n            assertType(uri instanceof URI);\n            model = accessor.get(IModelService).getModel(uri);\n\n            if (model) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = getDocumentRangeSemanticTokensProvider(model);\n\n            if (provider) {\n              _context3.next = 8;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", undefined);\n\n          case 8:\n            return _context3.abrupt(\"return\", provider.getLegend());\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', function (accessor) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var uri, range, model, provider, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            uri = args[0], range = args[1];\n            assertType(uri instanceof URI);\n            assertType(Range.isIRange(range));\n            model = accessor.get(IModelService).getModel(uri);\n\n            if (model) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", undefined);\n\n          case 6:\n            provider = getDocumentRangeSemanticTokensProvider(model);\n\n            if (provider) {\n              _context4.next = 9;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", undefined);\n\n          case 9:\n            _context4.prev = 9;\n            _context4.next = 12;\n            return provider.provideDocumentRangeSemanticTokens(model, Range.lift(range), CancellationToken.None);\n\n          case 12:\n            result = _context4.sent;\n            _context4.next = 19;\n            break;\n\n          case 15:\n            _context4.prev = 15;\n            _context4.t0 = _context4[\"catch\"](9);\n            onUnexpectedExternalError(_context4.t0);\n            return _context4.abrupt(\"return\", undefined);\n\n          case 19:\n            if (!(!result || !isSemanticTokens(result))) {\n              _context4.next = 21;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", undefined);\n\n          case 21:\n            return _context4.abrupt(\"return\", encodeSemanticTokensDto({\n              id: 0,\n              type: 'full',\n              data: result.data\n            }));\n\n          case 22:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[9, 15]]);\n  }));\n});","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/services/getSemanticTokens.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","CancellationToken","onUnexpectedExternalError","URI","DocumentSemanticTokensProviderRegistry","DocumentRangeSemanticTokensProviderRegistry","IModelService","CommandsRegistry","ICommandService","assertType","encodeSemanticTokensDto","Range","isSemanticTokens","v","data","isSemanticTokensEdits","Array","isArray","edits","getDocumentSemanticTokens","model","lastResultId","token","provider","_getDocumentSemanticTokensProvider","request","provideDocumentSemanticTokens","ordered","length","getDocumentRangeSemanticTokensProvider","registerCommand","accessor","args","uri","get","getModel","undefined","executeCommand","getLegend","r","None","getFullModelRange","buff","id","type","resultId","releaseDocumentSemanticTokens","range","isIRange","provideDocumentRangeSemanticTokens","lift"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { DocumentSemanticTokensProviderRegistry, DocumentRangeSemanticTokensProviderRegistry } from '../modes.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { encodeSemanticTokensDto } from './semanticTokensDto.js';\r\nimport { Range } from '../core/range.js';\r\nexport function isSemanticTokens(v) {\r\n    return v && !!(v.data);\r\n}\r\nexport function isSemanticTokensEdits(v) {\r\n    return v && Array.isArray(v.edits);\r\n}\r\nexport function getDocumentSemanticTokens(model, lastResultId, token) {\r\n    const provider = _getDocumentSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        return null;\r\n    }\r\n    return {\r\n        provider: provider,\r\n        request: Promise.resolve(provider.provideDocumentSemanticTokens(model, lastResultId, token))\r\n    };\r\n}\r\nfunction _getDocumentSemanticTokensProvider(model) {\r\n    const result = DocumentSemanticTokensProviderRegistry.ordered(model);\r\n    return (result.length > 0 ? result[0] : null);\r\n}\r\nexport function getDocumentRangeSemanticTokensProvider(model) {\r\n    const result = DocumentRangeSemanticTokensProviderRegistry.ordered(model);\r\n    return (result.length > 0 ? result[0] : null);\r\n}\r\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = _getDocumentSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        // there is no provider => fall back to a document range semantic tokens provider\r\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri);\r\n    }\r\n    return provider.getLegend();\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const r = getDocumentSemanticTokens(model, null, CancellationToken.None);\r\n    if (!r) {\r\n        // there is no provider => fall back to a document range semantic tokens provider\r\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange());\r\n    }\r\n    const { provider, request } = r;\r\n    let result;\r\n    try {\r\n        result = yield request;\r\n    }\r\n    catch (err) {\r\n        onUnexpectedExternalError(err);\r\n        return undefined;\r\n    }\r\n    if (!result || !isSemanticTokens(result)) {\r\n        return undefined;\r\n    }\r\n    const buff = encodeSemanticTokensDto({\r\n        id: 0,\r\n        type: 'full',\r\n        data: result.data\r\n    });\r\n    if (result.resultId) {\r\n        provider.releaseDocumentSemanticTokens(result.resultId);\r\n    }\r\n    return buff;\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = getDocumentRangeSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        return undefined;\r\n    }\r\n    return provider.getLegend();\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(uri instanceof URI);\r\n    assertType(Range.isIRange(range));\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = getDocumentRangeSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        // there is no provider\r\n        return undefined;\r\n    }\r\n    let result;\r\n    try {\r\n        result = yield provider.provideDocumentRangeSemanticTokens(model, Range.lift(range), CancellationToken.None);\r\n    }\r\n    catch (err) {\r\n        onUnexpectedExternalError(err);\r\n        return undefined;\r\n    }\r\n    if (!result || !isSemanticTokens(result)) {\r\n        return undefined;\r\n    }\r\n    return encodeSemanticTokensDto({\r\n        id: 0,\r\n        type: 'full',\r\n        data: result.data\r\n    });\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}