{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport var WordCharacterClassifier = /*#__PURE__*/function (_CharacterClassifier) {\n  _inherits(WordCharacterClassifier, _CharacterClassifier);\n\n  var _super = _createSuper(WordCharacterClassifier);\n\n  function WordCharacterClassifier(wordSeparators) {\n    var _this;\n\n    _classCallCheck(this, WordCharacterClassifier);\n\n    _this = _super.call(this, 0\n    /* Regular */\n    );\n\n    for (var i = 0, len = wordSeparators.length; i < len; i++) {\n      _this.set(wordSeparators.charCodeAt(i), 2\n      /* WordSeparator */\n      );\n    }\n\n    _this.set(32\n    /* Space */\n    , 1\n    /* Whitespace */\n    );\n\n    _this.set(9\n    /* Tab */\n    , 1\n    /* Whitespace */\n    );\n\n    return _this;\n  }\n\n  return WordCharacterClassifier;\n}(CharacterClassifier);\n\nfunction once(computeFn) {\n  var cache = {}; // TODO@Alex unbounded cache\n\n  return function (input) {\n    if (!cache.hasOwnProperty(input)) {\n      cache[input] = computeFn(input);\n    }\n\n    return cache[input];\n  };\n}\n\nexport var getMapForWordSeparators = once(function (input) {\n  return new WordCharacterClassifier(input);\n});","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/controller/wordCharacterClassifier.js"],"names":["CharacterClassifier","WordCharacterClassifier","wordSeparators","i","len","length","set","charCodeAt","once","computeFn","cache","input","hasOwnProperty","getMapForWordSeparators"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,mBAAT,QAAoC,gCAApC;AACA,WAAaC,uBAAb;AAAA;;AAAA;;AACI,mCAAYC,cAAZ,EAA4B;AAAA;;AAAA;;AACxB,8BAAM;AAAE;AAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,cAAc,CAACG,MAArC,EAA6CF,CAAC,GAAGC,GAAjD,EAAsDD,CAAC,EAAvD,EAA2D;AACvD,YAAKG,GAAL,CAASJ,cAAc,CAACK,UAAf,CAA0BJ,CAA1B,CAAT,EAAuC;AAAE;AAAzC;AACH;;AACD,UAAKG,GAAL,CAAS;AAAG;AAAZ,MAAyB;AAAE;AAA3B;;AACA,UAAKA,GAAL,CAAS;AAAE;AAAX,MAAsB;AAAE;AAAxB;;AANwB;AAO3B;;AARL;AAAA,EAA6CN,mBAA7C;;AAUA,SAASQ,IAAT,CAAcC,SAAd,EAAyB;AACrB,MAAIC,KAAK,GAAG,EAAZ,CADqB,CACL;;AAChB,SAAO,UAACC,KAAD,EAAW;AACd,QAAI,CAACD,KAAK,CAACE,cAAN,CAAqBD,KAArB,CAAL,EAAkC;AAC9BD,MAAAA,KAAK,CAACC,KAAD,CAAL,GAAeF,SAAS,CAACE,KAAD,CAAxB;AACH;;AACD,WAAOD,KAAK,CAACC,KAAD,CAAZ;AACH,GALD;AAMH;;AACD,OAAO,IAAME,uBAAuB,GAAGL,IAAI,CAAC,UAACG,KAAD;AAAA,SAAW,IAAIV,uBAAJ,CAA4BU,KAA5B,CAAX;AAAA,CAAD,CAApC","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CharacterClassifier } from '../core/characterClassifier.js';\r\nexport class WordCharacterClassifier extends CharacterClassifier {\r\n    constructor(wordSeparators) {\r\n        super(0 /* Regular */);\r\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\r\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordSeparator */);\r\n        }\r\n        this.set(32 /* Space */, 1 /* Whitespace */);\r\n        this.set(9 /* Tab */, 1 /* Whitespace */);\r\n    }\r\n}\r\nfunction once(computeFn) {\r\n    let cache = {}; // TODO@Alex unbounded cache\r\n    return (input) => {\r\n        if (!cache.hasOwnProperty(input)) {\r\n            cache[input] = computeFn(input);\r\n        }\r\n        return cache[input];\r\n    };\r\n}\r\nexport const getMapForWordSeparators = once((input) => new WordCharacterClassifier(input));\r\n"]},"metadata":{},"sourceType":"module"}