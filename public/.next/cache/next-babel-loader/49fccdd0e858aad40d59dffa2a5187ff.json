{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { PointerHandler } from '../controller/pointerHandler.js';\nimport { TextAreaHandler } from '../controller/textAreaHandler.js';\nimport { ViewController } from './viewController.js';\nimport { ViewUserInputEvents } from './viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './viewOverlays.js';\nimport { PartFingerprints } from './viewPart.js';\nimport { ViewContentWidgets } from '../viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from '../viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from '../viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from '../viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginOverlay } from '../viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from '../viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from '../viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from '../viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from '../viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from '../viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from '../viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from '../viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from '../viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from '../viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from '../viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from '../viewParts/selections/selections.js';\nimport { ViewCursors } from '../viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from '../viewParts/viewZones/viewZones.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { RenderingContext } from '../../common/view/renderingContext.js';\nimport { ViewContext } from '../../common/view/viewContext.js';\nimport { ViewportData } from '../../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from '../controller/mouseTarget.js';\nexport var View = /*#__PURE__*/function (_ViewEventHandler) {\n  _inherits(View, _ViewEventHandler);\n\n  var _super = _createSuper(View);\n\n  function View(commandDelegate, configuration, themeService, model, userInputEvents, overflowWidgetsDomNode) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this);\n    _this._selections = [new Selection(1, 1, 1, 1)];\n    _this._renderAnimationFrame = null;\n    var viewController = new ViewController(configuration, model, userInputEvents, commandDelegate); // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n\n    _this._context = new ViewContext(configuration, themeService.getColorTheme(), model);\n    _this._configPixelRatio = _this._configPixelRatio = _this._context.configuration.options.get(122\n    /* pixelRatio */\n    ); // Ensure the view is the first event handler in order to update the layout\n\n    _this._context.addEventHandler(_assertThisInitialized(_this));\n\n    _this._register(themeService.onDidColorThemeChange(function (theme) {\n      _this._context.theme.update(theme);\n\n      _this._context.model.onDidColorThemeChange();\n\n      _this.render(true, false);\n    }));\n\n    _this._viewParts = []; // Keyboard handler\n\n    _this._textAreaHandler = new TextAreaHandler(_this._context, viewController, _this._createTextAreaHandlerHelper());\n\n    _this._viewParts.push(_this._textAreaHandler); // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n\n\n    _this._linesContent = createFastDomNode(document.createElement('div'));\n\n    _this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n\n    _this._linesContent.setPosition('absolute');\n\n    _this.domNode = createFastDomNode(document.createElement('div'));\n\n    _this.domNode.setClassName(_this._getEditorClassName()); // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n\n\n    _this.domNode.setAttribute('role', 'code');\n\n    _this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this._overflowGuardContainer, 3\n    /* OverflowGuard */\n    );\n\n    _this._overflowGuardContainer.setClassName('overflow-guard');\n\n    _this._scrollbar = new EditorScrollbar(_this._context, _this._linesContent, _this.domNode, _this._overflowGuardContainer);\n\n    _this._viewParts.push(_this._scrollbar); // View Lines\n\n\n    _this._viewLines = new ViewLines(_this._context, _this._linesContent); // View Zones\n\n    _this._viewZones = new ViewZones(_this._context);\n\n    _this._viewParts.push(_this._viewZones); // Decorations overview ruler\n\n\n    var decorationsOverviewRuler = new DecorationsOverviewRuler(_this._context);\n\n    _this._viewParts.push(decorationsOverviewRuler);\n\n    var scrollDecoration = new ScrollDecorationViewPart(_this._context);\n\n    _this._viewParts.push(scrollDecoration);\n\n    var contentViewOverlays = new ContentViewOverlays(_this._context);\n\n    _this._viewParts.push(contentViewOverlays);\n\n    contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(_this._context));\n    contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(_this._context));\n    contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(_this._context));\n    contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(_this._context));\n    var marginViewOverlays = new MarginViewOverlays(_this._context);\n\n    _this._viewParts.push(marginViewOverlays);\n\n    marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(_this._context));\n    marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(_this._context));\n    marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(_this._context));\n    marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(_this._context));\n    marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(_this._context));\n    var margin = new Margin(_this._context);\n    margin.getDomNode().appendChild(_this._viewZones.marginDomNode);\n    margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n\n    _this._viewParts.push(margin); // Content widgets\n\n\n    _this._contentWidgets = new ViewContentWidgets(_this._context, _this.domNode);\n\n    _this._viewParts.push(_this._contentWidgets);\n\n    _this._viewCursors = new ViewCursors(_this._context);\n\n    _this._viewParts.push(_this._viewCursors); // Overlay widgets\n\n\n    _this._overlayWidgets = new ViewOverlayWidgets(_this._context);\n\n    _this._viewParts.push(_this._overlayWidgets);\n\n    var rulers = new Rulers(_this._context);\n\n    _this._viewParts.push(rulers);\n\n    var minimap = new Minimap(_this._context);\n\n    _this._viewParts.push(minimap); // -------------- Wire dom nodes up\n\n\n    if (decorationsOverviewRuler) {\n      var overviewRulerData = _this._scrollbar.getOverviewRulerLayoutInfo();\n\n      overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n    }\n\n    _this._linesContent.appendChild(contentViewOverlays.getDomNode());\n\n    _this._linesContent.appendChild(rulers.domNode);\n\n    _this._linesContent.appendChild(_this._viewZones.domNode);\n\n    _this._linesContent.appendChild(_this._viewLines.getDomNode());\n\n    _this._linesContent.appendChild(_this._contentWidgets.domNode);\n\n    _this._linesContent.appendChild(_this._viewCursors.getDomNode());\n\n    _this._overflowGuardContainer.appendChild(margin.getDomNode());\n\n    _this._overflowGuardContainer.appendChild(_this._scrollbar.getDomNode());\n\n    _this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n\n    _this._overflowGuardContainer.appendChild(_this._textAreaHandler.textArea);\n\n    _this._overflowGuardContainer.appendChild(_this._textAreaHandler.textAreaCover);\n\n    _this._overflowGuardContainer.appendChild(_this._overlayWidgets.getDomNode());\n\n    _this._overflowGuardContainer.appendChild(minimap.getDomNode());\n\n    _this.domNode.appendChild(_this._overflowGuardContainer);\n\n    if (overflowWidgetsDomNode) {\n      overflowWidgetsDomNode.appendChild(_this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n    } else {\n      _this.domNode.appendChild(_this._contentWidgets.overflowingContentWidgetsDomNode);\n    }\n\n    _this._applyLayout(); // Pointer handler\n\n\n    _this._pointerHandler = _this._register(new PointerHandler(_this._context, viewController, _this._createPointerHandlerHelper()));\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"_flushAccumulatedAndRenderNow\",\n    value: function _flushAccumulatedAndRenderNow() {\n      this._renderNow();\n    }\n  }, {\n    key: \"_createPointerHandlerHelper\",\n    value: function _createPointerHandlerHelper() {\n      var _this2 = this;\n\n      return {\n        viewDomNode: this.domNode.domNode,\n        linesContentDomNode: this._linesContent.domNode,\n        focusTextArea: function focusTextArea() {\n          _this2.focus();\n        },\n        getLastRenderData: function getLastRenderData() {\n          var lastViewCursorsRenderData = _this2._viewCursors.getLastRenderData() || [];\n\n          var lastTextareaPosition = _this2._textAreaHandler.getLastRenderData();\n\n          return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n        },\n        shouldSuppressMouseDownOnViewZone: function shouldSuppressMouseDownOnViewZone(viewZoneId) {\n          return _this2._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n        },\n        shouldSuppressMouseDownOnWidget: function shouldSuppressMouseDownOnWidget(widgetId) {\n          return _this2._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n        },\n        getPositionFromDOMInfo: function getPositionFromDOMInfo(spanNode, offset) {\n          _this2._flushAccumulatedAndRenderNow();\n\n          return _this2._viewLines.getPositionFromDOMInfo(spanNode, offset);\n        },\n        visibleRangeForPosition: function visibleRangeForPosition(lineNumber, column) {\n          _this2._flushAccumulatedAndRenderNow();\n\n          return _this2._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n        },\n        getLineWidth: function getLineWidth(lineNumber) {\n          _this2._flushAccumulatedAndRenderNow();\n\n          return _this2._viewLines.getLineWidth(lineNumber);\n        }\n      };\n    }\n  }, {\n    key: \"_createTextAreaHandlerHelper\",\n    value: function _createTextAreaHandlerHelper() {\n      var _this3 = this;\n\n      return {\n        visibleRangeForPositionRelativeToEditor: function visibleRangeForPositionRelativeToEditor(lineNumber, column) {\n          _this3._flushAccumulatedAndRenderNow();\n\n          return _this3._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n        }\n      };\n    }\n  }, {\n    key: \"_applyLayout\",\n    value: function _applyLayout() {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(124\n      /* layoutInfo */\n      );\n      this.domNode.setWidth(layoutInfo.width);\n      this.domNode.setHeight(layoutInfo.height);\n\n      this._overflowGuardContainer.setWidth(layoutInfo.width);\n\n      this._overflowGuardContainer.setHeight(layoutInfo.height);\n\n      this._linesContent.setWidth(1000000);\n\n      this._linesContent.setHeight(1000000);\n    }\n  }, {\n    key: \"_getEditorClassName\",\n    value: function _getEditorClassName() {\n      var focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n      return this._context.configuration.options.get(121\n      /* editorClassName */\n      ) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    } // --- begin event handlers\n\n  }, {\n    key: \"handleEvents\",\n    value: function handleEvents(events) {\n      _get(_getPrototypeOf(View.prototype), \"handleEvents\", this).call(this, events);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      this._configPixelRatio = this._context.configuration.options.get(122\n      /* pixelRatio */\n      );\n      this.domNode.setClassName(this._getEditorClassName());\n\n      this._applyLayout();\n\n      return false;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._selections = e.selections;\n      return false;\n    }\n  }, {\n    key: \"onFocusChanged\",\n    value: function onFocusChanged(e) {\n      this.domNode.setClassName(this._getEditorClassName());\n      return false;\n    }\n  }, {\n    key: \"onThemeChanged\",\n    value: function onThemeChanged(e) {\n      this.domNode.setClassName(this._getEditorClassName());\n      return false;\n    } // --- end event handlers\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._renderAnimationFrame !== null) {\n        this._renderAnimationFrame.dispose();\n\n        this._renderAnimationFrame = null;\n      }\n\n      this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n\n      this._context.removeEventHandler(this);\n\n      this._viewLines.dispose(); // Destroy view parts\n\n\n      var _iterator = _createForOfIteratorHelper(this._viewParts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var viewPart = _step.value;\n          viewPart.dispose();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _get(_getPrototypeOf(View.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"_scheduleRender\",\n    value: function _scheduleRender() {\n      if (this._renderAnimationFrame === null) {\n        this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n      }\n    }\n  }, {\n    key: \"_onRenderScheduled\",\n    value: function _onRenderScheduled() {\n      this._renderAnimationFrame = null;\n\n      this._flushAccumulatedAndRenderNow();\n    }\n  }, {\n    key: \"_renderNow\",\n    value: function _renderNow() {\n      var _this4 = this;\n\n      safeInvokeNoArg(function () {\n        return _this4._actualRender();\n      });\n    }\n  }, {\n    key: \"_getViewPartsToRender\",\n    value: function _getViewPartsToRender() {\n      var result = [],\n          resultLen = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(this._viewParts),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var viewPart = _step2.value;\n\n          if (viewPart.shouldRender()) {\n            result[resultLen++] = viewPart;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_actualRender\",\n    value: function _actualRender() {\n      if (!dom.isInDOM(this.domNode.domNode)) {\n        return;\n      }\n\n      var viewPartsToRender = this._getViewPartsToRender();\n\n      if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n        // Nothing to render\n        return;\n      }\n\n      var partialViewportData = this._context.viewLayout.getLinesViewportData();\n\n      this._context.model.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n\n      var viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.model);\n\n      if (this._contentWidgets.shouldRender()) {\n        // Give the content widgets a chance to set their max width before a possible synchronous layout\n        this._contentWidgets.onBeforeRender(viewportData);\n      }\n\n      if (this._viewLines.shouldRender()) {\n        this._viewLines.renderText(viewportData);\n\n        this._viewLines.onDidRender(); // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n\n\n        viewPartsToRender = this._getViewPartsToRender();\n      }\n\n      var renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines); // Render the rest of the parts\n\n      var _iterator3 = _createForOfIteratorHelper(viewPartsToRender),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var viewPart = _step3.value;\n          viewPart.prepareRender(renderingContext);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(viewPartsToRender),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _viewPart = _step4.value;\n\n          _viewPart.render(renderingContext);\n\n          _viewPart.onDidRender();\n        } // Try to detect browser zooming and paint again if necessary\n\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (Math.abs(browser.getPixelRatio() - this._configPixelRatio) > 0.001) {\n        // looks like the pixel ratio has changed\n        this._context.configuration.updatePixelRatio();\n      }\n    } // --- BEGIN CodeEditor helpers\n\n  }, {\n    key: \"delegateVerticalScrollbarMouseDown\",\n    value: function delegateVerticalScrollbarMouseDown(browserEvent) {\n      this._scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n    }\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(scrollPosition) {\n      this._context.model.setScrollPosition({\n        scrollTop: scrollPosition.scrollTop\n      }, 1\n      /* Immediate */\n      );\n\n      this._context.model.tokenizeViewport();\n\n      this._renderNow();\n\n      this._viewLines.updateLineWidths();\n\n      this._context.model.setScrollPosition({\n        scrollLeft: scrollPosition.scrollLeft\n      }, 1\n      /* Immediate */\n      );\n    }\n  }, {\n    key: \"getOffsetForColumn\",\n    value: function getOffsetForColumn(modelLineNumber, modelColumn) {\n      var modelPosition = this._context.model.validateModelPosition({\n        lineNumber: modelLineNumber,\n        column: modelColumn\n      });\n\n      var viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n\n      this._flushAccumulatedAndRenderNow();\n\n      var visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n\n      if (!visibleRange) {\n        return -1;\n      }\n\n      return visibleRange.left;\n    }\n  }, {\n    key: \"getTargetAtClientPoint\",\n    value: function getTargetAtClientPoint(clientX, clientY) {\n      var mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n\n      if (!mouseTarget) {\n        return null;\n      }\n\n      return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.model.coordinatesConverter);\n    }\n  }, {\n    key: \"createOverviewRuler\",\n    value: function createOverviewRuler(cssClassName) {\n      return new OverviewRuler(this._context, cssClassName);\n    }\n  }, {\n    key: \"change\",\n    value: function change(callback) {\n      this._viewZones.changeViewZones(callback);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"render\",\n    value: function render(now, everything) {\n      if (everything) {\n        // Force everything to render...\n        this._viewLines.forceShouldRender();\n\n        var _iterator5 = _createForOfIteratorHelper(this._viewParts),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var viewPart = _step5.value;\n            viewPart.forceShouldRender();\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n\n      if (now) {\n        this._flushAccumulatedAndRenderNow();\n      } else {\n        this._scheduleRender();\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._textAreaHandler.focusTextArea();\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this._textAreaHandler.isFocused();\n    }\n  }, {\n    key: \"setAriaOptions\",\n    value: function setAriaOptions(options) {\n      this._textAreaHandler.setAriaOptions(options);\n    }\n  }, {\n    key: \"addContentWidget\",\n    value: function addContentWidget(widgetData) {\n      this._contentWidgets.addWidget(widgetData.widget);\n\n      this.layoutContentWidget(widgetData);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"layoutContentWidget\",\n    value: function layoutContentWidget(widgetData) {\n      var newRange = widgetData.position ? widgetData.position.range || null : null;\n\n      if (newRange === null) {\n        var newPosition = widgetData.position ? widgetData.position.position : null;\n\n        if (newPosition !== null) {\n          newRange = new Range(newPosition.lineNumber, newPosition.column, newPosition.lineNumber, newPosition.column);\n        }\n      }\n\n      var newPreference = widgetData.position ? widgetData.position.preference : null;\n\n      this._contentWidgets.setWidgetPosition(widgetData.widget, newRange, newPreference);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"removeContentWidget\",\n    value: function removeContentWidget(widgetData) {\n      this._contentWidgets.removeWidget(widgetData.widget);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"addOverlayWidget\",\n    value: function addOverlayWidget(widgetData) {\n      this._overlayWidgets.addWidget(widgetData.widget);\n\n      this.layoutOverlayWidget(widgetData);\n\n      this._scheduleRender();\n    }\n  }, {\n    key: \"layoutOverlayWidget\",\n    value: function layoutOverlayWidget(widgetData) {\n      var newPreference = widgetData.position ? widgetData.position.preference : null;\n\n      var shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n\n      if (shouldRender) {\n        this._scheduleRender();\n      }\n    }\n  }, {\n    key: \"removeOverlayWidget\",\n    value: function removeOverlayWidget(widgetData) {\n      this._overlayWidgets.removeWidget(widgetData.widget);\n\n      this._scheduleRender();\n    }\n  }]);\n\n  return View;\n}(ViewEventHandler);\n\nfunction safeInvokeNoArg(func) {\n  try {\n    return func();\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/view/viewImpl.js"],"names":["dom","browser","Selection","createFastDomNode","onUnexpectedError","PointerHandler","TextAreaHandler","ViewController","ViewUserInputEvents","ContentViewOverlays","MarginViewOverlays","PartFingerprints","ViewContentWidgets","CurrentLineHighlightOverlay","CurrentLineMarginHighlightOverlay","DecorationsOverlay","EditorScrollbar","GlyphMarginOverlay","IndentGuidesOverlay","LineNumbersOverlay","ViewLines","LinesDecorationsOverlay","Margin","MarginViewLineDecorationsOverlay","Minimap","ViewOverlayWidgets","DecorationsOverviewRuler","OverviewRuler","Rulers","ScrollDecorationViewPart","SelectionsOverlay","ViewCursors","ViewZones","Position","Range","RenderingContext","ViewContext","ViewportData","ViewEventHandler","getThemeTypeSelector","PointerHandlerLastRenderData","View","commandDelegate","configuration","themeService","model","userInputEvents","overflowWidgetsDomNode","_selections","_renderAnimationFrame","viewController","_context","getColorTheme","_configPixelRatio","options","get","addEventHandler","_register","onDidColorThemeChange","theme","update","render","_viewParts","_textAreaHandler","_createTextAreaHandlerHelper","push","_linesContent","document","createElement","setClassName","setPosition","domNode","_getEditorClassName","setAttribute","_overflowGuardContainer","write","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","addDynamicOverlay","marginViewOverlays","margin","getDomNode","appendChild","marginDomNode","_contentWidgets","_viewCursors","_overlayWidgets","rulers","minimap","overviewRulerData","getOverviewRulerLayoutInfo","parent","insertBefore","textArea","textAreaCover","overflowingContentWidgetsDomNode","_applyLayout","_pointerHandler","_createPointerHandlerHelper","_renderNow","viewDomNode","linesContentDomNode","focusTextArea","focus","getLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","widgetId","getPositionFromDOMInfo","spanNode","offset","_flushAccumulatedAndRenderNow","visibleRangeForPosition","lineNumber","column","getLineWidth","visibleRangeForPositionRelativeToEditor","layoutInfo","setWidth","width","setHeight","height","focused","isFocused","type","events","_scheduleRender","e","selections","dispose","remove","removeEventHandler","viewPart","runAtThisOrScheduleAtNextAnimationFrame","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","result","resultLen","shouldRender","isInDOM","viewPartsToRender","_getViewPartsToRender","length","partialViewportData","viewLayout","getLinesViewportData","setViewport","startLineNumber","endLineNumber","centeredLineNumber","viewportData","getWhitespaceViewportData","onBeforeRender","renderText","onDidRender","renderingContext","prepareRender","Math","abs","getPixelRatio","updatePixelRatio","browserEvent","delegateVerticalScrollbarMouseDown","scrollPosition","setScrollPosition","scrollTop","tokenizeViewport","updateLineWidths","scrollLeft","modelLineNumber","modelColumn","modelPosition","validateModelPosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","visibleRange","left","clientX","clientY","mouseTarget","getTargetAtClientPoint","convertViewToModelMouseTarget","cssClassName","callback","changeViewZones","now","everything","forceShouldRender","setAriaOptions","widgetData","addWidget","widget","layoutContentWidget","newRange","position","range","newPosition","newPreference","preference","setWidgetPosition","removeWidget","layoutOverlayWidget","func"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { PointerHandler } from '../controller/pointerHandler.js';\r\nimport { TextAreaHandler } from '../controller/textAreaHandler.js';\r\nimport { ViewController } from './viewController.js';\r\nimport { ViewUserInputEvents } from './viewUserInputEvents.js';\r\nimport { ContentViewOverlays, MarginViewOverlays } from './viewOverlays.js';\r\nimport { PartFingerprints } from './viewPart.js';\r\nimport { ViewContentWidgets } from '../viewParts/contentWidgets/contentWidgets.js';\r\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from '../viewParts/currentLineHighlight/currentLineHighlight.js';\r\nimport { DecorationsOverlay } from '../viewParts/decorations/decorations.js';\r\nimport { EditorScrollbar } from '../viewParts/editorScrollbar/editorScrollbar.js';\r\nimport { GlyphMarginOverlay } from '../viewParts/glyphMargin/glyphMargin.js';\r\nimport { IndentGuidesOverlay } from '../viewParts/indentGuides/indentGuides.js';\r\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\r\nimport { ViewLines } from '../viewParts/lines/viewLines.js';\r\nimport { LinesDecorationsOverlay } from '../viewParts/linesDecorations/linesDecorations.js';\r\nimport { Margin } from '../viewParts/margin/margin.js';\r\nimport { MarginViewLineDecorationsOverlay } from '../viewParts/marginDecorations/marginDecorations.js';\r\nimport { Minimap } from '../viewParts/minimap/minimap.js';\r\nimport { ViewOverlayWidgets } from '../viewParts/overlayWidgets/overlayWidgets.js';\r\nimport { DecorationsOverviewRuler } from '../viewParts/overviewRuler/decorationsOverviewRuler.js';\r\nimport { OverviewRuler } from '../viewParts/overviewRuler/overviewRuler.js';\r\nimport { Rulers } from '../viewParts/rulers/rulers.js';\r\nimport { ScrollDecorationViewPart } from '../viewParts/scrollDecoration/scrollDecoration.js';\r\nimport { SelectionsOverlay } from '../viewParts/selections/selections.js';\r\nimport { ViewCursors } from '../viewParts/viewCursors/viewCursors.js';\r\nimport { ViewZones } from '../viewParts/viewZones/viewZones.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { RenderingContext } from '../../common/view/renderingContext.js';\r\nimport { ViewContext } from '../../common/view/viewContext.js';\r\nimport { ViewportData } from '../../common/viewLayout/viewLinesViewportData.js';\r\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\r\nimport { getThemeTypeSelector } from '../../../platform/theme/common/themeService.js';\r\nimport { PointerHandlerLastRenderData } from '../controller/mouseTarget.js';\r\nexport class View extends ViewEventHandler {\r\n    constructor(commandDelegate, configuration, themeService, model, userInputEvents, overflowWidgetsDomNode) {\r\n        super();\r\n        this._selections = [new Selection(1, 1, 1, 1)];\r\n        this._renderAnimationFrame = null;\r\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\r\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\r\n        this._context = new ViewContext(configuration, themeService.getColorTheme(), model);\r\n        this._configPixelRatio = this._configPixelRatio = this._context.configuration.options.get(122 /* pixelRatio */);\r\n        // Ensure the view is the first event handler in order to update the layout\r\n        this._context.addEventHandler(this);\r\n        this._register(themeService.onDidColorThemeChange(theme => {\r\n            this._context.theme.update(theme);\r\n            this._context.model.onDidColorThemeChange();\r\n            this.render(true, false);\r\n        }));\r\n        this._viewParts = [];\r\n        // Keyboard handler\r\n        this._textAreaHandler = new TextAreaHandler(this._context, viewController, this._createTextAreaHandlerHelper());\r\n        this._viewParts.push(this._textAreaHandler);\r\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\r\n        this._linesContent = createFastDomNode(document.createElement('div'));\r\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\r\n        this._linesContent.setPosition('absolute');\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setClassName(this._getEditorClassName());\r\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\r\n        this.domNode.setAttribute('role', 'code');\r\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* OverflowGuard */);\r\n        this._overflowGuardContainer.setClassName('overflow-guard');\r\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\r\n        this._viewParts.push(this._scrollbar);\r\n        // View Lines\r\n        this._viewLines = new ViewLines(this._context, this._linesContent);\r\n        // View Zones\r\n        this._viewZones = new ViewZones(this._context);\r\n        this._viewParts.push(this._viewZones);\r\n        // Decorations overview ruler\r\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\r\n        this._viewParts.push(decorationsOverviewRuler);\r\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\r\n        this._viewParts.push(scrollDecoration);\r\n        const contentViewOverlays = new ContentViewOverlays(this._context);\r\n        this._viewParts.push(contentViewOverlays);\r\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\r\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\r\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\r\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\r\n        const marginViewOverlays = new MarginViewOverlays(this._context);\r\n        this._viewParts.push(marginViewOverlays);\r\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\r\n        marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context));\r\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\r\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\r\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\r\n        const margin = new Margin(this._context);\r\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\r\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\r\n        this._viewParts.push(margin);\r\n        // Content widgets\r\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\r\n        this._viewParts.push(this._contentWidgets);\r\n        this._viewCursors = new ViewCursors(this._context);\r\n        this._viewParts.push(this._viewCursors);\r\n        // Overlay widgets\r\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\r\n        this._viewParts.push(this._overlayWidgets);\r\n        const rulers = new Rulers(this._context);\r\n        this._viewParts.push(rulers);\r\n        const minimap = new Minimap(this._context);\r\n        this._viewParts.push(minimap);\r\n        // -------------- Wire dom nodes up\r\n        if (decorationsOverviewRuler) {\r\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\r\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\r\n        }\r\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\r\n        this._linesContent.appendChild(rulers.domNode);\r\n        this._linesContent.appendChild(this._viewZones.domNode);\r\n        this._linesContent.appendChild(this._viewLines.getDomNode());\r\n        this._linesContent.appendChild(this._contentWidgets.domNode);\r\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\r\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\r\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\r\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\r\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\r\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\r\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\r\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\r\n        this.domNode.appendChild(this._overflowGuardContainer);\r\n        if (overflowWidgetsDomNode) {\r\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\r\n        }\r\n        else {\r\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\r\n        }\r\n        this._applyLayout();\r\n        // Pointer handler\r\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\r\n    }\r\n    _flushAccumulatedAndRenderNow() {\r\n        this._renderNow();\r\n    }\r\n    _createPointerHandlerHelper() {\r\n        return {\r\n            viewDomNode: this.domNode.domNode,\r\n            linesContentDomNode: this._linesContent.domNode,\r\n            focusTextArea: () => {\r\n                this.focus();\r\n            },\r\n            getLastRenderData: () => {\r\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\r\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\r\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\r\n            },\r\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\r\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\r\n            },\r\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\r\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\r\n            },\r\n            getPositionFromDOMInfo: (spanNode, offset) => {\r\n                this._flushAccumulatedAndRenderNow();\r\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\r\n            },\r\n            visibleRangeForPosition: (lineNumber, column) => {\r\n                this._flushAccumulatedAndRenderNow();\r\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\r\n            },\r\n            getLineWidth: (lineNumber) => {\r\n                this._flushAccumulatedAndRenderNow();\r\n                return this._viewLines.getLineWidth(lineNumber);\r\n            }\r\n        };\r\n    }\r\n    _createTextAreaHandlerHelper() {\r\n        return {\r\n            visibleRangeForPositionRelativeToEditor: (lineNumber, column) => {\r\n                this._flushAccumulatedAndRenderNow();\r\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\r\n            }\r\n        };\r\n    }\r\n    _applyLayout() {\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this.domNode.setWidth(layoutInfo.width);\r\n        this.domNode.setHeight(layoutInfo.height);\r\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\r\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\r\n        this._linesContent.setWidth(1000000);\r\n        this._linesContent.setHeight(1000000);\r\n    }\r\n    _getEditorClassName() {\r\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\r\n        return this._context.configuration.options.get(121 /* editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\r\n    }\r\n    // --- begin event handlers\r\n    handleEvents(events) {\r\n        super.handleEvents(events);\r\n        this._scheduleRender();\r\n    }\r\n    onConfigurationChanged(e) {\r\n        this._configPixelRatio = this._context.configuration.options.get(122 /* pixelRatio */);\r\n        this.domNode.setClassName(this._getEditorClassName());\r\n        this._applyLayout();\r\n        return false;\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._selections = e.selections;\r\n        return false;\r\n    }\r\n    onFocusChanged(e) {\r\n        this.domNode.setClassName(this._getEditorClassName());\r\n        return false;\r\n    }\r\n    onThemeChanged(e) {\r\n        this.domNode.setClassName(this._getEditorClassName());\r\n        return false;\r\n    }\r\n    // --- end event handlers\r\n    dispose() {\r\n        if (this._renderAnimationFrame !== null) {\r\n            this._renderAnimationFrame.dispose();\r\n            this._renderAnimationFrame = null;\r\n        }\r\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\r\n        this._context.removeEventHandler(this);\r\n        this._viewLines.dispose();\r\n        // Destroy view parts\r\n        for (const viewPart of this._viewParts) {\r\n            viewPart.dispose();\r\n        }\r\n        super.dispose();\r\n    }\r\n    _scheduleRender() {\r\n        if (this._renderAnimationFrame === null) {\r\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\r\n        }\r\n    }\r\n    _onRenderScheduled() {\r\n        this._renderAnimationFrame = null;\r\n        this._flushAccumulatedAndRenderNow();\r\n    }\r\n    _renderNow() {\r\n        safeInvokeNoArg(() => this._actualRender());\r\n    }\r\n    _getViewPartsToRender() {\r\n        let result = [], resultLen = 0;\r\n        for (const viewPart of this._viewParts) {\r\n            if (viewPart.shouldRender()) {\r\n                result[resultLen++] = viewPart;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _actualRender() {\r\n        if (!dom.isInDOM(this.domNode.domNode)) {\r\n            return;\r\n        }\r\n        let viewPartsToRender = this._getViewPartsToRender();\r\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\r\n            // Nothing to render\r\n            return;\r\n        }\r\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\r\n        this._context.model.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\r\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.model);\r\n        if (this._contentWidgets.shouldRender()) {\r\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\r\n            this._contentWidgets.onBeforeRender(viewportData);\r\n        }\r\n        if (this._viewLines.shouldRender()) {\r\n            this._viewLines.renderText(viewportData);\r\n            this._viewLines.onDidRender();\r\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\r\n            viewPartsToRender = this._getViewPartsToRender();\r\n        }\r\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\r\n        // Render the rest of the parts\r\n        for (const viewPart of viewPartsToRender) {\r\n            viewPart.prepareRender(renderingContext);\r\n        }\r\n        for (const viewPart of viewPartsToRender) {\r\n            viewPart.render(renderingContext);\r\n            viewPart.onDidRender();\r\n        }\r\n        // Try to detect browser zooming and paint again if necessary\r\n        if (Math.abs(browser.getPixelRatio() - this._configPixelRatio) > 0.001) {\r\n            // looks like the pixel ratio has changed\r\n            this._context.configuration.updatePixelRatio();\r\n        }\r\n    }\r\n    // --- BEGIN CodeEditor helpers\r\n    delegateVerticalScrollbarMouseDown(browserEvent) {\r\n        this._scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\r\n    }\r\n    restoreState(scrollPosition) {\r\n        this._context.model.setScrollPosition({ scrollTop: scrollPosition.scrollTop }, 1 /* Immediate */);\r\n        this._context.model.tokenizeViewport();\r\n        this._renderNow();\r\n        this._viewLines.updateLineWidths();\r\n        this._context.model.setScrollPosition({ scrollLeft: scrollPosition.scrollLeft }, 1 /* Immediate */);\r\n    }\r\n    getOffsetForColumn(modelLineNumber, modelColumn) {\r\n        const modelPosition = this._context.model.validateModelPosition({\r\n            lineNumber: modelLineNumber,\r\n            column: modelColumn\r\n        });\r\n        const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\r\n        this._flushAccumulatedAndRenderNow();\r\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\r\n        if (!visibleRange) {\r\n            return -1;\r\n        }\r\n        return visibleRange.left;\r\n    }\r\n    getTargetAtClientPoint(clientX, clientY) {\r\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\r\n        if (!mouseTarget) {\r\n            return null;\r\n        }\r\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.model.coordinatesConverter);\r\n    }\r\n    createOverviewRuler(cssClassName) {\r\n        return new OverviewRuler(this._context, cssClassName);\r\n    }\r\n    change(callback) {\r\n        this._viewZones.changeViewZones(callback);\r\n        this._scheduleRender();\r\n    }\r\n    render(now, everything) {\r\n        if (everything) {\r\n            // Force everything to render...\r\n            this._viewLines.forceShouldRender();\r\n            for (const viewPart of this._viewParts) {\r\n                viewPart.forceShouldRender();\r\n            }\r\n        }\r\n        if (now) {\r\n            this._flushAccumulatedAndRenderNow();\r\n        }\r\n        else {\r\n            this._scheduleRender();\r\n        }\r\n    }\r\n    focus() {\r\n        this._textAreaHandler.focusTextArea();\r\n    }\r\n    isFocused() {\r\n        return this._textAreaHandler.isFocused();\r\n    }\r\n    setAriaOptions(options) {\r\n        this._textAreaHandler.setAriaOptions(options);\r\n    }\r\n    addContentWidget(widgetData) {\r\n        this._contentWidgets.addWidget(widgetData.widget);\r\n        this.layoutContentWidget(widgetData);\r\n        this._scheduleRender();\r\n    }\r\n    layoutContentWidget(widgetData) {\r\n        let newRange = widgetData.position ? widgetData.position.range || null : null;\r\n        if (newRange === null) {\r\n            const newPosition = widgetData.position ? widgetData.position.position : null;\r\n            if (newPosition !== null) {\r\n                newRange = new Range(newPosition.lineNumber, newPosition.column, newPosition.lineNumber, newPosition.column);\r\n            }\r\n        }\r\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\r\n        this._contentWidgets.setWidgetPosition(widgetData.widget, newRange, newPreference);\r\n        this._scheduleRender();\r\n    }\r\n    removeContentWidget(widgetData) {\r\n        this._contentWidgets.removeWidget(widgetData.widget);\r\n        this._scheduleRender();\r\n    }\r\n    addOverlayWidget(widgetData) {\r\n        this._overlayWidgets.addWidget(widgetData.widget);\r\n        this.layoutOverlayWidget(widgetData);\r\n        this._scheduleRender();\r\n    }\r\n    layoutOverlayWidget(widgetData) {\r\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\r\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\r\n        if (shouldRender) {\r\n            this._scheduleRender();\r\n        }\r\n    }\r\n    removeOverlayWidget(widgetData) {\r\n        this._overlayWidgets.removeWidget(widgetData.widget);\r\n        this._scheduleRender();\r\n    }\r\n}\r\nfunction safeInvokeNoArg(func) {\r\n    try {\r\n        return func();\r\n    }\r\n    catch (e) {\r\n        onUnexpectedError(e);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}