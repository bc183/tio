{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\n\nexport var Selection = /*#__PURE__*/function (_Range) {\n  _inherits(Selection, _Range);\n\n  var _super = _createSuper(Selection);\n\n  function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    var _this;\n\n    _classCallCheck(this, Selection);\n\n    _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n    _this.selectionStartLineNumber = selectionStartLineNumber;\n    _this.selectionStartColumn = selectionStartColumn;\n    _this.positionLineNumber = positionLineNumber;\n    _this.positionColumn = positionColumn;\n    return _this;\n  }\n  /**\r\n   * Transform to a human-readable representation.\r\n   */\n\n\n  _createClass(Selection, [{\n    key: \"toString\",\n    value: function toString() {\n      return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\r\n     * Test if equals other selection.\r\n     */\n\n  }, {\n    key: \"equalsSelection\",\n    value: function equalsSelection(other) {\n      return Selection.selectionsEqual(this, other);\n    }\n    /**\r\n     * Test if the two selections are equal.\r\n     */\n\n  }, {\n    key: \"getDirection\",\n\n    /**\r\n     * Get directions (LTR or RTL).\r\n     */\n    value: function getDirection() {\n      if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n        return 0\n        /* LTR */\n        ;\n      }\n\n      return 1\n      /* RTL */\n      ;\n    }\n    /**\r\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n     */\n\n  }, {\n    key: \"setEndPosition\",\n    value: function setEndPosition(endLineNumber, endColumn) {\n      if (this.getDirection() === 0\n      /* LTR */\n      ) {\n          return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n\n      return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\r\n     * Get the position at `positionLineNumber` and `positionColumn`.\r\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\r\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n     */\n\n  }, {\n    key: \"setStartPosition\",\n    value: function setStartPosition(startLineNumber, startColumn) {\n      if (this.getDirection() === 0\n      /* LTR */\n      ) {\n          return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n\n      return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    } // ----\n\n    /**\r\n     * Create a `Selection` from one or two positions\r\n     */\n\n  }], [{\n    key: \"selectionsEqual\",\n    value: function selectionsEqual(a, b) {\n      return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n    }\n  }, {\n    key: \"fromPositions\",\n    value: function fromPositions(start) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n      return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\r\n     * Create a `Selection` from an `ISelection`.\r\n     */\n\n  }, {\n    key: \"liftSelection\",\n    value: function liftSelection(sel) {\n      return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\r\n     * `a` equals `b`.\r\n     */\n\n  }, {\n    key: \"selectionsArrEqual\",\n    value: function selectionsArrEqual(a, b) {\n      if (a && !b || !a && b) {\n        return false;\n      }\n\n      if (!a && !b) {\n        return true;\n      }\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (var i = 0, len = a.length; i < len; i++) {\n        if (!this.selectionsEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\r\n     * Test if `obj` is an `ISelection`.\r\n     */\n\n  }, {\n    key: \"isISelection\",\n    value: function isISelection(obj) {\n      return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n    }\n    /**\r\n     * Create with a direction.\r\n     */\n\n  }, {\n    key: \"createWithDirection\",\n    value: function createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n      if (direction === 0\n      /* LTR */\n      ) {\n          return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n\n      return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n  }]);\n\n  return Selection;\n}(Range);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js"],"names":["Position","Range","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","other","selectionsEqual","startLineNumber","startColumn","endLineNumber","endColumn","getDirection","a","b","start","end","lineNumber","column","sel","length","i","len","obj","direction"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from './position.js';\r\nimport { Range } from './range.js';\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nexport class Selection extends Range {\r\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n        this.selectionStartLineNumber = selectionStartLineNumber;\r\n        this.selectionStartColumn = selectionStartColumn;\r\n        this.positionLineNumber = positionLineNumber;\r\n        this.positionColumn = positionColumn;\r\n    }\r\n    /**\r\n     * Transform to a human-readable representation.\r\n     */\r\n    toString() {\r\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n    }\r\n    /**\r\n     * Test if equals other selection.\r\n     */\r\n    equalsSelection(other) {\r\n        return (Selection.selectionsEqual(this, other));\r\n    }\r\n    /**\r\n     * Test if the two selections are equal.\r\n     */\r\n    static selectionsEqual(a, b) {\r\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n            a.selectionStartColumn === b.selectionStartColumn &&\r\n            a.positionLineNumber === b.positionLineNumber &&\r\n            a.positionColumn === b.positionColumn);\r\n    }\r\n    /**\r\n     * Get directions (LTR or RTL).\r\n     */\r\n    getDirection() {\r\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n            return 0 /* LTR */;\r\n        }\r\n        return 1 /* RTL */;\r\n    }\r\n    /**\r\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n     */\r\n    setEndPosition(endLineNumber, endColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n    }\r\n    /**\r\n     * Get the position at `positionLineNumber` and `positionColumn`.\r\n     */\r\n    getPosition() {\r\n        return new Position(this.positionLineNumber, this.positionColumn);\r\n    }\r\n    /**\r\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n     */\r\n    setStartPosition(startLineNumber, startColumn) {\r\n        if (this.getDirection() === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        }\r\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n    }\r\n    // ----\r\n    /**\r\n     * Create a `Selection` from one or two positions\r\n     */\r\n    static fromPositions(start, end = start) {\r\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    }\r\n    /**\r\n     * Create a `Selection` from an `ISelection`.\r\n     */\r\n    static liftSelection(sel) {\r\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n    }\r\n    /**\r\n     * `a` equals `b`.\r\n     */\r\n    static selectionsArrEqual(a, b) {\r\n        if (a && !b || !a && b) {\r\n            return false;\r\n        }\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0, len = a.length; i < len; i++) {\r\n            if (!this.selectionsEqual(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Test if `obj` is an `ISelection`.\r\n     */\r\n    static isISelection(obj) {\r\n        return (obj\r\n            && (typeof obj.selectionStartLineNumber === 'number')\r\n            && (typeof obj.selectionStartColumn === 'number')\r\n            && (typeof obj.positionLineNumber === 'number')\r\n            && (typeof obj.positionColumn === 'number'));\r\n    }\r\n    /**\r\n     * Create with a direction.\r\n     */\r\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n        if (direction === 0 /* LTR */) {\r\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}