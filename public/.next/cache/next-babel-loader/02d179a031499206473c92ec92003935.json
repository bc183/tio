{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport var MinimapCharRenderer = /*#__PURE__*/function () {\n  function MinimapCharRenderer(charData, scale) {\n    _classCallCheck(this, MinimapCharRenderer);\n\n    this.scale = scale;\n    this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n    this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n  }\n\n  _createClass(MinimapCharRenderer, [{\n    key: \"renderChar\",\n    value: function renderChar(target, dx, dy, chCode, color, backgroundColor, fontScale, useLighterFont, force1pxHeight) {\n      var charWidth = 1\n      /* BASE_CHAR_WIDTH */\n      * this.scale;\n      var charHeight = 2\n      /* BASE_CHAR_HEIGHT */\n      * this.scale;\n      var renderHeight = force1pxHeight ? 1 : charHeight;\n\n      if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n        console.warn('bad render request outside image data');\n        return;\n      }\n\n      var charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n      var charIndex = getCharIndex(chCode, fontScale);\n      var destWidth = target.width * 4\n      /* RGBA_CHANNELS_CNT */\n      ;\n      var backgroundR = backgroundColor.r;\n      var backgroundG = backgroundColor.g;\n      var backgroundB = backgroundColor.b;\n      var deltaR = color.r - backgroundR;\n      var deltaG = color.g - backgroundG;\n      var deltaB = color.b - backgroundB;\n      var dest = target.data;\n      var sourceOffset = charIndex * charWidth * charHeight;\n      var row = dy * destWidth + dx * 4\n      /* RGBA_CHANNELS_CNT */\n      ;\n\n      for (var y = 0; y < renderHeight; y++) {\n        var column = row;\n\n        for (var x = 0; x < charWidth; x++) {\n          var c = charData[sourceOffset++] / 255;\n          dest[column++] = backgroundR + deltaR * c;\n          dest[column++] = backgroundG + deltaG * c;\n          dest[column++] = backgroundB + deltaB * c;\n          column++;\n        }\n\n        row += destWidth;\n      }\n    }\n  }, {\n    key: \"blockRenderChar\",\n    value: function blockRenderChar(target, dx, dy, color, backgroundColor, useLighterFont, force1pxHeight) {\n      var charWidth = 1\n      /* BASE_CHAR_WIDTH */\n      * this.scale;\n      var charHeight = 2\n      /* BASE_CHAR_HEIGHT */\n      * this.scale;\n      var renderHeight = force1pxHeight ? 1 : charHeight;\n\n      if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n        console.warn('bad render request outside image data');\n        return;\n      }\n\n      var destWidth = target.width * 4\n      /* RGBA_CHANNELS_CNT */\n      ;\n      var c = 0.5;\n      var backgroundR = backgroundColor.r;\n      var backgroundG = backgroundColor.g;\n      var backgroundB = backgroundColor.b;\n      var deltaR = color.r - backgroundR;\n      var deltaG = color.g - backgroundG;\n      var deltaB = color.b - backgroundB;\n      var colorR = backgroundR + deltaR * c;\n      var colorG = backgroundG + deltaG * c;\n      var colorB = backgroundB + deltaB * c;\n      var dest = target.data;\n      var row = dy * destWidth + dx * 4\n      /* RGBA_CHANNELS_CNT */\n      ;\n\n      for (var y = 0; y < renderHeight; y++) {\n        var column = row;\n\n        for (var x = 0; x < charWidth; x++) {\n          dest[column++] = colorR;\n          dest[column++] = colorG;\n          dest[column++] = colorB;\n          column++;\n        }\n\n        row += destWidth;\n      }\n    }\n  }], [{\n    key: \"soften\",\n    value: function soften(input, ratio) {\n      var result = new Uint8ClampedArray(input.length);\n\n      for (var i = 0, len = input.length; i < len; i++) {\n        result[i] = toUint8(input[i] * ratio);\n      }\n\n      return result;\n    }\n  }]);\n\n  return MinimapCharRenderer;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js"],"names":["getCharIndex","toUint8","MinimapCharRenderer","charData","scale","charDataNormal","soften","charDataLight","target","dx","dy","chCode","color","backgroundColor","fontScale","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","width","height","console","warn","charIndex","destWidth","backgroundR","r","backgroundG","g","backgroundB","b","deltaR","deltaG","deltaB","dest","data","sourceOffset","row","y","column","x","c","colorR","colorG","colorB","input","ratio","result","Uint8ClampedArray","length","i","len"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { getCharIndex } from './minimapCharSheet.js';\r\nimport { toUint8 } from '../../../../base/common/uint.js';\r\nexport class MinimapCharRenderer {\r\n    constructor(charData, scale) {\r\n        this.scale = scale;\r\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\r\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\r\n    }\r\n    static soften(input, ratio) {\r\n        let result = new Uint8ClampedArray(input.length);\r\n        for (let i = 0, len = input.length; i < len; i++) {\r\n            result[i] = toUint8(input[i] * ratio);\r\n        }\r\n        return result;\r\n    }\r\n    renderChar(target, dx, dy, chCode, color, backgroundColor, fontScale, useLighterFont, force1pxHeight) {\r\n        const charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\r\n        const charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\r\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\r\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\r\n            console.warn('bad render request outside image data');\r\n            return;\r\n        }\r\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\r\n        const charIndex = getCharIndex(chCode, fontScale);\r\n        const destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\r\n        const backgroundR = backgroundColor.r;\r\n        const backgroundG = backgroundColor.g;\r\n        const backgroundB = backgroundColor.b;\r\n        const deltaR = color.r - backgroundR;\r\n        const deltaG = color.g - backgroundG;\r\n        const deltaB = color.b - backgroundB;\r\n        const dest = target.data;\r\n        let sourceOffset = charIndex * charWidth * charHeight;\r\n        let row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\r\n        for (let y = 0; y < renderHeight; y++) {\r\n            let column = row;\r\n            for (let x = 0; x < charWidth; x++) {\r\n                const c = charData[sourceOffset++] / 255;\r\n                dest[column++] = backgroundR + deltaR * c;\r\n                dest[column++] = backgroundG + deltaG * c;\r\n                dest[column++] = backgroundB + deltaB * c;\r\n                column++;\r\n            }\r\n            row += destWidth;\r\n        }\r\n    }\r\n    blockRenderChar(target, dx, dy, color, backgroundColor, useLighterFont, force1pxHeight) {\r\n        const charWidth = 1 /* BASE_CHAR_WIDTH */ * this.scale;\r\n        const charHeight = 2 /* BASE_CHAR_HEIGHT */ * this.scale;\r\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\r\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\r\n            console.warn('bad render request outside image data');\r\n            return;\r\n        }\r\n        const destWidth = target.width * 4 /* RGBA_CHANNELS_CNT */;\r\n        const c = 0.5;\r\n        const backgroundR = backgroundColor.r;\r\n        const backgroundG = backgroundColor.g;\r\n        const backgroundB = backgroundColor.b;\r\n        const deltaR = color.r - backgroundR;\r\n        const deltaG = color.g - backgroundG;\r\n        const deltaB = color.b - backgroundB;\r\n        const colorR = backgroundR + deltaR * c;\r\n        const colorG = backgroundG + deltaG * c;\r\n        const colorB = backgroundB + deltaB * c;\r\n        const dest = target.data;\r\n        let row = dy * destWidth + dx * 4 /* RGBA_CHANNELS_CNT */;\r\n        for (let y = 0; y < renderHeight; y++) {\r\n            let column = row;\r\n            for (let x = 0; x < charWidth; x++) {\r\n                dest[column++] = colorR;\r\n                dest[column++] = colorG;\r\n                dest[column++] = colorB;\r\n                column++;\r\n            }\r\n            row += destWidth;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}