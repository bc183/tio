{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\n\nvar KeyCodeStrMap = /*#__PURE__*/function () {\n  function KeyCodeStrMap() {\n    _classCallCheck(this, KeyCodeStrMap);\n\n    this._keyCodeToStr = [];\n    this._strToKeyCode = Object.create(null);\n  }\n\n  _createClass(KeyCodeStrMap, [{\n    key: \"define\",\n    value: function define(keyCode, str) {\n      this._keyCodeToStr[keyCode] = str;\n      this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n  }, {\n    key: \"keyCodeToStr\",\n    value: function keyCodeToStr(keyCode) {\n      return this._keyCodeToStr[keyCode];\n    }\n  }, {\n    key: \"strToKeyCode\",\n    value: function strToKeyCode(str) {\n      return this._strToKeyCode[str.toLowerCase()] || 0\n      /* Unknown */\n      ;\n    }\n  }]);\n\n  return KeyCodeStrMap;\n}();\n\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n  function define(keyCode, uiLabel) {\n    var usUserSettingsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uiLabel;\n    var generalUserSettingsLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : usUserSettingsLabel;\n    uiMap.define(keyCode, uiLabel);\n    userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n    userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n  }\n\n  define(0\n  /* Unknown */\n  , 'unknown');\n  define(1\n  /* Backspace */\n  , 'Backspace');\n  define(2\n  /* Tab */\n  , 'Tab');\n  define(3\n  /* Enter */\n  , 'Enter');\n  define(4\n  /* Shift */\n  , 'Shift');\n  define(5\n  /* Ctrl */\n  , 'Ctrl');\n  define(6\n  /* Alt */\n  , 'Alt');\n  define(7\n  /* PauseBreak */\n  , 'PauseBreak');\n  define(8\n  /* CapsLock */\n  , 'CapsLock');\n  define(9\n  /* Escape */\n  , 'Escape');\n  define(10\n  /* Space */\n  , 'Space');\n  define(11\n  /* PageUp */\n  , 'PageUp');\n  define(12\n  /* PageDown */\n  , 'PageDown');\n  define(13\n  /* End */\n  , 'End');\n  define(14\n  /* Home */\n  , 'Home');\n  define(15\n  /* LeftArrow */\n  , 'LeftArrow', 'Left');\n  define(16\n  /* UpArrow */\n  , 'UpArrow', 'Up');\n  define(17\n  /* RightArrow */\n  , 'RightArrow', 'Right');\n  define(18\n  /* DownArrow */\n  , 'DownArrow', 'Down');\n  define(19\n  /* Insert */\n  , 'Insert');\n  define(20\n  /* Delete */\n  , 'Delete');\n  define(21\n  /* KEY_0 */\n  , '0');\n  define(22\n  /* KEY_1 */\n  , '1');\n  define(23\n  /* KEY_2 */\n  , '2');\n  define(24\n  /* KEY_3 */\n  , '3');\n  define(25\n  /* KEY_4 */\n  , '4');\n  define(26\n  /* KEY_5 */\n  , '5');\n  define(27\n  /* KEY_6 */\n  , '6');\n  define(28\n  /* KEY_7 */\n  , '7');\n  define(29\n  /* KEY_8 */\n  , '8');\n  define(30\n  /* KEY_9 */\n  , '9');\n  define(31\n  /* KEY_A */\n  , 'A');\n  define(32\n  /* KEY_B */\n  , 'B');\n  define(33\n  /* KEY_C */\n  , 'C');\n  define(34\n  /* KEY_D */\n  , 'D');\n  define(35\n  /* KEY_E */\n  , 'E');\n  define(36\n  /* KEY_F */\n  , 'F');\n  define(37\n  /* KEY_G */\n  , 'G');\n  define(38\n  /* KEY_H */\n  , 'H');\n  define(39\n  /* KEY_I */\n  , 'I');\n  define(40\n  /* KEY_J */\n  , 'J');\n  define(41\n  /* KEY_K */\n  , 'K');\n  define(42\n  /* KEY_L */\n  , 'L');\n  define(43\n  /* KEY_M */\n  , 'M');\n  define(44\n  /* KEY_N */\n  , 'N');\n  define(45\n  /* KEY_O */\n  , 'O');\n  define(46\n  /* KEY_P */\n  , 'P');\n  define(47\n  /* KEY_Q */\n  , 'Q');\n  define(48\n  /* KEY_R */\n  , 'R');\n  define(49\n  /* KEY_S */\n  , 'S');\n  define(50\n  /* KEY_T */\n  , 'T');\n  define(51\n  /* KEY_U */\n  , 'U');\n  define(52\n  /* KEY_V */\n  , 'V');\n  define(53\n  /* KEY_W */\n  , 'W');\n  define(54\n  /* KEY_X */\n  , 'X');\n  define(55\n  /* KEY_Y */\n  , 'Y');\n  define(56\n  /* KEY_Z */\n  , 'Z');\n  define(57\n  /* Meta */\n  , 'Meta');\n  define(58\n  /* ContextMenu */\n  , 'ContextMenu');\n  define(59\n  /* F1 */\n  , 'F1');\n  define(60\n  /* F2 */\n  , 'F2');\n  define(61\n  /* F3 */\n  , 'F3');\n  define(62\n  /* F4 */\n  , 'F4');\n  define(63\n  /* F5 */\n  , 'F5');\n  define(64\n  /* F6 */\n  , 'F6');\n  define(65\n  /* F7 */\n  , 'F7');\n  define(66\n  /* F8 */\n  , 'F8');\n  define(67\n  /* F9 */\n  , 'F9');\n  define(68\n  /* F10 */\n  , 'F10');\n  define(69\n  /* F11 */\n  , 'F11');\n  define(70\n  /* F12 */\n  , 'F12');\n  define(71\n  /* F13 */\n  , 'F13');\n  define(72\n  /* F14 */\n  , 'F14');\n  define(73\n  /* F15 */\n  , 'F15');\n  define(74\n  /* F16 */\n  , 'F16');\n  define(75\n  /* F17 */\n  , 'F17');\n  define(76\n  /* F18 */\n  , 'F18');\n  define(77\n  /* F19 */\n  , 'F19');\n  define(78\n  /* NumLock */\n  , 'NumLock');\n  define(79\n  /* ScrollLock */\n  , 'ScrollLock');\n  define(80\n  /* US_SEMICOLON */\n  , ';', ';', 'OEM_1');\n  define(81\n  /* US_EQUAL */\n  , '=', '=', 'OEM_PLUS');\n  define(82\n  /* US_COMMA */\n  , ',', ',', 'OEM_COMMA');\n  define(83\n  /* US_MINUS */\n  , '-', '-', 'OEM_MINUS');\n  define(84\n  /* US_DOT */\n  , '.', '.', 'OEM_PERIOD');\n  define(85\n  /* US_SLASH */\n  , '/', '/', 'OEM_2');\n  define(86\n  /* US_BACKTICK */\n  , '`', '`', 'OEM_3');\n  define(110\n  /* ABNT_C1 */\n  , 'ABNT_C1');\n  define(111\n  /* ABNT_C2 */\n  , 'ABNT_C2');\n  define(87\n  /* US_OPEN_SQUARE_BRACKET */\n  , '[', '[', 'OEM_4');\n  define(88\n  /* US_BACKSLASH */\n  , '\\\\', '\\\\', 'OEM_5');\n  define(89\n  /* US_CLOSE_SQUARE_BRACKET */\n  , ']', ']', 'OEM_6');\n  define(90\n  /* US_QUOTE */\n  , '\\'', '\\'', 'OEM_7');\n  define(91\n  /* OEM_8 */\n  , 'OEM_8');\n  define(92\n  /* OEM_102 */\n  , 'OEM_102');\n  define(93\n  /* NUMPAD_0 */\n  , 'NumPad0');\n  define(94\n  /* NUMPAD_1 */\n  , 'NumPad1');\n  define(95\n  /* NUMPAD_2 */\n  , 'NumPad2');\n  define(96\n  /* NUMPAD_3 */\n  , 'NumPad3');\n  define(97\n  /* NUMPAD_4 */\n  , 'NumPad4');\n  define(98\n  /* NUMPAD_5 */\n  , 'NumPad5');\n  define(99\n  /* NUMPAD_6 */\n  , 'NumPad6');\n  define(100\n  /* NUMPAD_7 */\n  , 'NumPad7');\n  define(101\n  /* NUMPAD_8 */\n  , 'NumPad8');\n  define(102\n  /* NUMPAD_9 */\n  , 'NumPad9');\n  define(103\n  /* NUMPAD_MULTIPLY */\n  , 'NumPad_Multiply');\n  define(104\n  /* NUMPAD_ADD */\n  , 'NumPad_Add');\n  define(105\n  /* NUMPAD_SEPARATOR */\n  , 'NumPad_Separator');\n  define(106\n  /* NUMPAD_SUBTRACT */\n  , 'NumPad_Subtract');\n  define(107\n  /* NUMPAD_DECIMAL */\n  , 'NumPad_Decimal');\n  define(108\n  /* NUMPAD_DIVIDE */\n  , 'NumPad_Divide');\n})();\n\nexport var KeyCodeUtils;\n\n(function (KeyCodeUtils) {\n  function toString(keyCode) {\n    return uiMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toString = toString;\n\n  function fromString(key) {\n    return uiMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromString = fromString;\n\n  function toUserSettingsUS(keyCode) {\n    return userSettingsUSMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n\n  function toUserSettingsGeneral(keyCode) {\n    return userSettingsGeneralMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n\n  function fromUserSettings(key) {\n    return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\n\nexport function KeyChord(firstPart, secondPart) {\n  var chordPart = (secondPart & 0x0000FFFF) << 16 >>> 0;\n  return (firstPart | chordPart) >>> 0;\n}\n_c = KeyChord;\nexport function createKeybinding(keybinding, OS) {\n  if (keybinding === 0) {\n    return null;\n  }\n\n  var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n  var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\n  if (chordPart !== 0) {\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS)]);\n  }\n\n  return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n  var ctrlCmd = keybinding & 2048\n  /* CtrlCmd */\n  ? true : false;\n  var winCtrl = keybinding & 256\n  /* WinCtrl */\n  ? true : false;\n  var ctrlKey = OS === 2\n  /* Macintosh */\n  ? winCtrl : ctrlCmd;\n  var shiftKey = keybinding & 1024\n  /* Shift */\n  ? true : false;\n  var altKey = keybinding & 512\n  /* Alt */\n  ? true : false;\n  var metaKey = OS === 2\n  /* Macintosh */\n  ? ctrlCmd : winCtrl;\n  var keyCode = keybinding & 255\n  /* KeyCode */\n  ;\n  return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport var SimpleKeybinding = /*#__PURE__*/function () {\n  function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n    _classCallCheck(this, SimpleKeybinding);\n\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyCode = keyCode;\n  }\n\n  _createClass(SimpleKeybinding, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.ctrlKey === other.ctrlKey && this.shiftKey === other.shiftKey && this.altKey === other.altKey && this.metaKey === other.metaKey && this.keyCode === other.keyCode;\n    }\n  }, {\n    key: \"isModifierKey\",\n    value: function isModifierKey() {\n      return this.keyCode === 0\n      /* Unknown */\n      || this.keyCode === 5\n      /* Ctrl */\n      || this.keyCode === 57\n      /* Meta */\n      || this.keyCode === 6\n      /* Alt */\n      || this.keyCode === 4\n      /* Shift */\n      ;\n    }\n  }, {\n    key: \"toChord\",\n    value: function toChord() {\n      return new ChordKeybinding([this]);\n    }\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\n\n  }, {\n    key: \"isDuplicateModifierCase\",\n    value: function isDuplicateModifierCase() {\n      return this.ctrlKey && this.keyCode === 5\n      /* Ctrl */\n      || this.shiftKey && this.keyCode === 4\n      /* Shift */\n      || this.altKey && this.keyCode === 6\n      /* Alt */\n      || this.metaKey && this.keyCode === 57\n      /* Meta */\n      ;\n    }\n  }]);\n\n  return SimpleKeybinding;\n}();\nexport var ChordKeybinding = function ChordKeybinding(parts) {\n  _classCallCheck(this, ChordKeybinding);\n\n  if (parts.length === 0) {\n    throw illegalArgument(\"parts\");\n  }\n\n  this.parts = parts;\n};\nexport var ResolvedKeybindingPart = function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n  _classCallCheck(this, ResolvedKeybindingPart);\n\n  this.ctrlKey = ctrlKey;\n  this.shiftKey = shiftKey;\n  this.altKey = altKey;\n  this.metaKey = metaKey;\n  this.keyLabel = kbLabel;\n  this.keyAriaLabel = kbAriaLabel;\n};\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\n\nexport var ResolvedKeybinding = function ResolvedKeybinding() {\n  _classCallCheck(this, ResolvedKeybinding);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyChord\");","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js"],"names":["illegalArgument","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","Object","create","keyCode","str","toLowerCase","uiMap","userSettingsUSMap","userSettingsGeneralMap","define","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","keyCodeToStr","fromString","key","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","chordPart","createKeybinding","keybinding","OS","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","ctrlKey","shiftKey","altKey","metaKey","SimpleKeybinding","other","parts","length","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding"],"mappings":"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CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC;AAAG;AAAJ,IAAiB,GAA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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from './errors.js';\r\nclass KeyCodeStrMap {\r\n    constructor() {\r\n        this._keyCodeToStr = [];\r\n        this._strToKeyCode = Object.create(null);\r\n    }\r\n    define(keyCode, str) {\r\n        this._keyCodeToStr[keyCode] = str;\r\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\r\n    }\r\n    keyCodeToStr(keyCode) {\r\n        return this._keyCodeToStr[keyCode];\r\n    }\r\n    strToKeyCode(str) {\r\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\r\n    }\r\n}\r\nconst uiMap = new KeyCodeStrMap();\r\nconst userSettingsUSMap = new KeyCodeStrMap();\r\nconst userSettingsGeneralMap = new KeyCodeStrMap();\r\n(function () {\r\n    function define(keyCode, uiLabel, usUserSettingsLabel = uiLabel, generalUserSettingsLabel = usUserSettingsLabel) {\r\n        uiMap.define(keyCode, uiLabel);\r\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n    }\r\n    define(0 /* Unknown */, 'unknown');\r\n    define(1 /* Backspace */, 'Backspace');\r\n    define(2 /* Tab */, 'Tab');\r\n    define(3 /* Enter */, 'Enter');\r\n    define(4 /* Shift */, 'Shift');\r\n    define(5 /* Ctrl */, 'Ctrl');\r\n    define(6 /* Alt */, 'Alt');\r\n    define(7 /* PauseBreak */, 'PauseBreak');\r\n    define(8 /* CapsLock */, 'CapsLock');\r\n    define(9 /* Escape */, 'Escape');\r\n    define(10 /* Space */, 'Space');\r\n    define(11 /* PageUp */, 'PageUp');\r\n    define(12 /* PageDown */, 'PageDown');\r\n    define(13 /* End */, 'End');\r\n    define(14 /* Home */, 'Home');\r\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\r\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\r\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\r\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\r\n    define(19 /* Insert */, 'Insert');\r\n    define(20 /* Delete */, 'Delete');\r\n    define(21 /* KEY_0 */, '0');\r\n    define(22 /* KEY_1 */, '1');\r\n    define(23 /* KEY_2 */, '2');\r\n    define(24 /* KEY_3 */, '3');\r\n    define(25 /* KEY_4 */, '4');\r\n    define(26 /* KEY_5 */, '5');\r\n    define(27 /* KEY_6 */, '6');\r\n    define(28 /* KEY_7 */, '7');\r\n    define(29 /* KEY_8 */, '8');\r\n    define(30 /* KEY_9 */, '9');\r\n    define(31 /* KEY_A */, 'A');\r\n    define(32 /* KEY_B */, 'B');\r\n    define(33 /* KEY_C */, 'C');\r\n    define(34 /* KEY_D */, 'D');\r\n    define(35 /* KEY_E */, 'E');\r\n    define(36 /* KEY_F */, 'F');\r\n    define(37 /* KEY_G */, 'G');\r\n    define(38 /* KEY_H */, 'H');\r\n    define(39 /* KEY_I */, 'I');\r\n    define(40 /* KEY_J */, 'J');\r\n    define(41 /* KEY_K */, 'K');\r\n    define(42 /* KEY_L */, 'L');\r\n    define(43 /* KEY_M */, 'M');\r\n    define(44 /* KEY_N */, 'N');\r\n    define(45 /* KEY_O */, 'O');\r\n    define(46 /* KEY_P */, 'P');\r\n    define(47 /* KEY_Q */, 'Q');\r\n    define(48 /* KEY_R */, 'R');\r\n    define(49 /* KEY_S */, 'S');\r\n    define(50 /* KEY_T */, 'T');\r\n    define(51 /* KEY_U */, 'U');\r\n    define(52 /* KEY_V */, 'V');\r\n    define(53 /* KEY_W */, 'W');\r\n    define(54 /* KEY_X */, 'X');\r\n    define(55 /* KEY_Y */, 'Y');\r\n    define(56 /* KEY_Z */, 'Z');\r\n    define(57 /* Meta */, 'Meta');\r\n    define(58 /* ContextMenu */, 'ContextMenu');\r\n    define(59 /* F1 */, 'F1');\r\n    define(60 /* F2 */, 'F2');\r\n    define(61 /* F3 */, 'F3');\r\n    define(62 /* F4 */, 'F4');\r\n    define(63 /* F5 */, 'F5');\r\n    define(64 /* F6 */, 'F6');\r\n    define(65 /* F7 */, 'F7');\r\n    define(66 /* F8 */, 'F8');\r\n    define(67 /* F9 */, 'F9');\r\n    define(68 /* F10 */, 'F10');\r\n    define(69 /* F11 */, 'F11');\r\n    define(70 /* F12 */, 'F12');\r\n    define(71 /* F13 */, 'F13');\r\n    define(72 /* F14 */, 'F14');\r\n    define(73 /* F15 */, 'F15');\r\n    define(74 /* F16 */, 'F16');\r\n    define(75 /* F17 */, 'F17');\r\n    define(76 /* F18 */, 'F18');\r\n    define(77 /* F19 */, 'F19');\r\n    define(78 /* NumLock */, 'NumLock');\r\n    define(79 /* ScrollLock */, 'ScrollLock');\r\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\r\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\r\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\r\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\r\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\r\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\r\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\r\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\r\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\r\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\r\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\r\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\r\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\r\n    define(91 /* OEM_8 */, 'OEM_8');\r\n    define(92 /* OEM_102 */, 'OEM_102');\r\n    define(93 /* NUMPAD_0 */, 'NumPad0');\r\n    define(94 /* NUMPAD_1 */, 'NumPad1');\r\n    define(95 /* NUMPAD_2 */, 'NumPad2');\r\n    define(96 /* NUMPAD_3 */, 'NumPad3');\r\n    define(97 /* NUMPAD_4 */, 'NumPad4');\r\n    define(98 /* NUMPAD_5 */, 'NumPad5');\r\n    define(99 /* NUMPAD_6 */, 'NumPad6');\r\n    define(100 /* NUMPAD_7 */, 'NumPad7');\r\n    define(101 /* NUMPAD_8 */, 'NumPad8');\r\n    define(102 /* NUMPAD_9 */, 'NumPad9');\r\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\r\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\r\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\r\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\r\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\r\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\r\n})();\r\nexport var KeyCodeUtils;\r\n(function (KeyCodeUtils) {\r\n    function toString(keyCode) {\r\n        return uiMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toString = toString;\r\n    function fromString(key) {\r\n        return uiMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromString = fromString;\r\n    function toUserSettingsUS(keyCode) {\r\n        return userSettingsUSMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\r\n    function toUserSettingsGeneral(keyCode) {\r\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\r\n    function fromUserSettings(key) {\r\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\r\n})(KeyCodeUtils || (KeyCodeUtils = {}));\r\nexport function KeyChord(firstPart, secondPart) {\r\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\r\n    return (firstPart | chordPart) >>> 0;\r\n}\r\nexport function createKeybinding(keybinding, OS) {\r\n    if (keybinding === 0) {\r\n        return null;\r\n    }\r\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\r\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\r\n    if (chordPart !== 0) {\r\n        return new ChordKeybinding([\r\n            createSimpleKeybinding(firstPart, OS),\r\n            createSimpleKeybinding(chordPart, OS)\r\n        ]);\r\n    }\r\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\r\n}\r\nexport function createSimpleKeybinding(keybinding, OS) {\r\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\r\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\r\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\r\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\r\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\r\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\r\n    const keyCode = (keybinding & 255 /* KeyCode */);\r\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\nexport class SimpleKeybinding {\r\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyCode = keyCode;\r\n    }\r\n    equals(other) {\r\n        return (this.ctrlKey === other.ctrlKey\r\n            && this.shiftKey === other.shiftKey\r\n            && this.altKey === other.altKey\r\n            && this.metaKey === other.metaKey\r\n            && this.keyCode === other.keyCode);\r\n    }\r\n    isModifierKey() {\r\n        return (this.keyCode === 0 /* Unknown */\r\n            || this.keyCode === 5 /* Ctrl */\r\n            || this.keyCode === 57 /* Meta */\r\n            || this.keyCode === 6 /* Alt */\r\n            || this.keyCode === 4 /* Shift */);\r\n    }\r\n    toChord() {\r\n        return new ChordKeybinding([this]);\r\n    }\r\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\r\n    isDuplicateModifierCase() {\r\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\r\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\r\n            || (this.altKey && this.keyCode === 6 /* Alt */)\r\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\r\n    }\r\n}\r\nexport class ChordKeybinding {\r\n    constructor(parts) {\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(`parts`);\r\n        }\r\n        this.parts = parts;\r\n    }\r\n}\r\nexport class ResolvedKeybindingPart {\r\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyLabel = kbLabel;\r\n        this.keyAriaLabel = kbAriaLabel;\r\n    }\r\n}\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nexport class ResolvedKeybinding {\r\n}\r\n"]},"metadata":{},"sourceType":"module"}