{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * A very VM friendly rgba datastructure.\r\n * Please don't touch unless you take a look at the IR.\r\n */\nexport var RGBA8 = /*#__PURE__*/function () {\n  function RGBA8(r, g, b, a) {\n    _classCallCheck(this, RGBA8);\n\n    this.r = RGBA8._clamp(r);\n    this.g = RGBA8._clamp(g);\n    this.b = RGBA8._clamp(b);\n    this.a = RGBA8._clamp(a);\n  }\n\n  _createClass(RGBA8, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.r === other.r && this.g === other.g && this.b === other.b && this.a === other.a;\n    }\n  }], [{\n    key: \"_clamp\",\n    value: function _clamp(c) {\n      if (c < 0) {\n        return 0;\n      }\n\n      if (c > 255) {\n        return 255;\n      }\n\n      return c | 0;\n    }\n  }]);\n\n  return RGBA8;\n}();\nRGBA8.Empty = new RGBA8(0, 0, 0, 0);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/core/rgba.js"],"names":["RGBA8","r","g","b","a","_clamp","other","c","Empty"],"mappings":";;;AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,WAAaA,KAAb;AACI,iBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AAAA;;AACpB,SAAKH,CAAL,GAASD,KAAK,CAACK,MAAN,CAAaJ,CAAb,CAAT;AACA,SAAKC,CAAL,GAASF,KAAK,CAACK,MAAN,CAAaH,CAAb,CAAT;AACA,SAAKC,CAAL,GAASH,KAAK,CAACK,MAAN,CAAaF,CAAb,CAAT;AACA,SAAKC,CAAL,GAASJ,KAAK,CAACK,MAAN,CAAaD,CAAb,CAAT;AACH;;AANL;AAAA;AAAA,2BAOWE,KAPX,EAOkB;AACV,aAAQ,KAAKL,CAAL,KAAWK,KAAK,CAACL,CAAjB,IACD,KAAKC,CAAL,KAAWI,KAAK,CAACJ,CADhB,IAED,KAAKC,CAAL,KAAWG,KAAK,CAACH,CAFhB,IAGD,KAAKC,CAAL,KAAWE,KAAK,CAACF,CAHxB;AAIH;AAZL;AAAA;AAAA,2BAakBG,CAblB,EAaqB;AACb,UAAIA,CAAC,GAAG,CAAR,EAAW;AACP,eAAO,CAAP;AACH;;AACD,UAAIA,CAAC,GAAG,GAAR,EAAa;AACT,eAAO,GAAP;AACH;;AACD,aAAOA,CAAC,GAAG,CAAX;AACH;AArBL;;AAAA;AAAA;AAuBAP,KAAK,CAACQ,KAAN,GAAc,IAAIR,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * A very VM friendly rgba datastructure.\r\n * Please don't touch unless you take a look at the IR.\r\n */\r\nexport class RGBA8 {\r\n    constructor(r, g, b, a) {\r\n        this.r = RGBA8._clamp(r);\r\n        this.g = RGBA8._clamp(g);\r\n        this.b = RGBA8._clamp(b);\r\n        this.a = RGBA8._clamp(a);\r\n    }\r\n    equals(other) {\r\n        return (this.r === other.r\r\n            && this.g === other.g\r\n            && this.b === other.b\r\n            && this.a === other.a);\r\n    }\r\n    static _clamp(c) {\r\n        if (c < 0) {\r\n            return 0;\r\n        }\r\n        if (c > 255) {\r\n            return 255;\r\n        }\r\n        return c | 0;\r\n    }\r\n}\r\nRGBA8.Empty = new RGBA8(0, 0, 0, 0);\r\n"]},"metadata":{},"sourceType":"module"}