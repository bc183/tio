{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\nvar safeProcess; // Native node.js environment\n\nif (typeof process !== 'undefined') {\n  safeProcess = process;\n} // Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n    safeProcess = {\n      // Supported\n      get platform() {\n        return globals.vscode.process.platform;\n      },\n\n      get env() {\n        return globals.vscode.process.env;\n      },\n\n      nextTick: function nextTick(callback) {\n        return setImmediate(callback);\n      },\n      // Unsupported\n      cwd: function cwd() {\n        return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/'));\n      }\n    };\n  } // Web environment\n  else {\n      safeProcess = {\n        // Supported\n        get platform() {\n          return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n        },\n\n        nextTick: function nextTick(callback) {\n          return setImmediate(callback);\n        },\n\n        // Unsupported\n        get env() {\n          return Object.create(null);\n        },\n\n        cwd: function cwd() {\n          return '/';\n        }\n      };\n    }\n\nexport var cwd = safeProcess.cwd;\nexport var env = safeProcess.env;\nexport var platform = safeProcess.platform;","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/process.js"],"names":["isWindows","isMacintosh","setImmediate","globals","safeProcess","process","vscode","platform","env","nextTick","callback","cwd","execPath","substr","lastIndexOf","Object","create"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,OAA/C,QAA8D,eAA9D;AACA,IAAIC,WAAJ,C,CACA;;AACA,IAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAChCD,EAAAA,WAAW,GAAGC,OAAd;AACH,CAFD,CAGA;AAHA,KAIK,IAAI,OAAOF,OAAO,CAACG,MAAf,KAA0B,WAA9B,EAA2C;AAC5CF,IAAAA,WAAW,GAAG;AACV;AACA,UAAIG,QAAJ,GAAe;AAAE,eAAOJ,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBE,QAA9B;AAAyC,OAFhD;;AAGV,UAAIC,GAAJ,GAAU;AAAE,eAAOL,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBG,GAA9B;AAAoC,OAHtC;;AAIVC,MAAAA,QAJU,oBAIDC,QAJC,EAIS;AAAE,eAAOR,YAAY,CAACQ,QAAD,CAAnB;AAAgC,OAJ3C;AAKV;AACAC,MAAAA,GANU,iBAMJ;AAAE,eAAOR,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBG,GAAvB,CAA2B,YAA3B,KAA4CL,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBO,QAAvB,CAAgCC,MAAhC,CAAuC,CAAvC,EAA0CV,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBO,QAAvB,CAAgCE,WAAhC,CAA4CX,OAAO,CAACG,MAAR,CAAeD,OAAf,CAAuBE,QAAvB,KAAoC,OAApC,GAA8C,IAA9C,GAAqD,GAAjG,CAA1C,CAAnD;AAAsM;AANpM,KAAd;AAQH,GATI,CAUL;AAVK,OAWA;AACDH,MAAAA,WAAW,GAAG;AACV;AACA,YAAIG,QAAJ,GAAe;AAAE,iBAAOP,SAAS,GAAG,OAAH,GAAaC,WAAW,GAAG,QAAH,GAAc,OAAtD;AAAgE,SAFvE;;AAGVQ,QAAAA,QAHU,oBAGDC,QAHC,EAGS;AAAE,iBAAOR,YAAY,CAACQ,QAAD,CAAnB;AAAgC,SAH3C;;AAIV;AACA,YAAIF,GAAJ,GAAU;AAAE,iBAAOO,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AAA6B,SAL/B;;AAMVL,QAAAA,GANU,iBAMJ;AAAE,iBAAO,GAAP;AAAa;AANX,OAAd;AAQH;;AACD,OAAO,IAAMA,GAAG,GAAGP,WAAW,CAACO,GAAxB;AACP,OAAO,IAAMH,GAAG,GAAGJ,WAAW,CAACI,GAAxB;AACP,OAAO,IAAMD,QAAQ,GAAGH,WAAW,CAACG,QAA7B","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\r\nlet safeProcess;\r\n// Native node.js environment\r\nif (typeof process !== 'undefined') {\r\n    safeProcess = process;\r\n}\r\n// Native sandbox environment\r\nelse if (typeof globals.vscode !== 'undefined') {\r\n    safeProcess = {\r\n        // Supported\r\n        get platform() { return globals.vscode.process.platform; },\r\n        get env() { return globals.vscode.process.env; },\r\n        nextTick(callback) { return setImmediate(callback); },\r\n        // Unsupported\r\n        cwd() { return globals.vscode.process.env['VSCODE_CWD'] || globals.vscode.process.execPath.substr(0, globals.vscode.process.execPath.lastIndexOf(globals.vscode.process.platform === 'win32' ? '\\\\' : '/')); }\r\n    };\r\n}\r\n// Web environment\r\nelse {\r\n    safeProcess = {\r\n        // Supported\r\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\r\n        nextTick(callback) { return setImmediate(callback); },\r\n        // Unsupported\r\n        get env() { return Object.create(null); },\r\n        cwd() { return '/'; }\r\n    };\r\n}\r\nexport const cwd = safeProcess.cwd;\r\nexport const env = safeProcess.env;\r\nexport const platform = safeProcess.platform;\r\n"]},"metadata":{},"sourceType":"module"}