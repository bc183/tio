{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nvar defaultOptions = {\n  followsCaret: true,\n  ignoreCharChanges: true,\n  alwaysRevealFirst: true\n};\n/**\r\n * Create a new diff navigator for the provided diff editor.\r\n */\n\nexport var DiffNavigator = /*#__PURE__*/function (_Disposable) {\n  _inherits(DiffNavigator, _Disposable);\n\n  var _super = _createSuper(DiffNavigator);\n\n  function DiffNavigator(editor) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, DiffNavigator);\n\n    _this = _super.call(this);\n    _this._onDidUpdate = _this._register(new Emitter());\n    _this._editor = editor;\n    _this._options = objects.mixin(options, defaultOptions, false);\n    _this.disposed = false;\n    _this.nextIdx = -1;\n    _this.ranges = [];\n    _this.ignoreSelectionChange = false;\n    _this.revealFirst = Boolean(_this._options.alwaysRevealFirst); // hook up to diff editor for diff, disposal, and caret move\n\n    _this._register(_this._editor.onDidDispose(function () {\n      return _this.dispose();\n    }));\n\n    _this._register(_this._editor.onDidUpdateDiff(function () {\n      return _this._onDiffUpdated();\n    }));\n\n    if (_this._options.followsCaret) {\n      _this._register(_this._editor.getModifiedEditor().onDidChangeCursorPosition(function (e) {\n        if (_this.ignoreSelectionChange) {\n          return;\n        }\n\n        _this.nextIdx = -1;\n      }));\n    }\n\n    if (_this._options.alwaysRevealFirst) {\n      _this._register(_this._editor.getModifiedEditor().onDidChangeModel(function (e) {\n        _this.revealFirst = true;\n      }));\n    } // init things\n\n\n    _this._init();\n\n    return _this;\n  }\n\n  _createClass(DiffNavigator, [{\n    key: \"_init\",\n    value: function _init() {\n      var changes = this._editor.getLineChanges();\n\n      if (!changes) {\n        return;\n      }\n    }\n  }, {\n    key: \"_onDiffUpdated\",\n    value: function _onDiffUpdated() {\n      this._init();\n\n      this._compute(this._editor.getLineChanges());\n\n      if (this.revealFirst) {\n        // Only reveal first on first non-null changes\n        if (this._editor.getLineChanges() !== null) {\n          this.revealFirst = false;\n          this.nextIdx = -1;\n          this.next(1\n          /* Immediate */\n          );\n        }\n      }\n    }\n  }, {\n    key: \"_compute\",\n    value: function _compute(lineChanges) {\n      var _this2 = this;\n\n      // new ranges\n      this.ranges = [];\n\n      if (lineChanges) {\n        // create ranges from changes\n        lineChanges.forEach(function (lineChange) {\n          if (!_this2._options.ignoreCharChanges && lineChange.charChanges) {\n            lineChange.charChanges.forEach(function (charChange) {\n              _this2.ranges.push({\n                rhs: true,\n                range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n              });\n            });\n          } else {\n            _this2.ranges.push({\n              rhs: true,\n              range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\n            });\n          }\n        });\n      } // sort\n\n\n      this.ranges.sort(function (left, right) {\n        if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\n          return -1;\n        } else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      this._onDidUpdate.fire(this);\n    }\n  }, {\n    key: \"_initIdx\",\n    value: function _initIdx(fwd) {\n      var found = false;\n\n      var position = this._editor.getPosition();\n\n      if (!position) {\n        this.nextIdx = 0;\n        return;\n      }\n\n      for (var i = 0, len = this.ranges.length; i < len && !found; i++) {\n        var range = this.ranges[i].range;\n\n        if (position.isBeforeOrEqual(range.getStartPosition())) {\n          this.nextIdx = i + (fwd ? 0 : -1);\n          found = true;\n        }\n      }\n\n      if (!found) {\n        // after the last change\n        this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n      }\n\n      if (this.nextIdx < 0) {\n        this.nextIdx = this.ranges.length - 1;\n      }\n    }\n  }, {\n    key: \"_move\",\n    value: function _move(fwd, scrollType) {\n      assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n\n      if (!this.canNavigate()) {\n        return;\n      }\n\n      if (this.nextIdx === -1) {\n        this._initIdx(fwd);\n      } else if (fwd) {\n        this.nextIdx += 1;\n\n        if (this.nextIdx >= this.ranges.length) {\n          this.nextIdx = 0;\n        }\n      } else {\n        this.nextIdx -= 1;\n\n        if (this.nextIdx < 0) {\n          this.nextIdx = this.ranges.length - 1;\n        }\n      }\n\n      var info = this.ranges[this.nextIdx];\n      this.ignoreSelectionChange = true;\n\n      try {\n        var pos = info.range.getStartPosition();\n\n        this._editor.setPosition(pos);\n\n        this._editor.revealPositionInCenter(pos, scrollType);\n      } finally {\n        this.ignoreSelectionChange = false;\n      }\n    }\n  }, {\n    key: \"canNavigate\",\n    value: function canNavigate() {\n      return this.ranges && this.ranges.length > 0;\n    }\n  }, {\n    key: \"next\",\n    value: function next()\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this._move(true, scrollType);\n    }\n  }, {\n    key: \"previous\",\n    value: function previous()\n    /* Smooth */\n    {\n      var scrollType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this._move(false, scrollType);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(DiffNavigator.prototype), \"dispose\", this).call(this);\n\n      this.ranges = [];\n      this.disposed = true;\n    }\n  }]);\n\n  return DiffNavigator;\n}(Disposable);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js"],"names":["assert","Emitter","Disposable","objects","Range","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","DiffNavigator","editor","options","_onDidUpdate","_register","_editor","_options","mixin","disposed","nextIdx","ranges","ignoreSelectionChange","revealFirst","Boolean","onDidDispose","dispose","onDidUpdateDiff","_onDiffUpdated","getModifiedEditor","onDidChangeCursorPosition","e","onDidChangeModel","_init","changes","getLineChanges","_compute","next","lineChanges","forEach","lineChange","charChanges","charChange","push","rhs","range","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","sort","left","right","getStartPosition","isBeforeOrEqual","fire","fwd","found","position","getPosition","i","len","length","scrollType","ok","canNavigate","_initIdx","info","pos","setPosition","revealPositionInCenter","_move"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as assert from '../../../base/common/assert.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nconst defaultOptions = {\r\n    followsCaret: true,\r\n    ignoreCharChanges: true,\r\n    alwaysRevealFirst: true\r\n};\r\n/**\r\n * Create a new diff navigator for the provided diff editor.\r\n */\r\nexport class DiffNavigator extends Disposable {\r\n    constructor(editor, options = {}) {\r\n        super();\r\n        this._onDidUpdate = this._register(new Emitter());\r\n        this._editor = editor;\r\n        this._options = objects.mixin(options, defaultOptions, false);\r\n        this.disposed = false;\r\n        this.nextIdx = -1;\r\n        this.ranges = [];\r\n        this.ignoreSelectionChange = false;\r\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\r\n        // hook up to diff editor for diff, disposal, and caret move\r\n        this._register(this._editor.onDidDispose(() => this.dispose()));\r\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\r\n        if (this._options.followsCaret) {\r\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\r\n                if (this.ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                this.nextIdx = -1;\r\n            }));\r\n        }\r\n        if (this._options.alwaysRevealFirst) {\r\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\r\n                this.revealFirst = true;\r\n            }));\r\n        }\r\n        // init things\r\n        this._init();\r\n    }\r\n    _init() {\r\n        let changes = this._editor.getLineChanges();\r\n        if (!changes) {\r\n            return;\r\n        }\r\n    }\r\n    _onDiffUpdated() {\r\n        this._init();\r\n        this._compute(this._editor.getLineChanges());\r\n        if (this.revealFirst) {\r\n            // Only reveal first on first non-null changes\r\n            if (this._editor.getLineChanges() !== null) {\r\n                this.revealFirst = false;\r\n                this.nextIdx = -1;\r\n                this.next(1 /* Immediate */);\r\n            }\r\n        }\r\n    }\r\n    _compute(lineChanges) {\r\n        // new ranges\r\n        this.ranges = [];\r\n        if (lineChanges) {\r\n            // create ranges from changes\r\n            lineChanges.forEach((lineChange) => {\r\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\r\n                    lineChange.charChanges.forEach((charChange) => {\r\n                        this.ranges.push({\r\n                            rhs: true,\r\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.ranges.push({\r\n                        rhs: true,\r\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // sort\r\n        this.ranges.sort((left, right) => {\r\n            if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\r\n                return -1;\r\n            }\r\n            else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        this._onDidUpdate.fire(this);\r\n    }\r\n    _initIdx(fwd) {\r\n        let found = false;\r\n        let position = this._editor.getPosition();\r\n        if (!position) {\r\n            this.nextIdx = 0;\r\n            return;\r\n        }\r\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\r\n            let range = this.ranges[i].range;\r\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\r\n                this.nextIdx = i + (fwd ? 0 : -1);\r\n                found = true;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\r\n        }\r\n        if (this.nextIdx < 0) {\r\n            this.nextIdx = this.ranges.length - 1;\r\n        }\r\n    }\r\n    _move(fwd, scrollType) {\r\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\r\n        if (!this.canNavigate()) {\r\n            return;\r\n        }\r\n        if (this.nextIdx === -1) {\r\n            this._initIdx(fwd);\r\n        }\r\n        else if (fwd) {\r\n            this.nextIdx += 1;\r\n            if (this.nextIdx >= this.ranges.length) {\r\n                this.nextIdx = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.nextIdx -= 1;\r\n            if (this.nextIdx < 0) {\r\n                this.nextIdx = this.ranges.length - 1;\r\n            }\r\n        }\r\n        let info = this.ranges[this.nextIdx];\r\n        this.ignoreSelectionChange = true;\r\n        try {\r\n            let pos = info.range.getStartPosition();\r\n            this._editor.setPosition(pos);\r\n            this._editor.revealPositionInCenter(pos, scrollType);\r\n        }\r\n        finally {\r\n            this.ignoreSelectionChange = false;\r\n        }\r\n    }\r\n    canNavigate() {\r\n        return this.ranges && this.ranges.length > 0;\r\n    }\r\n    next(scrollType = 0 /* Smooth */) {\r\n        this._move(true, scrollType);\r\n    }\r\n    previous(scrollType = 0 /* Smooth */) {\r\n        this._move(false, scrollType);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.ranges = [];\r\n        this.disposed = true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}