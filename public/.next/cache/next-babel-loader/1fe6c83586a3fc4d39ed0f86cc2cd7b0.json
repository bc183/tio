{"ast":null,"code":"import _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './actionbar.css';\nimport * as platform from '../../../common/platform.js';\nimport * as nls from '../../../../nls.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport * as types from '../../../common/types.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { isFirefox } from '../../browser.js';\nimport { $, addDisposableListener, append, EventHelper, EventType, removeTabIndexAndUpdateFocus } from '../../dom.js';\nexport var BaseActionViewItem = /*#__PURE__*/function (_Disposable) {\n  _inherits(BaseActionViewItem, _Disposable);\n\n  var _super = _createSuper(BaseActionViewItem);\n\n  function BaseActionViewItem(context, action) {\n    var _this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, BaseActionViewItem);\n\n    _this = _super.call(this);\n    _this.options = options;\n    _this._context = context || _assertThisInitialized(_this);\n    _this._action = action;\n\n    if (action instanceof Action) {\n      _this._register(action.onDidChange(function (event) {\n        if (!_this.element) {\n          // we have not been rendered yet, so there\n          // is no point in updating the UI\n          return;\n        }\n\n        _this.handleActionChangeEvent(event);\n      }));\n    }\n\n    return _this;\n  }\n\n  _createClass(BaseActionViewItem, [{\n    key: \"handleActionChangeEvent\",\n    value: function handleActionChangeEvent(event) {\n      if (event.enabled !== undefined) {\n        this.updateEnabled();\n      }\n\n      if (event.checked !== undefined) {\n        this.updateChecked();\n      }\n\n      if (event[\"class\"] !== undefined) {\n        this.updateClass();\n      }\n\n      if (event.label !== undefined) {\n        this.updateLabel();\n        this.updateTooltip();\n      }\n\n      if (event.tooltip !== undefined) {\n        this.updateTooltip();\n      }\n    }\n  }, {\n    key: \"getAction\",\n    value: function getAction() {\n      return this._action;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this._action.enabled;\n    }\n  }, {\n    key: \"setActionContext\",\n    value: function setActionContext(newContext) {\n      this._context = newContext;\n    }\n  }, {\n    key: \"render\",\n    value: function render(container) {\n      var _this2 = this;\n\n      var element = this.element = container;\n\n      this._register(Gesture.addTarget(container));\n\n      var enableDragging = this.options && this.options.draggable;\n\n      if (enableDragging) {\n        container.draggable = true;\n\n        if (isFirefox) {\n          // Firefox: requires to set a text data transfer to get going\n          this._register(addDisposableListener(container, EventType.DRAG_START, function (e) {\n            var _a;\n\n            return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, _this2._action.label);\n          }));\n        }\n      }\n\n      this._register(addDisposableListener(element, TouchEventType.Tap, function (e) {\n        return _this2.onClick(e);\n      }));\n\n      this._register(addDisposableListener(element, EventType.MOUSE_DOWN, function (e) {\n        if (!enableDragging) {\n          EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n        }\n\n        if (_this2._action.enabled && e.button === 0) {\n          element.classList.add('active');\n        }\n      }));\n\n      if (platform.isMacintosh) {\n        // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n        // main mouse button. This is for scenarios where e.g. some interaction forces\n        // the Ctrl+key to be pressed and hold but the user still wants to interact\n        // with the actions (for example quick access in quick navigation mode).\n        this._register(addDisposableListener(element, EventType.CONTEXT_MENU, function (e) {\n          if (e.button === 0 && e.ctrlKey === true) {\n            _this2.onClick(e);\n          }\n        }));\n      }\n\n      this._register(addDisposableListener(element, EventType.CLICK, function (e) {\n        EventHelper.stop(e, true); // menus do not use the click event\n\n        if (!(_this2.options && _this2.options.isMenu)) {\n          platform.setImmediate(function () {\n            return _this2.onClick(e);\n          });\n        }\n      }));\n\n      this._register(addDisposableListener(element, EventType.DBLCLICK, function (e) {\n        EventHelper.stop(e, true);\n      }));\n\n      [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(function (event) {\n        _this2._register(addDisposableListener(element, event, function (e) {\n          EventHelper.stop(e);\n          element.classList.remove('active');\n        }));\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var _a;\n\n      EventHelper.stop(event, true);\n      var context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : undefined : this._context;\n      this.actionRunner.run(this._action, context);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.element) {\n        this.element.focus();\n        this.element.classList.add('focused');\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this.element) {\n        this.element.blur();\n        this.element.classList.remove('focused');\n      }\n    }\n  }, {\n    key: \"updateEnabled\",\n    value: function updateEnabled() {// implement in subclass\n    }\n  }, {\n    key: \"updateLabel\",\n    value: function updateLabel() {// implement in subclass\n    }\n  }, {\n    key: \"updateTooltip\",\n    value: function updateTooltip() {// implement in subclass\n    }\n  }, {\n    key: \"updateClass\",\n    value: function updateClass() {// implement in subclass\n    }\n  }, {\n    key: \"updateChecked\",\n    value: function updateChecked() {// implement in subclass\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.element) {\n        this.element.remove();\n        this.element = undefined;\n      }\n\n      _get(_getPrototypeOf(BaseActionViewItem.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"actionRunner\",\n    get: function get() {\n      if (!this._actionRunner) {\n        this._actionRunner = this._register(new ActionRunner());\n      }\n\n      return this._actionRunner;\n    },\n    set: function set(actionRunner) {\n      this._actionRunner = actionRunner;\n    }\n  }]);\n\n  return BaseActionViewItem;\n}(Disposable);\nexport var ActionViewItem = /*#__PURE__*/function (_BaseActionViewItem) {\n  _inherits(ActionViewItem, _BaseActionViewItem);\n\n  var _super2 = _createSuper(ActionViewItem);\n\n  function ActionViewItem(context, action) {\n    var _this3;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, ActionViewItem);\n\n    _this3 = _super2.call(this, context, action, options);\n    _this3.options = options;\n    _this3.options.icon = options.icon !== undefined ? options.icon : false;\n    _this3.options.label = options.label !== undefined ? options.label : true;\n    _this3.cssClass = '';\n    return _this3;\n  }\n\n  _createClass(ActionViewItem, [{\n    key: \"render\",\n    value: function render(container) {\n      _get(_getPrototypeOf(ActionViewItem.prototype), \"render\", this).call(this, container);\n\n      if (this.element) {\n        this.label = append(this.element, $('a.action-label'));\n      }\n\n      if (this.label) {\n        if (this._action.id === Separator.ID) {\n          this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n        } else {\n          if (this.options.isMenu) {\n            this.label.setAttribute('role', 'menuitem');\n          } else {\n            this.label.setAttribute('role', 'button');\n          }\n        }\n      }\n\n      if (this.options.label && this.options.keybinding && this.element) {\n        append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n      }\n\n      this.updateClass();\n      this.updateLabel();\n      this.updateTooltip();\n      this.updateEnabled();\n      this.updateChecked();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      _get(_getPrototypeOf(ActionViewItem.prototype), \"focus\", this).call(this);\n\n      if (this.label) {\n        this.label.focus();\n      }\n    }\n  }, {\n    key: \"updateLabel\",\n    value: function updateLabel() {\n      if (this.options.label && this.label) {\n        this.label.textContent = this.getAction().label;\n      }\n    }\n  }, {\n    key: \"updateTooltip\",\n    value: function updateTooltip() {\n      var title = null;\n\n      if (this.getAction().tooltip) {\n        title = this.getAction().tooltip;\n      } else if (!this.options.label && this.getAction().label && this.options.icon) {\n        title = this.getAction().label;\n\n        if (this.options.keybinding) {\n          title = nls.localize({\n            key: 'titleLabel',\n            comment: ['action title', 'action keybinding']\n          }, \"{0} ({1})\", title, this.options.keybinding);\n        }\n      }\n\n      if (title && this.label) {\n        this.label.title = title;\n      }\n    }\n  }, {\n    key: \"updateClass\",\n    value: function updateClass() {\n      if (this.cssClass && this.label) {\n        var _this$label$classList;\n\n        (_this$label$classList = this.label.classList).remove.apply(_this$label$classList, _toConsumableArray(this.cssClass.split(' ')));\n      }\n\n      if (this.options.icon) {\n        this.cssClass = this.getAction()[\"class\"];\n\n        if (this.label) {\n          this.label.classList.add('codicon');\n\n          if (this.cssClass) {\n            var _this$label$classList2;\n\n            (_this$label$classList2 = this.label.classList).add.apply(_this$label$classList2, _toConsumableArray(this.cssClass.split(' ')));\n          }\n        }\n\n        this.updateEnabled();\n      } else {\n        if (this.label) {\n          this.label.classList.remove('codicon');\n        }\n      }\n    }\n  }, {\n    key: \"updateEnabled\",\n    value: function updateEnabled() {\n      if (this.getAction().enabled) {\n        if (this.label) {\n          this.label.removeAttribute('aria-disabled');\n          this.label.classList.remove('disabled');\n          this.label.tabIndex = 0;\n        }\n\n        if (this.element) {\n          this.element.classList.remove('disabled');\n        }\n      } else {\n        if (this.label) {\n          this.label.setAttribute('aria-disabled', 'true');\n          this.label.classList.add('disabled');\n          removeTabIndexAndUpdateFocus(this.label);\n        }\n\n        if (this.element) {\n          this.element.classList.add('disabled');\n        }\n      }\n    }\n  }, {\n    key: \"updateChecked\",\n    value: function updateChecked() {\n      if (this.label) {\n        if (this.getAction().checked) {\n          this.label.classList.add('checked');\n        } else {\n          this.label.classList.remove('checked');\n        }\n      }\n    }\n  }]);\n\n  return ActionViewItem;\n}(BaseActionViewItem);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js"],"names":["platform","nls","Disposable","Action","ActionRunner","Separator","types","EventType","TouchEventType","Gesture","DataTransfers","isFirefox","$","addDisposableListener","append","EventHelper","removeTabIndexAndUpdateFocus","BaseActionViewItem","context","action","options","_context","_action","_register","onDidChange","event","element","handleActionChangeEvent","enabled","undefined","updateEnabled","checked","updateChecked","updateClass","label","updateLabel","updateTooltip","tooltip","newContext","container","addTarget","enableDragging","draggable","DRAG_START","e","_a","dataTransfer","setData","TEXT","Tap","onClick","MOUSE_DOWN","stop","button","classList","add","isMacintosh","CONTEXT_MENU","ctrlKey","CLICK","isMenu","setImmediate","DBLCLICK","MOUSE_UP","MOUSE_OUT","forEach","remove","isUndefinedOrNull","useEventAsContext","actionRunner","run","focus","blur","_actionRunner","ActionViewItem","icon","cssClass","id","ID","setAttribute","keybinding","textContent","getAction","title","localize","key","comment","split","removeAttribute","tabIndex"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './actionbar.css';\r\nimport * as platform from '../../../common/platform.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\r\nimport * as types from '../../../common/types.js';\r\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\r\nimport { DataTransfers } from '../../dnd.js';\r\nimport { isFirefox } from '../../browser.js';\r\nimport { $, addDisposableListener, append, EventHelper, EventType, removeTabIndexAndUpdateFocus } from '../../dom.js';\r\nexport class BaseActionViewItem extends Disposable {\r\n    constructor(context, action, options = {}) {\r\n        super();\r\n        this.options = options;\r\n        this._context = context || this;\r\n        this._action = action;\r\n        if (action instanceof Action) {\r\n            this._register(action.onDidChange(event => {\r\n                if (!this.element) {\r\n                    // we have not been rendered yet, so there\r\n                    // is no point in updating the UI\r\n                    return;\r\n                }\r\n                this.handleActionChangeEvent(event);\r\n            }));\r\n        }\r\n    }\r\n    handleActionChangeEvent(event) {\r\n        if (event.enabled !== undefined) {\r\n            this.updateEnabled();\r\n        }\r\n        if (event.checked !== undefined) {\r\n            this.updateChecked();\r\n        }\r\n        if (event.class !== undefined) {\r\n            this.updateClass();\r\n        }\r\n        if (event.label !== undefined) {\r\n            this.updateLabel();\r\n            this.updateTooltip();\r\n        }\r\n        if (event.tooltip !== undefined) {\r\n            this.updateTooltip();\r\n        }\r\n    }\r\n    get actionRunner() {\r\n        if (!this._actionRunner) {\r\n            this._actionRunner = this._register(new ActionRunner());\r\n        }\r\n        return this._actionRunner;\r\n    }\r\n    set actionRunner(actionRunner) {\r\n        this._actionRunner = actionRunner;\r\n    }\r\n    getAction() {\r\n        return this._action;\r\n    }\r\n    isEnabled() {\r\n        return this._action.enabled;\r\n    }\r\n    setActionContext(newContext) {\r\n        this._context = newContext;\r\n    }\r\n    render(container) {\r\n        const element = this.element = container;\r\n        this._register(Gesture.addTarget(container));\r\n        const enableDragging = this.options && this.options.draggable;\r\n        if (enableDragging) {\r\n            container.draggable = true;\r\n            if (isFirefox) {\r\n                // Firefox: requires to set a text data transfer to get going\r\n                this._register(addDisposableListener(container, EventType.DRAG_START, e => { var _a; return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label); }));\r\n            }\r\n        }\r\n        this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e)));\r\n        this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\r\n            if (!enableDragging) {\r\n                EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\r\n            }\r\n            if (this._action.enabled && e.button === 0) {\r\n                element.classList.add('active');\r\n            }\r\n        }));\r\n        if (platform.isMacintosh) {\r\n            // macOS: allow to trigger the button when holding Ctrl+key and pressing the\r\n            // main mouse button. This is for scenarios where e.g. some interaction forces\r\n            // the Ctrl+key to be pressed and hold but the user still wants to interact\r\n            // with the actions (for example quick access in quick navigation mode).\r\n            this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\r\n                if (e.button === 0 && e.ctrlKey === true) {\r\n                    this.onClick(e);\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(element, EventType.CLICK, e => {\r\n            EventHelper.stop(e, true);\r\n            // menus do not use the click event\r\n            if (!(this.options && this.options.isMenu)) {\r\n                platform.setImmediate(() => this.onClick(e));\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\r\n            EventHelper.stop(e, true);\r\n        }));\r\n        [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\r\n            this._register(addDisposableListener(element, event, e => {\r\n                EventHelper.stop(e);\r\n                element.classList.remove('active');\r\n            }));\r\n        });\r\n    }\r\n    onClick(event) {\r\n        var _a;\r\n        EventHelper.stop(event, true);\r\n        const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : undefined : this._context;\r\n        this.actionRunner.run(this._action, context);\r\n    }\r\n    focus() {\r\n        if (this.element) {\r\n            this.element.focus();\r\n            this.element.classList.add('focused');\r\n        }\r\n    }\r\n    blur() {\r\n        if (this.element) {\r\n            this.element.blur();\r\n            this.element.classList.remove('focused');\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        // implement in subclass\r\n    }\r\n    updateLabel() {\r\n        // implement in subclass\r\n    }\r\n    updateTooltip() {\r\n        // implement in subclass\r\n    }\r\n    updateClass() {\r\n        // implement in subclass\r\n    }\r\n    updateChecked() {\r\n        // implement in subclass\r\n    }\r\n    dispose() {\r\n        if (this.element) {\r\n            this.element.remove();\r\n            this.element = undefined;\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexport class ActionViewItem extends BaseActionViewItem {\r\n    constructor(context, action, options = {}) {\r\n        super(context, action, options);\r\n        this.options = options;\r\n        this.options.icon = options.icon !== undefined ? options.icon : false;\r\n        this.options.label = options.label !== undefined ? options.label : true;\r\n        this.cssClass = '';\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            this.label = append(this.element, $('a.action-label'));\r\n        }\r\n        if (this.label) {\r\n            if (this._action.id === Separator.ID) {\r\n                this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\r\n            }\r\n            else {\r\n                if (this.options.isMenu) {\r\n                    this.label.setAttribute('role', 'menuitem');\r\n                }\r\n                else {\r\n                    this.label.setAttribute('role', 'button');\r\n                }\r\n            }\r\n        }\r\n        if (this.options.label && this.options.keybinding && this.element) {\r\n            append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\r\n        }\r\n        this.updateClass();\r\n        this.updateLabel();\r\n        this.updateTooltip();\r\n        this.updateEnabled();\r\n        this.updateChecked();\r\n    }\r\n    focus() {\r\n        super.focus();\r\n        if (this.label) {\r\n            this.label.focus();\r\n        }\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this.getAction().label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        let title = null;\r\n        if (this.getAction().tooltip) {\r\n            title = this.getAction().tooltip;\r\n        }\r\n        else if (!this.options.label && this.getAction().label && this.options.icon) {\r\n            title = this.getAction().label;\r\n            if (this.options.keybinding) {\r\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\r\n            }\r\n        }\r\n        if (title && this.label) {\r\n            this.label.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.cssClass && this.label) {\r\n            this.label.classList.remove(...this.cssClass.split(' '));\r\n        }\r\n        if (this.options.icon) {\r\n            this.cssClass = this.getAction().class;\r\n            if (this.label) {\r\n                this.label.classList.add('codicon');\r\n                if (this.cssClass) {\r\n                    this.label.classList.add(...this.cssClass.split(' '));\r\n                }\r\n            }\r\n            this.updateEnabled();\r\n        }\r\n        else {\r\n            if (this.label) {\r\n                this.label.classList.remove('codicon');\r\n            }\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        if (this.getAction().enabled) {\r\n            if (this.label) {\r\n                this.label.removeAttribute('aria-disabled');\r\n                this.label.classList.remove('disabled');\r\n                this.label.tabIndex = 0;\r\n            }\r\n            if (this.element) {\r\n                this.element.classList.remove('disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (this.label) {\r\n                this.label.setAttribute('aria-disabled', 'true');\r\n                this.label.classList.add('disabled');\r\n                removeTabIndexAndUpdateFocus(this.label);\r\n            }\r\n            if (this.element) {\r\n                this.element.classList.add('disabled');\r\n            }\r\n        }\r\n    }\r\n    updateChecked() {\r\n        if (this.label) {\r\n            if (this.getAction().checked) {\r\n                this.label.classList.add('checked');\r\n            }\r\n            else {\r\n                this.label.classList.remove('checked');\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}