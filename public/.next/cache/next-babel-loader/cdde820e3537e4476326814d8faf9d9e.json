{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\nexport var DiffChange = /*#__PURE__*/function () {\n  /**\r\n   * Constructs a new DiffChange with the given sequence information\r\n   * and content.\r\n   */\n  function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n    _classCallCheck(this, DiffChange);\n\n    //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n    this.originalStart = originalStart;\n    this.originalLength = originalLength;\n    this.modifiedStart = modifiedStart;\n    this.modifiedLength = modifiedLength;\n  }\n  /**\r\n   * The end point (exclusive) of the change in the original sequence.\r\n   */\n\n\n  _createClass(DiffChange, [{\n    key: \"getOriginalEnd\",\n    value: function getOriginalEnd() {\n      return this.originalStart + this.originalLength;\n    }\n    /**\r\n     * The end point (exclusive) of the change in the modified sequence.\r\n     */\n\n  }, {\n    key: \"getModifiedEnd\",\n    value: function getModifiedEnd() {\n      return this.modifiedStart + this.modifiedLength;\n    }\n  }]);\n\n  return DiffChange;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js"],"names":["DiffChange","originalStart","originalLength","modifiedStart","modifiedLength"],"mappings":";;;AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,WAAaA,UAAb;AACI;AACJ;AACA;AACA;AACI,sBAAYC,aAAZ,EAA2BC,cAA3B,EAA2CC,aAA3C,EAA0DC,cAA1D,EAA0E;AAAA;;AACtE;AACA,SAAKH,aAAL,GAAqBA,aAArB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH;AACD;AACJ;AACA;;;AAdA;AAAA;AAAA,qCAeqB;AACb,aAAO,KAAKH,aAAL,GAAqB,KAAKC,cAAjC;AACH;AACD;AACJ;AACA;;AApBA;AAAA;AAAA,qCAqBqB;AACb,aAAO,KAAKC,aAAL,GAAqB,KAAKC,cAAjC;AACH;AAvBL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\r\nexport class DiffChange {\r\n    /**\r\n     * Constructs a new DiffChange with the given sequence information\r\n     * and content.\r\n     */\r\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\r\n        this.originalStart = originalStart;\r\n        this.originalLength = originalLength;\r\n        this.modifiedStart = modifiedStart;\r\n        this.modifiedLength = modifiedLength;\r\n    }\r\n    /**\r\n     * The end point (exclusive) of the change in the original sequence.\r\n     */\r\n    getOriginalEnd() {\r\n        return this.originalStart + this.originalLength;\r\n    }\r\n    /**\r\n     * The end point (exclusive) of the change in the modified sequence.\r\n     */\r\n    getModifiedEnd() {\r\n        return this.modifiedStart + this.modifiedLength;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}