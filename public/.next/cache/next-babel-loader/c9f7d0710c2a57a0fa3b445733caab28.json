{"ast":null,"code":"import _regeneratorRuntime from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport var InlineDiffMargin = /*#__PURE__*/function (_Disposable) {\n  _inherits(InlineDiffMargin, _Disposable);\n\n  var _super = _createSuper(InlineDiffMargin);\n\n  function InlineDiffMargin(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n    var _this;\n\n    _classCallCheck(this, InlineDiffMargin);\n\n    _this = _super.call(this);\n    _this._viewZoneId = _viewZoneId;\n    _this._marginDomNode = _marginDomNode;\n    _this.editor = editor;\n    _this.diff = diff;\n    _this._contextMenuService = _contextMenuService;\n    _this._clipboardService = _clipboardService;\n    _this._visibility = false; // make sure the diff margin shows above overlay.\n\n    _this._marginDomNode.style.zIndex = '10';\n    _this._diffActions = document.createElement('div');\n    _this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n    _this._diffActions.style.position = 'absolute';\n    var lineHeight = editor.getOption(53\n    /* lineHeight */\n    );\n    var lineFeed = editor.getModel().getEOL();\n    _this._diffActions.style.right = '0px';\n    _this._diffActions.style.visibility = 'hidden';\n    _this._diffActions.style.height = \"\".concat(lineHeight, \"px\");\n    _this._diffActions.style.lineHeight = \"\".concat(lineHeight, \"px\");\n\n    _this._marginDomNode.appendChild(_this._diffActions);\n\n    var actions = []; // default action\n\n    actions.push(new Action('diff.clipboard.copyDeletedContent', diff.originalEndLineNumber > diff.modifiedStartLineNumber ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\") : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"), undefined, true, function () {\n      return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var range, deletedText;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n                deletedText = diff.originalModel.getValueInRange(range);\n                _context.next = 4;\n                return this._clipboardService.writeText(deletedText);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }));\n    var currentLineNumberOffset = 0;\n    var copyLineAction = undefined;\n\n    if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n      copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber), undefined, true, function () {\n        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var lineContent;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                  _context2.next = 3;\n                  return this._clipboardService.writeText(lineContent);\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n      });\n      actions.push(copyLineAction);\n    }\n\n    var readOnly = editor.getOption(75\n    /* readOnly */\n    );\n\n    if (!readOnly) {\n      actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, function () {\n        return __awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var range, deletedText, column, _column;\n\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                  deletedText = diff.originalModel.getValueInRange(range);\n\n                  if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [{\n                      range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                      text: lineFeed + deletedText\n                    }]);\n                  } else {\n                    _column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [{\n                      range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, _column),\n                      text: deletedText\n                    }]);\n                  }\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n      }));\n    }\n\n    var showContextMenu = function showContextMenu(x, y) {\n      _this._contextMenuService.showContextMenu({\n        getAnchor: function getAnchor() {\n          return {\n            x: x,\n            y: y\n          };\n        },\n        getActions: function getActions() {\n          if (copyLineAction) {\n            copyLineAction.label = nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n          }\n\n          return actions;\n        },\n        autoSelectFirstItem: true\n      });\n    };\n\n    _this._register(dom.addStandardDisposableListener(_this._diffActions, 'mousedown', function (e) {\n      var _dom$getDomNodePagePo = dom.getDomNodePagePosition(_this._diffActions),\n          top = _dom$getDomNodePagePo.top,\n          height = _dom$getDomNodePagePo.height;\n\n      var pad = Math.floor(lineHeight / 3);\n      e.preventDefault();\n      showContextMenu(e.posx, top + height + pad);\n    }));\n\n    _this._register(editor.onMouseMove(function (e) {\n      if (e.target.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || e.target.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ) {\n          var viewZoneId = e.target.detail.viewZoneId;\n\n          if (viewZoneId === _this._viewZoneId) {\n            _this.visibility = true;\n            currentLineNumberOffset = _this._updateLightBulbPosition(_this._marginDomNode, e.event.browserEvent.y, lineHeight);\n          } else {\n            _this.visibility = false;\n          }\n        } else {\n        _this.visibility = false;\n      }\n    }));\n\n    _this._register(editor.onMouseDown(function (e) {\n      if (!e.event.rightButton) {\n        return;\n      }\n\n      if (e.target.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || e.target.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ) {\n          var viewZoneId = e.target.detail.viewZoneId;\n\n          if (viewZoneId === _this._viewZoneId) {\n            e.event.preventDefault();\n            currentLineNumberOffset = _this._updateLightBulbPosition(_this._marginDomNode, e.event.browserEvent.y, lineHeight);\n            showContextMenu(e.event.posx, e.event.posy + lineHeight);\n          }\n        }\n    }));\n\n    return _this;\n  }\n\n  _createClass(InlineDiffMargin, [{\n    key: \"_updateLightBulbPosition\",\n    value: function _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n      var _dom$getDomNodePagePo2 = dom.getDomNodePagePosition(marginDomNode),\n          top = _dom$getDomNodePagePo2.top;\n\n      var offset = y - top;\n      var lineNumberOffset = Math.floor(offset / lineHeight);\n      var newTop = lineNumberOffset * lineHeight;\n      this._diffActions.style.top = \"\".concat(newTop, \"px\");\n\n      if (this.diff.viewLineCounts) {\n        var acc = 0;\n\n        for (var i = 0; i < this.diff.viewLineCounts.length; i++) {\n          acc += this.diff.viewLineCounts[i];\n\n          if (lineNumberOffset < acc) {\n            return i;\n          }\n        }\n      }\n\n      return lineNumberOffset;\n    }\n  }, {\n    key: \"visibility\",\n    get: function get() {\n      return this._visibility;\n    },\n    set: function set(_visibility) {\n      if (this._visibility !== _visibility) {\n        this._visibility = _visibility;\n\n        if (_visibility) {\n          this._diffActions.style.visibility = 'visible';\n        } else {\n          this._diffActions.style.visibility = 'hidden';\n        }\n      }\n    }\n  }]);\n\n  return InlineDiffMargin;\n}(Disposable);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","dom","Action","Disposable","Range","Codicon","InlineDiffMargin","_viewZoneId","_marginDomNode","editor","diff","_contextMenuService","_clipboardService","_visibility","style","zIndex","_diffActions","document","createElement","className","lightBulb","classNames","position","lineHeight","getOption","lineFeed","getModel","getEOL","right","visibility","height","appendChild","actions","push","originalEndLineNumber","modifiedStartLineNumber","localize","undefined","range","originalStartLineNumber","deletedText","originalModel","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","lineContent","getLineContent","readOnly","getLineMaxColumn","modifiedEndLineNumber","column","executeEdits","text","showContextMenu","x","y","getAnchor","getActions","label","autoSelectFirstItem","_register","addStandardDisposableListener","getDomNodePagePosition","top","pad","Math","floor","preventDefault","posx","onMouseMove","target","type","viewZoneId","detail","_updateLightBulbPosition","event","browserEvent","onMouseDown","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","i","length"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport class InlineDiffMargin extends Disposable {\r\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\r\n        super();\r\n        this._viewZoneId = _viewZoneId;\r\n        this._marginDomNode = _marginDomNode;\r\n        this.editor = editor;\r\n        this.diff = diff;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._clipboardService = _clipboardService;\r\n        this._visibility = false;\r\n        // make sure the diff margin shows above overlay.\r\n        this._marginDomNode.style.zIndex = '10';\r\n        this._diffActions = document.createElement('div');\r\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\r\n        this._diffActions.style.position = 'absolute';\r\n        const lineHeight = editor.getOption(53 /* lineHeight */);\r\n        const lineFeed = editor.getModel().getEOL();\r\n        this._diffActions.style.right = '0px';\r\n        this._diffActions.style.visibility = 'hidden';\r\n        this._diffActions.style.height = `${lineHeight}px`;\r\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\r\n        this._marginDomNode.appendChild(this._diffActions);\r\n        const actions = [];\r\n        // default action\r\n        actions.push(new Action('diff.clipboard.copyDeletedContent', diff.originalEndLineNumber > diff.modifiedStartLineNumber\r\n            ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\r\n            : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\r\n            const deletedText = diff.originalModel.getValueInRange(range);\r\n            yield this._clipboardService.writeText(deletedText);\r\n        })));\r\n        let currentLineNumberOffset = 0;\r\n        let copyLineAction = undefined;\r\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\r\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\r\n                yield this._clipboardService.writeText(lineContent);\r\n            }));\r\n            actions.push(copyLineAction);\r\n        }\r\n        const readOnly = editor.getOption(75 /* readOnly */);\r\n        if (!readOnly) {\r\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\r\n                const deletedText = diff.originalModel.getValueInRange(range);\r\n                if (diff.modifiedEndLineNumber === 0) {\r\n                    // deletion only\r\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\r\n                    editor.executeEdits('diffEditor', [\r\n                        {\r\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\r\n                            text: lineFeed + deletedText\r\n                        }\r\n                    ]);\r\n                }\r\n                else {\r\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\r\n                    editor.executeEdits('diffEditor', [\r\n                        {\r\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\r\n                            text: deletedText\r\n                        }\r\n                    ]);\r\n                }\r\n            })));\r\n        }\r\n        const showContextMenu = (x, y) => {\r\n            this._contextMenuService.showContextMenu({\r\n                getAnchor: () => {\r\n                    return {\r\n                        x,\r\n                        y\r\n                    };\r\n                },\r\n                getActions: () => {\r\n                    if (copyLineAction) {\r\n                        copyLineAction.label = nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\r\n                    }\r\n                    return actions;\r\n                },\r\n                autoSelectFirstItem: true\r\n            });\r\n        };\r\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\r\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\r\n            let pad = Math.floor(lineHeight / 3);\r\n            e.preventDefault();\r\n            showContextMenu(e.posx, top + height + pad);\r\n        }));\r\n        this._register(editor.onMouseMove((e) => {\r\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\r\n                const viewZoneId = e.target.detail.viewZoneId;\r\n                if (viewZoneId === this._viewZoneId) {\r\n                    this.visibility = true;\r\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\r\n                }\r\n                else {\r\n                    this.visibility = false;\r\n                }\r\n            }\r\n            else {\r\n                this.visibility = false;\r\n            }\r\n        }));\r\n        this._register(editor.onMouseDown((e) => {\r\n            if (!e.event.rightButton) {\r\n                return;\r\n            }\r\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\r\n                const viewZoneId = e.target.detail.viewZoneId;\r\n                if (viewZoneId === this._viewZoneId) {\r\n                    e.event.preventDefault();\r\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\r\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    get visibility() {\r\n        return this._visibility;\r\n    }\r\n    set visibility(_visibility) {\r\n        if (this._visibility !== _visibility) {\r\n            this._visibility = _visibility;\r\n            if (_visibility) {\r\n                this._diffActions.style.visibility = 'visible';\r\n            }\r\n            else {\r\n                this._diffActions.style.visibility = 'hidden';\r\n            }\r\n        }\r\n    }\r\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\r\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\r\n        const offset = y - top;\r\n        const lineNumberOffset = Math.floor(offset / lineHeight);\r\n        const newTop = lineNumberOffset * lineHeight;\r\n        this._diffActions.style.top = `${newTop}px`;\r\n        if (this.diff.viewLineCounts) {\r\n            let acc = 0;\r\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\r\n                acc += this.diff.viewLineCounts[i];\r\n                if (lineNumberOffset < acc) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return lineNumberOffset;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}