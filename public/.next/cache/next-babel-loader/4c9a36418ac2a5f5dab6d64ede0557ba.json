{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { TernarySearchTree } from '../../../base/common/map.js';\nexport var IWorkspaceContextService = createDecorator('contextService');\nexport var Workspace = /*#__PURE__*/function () {\n  function Workspace(_id, folders, _configuration, _ignorePathCasing) {\n    _classCallCheck(this, Workspace);\n\n    this._id = _id;\n    this._configuration = _configuration;\n    this._ignorePathCasing = _ignorePathCasing;\n    this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\n    this.folders = folders;\n  }\n\n  _createClass(Workspace, [{\n    key: \"getFolder\",\n    value: function getFolder(resource) {\n      if (!resource) {\n        return null;\n      }\n\n      return this._foldersMap.findSubstr(resource[\"with\"]({\n        scheme: resource.scheme,\n        authority: resource.authority,\n        path: resource.path\n      })) || null;\n    }\n  }, {\n    key: \"updateFoldersMap\",\n    value: function updateFoldersMap() {\n      this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\n\n      var _iterator = _createForOfIteratorHelper(this.folders),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var folder = _step.value;\n\n          this._foldersMap.set(folder.uri, folder);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        id: this.id,\n        folders: this.folders,\n        configuration: this.configuration\n      };\n    }\n  }, {\n    key: \"folders\",\n    get: function get() {\n      return this._folders;\n    },\n    set: function set(folders) {\n      this._folders = folders;\n      this.updateFoldersMap();\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"configuration\",\n    get: function get() {\n      return this._configuration;\n    },\n    set: function set(configuration) {\n      this._configuration = configuration;\n    }\n  }]);\n\n  return Workspace;\n}();\nexport var WorkspaceFolder = /*#__PURE__*/function () {\n  function WorkspaceFolder(data, raw) {\n    _classCallCheck(this, WorkspaceFolder);\n\n    this.raw = raw;\n    this.uri = data.uri;\n    this.index = data.index;\n    this.name = data.name;\n  }\n\n  _createClass(WorkspaceFolder, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        uri: this.uri,\n        name: this.name,\n        index: this.index\n      };\n    }\n  }]);\n\n  return WorkspaceFolder;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js"],"names":["createDecorator","TernarySearchTree","IWorkspaceContextService","Workspace","_id","folders","_configuration","_ignorePathCasing","_foldersMap","forUris","resource","findSubstr","scheme","authority","path","folder","set","uri","id","configuration","_folders","updateFoldersMap","WorkspaceFolder","data","raw","index","name"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,6CAAhC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAO,IAAMC,wBAAwB,GAAGF,eAAe,CAAC,gBAAD,CAAhD;AACP,WAAaG,SAAb;AACI,qBAAYC,GAAZ,EAAiBC,OAAjB,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6D;AAAA;;AACzD,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKE,cAAL,GAAsBA,cAAtB;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,WAAL,GAAmBP,iBAAiB,CAACQ,OAAlB,CAA0B,KAAKF,iBAA/B,CAAnB;AACA,SAAKF,OAAL,GAAeA,OAAf;AACH;;AAPL;AAAA;AAAA,8BAwBcK,QAxBd,EAwBwB;AAChB,UAAI,CAACA,QAAL,EAAe;AACX,eAAO,IAAP;AACH;;AACD,aAAO,KAAKF,WAAL,CAAiBG,UAAjB,CAA4BD,QAAQ,QAAR,CAAc;AAC7CE,QAAAA,MAAM,EAAEF,QAAQ,CAACE,MAD4B;AAE7CC,QAAAA,SAAS,EAAEH,QAAQ,CAACG,SAFyB;AAG7CC,QAAAA,IAAI,EAAEJ,QAAQ,CAACI;AAH8B,OAAd,CAA5B,KAIA,IAJP;AAKH;AAjCL;AAAA;AAAA,uCAkCuB;AACf,WAAKN,WAAL,GAAmBP,iBAAiB,CAACQ,OAAlB,CAA0B,KAAKF,iBAA/B,CAAnB;;AADe,iDAEM,KAAKF,OAFX;AAAA;;AAAA;AAEf,4DAAmC;AAAA,cAAxBU,MAAwB;;AAC/B,eAAKP,WAAL,CAAiBQ,GAAjB,CAAqBD,MAAM,CAACE,GAA5B,EAAiCF,MAAjC;AACH;AAJc;AAAA;AAAA;AAAA;AAAA;AAKlB;AAvCL;AAAA;AAAA,6BAwCa;AACL,aAAO;AAAEG,QAAAA,EAAE,EAAE,KAAKA,EAAX;AAAeb,QAAAA,OAAO,EAAE,KAAKA,OAA7B;AAAsCc,QAAAA,aAAa,EAAE,KAAKA;AAA1D,OAAP;AACH;AA1CL;AAAA;AAAA,wBAQkB;AACV,aAAO,KAAKC,QAAZ;AACH,KAVL;AAAA,sBAWgBf,OAXhB,EAWyB;AACjB,WAAKe,QAAL,GAAgBf,OAAhB;AACA,WAAKgB,gBAAL;AACH;AAdL;AAAA;AAAA,wBAea;AACL,aAAO,KAAKjB,GAAZ;AACH;AAjBL;AAAA;AAAA,wBAkBwB;AAChB,aAAO,KAAKE,cAAZ;AACH,KApBL;AAAA,sBAqBsBa,aArBtB,EAqBqC;AAC7B,WAAKb,cAAL,GAAsBa,aAAtB;AACH;AAvBL;;AAAA;AAAA;AA4CA,WAAaG,eAAb;AACI,2BAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AAAA;;AACnB,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKP,GAAL,GAAWM,IAAI,CAACN,GAAhB;AACA,SAAKQ,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,SAAKC,IAAL,GAAYH,IAAI,CAACG,IAAjB;AACH;;AANL;AAAA;AAAA,6BAOa;AACL,aAAO;AAAET,QAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBS,QAAAA,IAAI,EAAE,KAAKA,IAA5B;AAAkCD,QAAAA,KAAK,EAAE,KAAKA;AAA9C,OAAP;AACH;AATL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { TernarySearchTree } from '../../../base/common/map.js';\r\nexport const IWorkspaceContextService = createDecorator('contextService');\r\nexport class Workspace {\r\n    constructor(_id, folders, _configuration, _ignorePathCasing) {\r\n        this._id = _id;\r\n        this._configuration = _configuration;\r\n        this._ignorePathCasing = _ignorePathCasing;\r\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\r\n        this.folders = folders;\r\n    }\r\n    get folders() {\r\n        return this._folders;\r\n    }\r\n    set folders(folders) {\r\n        this._folders = folders;\r\n        this.updateFoldersMap();\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get configuration() {\r\n        return this._configuration;\r\n    }\r\n    set configuration(configuration) {\r\n        this._configuration = configuration;\r\n    }\r\n    getFolder(resource) {\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return this._foldersMap.findSubstr(resource.with({\r\n            scheme: resource.scheme,\r\n            authority: resource.authority,\r\n            path: resource.path\r\n        })) || null;\r\n    }\r\n    updateFoldersMap() {\r\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\r\n        for (const folder of this.folders) {\r\n            this._foldersMap.set(folder.uri, folder);\r\n        }\r\n    }\r\n    toJSON() {\r\n        return { id: this.id, folders: this.folders, configuration: this.configuration };\r\n    }\r\n}\r\nexport class WorkspaceFolder {\r\n    constructor(data, raw) {\r\n        this.raw = raw;\r\n        this.uri = data.uri;\r\n        this.index = data.index;\r\n        this.name = data.name;\r\n    }\r\n    toJSON() {\r\n        return { uri: this.uri, name: this.name, index: this.index };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}