{"ast":null,"code":"import _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { AbstractCodeEditorService } from './abstractCodeEditorService.js';\nimport { isThemeColor } from '../../common/editorCommon.js';\nimport { OverviewRulerLane } from '../../common/model.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nexport var RefCountedStyleSheet = /*#__PURE__*/function () {\n  function RefCountedStyleSheet(parent, editorId, styleSheet) {\n    _classCallCheck(this, RefCountedStyleSheet);\n\n    this._parent = parent;\n    this._editorId = editorId;\n    this._styleSheet = styleSheet;\n    this._refCount = 0;\n  }\n\n  _createClass(RefCountedStyleSheet, [{\n    key: \"ref\",\n    value: function ref() {\n      this._refCount++;\n    }\n  }, {\n    key: \"unref\",\n    value: function unref() {\n      var _a;\n\n      this._refCount--;\n\n      if (this._refCount === 0) {\n        (_a = this._styleSheet.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this._styleSheet);\n\n        this._parent._removeEditorStyleSheets(this._editorId);\n      }\n    }\n  }, {\n    key: \"insertRule\",\n    value: function insertRule(rule, index) {\n      var sheet = this._styleSheet.sheet;\n      sheet.insertRule(rule, index);\n    }\n  }, {\n    key: \"removeRulesContainingSelector\",\n    value: function removeRulesContainingSelector(ruleName) {\n      dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n    }\n  }]);\n\n  return RefCountedStyleSheet;\n}();\nexport var GlobalStyleSheet = /*#__PURE__*/function () {\n  function GlobalStyleSheet(styleSheet) {\n    _classCallCheck(this, GlobalStyleSheet);\n\n    this._styleSheet = styleSheet;\n  }\n\n  _createClass(GlobalStyleSheet, [{\n    key: \"ref\",\n    value: function ref() {}\n  }, {\n    key: \"unref\",\n    value: function unref() {}\n  }, {\n    key: \"insertRule\",\n    value: function insertRule(rule, index) {\n      var sheet = this._styleSheet.sheet;\n      sheet.insertRule(rule, index);\n    }\n  }, {\n    key: \"removeRulesContainingSelector\",\n    value: function removeRulesContainingSelector(ruleName) {\n      dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\n    }\n  }]);\n\n  return GlobalStyleSheet;\n}();\n\nvar CodeEditorServiceImpl = /*#__PURE__*/function (_AbstractCodeEditorSe) {\n  _inherits(CodeEditorServiceImpl, _AbstractCodeEditorSe);\n\n  var _super = _createSuper(CodeEditorServiceImpl);\n\n  function CodeEditorServiceImpl(themeService) {\n    var _this;\n\n    var styleSheet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, CodeEditorServiceImpl);\n\n    _this = _super.call(this);\n    _this._decorationOptionProviders = new Map();\n    _this._editorStyleSheets = new Map();\n    _this._globalStyleSheet = styleSheet ? styleSheet : null;\n    _this._themeService = themeService;\n    return _this;\n  }\n\n  _createClass(CodeEditorServiceImpl, [{\n    key: \"_getOrCreateGlobalStyleSheet\",\n    value: function _getOrCreateGlobalStyleSheet() {\n      if (!this._globalStyleSheet) {\n        this._globalStyleSheet = new GlobalStyleSheet(dom.createStyleSheet());\n      }\n\n      return this._globalStyleSheet;\n    }\n  }, {\n    key: \"_getOrCreateStyleSheet\",\n    value: function _getOrCreateStyleSheet(editor) {\n      if (!editor) {\n        return this._getOrCreateGlobalStyleSheet();\n      }\n\n      var domNode = editor.getContainerDomNode();\n\n      if (!dom.isInShadowDOM(domNode)) {\n        return this._getOrCreateGlobalStyleSheet();\n      }\n\n      var editorId = editor.getId();\n\n      if (!this._editorStyleSheets.has(editorId)) {\n        var refCountedStyleSheet = new RefCountedStyleSheet(this, editorId, dom.createStyleSheet(domNode));\n\n        this._editorStyleSheets.set(editorId, refCountedStyleSheet);\n      }\n\n      return this._editorStyleSheets.get(editorId);\n    }\n  }, {\n    key: \"_removeEditorStyleSheets\",\n    value: function _removeEditorStyleSheets(editorId) {\n      this._editorStyleSheets[\"delete\"](editorId);\n    }\n  }, {\n    key: \"registerDecorationType\",\n    value: function registerDecorationType(key, options, parentTypeKey, editor) {\n      var provider = this._decorationOptionProviders.get(key);\n\n      if (!provider) {\n        var styleSheet = this._getOrCreateStyleSheet(editor);\n\n        var providerArgs = {\n          styleSheet: styleSheet,\n          key: key,\n          parentTypeKey: parentTypeKey,\n          options: options || Object.create(null)\n        };\n\n        if (!parentTypeKey) {\n          provider = new DecorationTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\n        } else {\n          provider = new DecorationSubTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\n        }\n\n        this._decorationOptionProviders.set(key, provider);\n\n        this._onDecorationTypeRegistered.fire(key);\n      }\n\n      provider.refCount++;\n    }\n  }, {\n    key: \"removeDecorationType\",\n    value: function removeDecorationType(key) {\n      var provider = this._decorationOptionProviders.get(key);\n\n      if (provider) {\n        provider.refCount--;\n\n        if (provider.refCount <= 0) {\n          this._decorationOptionProviders[\"delete\"](key);\n\n          provider.dispose();\n          this.listCodeEditors().forEach(function (ed) {\n            return ed.removeDecorations(key);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"resolveDecorationOptions\",\n    value: function resolveDecorationOptions(decorationTypeKey, writable) {\n      var provider = this._decorationOptionProviders.get(decorationTypeKey);\n\n      if (!provider) {\n        throw new Error('Unknown decoration type key: ' + decorationTypeKey);\n      }\n\n      return provider.getOptions(this, writable);\n    }\n  }]);\n\n  return CodeEditorServiceImpl;\n}(AbstractCodeEditorService);\n\nCodeEditorServiceImpl = __decorate([__param(0, IThemeService)], CodeEditorServiceImpl);\nexport { CodeEditorServiceImpl };\nexport var DecorationSubTypeOptionsProvider = /*#__PURE__*/function () {\n  function DecorationSubTypeOptionsProvider(themeService, styleSheet, providerArgs) {\n    _classCallCheck(this, DecorationSubTypeOptionsProvider);\n\n    this._styleSheet = styleSheet;\n\n    this._styleSheet.ref();\n\n    this._parentTypeKey = providerArgs.parentTypeKey;\n    this.refCount = 0;\n    this._beforeContentRules = new DecorationCSSRules(3\n    /* BeforeContentClassName */\n    , providerArgs, themeService);\n    this._afterContentRules = new DecorationCSSRules(4\n    /* AfterContentClassName */\n    , providerArgs, themeService);\n  }\n\n  _createClass(DecorationSubTypeOptionsProvider, [{\n    key: \"getOptions\",\n    value: function getOptions(codeEditorService, writable) {\n      var options = codeEditorService.resolveDecorationOptions(this._parentTypeKey, true);\n\n      if (this._beforeContentRules) {\n        options.beforeContentClassName = this._beforeContentRules.className;\n      }\n\n      if (this._afterContentRules) {\n        options.afterContentClassName = this._afterContentRules.className;\n      }\n\n      return options;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._beforeContentRules) {\n        this._beforeContentRules.dispose();\n\n        this._beforeContentRules = null;\n      }\n\n      if (this._afterContentRules) {\n        this._afterContentRules.dispose();\n\n        this._afterContentRules = null;\n      }\n\n      this._styleSheet.unref();\n    }\n  }]);\n\n  return DecorationSubTypeOptionsProvider;\n}();\nexport var DecorationTypeOptionsProvider = /*#__PURE__*/function () {\n  function DecorationTypeOptionsProvider(themeService, styleSheet, providerArgs) {\n    var _this2 = this;\n\n    _classCallCheck(this, DecorationTypeOptionsProvider);\n\n    this._disposables = new DisposableStore();\n    this._styleSheet = styleSheet;\n\n    this._styleSheet.ref();\n\n    this.refCount = 0;\n\n    var createCSSRules = function createCSSRules(type) {\n      var rules = new DecorationCSSRules(type, providerArgs, themeService);\n\n      _this2._disposables.add(rules);\n\n      if (rules.hasContent) {\n        return rules.className;\n      }\n\n      return undefined;\n    };\n\n    var createInlineCSSRules = function createInlineCSSRules(type) {\n      var rules = new DecorationCSSRules(type, providerArgs, themeService);\n\n      _this2._disposables.add(rules);\n\n      if (rules.hasContent) {\n        return {\n          className: rules.className,\n          hasLetterSpacing: rules.hasLetterSpacing\n        };\n      }\n\n      return null;\n    };\n\n    this.className = createCSSRules(0\n    /* ClassName */\n    );\n    var inlineData = createInlineCSSRules(1\n    /* InlineClassName */\n    );\n\n    if (inlineData) {\n      this.inlineClassName = inlineData.className;\n      this.inlineClassNameAffectsLetterSpacing = inlineData.hasLetterSpacing;\n    }\n\n    this.beforeContentClassName = createCSSRules(3\n    /* BeforeContentClassName */\n    );\n    this.afterContentClassName = createCSSRules(4\n    /* AfterContentClassName */\n    );\n    this.glyphMarginClassName = createCSSRules(2\n    /* GlyphMarginClassName */\n    );\n    var options = providerArgs.options;\n    this.isWholeLine = Boolean(options.isWholeLine);\n    this.stickiness = options.rangeBehavior;\n    var lightOverviewRulerColor = options.light && options.light.overviewRulerColor || options.overviewRulerColor;\n    var darkOverviewRulerColor = options.dark && options.dark.overviewRulerColor || options.overviewRulerColor;\n\n    if (typeof lightOverviewRulerColor !== 'undefined' || typeof darkOverviewRulerColor !== 'undefined') {\n      this.overviewRuler = {\n        color: lightOverviewRulerColor || darkOverviewRulerColor,\n        darkColor: darkOverviewRulerColor || lightOverviewRulerColor,\n        position: options.overviewRulerLane || OverviewRulerLane.Center\n      };\n    }\n  }\n\n  _createClass(DecorationTypeOptionsProvider, [{\n    key: \"getOptions\",\n    value: function getOptions(codeEditorService, writable) {\n      if (!writable) {\n        return this;\n      }\n\n      return {\n        inlineClassName: this.inlineClassName,\n        beforeContentClassName: this.beforeContentClassName,\n        afterContentClassName: this.afterContentClassName,\n        className: this.className,\n        glyphMarginClassName: this.glyphMarginClassName,\n        isWholeLine: this.isWholeLine,\n        overviewRuler: this.overviewRuler,\n        stickiness: this.stickiness\n      };\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposables.dispose();\n\n      this._styleSheet.unref();\n    }\n  }]);\n\n  return DecorationTypeOptionsProvider;\n}();\nvar _CSS_MAP = {\n  color: 'color:{0} !important;',\n  opacity: 'opacity:{0};',\n  backgroundColor: 'background-color:{0};',\n  outline: 'outline:{0};',\n  outlineColor: 'outline-color:{0};',\n  outlineStyle: 'outline-style:{0};',\n  outlineWidth: 'outline-width:{0};',\n  border: 'border:{0};',\n  borderColor: 'border-color:{0};',\n  borderRadius: 'border-radius:{0};',\n  borderSpacing: 'border-spacing:{0};',\n  borderStyle: 'border-style:{0};',\n  borderWidth: 'border-width:{0};',\n  fontStyle: 'font-style:{0};',\n  fontWeight: 'font-weight:{0};',\n  fontSize: 'font-size:{0};',\n  fontFamily: 'font-family:{0};',\n  textDecoration: 'text-decoration:{0};',\n  cursor: 'cursor:{0};',\n  letterSpacing: 'letter-spacing:{0};',\n  gutterIconPath: 'background:{0} center center no-repeat;',\n  gutterIconSize: 'background-size:{0};',\n  contentText: 'content:\\'{0}\\';',\n  contentIconPath: 'content:{0};',\n  margin: 'margin:{0};',\n  padding: 'padding:{0};',\n  width: 'width:{0};',\n  height: 'height:{0};'\n};\n\nvar DecorationCSSRules = /*#__PURE__*/function () {\n  function DecorationCSSRules(ruleType, providerArgs, themeService) {\n    var _this3 = this;\n\n    _classCallCheck(this, DecorationCSSRules);\n\n    this._theme = themeService.getColorTheme();\n    this._ruleType = ruleType;\n    this._providerArgs = providerArgs;\n    this._usesThemeColors = false;\n    this._hasContent = false;\n    this._hasLetterSpacing = false;\n    var className = CSSNameHelper.getClassName(this._providerArgs.key, ruleType);\n\n    if (this._providerArgs.parentTypeKey) {\n      className = className + ' ' + CSSNameHelper.getClassName(this._providerArgs.parentTypeKey, ruleType);\n    }\n\n    this._className = className;\n    this._unThemedSelector = CSSNameHelper.getSelector(this._providerArgs.key, this._providerArgs.parentTypeKey, ruleType);\n\n    this._buildCSS();\n\n    if (this._usesThemeColors) {\n      this._themeListener = themeService.onDidColorThemeChange(function (theme) {\n        _this3._theme = themeService.getColorTheme();\n\n        _this3._removeCSS();\n\n        _this3._buildCSS();\n      });\n    } else {\n      this._themeListener = null;\n    }\n  }\n\n  _createClass(DecorationCSSRules, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._hasContent) {\n        this._removeCSS();\n\n        this._hasContent = false;\n      }\n\n      if (this._themeListener) {\n        this._themeListener.dispose();\n\n        this._themeListener = null;\n      }\n    }\n  }, {\n    key: \"_buildCSS\",\n    value: function _buildCSS() {\n      var options = this._providerArgs.options;\n      var unthemedCSS, lightCSS, darkCSS;\n\n      switch (this._ruleType) {\n        case 0\n        /* ClassName */\n        :\n          unthemedCSS = this.getCSSTextForModelDecorationClassName(options);\n          lightCSS = this.getCSSTextForModelDecorationClassName(options.light);\n          darkCSS = this.getCSSTextForModelDecorationClassName(options.dark);\n          break;\n\n        case 1\n        /* InlineClassName */\n        :\n          unthemedCSS = this.getCSSTextForModelDecorationInlineClassName(options);\n          lightCSS = this.getCSSTextForModelDecorationInlineClassName(options.light);\n          darkCSS = this.getCSSTextForModelDecorationInlineClassName(options.dark);\n          break;\n\n        case 2\n        /* GlyphMarginClassName */\n        :\n          unthemedCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options);\n          lightCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.light);\n          darkCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.dark);\n          break;\n\n        case 3\n        /* BeforeContentClassName */\n        :\n          unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.before);\n          lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.before);\n          darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.before);\n          break;\n\n        case 4\n        /* AfterContentClassName */\n        :\n          unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.after);\n          lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.after);\n          darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.after);\n          break;\n\n        default:\n          throw new Error('Unknown rule type: ' + this._ruleType);\n      }\n\n      var sheet = this._providerArgs.styleSheet;\n      var hasContent = false;\n\n      if (unthemedCSS.length > 0) {\n        sheet.insertRule(\"\".concat(this._unThemedSelector, \" {\").concat(unthemedCSS, \"}\"), 0);\n        hasContent = true;\n      }\n\n      if (lightCSS.length > 0) {\n        sheet.insertRule(\".vs\".concat(this._unThemedSelector, \" {\").concat(lightCSS, \"}\"), 0);\n        hasContent = true;\n      }\n\n      if (darkCSS.length > 0) {\n        sheet.insertRule(\".vs-dark\".concat(this._unThemedSelector, \", .hc-black\").concat(this._unThemedSelector, \" {\").concat(darkCSS, \"}\"), 0);\n        hasContent = true;\n      }\n\n      this._hasContent = hasContent;\n    }\n  }, {\n    key: \"_removeCSS\",\n    value: function _removeCSS() {\n      this._providerArgs.styleSheet.removeRulesContainingSelector(this._unThemedSelector);\n    }\n    /**\r\n     * Build the CSS for decorations styled via `className`.\r\n     */\n\n  }, {\n    key: \"getCSSTextForModelDecorationClassName\",\n    value: function getCSSTextForModelDecorationClassName(opts) {\n      if (!opts) {\n        return '';\n      }\n\n      var cssTextArr = [];\n      this.collectCSSText(opts, ['backgroundColor'], cssTextArr);\n      this.collectCSSText(opts, ['outline', 'outlineColor', 'outlineStyle', 'outlineWidth'], cssTextArr);\n      this.collectBorderSettingsCSSText(opts, cssTextArr);\n      return cssTextArr.join('');\n    }\n    /**\r\n     * Build the CSS for decorations styled via `inlineClassName`.\r\n     */\n\n  }, {\n    key: \"getCSSTextForModelDecorationInlineClassName\",\n    value: function getCSSTextForModelDecorationInlineClassName(opts) {\n      if (!opts) {\n        return '';\n      }\n\n      var cssTextArr = [];\n      this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'textDecoration', 'cursor', 'color', 'opacity', 'letterSpacing'], cssTextArr);\n\n      if (opts.letterSpacing) {\n        this._hasLetterSpacing = true;\n      }\n\n      return cssTextArr.join('');\n    }\n    /**\r\n     * Build the CSS for decorations styled before or after content.\r\n     */\n\n  }, {\n    key: \"getCSSTextForModelDecorationContentClassName\",\n    value: function getCSSTextForModelDecorationContentClassName(opts) {\n      if (!opts) {\n        return '';\n      }\n\n      var cssTextArr = [];\n\n      if (typeof opts !== 'undefined') {\n        this.collectBorderSettingsCSSText(opts, cssTextArr);\n\n        if (typeof opts.contentIconPath !== 'undefined') {\n          cssTextArr.push(strings.format(_CSS_MAP.contentIconPath, dom.asCSSUrl(URI.revive(opts.contentIconPath))));\n        }\n\n        if (typeof opts.contentText === 'string') {\n          var truncated = opts.contentText.match(/^.*$/m)[0]; // only take first line\n\n          var escaped = truncated.replace(/['\\\\]/g, '\\\\$&');\n          cssTextArr.push(strings.format(_CSS_MAP.contentText, escaped));\n        }\n\n        this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'textDecoration', 'color', 'opacity', 'backgroundColor', 'margin', 'padding'], cssTextArr);\n\n        if (this.collectCSSText(opts, ['width', 'height'], cssTextArr)) {\n          cssTextArr.push('display:inline-block;');\n        }\n      }\n\n      return cssTextArr.join('');\n    }\n    /**\r\n     * Build the CSS for decorations styled via `glpyhMarginClassName`.\r\n     */\n\n  }, {\n    key: \"getCSSTextForModelDecorationGlyphMarginClassName\",\n    value: function getCSSTextForModelDecorationGlyphMarginClassName(opts) {\n      if (!opts) {\n        return '';\n      }\n\n      var cssTextArr = [];\n\n      if (typeof opts.gutterIconPath !== 'undefined') {\n        cssTextArr.push(strings.format(_CSS_MAP.gutterIconPath, dom.asCSSUrl(URI.revive(opts.gutterIconPath))));\n\n        if (typeof opts.gutterIconSize !== 'undefined') {\n          cssTextArr.push(strings.format(_CSS_MAP.gutterIconSize, opts.gutterIconSize));\n        }\n      }\n\n      return cssTextArr.join('');\n    }\n  }, {\n    key: \"collectBorderSettingsCSSText\",\n    value: function collectBorderSettingsCSSText(opts, cssTextArr) {\n      if (this.collectCSSText(opts, ['border', 'borderColor', 'borderRadius', 'borderSpacing', 'borderStyle', 'borderWidth'], cssTextArr)) {\n        cssTextArr.push(strings.format('box-sizing: border-box;'));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"collectCSSText\",\n    value: function collectCSSText(opts, properties, cssTextArr) {\n      var lenBefore = cssTextArr.length;\n\n      var _iterator = _createForOfIteratorHelper(properties),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var property = _step.value;\n          var value = this.resolveValue(opts[property]);\n\n          if (typeof value === 'string') {\n            cssTextArr.push(strings.format(_CSS_MAP[property], value));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return cssTextArr.length !== lenBefore;\n    }\n  }, {\n    key: \"resolveValue\",\n    value: function resolveValue(value) {\n      if (isThemeColor(value)) {\n        this._usesThemeColors = true;\n\n        var color = this._theme.getColor(value.id);\n\n        if (color) {\n          return color.toString();\n        }\n\n        return 'transparent';\n      }\n\n      return value;\n    }\n  }, {\n    key: \"hasContent\",\n    get: function get() {\n      return this._hasContent;\n    }\n  }, {\n    key: \"hasLetterSpacing\",\n    get: function get() {\n      return this._hasLetterSpacing;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return this._className;\n    }\n  }]);\n\n  return DecorationCSSRules;\n}();\n\nvar CSSNameHelper = /*#__PURE__*/function () {\n  function CSSNameHelper() {\n    _classCallCheck(this, CSSNameHelper);\n  }\n\n  _createClass(CSSNameHelper, null, [{\n    key: \"getClassName\",\n    value: function getClassName(key, type) {\n      return 'ced-' + key + '-' + type;\n    }\n  }, {\n    key: \"getSelector\",\n    value: function getSelector(key, parentKey, ruleType) {\n      var selector = '.monaco-editor .' + this.getClassName(key, ruleType);\n\n      if (parentKey) {\n        selector = selector + '.' + this.getClassName(parentKey, ruleType);\n      }\n\n      if (ruleType === 3\n      /* BeforeContentClassName */\n      ) {\n          selector += '::before';\n        } else if (ruleType === 4\n      /* AfterContentClassName */\n      ) {\n          selector += '::after';\n        }\n\n      return selector;\n    }\n  }]);\n\n  return CSSNameHelper;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorServiceImpl.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","DisposableStore","strings","URI","AbstractCodeEditorService","isThemeColor","OverviewRulerLane","IThemeService","RefCountedStyleSheet","parent","editorId","styleSheet","_parent","_editorId","_styleSheet","_refCount","_a","parentNode","removeChild","_removeEditorStyleSheets","rule","index","sheet","insertRule","ruleName","removeCSSRulesContainingSelector","GlobalStyleSheet","CodeEditorServiceImpl","themeService","_decorationOptionProviders","Map","_editorStyleSheets","_globalStyleSheet","_themeService","createStyleSheet","editor","_getOrCreateGlobalStyleSheet","domNode","getContainerDomNode","isInShadowDOM","getId","has","refCountedStyleSheet","set","get","options","parentTypeKey","provider","_getOrCreateStyleSheet","providerArgs","create","DecorationTypeOptionsProvider","DecorationSubTypeOptionsProvider","_onDecorationTypeRegistered","fire","refCount","dispose","listCodeEditors","forEach","ed","removeDecorations","decorationTypeKey","writable","Error","getOptions","ref","_parentTypeKey","_beforeContentRules","DecorationCSSRules","_afterContentRules","codeEditorService","resolveDecorationOptions","beforeContentClassName","className","afterContentClassName","unref","_disposables","createCSSRules","type","rules","add","hasContent","undefined","createInlineCSSRules","hasLetterSpacing","inlineData","inlineClassName","inlineClassNameAffectsLetterSpacing","glyphMarginClassName","isWholeLine","Boolean","stickiness","rangeBehavior","lightOverviewRulerColor","light","overviewRulerColor","darkOverviewRulerColor","dark","overviewRuler","color","darkColor","position","overviewRulerLane","Center","_CSS_MAP","opacity","backgroundColor","outline","outlineColor","outlineStyle","outlineWidth","border","borderColor","borderRadius","borderSpacing","borderStyle","borderWidth","fontStyle","fontWeight","fontSize","fontFamily","textDecoration","cursor","letterSpacing","gutterIconPath","gutterIconSize","contentText","contentIconPath","margin","padding","width","height","ruleType","_theme","getColorTheme","_ruleType","_providerArgs","_usesThemeColors","_hasContent","_hasLetterSpacing","CSSNameHelper","getClassName","_className","_unThemedSelector","getSelector","_buildCSS","_themeListener","onDidColorThemeChange","theme","_removeCSS","unthemedCSS","lightCSS","darkCSS","getCSSTextForModelDecorationClassName","getCSSTextForModelDecorationInlineClassName","getCSSTextForModelDecorationGlyphMarginClassName","getCSSTextForModelDecorationContentClassName","before","after","removeRulesContainingSelector","opts","cssTextArr","collectCSSText","collectBorderSettingsCSSText","join","push","format","asCSSUrl","revive","truncated","match","escaped","replace","properties","lenBefore","property","value","resolveValue","getColor","id","toString","parentKey","selector"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { AbstractCodeEditorService } from './abstractCodeEditorService.js';\r\nimport { isThemeColor } from '../../common/editorCommon.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nexport class RefCountedStyleSheet {\r\n    constructor(parent, editorId, styleSheet) {\r\n        this._parent = parent;\r\n        this._editorId = editorId;\r\n        this._styleSheet = styleSheet;\r\n        this._refCount = 0;\r\n    }\r\n    ref() {\r\n        this._refCount++;\r\n    }\r\n    unref() {\r\n        var _a;\r\n        this._refCount--;\r\n        if (this._refCount === 0) {\r\n            (_a = this._styleSheet.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this._styleSheet);\r\n            this._parent._removeEditorStyleSheets(this._editorId);\r\n        }\r\n    }\r\n    insertRule(rule, index) {\r\n        const sheet = this._styleSheet.sheet;\r\n        sheet.insertRule(rule, index);\r\n    }\r\n    removeRulesContainingSelector(ruleName) {\r\n        dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\r\n    }\r\n}\r\nexport class GlobalStyleSheet {\r\n    constructor(styleSheet) {\r\n        this._styleSheet = styleSheet;\r\n    }\r\n    ref() {\r\n    }\r\n    unref() {\r\n    }\r\n    insertRule(rule, index) {\r\n        const sheet = this._styleSheet.sheet;\r\n        sheet.insertRule(rule, index);\r\n    }\r\n    removeRulesContainingSelector(ruleName) {\r\n        dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\r\n    }\r\n}\r\nlet CodeEditorServiceImpl = class CodeEditorServiceImpl extends AbstractCodeEditorService {\r\n    constructor(themeService, styleSheet = null) {\r\n        super();\r\n        this._decorationOptionProviders = new Map();\r\n        this._editorStyleSheets = new Map();\r\n        this._globalStyleSheet = styleSheet ? styleSheet : null;\r\n        this._themeService = themeService;\r\n    }\r\n    _getOrCreateGlobalStyleSheet() {\r\n        if (!this._globalStyleSheet) {\r\n            this._globalStyleSheet = new GlobalStyleSheet(dom.createStyleSheet());\r\n        }\r\n        return this._globalStyleSheet;\r\n    }\r\n    _getOrCreateStyleSheet(editor) {\r\n        if (!editor) {\r\n            return this._getOrCreateGlobalStyleSheet();\r\n        }\r\n        const domNode = editor.getContainerDomNode();\r\n        if (!dom.isInShadowDOM(domNode)) {\r\n            return this._getOrCreateGlobalStyleSheet();\r\n        }\r\n        const editorId = editor.getId();\r\n        if (!this._editorStyleSheets.has(editorId)) {\r\n            const refCountedStyleSheet = new RefCountedStyleSheet(this, editorId, dom.createStyleSheet(domNode));\r\n            this._editorStyleSheets.set(editorId, refCountedStyleSheet);\r\n        }\r\n        return this._editorStyleSheets.get(editorId);\r\n    }\r\n    _removeEditorStyleSheets(editorId) {\r\n        this._editorStyleSheets.delete(editorId);\r\n    }\r\n    registerDecorationType(key, options, parentTypeKey, editor) {\r\n        let provider = this._decorationOptionProviders.get(key);\r\n        if (!provider) {\r\n            const styleSheet = this._getOrCreateStyleSheet(editor);\r\n            const providerArgs = {\r\n                styleSheet: styleSheet,\r\n                key: key,\r\n                parentTypeKey: parentTypeKey,\r\n                options: options || Object.create(null)\r\n            };\r\n            if (!parentTypeKey) {\r\n                provider = new DecorationTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\r\n            }\r\n            else {\r\n                provider = new DecorationSubTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\r\n            }\r\n            this._decorationOptionProviders.set(key, provider);\r\n            this._onDecorationTypeRegistered.fire(key);\r\n        }\r\n        provider.refCount++;\r\n    }\r\n    removeDecorationType(key) {\r\n        const provider = this._decorationOptionProviders.get(key);\r\n        if (provider) {\r\n            provider.refCount--;\r\n            if (provider.refCount <= 0) {\r\n                this._decorationOptionProviders.delete(key);\r\n                provider.dispose();\r\n                this.listCodeEditors().forEach((ed) => ed.removeDecorations(key));\r\n            }\r\n        }\r\n    }\r\n    resolveDecorationOptions(decorationTypeKey, writable) {\r\n        const provider = this._decorationOptionProviders.get(decorationTypeKey);\r\n        if (!provider) {\r\n            throw new Error('Unknown decoration type key: ' + decorationTypeKey);\r\n        }\r\n        return provider.getOptions(this, writable);\r\n    }\r\n};\r\nCodeEditorServiceImpl = __decorate([\r\n    __param(0, IThemeService)\r\n], CodeEditorServiceImpl);\r\nexport { CodeEditorServiceImpl };\r\nexport class DecorationSubTypeOptionsProvider {\r\n    constructor(themeService, styleSheet, providerArgs) {\r\n        this._styleSheet = styleSheet;\r\n        this._styleSheet.ref();\r\n        this._parentTypeKey = providerArgs.parentTypeKey;\r\n        this.refCount = 0;\r\n        this._beforeContentRules = new DecorationCSSRules(3 /* BeforeContentClassName */, providerArgs, themeService);\r\n        this._afterContentRules = new DecorationCSSRules(4 /* AfterContentClassName */, providerArgs, themeService);\r\n    }\r\n    getOptions(codeEditorService, writable) {\r\n        const options = codeEditorService.resolveDecorationOptions(this._parentTypeKey, true);\r\n        if (this._beforeContentRules) {\r\n            options.beforeContentClassName = this._beforeContentRules.className;\r\n        }\r\n        if (this._afterContentRules) {\r\n            options.afterContentClassName = this._afterContentRules.className;\r\n        }\r\n        return options;\r\n    }\r\n    dispose() {\r\n        if (this._beforeContentRules) {\r\n            this._beforeContentRules.dispose();\r\n            this._beforeContentRules = null;\r\n        }\r\n        if (this._afterContentRules) {\r\n            this._afterContentRules.dispose();\r\n            this._afterContentRules = null;\r\n        }\r\n        this._styleSheet.unref();\r\n    }\r\n}\r\nexport class DecorationTypeOptionsProvider {\r\n    constructor(themeService, styleSheet, providerArgs) {\r\n        this._disposables = new DisposableStore();\r\n        this._styleSheet = styleSheet;\r\n        this._styleSheet.ref();\r\n        this.refCount = 0;\r\n        const createCSSRules = (type) => {\r\n            const rules = new DecorationCSSRules(type, providerArgs, themeService);\r\n            this._disposables.add(rules);\r\n            if (rules.hasContent) {\r\n                return rules.className;\r\n            }\r\n            return undefined;\r\n        };\r\n        const createInlineCSSRules = (type) => {\r\n            const rules = new DecorationCSSRules(type, providerArgs, themeService);\r\n            this._disposables.add(rules);\r\n            if (rules.hasContent) {\r\n                return { className: rules.className, hasLetterSpacing: rules.hasLetterSpacing };\r\n            }\r\n            return null;\r\n        };\r\n        this.className = createCSSRules(0 /* ClassName */);\r\n        const inlineData = createInlineCSSRules(1 /* InlineClassName */);\r\n        if (inlineData) {\r\n            this.inlineClassName = inlineData.className;\r\n            this.inlineClassNameAffectsLetterSpacing = inlineData.hasLetterSpacing;\r\n        }\r\n        this.beforeContentClassName = createCSSRules(3 /* BeforeContentClassName */);\r\n        this.afterContentClassName = createCSSRules(4 /* AfterContentClassName */);\r\n        this.glyphMarginClassName = createCSSRules(2 /* GlyphMarginClassName */);\r\n        const options = providerArgs.options;\r\n        this.isWholeLine = Boolean(options.isWholeLine);\r\n        this.stickiness = options.rangeBehavior;\r\n        const lightOverviewRulerColor = options.light && options.light.overviewRulerColor || options.overviewRulerColor;\r\n        const darkOverviewRulerColor = options.dark && options.dark.overviewRulerColor || options.overviewRulerColor;\r\n        if (typeof lightOverviewRulerColor !== 'undefined'\r\n            || typeof darkOverviewRulerColor !== 'undefined') {\r\n            this.overviewRuler = {\r\n                color: lightOverviewRulerColor || darkOverviewRulerColor,\r\n                darkColor: darkOverviewRulerColor || lightOverviewRulerColor,\r\n                position: options.overviewRulerLane || OverviewRulerLane.Center\r\n            };\r\n        }\r\n    }\r\n    getOptions(codeEditorService, writable) {\r\n        if (!writable) {\r\n            return this;\r\n        }\r\n        return {\r\n            inlineClassName: this.inlineClassName,\r\n            beforeContentClassName: this.beforeContentClassName,\r\n            afterContentClassName: this.afterContentClassName,\r\n            className: this.className,\r\n            glyphMarginClassName: this.glyphMarginClassName,\r\n            isWholeLine: this.isWholeLine,\r\n            overviewRuler: this.overviewRuler,\r\n            stickiness: this.stickiness\r\n        };\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._styleSheet.unref();\r\n    }\r\n}\r\nconst _CSS_MAP = {\r\n    color: 'color:{0} !important;',\r\n    opacity: 'opacity:{0};',\r\n    backgroundColor: 'background-color:{0};',\r\n    outline: 'outline:{0};',\r\n    outlineColor: 'outline-color:{0};',\r\n    outlineStyle: 'outline-style:{0};',\r\n    outlineWidth: 'outline-width:{0};',\r\n    border: 'border:{0};',\r\n    borderColor: 'border-color:{0};',\r\n    borderRadius: 'border-radius:{0};',\r\n    borderSpacing: 'border-spacing:{0};',\r\n    borderStyle: 'border-style:{0};',\r\n    borderWidth: 'border-width:{0};',\r\n    fontStyle: 'font-style:{0};',\r\n    fontWeight: 'font-weight:{0};',\r\n    fontSize: 'font-size:{0};',\r\n    fontFamily: 'font-family:{0};',\r\n    textDecoration: 'text-decoration:{0};',\r\n    cursor: 'cursor:{0};',\r\n    letterSpacing: 'letter-spacing:{0};',\r\n    gutterIconPath: 'background:{0} center center no-repeat;',\r\n    gutterIconSize: 'background-size:{0};',\r\n    contentText: 'content:\\'{0}\\';',\r\n    contentIconPath: 'content:{0};',\r\n    margin: 'margin:{0};',\r\n    padding: 'padding:{0};',\r\n    width: 'width:{0};',\r\n    height: 'height:{0};'\r\n};\r\nclass DecorationCSSRules {\r\n    constructor(ruleType, providerArgs, themeService) {\r\n        this._theme = themeService.getColorTheme();\r\n        this._ruleType = ruleType;\r\n        this._providerArgs = providerArgs;\r\n        this._usesThemeColors = false;\r\n        this._hasContent = false;\r\n        this._hasLetterSpacing = false;\r\n        let className = CSSNameHelper.getClassName(this._providerArgs.key, ruleType);\r\n        if (this._providerArgs.parentTypeKey) {\r\n            className = className + ' ' + CSSNameHelper.getClassName(this._providerArgs.parentTypeKey, ruleType);\r\n        }\r\n        this._className = className;\r\n        this._unThemedSelector = CSSNameHelper.getSelector(this._providerArgs.key, this._providerArgs.parentTypeKey, ruleType);\r\n        this._buildCSS();\r\n        if (this._usesThemeColors) {\r\n            this._themeListener = themeService.onDidColorThemeChange(theme => {\r\n                this._theme = themeService.getColorTheme();\r\n                this._removeCSS();\r\n                this._buildCSS();\r\n            });\r\n        }\r\n        else {\r\n            this._themeListener = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._hasContent) {\r\n            this._removeCSS();\r\n            this._hasContent = false;\r\n        }\r\n        if (this._themeListener) {\r\n            this._themeListener.dispose();\r\n            this._themeListener = null;\r\n        }\r\n    }\r\n    get hasContent() {\r\n        return this._hasContent;\r\n    }\r\n    get hasLetterSpacing() {\r\n        return this._hasLetterSpacing;\r\n    }\r\n    get className() {\r\n        return this._className;\r\n    }\r\n    _buildCSS() {\r\n        const options = this._providerArgs.options;\r\n        let unthemedCSS, lightCSS, darkCSS;\r\n        switch (this._ruleType) {\r\n            case 0 /* ClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationClassName(options.dark);\r\n                break;\r\n            case 1 /* InlineClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationInlineClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationInlineClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationInlineClassName(options.dark);\r\n                break;\r\n            case 2 /* GlyphMarginClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.dark);\r\n                break;\r\n            case 3 /* BeforeContentClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.before);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.before);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.before);\r\n                break;\r\n            case 4 /* AfterContentClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.after);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.after);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.after);\r\n                break;\r\n            default:\r\n                throw new Error('Unknown rule type: ' + this._ruleType);\r\n        }\r\n        const sheet = this._providerArgs.styleSheet;\r\n        let hasContent = false;\r\n        if (unthemedCSS.length > 0) {\r\n            sheet.insertRule(`${this._unThemedSelector} {${unthemedCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        if (lightCSS.length > 0) {\r\n            sheet.insertRule(`.vs${this._unThemedSelector} {${lightCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        if (darkCSS.length > 0) {\r\n            sheet.insertRule(`.vs-dark${this._unThemedSelector}, .hc-black${this._unThemedSelector} {${darkCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        this._hasContent = hasContent;\r\n    }\r\n    _removeCSS() {\r\n        this._providerArgs.styleSheet.removeRulesContainingSelector(this._unThemedSelector);\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `className`.\r\n     */\r\n    getCSSTextForModelDecorationClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        this.collectCSSText(opts, ['backgroundColor'], cssTextArr);\r\n        this.collectCSSText(opts, ['outline', 'outlineColor', 'outlineStyle', 'outlineWidth'], cssTextArr);\r\n        this.collectBorderSettingsCSSText(opts, cssTextArr);\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `inlineClassName`.\r\n     */\r\n    getCSSTextForModelDecorationInlineClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'textDecoration', 'cursor', 'color', 'opacity', 'letterSpacing'], cssTextArr);\r\n        if (opts.letterSpacing) {\r\n            this._hasLetterSpacing = true;\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled before or after content.\r\n     */\r\n    getCSSTextForModelDecorationContentClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        if (typeof opts !== 'undefined') {\r\n            this.collectBorderSettingsCSSText(opts, cssTextArr);\r\n            if (typeof opts.contentIconPath !== 'undefined') {\r\n                cssTextArr.push(strings.format(_CSS_MAP.contentIconPath, dom.asCSSUrl(URI.revive(opts.contentIconPath))));\r\n            }\r\n            if (typeof opts.contentText === 'string') {\r\n                const truncated = opts.contentText.match(/^.*$/m)[0]; // only take first line\r\n                const escaped = truncated.replace(/['\\\\]/g, '\\\\$&');\r\n                cssTextArr.push(strings.format(_CSS_MAP.contentText, escaped));\r\n            }\r\n            this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'textDecoration', 'color', 'opacity', 'backgroundColor', 'margin', 'padding'], cssTextArr);\r\n            if (this.collectCSSText(opts, ['width', 'height'], cssTextArr)) {\r\n                cssTextArr.push('display:inline-block;');\r\n            }\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `glpyhMarginClassName`.\r\n     */\r\n    getCSSTextForModelDecorationGlyphMarginClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        if (typeof opts.gutterIconPath !== 'undefined') {\r\n            cssTextArr.push(strings.format(_CSS_MAP.gutterIconPath, dom.asCSSUrl(URI.revive(opts.gutterIconPath))));\r\n            if (typeof opts.gutterIconSize !== 'undefined') {\r\n                cssTextArr.push(strings.format(_CSS_MAP.gutterIconSize, opts.gutterIconSize));\r\n            }\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    collectBorderSettingsCSSText(opts, cssTextArr) {\r\n        if (this.collectCSSText(opts, ['border', 'borderColor', 'borderRadius', 'borderSpacing', 'borderStyle', 'borderWidth'], cssTextArr)) {\r\n            cssTextArr.push(strings.format('box-sizing: border-box;'));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    collectCSSText(opts, properties, cssTextArr) {\r\n        const lenBefore = cssTextArr.length;\r\n        for (let property of properties) {\r\n            const value = this.resolveValue(opts[property]);\r\n            if (typeof value === 'string') {\r\n                cssTextArr.push(strings.format(_CSS_MAP[property], value));\r\n            }\r\n        }\r\n        return cssTextArr.length !== lenBefore;\r\n    }\r\n    resolveValue(value) {\r\n        if (isThemeColor(value)) {\r\n            this._usesThemeColors = true;\r\n            const color = this._theme.getColor(value.id);\r\n            if (color) {\r\n                return color.toString();\r\n            }\r\n            return 'transparent';\r\n        }\r\n        return value;\r\n    }\r\n}\r\nclass CSSNameHelper {\r\n    static getClassName(key, type) {\r\n        return 'ced-' + key + '-' + type;\r\n    }\r\n    static getSelector(key, parentKey, ruleType) {\r\n        let selector = '.monaco-editor .' + this.getClassName(key, ruleType);\r\n        if (parentKey) {\r\n            selector = selector + '.' + this.getClassName(parentKey, ruleType);\r\n        }\r\n        if (ruleType === 3 /* BeforeContentClassName */) {\r\n            selector += '::before';\r\n        }\r\n        else if (ruleType === 4 /* AfterContentClassName */) {\r\n            selector += '::after';\r\n        }\r\n        return selector;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}