{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator as createServiceDecorator } from '../../instantiation/common/instantiation.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport var ILogService = createServiceDecorator('logService');\nexport var LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n  LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n  LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n  LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n  LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\n})(LogLevel || (LogLevel = {}));\n\nexport var DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport var AbstractLogService = /*#__PURE__*/function (_Disposable) {\n  _inherits(AbstractLogService, _Disposable);\n\n  var _super = _createSuper(AbstractLogService);\n\n  function AbstractLogService() {\n    var _this;\n\n    _classCallCheck(this, AbstractLogService);\n\n    _this = _super.apply(this, arguments);\n    _this.level = DEFAULT_LOG_LEVEL;\n    _this._onDidChangeLogLevel = _this._register(new Emitter());\n    return _this;\n  }\n\n  _createClass(AbstractLogService, [{\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      if (this.level !== level) {\n        this.level = level;\n\n        this._onDidChangeLogLevel.fire(this.level);\n      }\n    }\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      return this.level;\n    }\n  }]);\n\n  return AbstractLogService;\n}(Disposable);\nexport var ConsoleLogService = /*#__PURE__*/function (_AbstractLogService) {\n  _inherits(ConsoleLogService, _AbstractLogService);\n\n  var _super2 = _createSuper(ConsoleLogService);\n\n  function ConsoleLogService() {\n    var _this2;\n\n    var logLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOG_LEVEL;\n\n    _classCallCheck(this, ConsoleLogService);\n\n    _this2 = _super2.call(this);\n\n    _this2.setLevel(logLevel);\n\n    return _this2;\n  }\n\n  _createClass(ConsoleLogService, [{\n    key: \"trace\",\n    value: function trace(message) {\n      if (this.getLevel() <= LogLevel.Trace) {\n        var _console;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        (_console = console).log.apply(_console, ['%cTRACE', 'color: #888', message].concat(args));\n      }\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      if (this.getLevel() <= LogLevel.Debug) {\n        var _console2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        (_console2 = console).log.apply(_console2, ['%cDEBUG', 'background: #eee; color: #888', message].concat(args));\n      }\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      if (this.getLevel() <= LogLevel.Info) {\n        var _console3;\n\n        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n\n        (_console3 = console).log.apply(_console3, ['%c INFO', 'color: #33f', message].concat(args));\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      if (this.getLevel() <= LogLevel.Error) {\n        var _console4;\n\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        (_console4 = console).log.apply(_console4, ['%c  ERR', 'color: #f33', message].concat(args));\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {// noop\n    }\n  }]);\n\n  return ConsoleLogService;\n}(AbstractLogService);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/log/common/log.js"],"names":["createDecorator","createServiceDecorator","Disposable","Emitter","ILogService","LogLevel","DEFAULT_LOG_LEVEL","Info","AbstractLogService","arguments","level","_onDidChangeLogLevel","_register","fire","ConsoleLogService","logLevel","setLevel","message","getLevel","Trace","args","console","log","Debug","Error"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator as createServiceDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport const ILogService = createServiceDecorator('logService');\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\r\nexport class AbstractLogService extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.level = DEFAULT_LOG_LEVEL;\r\n        this._onDidChangeLogLevel = this._register(new Emitter());\r\n    }\r\n    setLevel(level) {\r\n        if (this.level !== level) {\r\n            this.level = level;\r\n            this._onDidChangeLogLevel.fire(this.level);\r\n        }\r\n    }\r\n    getLevel() {\r\n        return this.level;\r\n    }\r\n}\r\nexport class ConsoleLogService extends AbstractLogService {\r\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\r\n        super();\r\n        this.setLevel(logLevel);\r\n    }\r\n    trace(message, ...args) {\r\n        if (this.getLevel() <= LogLevel.Trace) {\r\n            console.log('%cTRACE', 'color: #888', message, ...args);\r\n        }\r\n    }\r\n    debug(message, ...args) {\r\n        if (this.getLevel() <= LogLevel.Debug) {\r\n            console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\r\n        }\r\n    }\r\n    info(message, ...args) {\r\n        if (this.getLevel() <= LogLevel.Info) {\r\n            console.log('%c INFO', 'color: #33f', message, ...args);\r\n        }\r\n    }\r\n    error(message, ...args) {\r\n        if (this.getLevel() <= LogLevel.Error) {\r\n            console.log('%c  ERR', 'color: #f33', message, ...args);\r\n        }\r\n    }\r\n    dispose() {\r\n        // noop\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}