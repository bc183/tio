{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var IdGenerator = /*#__PURE__*/function () {\n  function IdGenerator(prefix) {\n    _classCallCheck(this, IdGenerator);\n\n    this._prefix = prefix;\n    this._lastId = 0;\n  }\n\n  _createClass(IdGenerator, [{\n    key: \"nextId\",\n    value: function nextId() {\n      return this._prefix + ++this._lastId;\n    }\n  }]);\n\n  return IdGenerator;\n}();\nexport var defaultGenerator = new IdGenerator('id#');","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/idGenerator.js"],"names":["IdGenerator","prefix","_prefix","_lastId","defaultGenerator"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,WAAaA,WAAb;AACI,uBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,OAAL,GAAe,CAAf;AACH;;AAJL;AAAA;AAAA,6BAKa;AACL,aAAO,KAAKD,OAAL,GAAgB,EAAE,KAAKC,OAA9B;AACH;AAPL;;AAAA;AAAA;AASA,OAAO,IAAMC,gBAAgB,GAAG,IAAIJ,WAAJ,CAAgB,KAAhB,CAAzB","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class IdGenerator {\r\n    constructor(prefix) {\r\n        this._prefix = prefix;\r\n        this._lastId = 0;\r\n    }\r\n    nextId() {\r\n        return this._prefix + (++this._lastId);\r\n    }\r\n}\r\nexport const defaultGenerator = new IdGenerator('id#');\r\n"]},"metadata":{},"sourceType":"module"}