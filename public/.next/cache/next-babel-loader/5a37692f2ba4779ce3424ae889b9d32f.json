{"ast":null,"code":"import _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport var IBulkEditService = createDecorator('IWorkspaceEditService');\n\nfunction isWorkspaceFileEdit(thing) {\n  return isObject(thing) && (Boolean(thing.newUri) || Boolean(thing.oldUri));\n}\n\nfunction isWorkspaceTextEdit(thing) {\n  return isObject(thing) && URI.isUri(thing.resource) && isObject(thing.edit);\n}\n\nexport var ResourceEdit = /*#__PURE__*/function () {\n  function ResourceEdit(metadata) {\n    _classCallCheck(this, ResourceEdit);\n\n    this.metadata = metadata;\n  }\n\n  _createClass(ResourceEdit, null, [{\n    key: \"convert\",\n    value: function convert(edit) {\n      return edit.edits.map(function (edit) {\n        if (isWorkspaceTextEdit(edit)) {\n          return new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\n        }\n\n        if (isWorkspaceFileEdit(edit)) {\n          return new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\n        }\n\n        throw new Error('Unsupported edit');\n      });\n    }\n  }]);\n\n  return ResourceEdit;\n}();\nexport var ResourceTextEdit = /*#__PURE__*/function (_ResourceEdit) {\n  _inherits(ResourceTextEdit, _ResourceEdit);\n\n  var _super = _createSuper(ResourceTextEdit);\n\n  function ResourceTextEdit(resource, textEdit, versionId, metadata) {\n    var _this;\n\n    _classCallCheck(this, ResourceTextEdit);\n\n    _this = _super.call(this, metadata);\n    _this.resource = resource;\n    _this.textEdit = textEdit;\n    _this.versionId = versionId;\n    _this.metadata = metadata;\n    return _this;\n  }\n\n  return ResourceTextEdit;\n}(ResourceEdit);\nexport var ResourceFileEdit = /*#__PURE__*/function (_ResourceEdit2) {\n  _inherits(ResourceFileEdit, _ResourceEdit2);\n\n  var _super2 = _createSuper(ResourceFileEdit);\n\n  function ResourceFileEdit(oldResource, newResource, options, metadata) {\n    var _this2;\n\n    _classCallCheck(this, ResourceFileEdit);\n\n    _this2 = _super2.call(this, metadata);\n    _this2.oldResource = oldResource;\n    _this2.newResource = newResource;\n    _this2.options = options;\n    _this2.metadata = metadata;\n    return _this2;\n  }\n\n  return ResourceFileEdit;\n}(ResourceEdit);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js"],"names":["createDecorator","URI","isObject","IBulkEditService","isWorkspaceFileEdit","thing","Boolean","newUri","oldUri","isWorkspaceTextEdit","isUri","resource","edit","ResourceEdit","metadata","edits","map","ResourceTextEdit","modelVersionId","ResourceFileEdit","options","Error","textEdit","versionId","oldResource","newResource"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,yDAAhC;AACA,SAASC,GAAT,QAAoB,6BAApB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAO,IAAMC,gBAAgB,GAAGH,eAAe,CAAC,uBAAD,CAAxC;;AACP,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,SAAOH,QAAQ,CAACG,KAAD,CAAR,KAAoBC,OAAO,CAACD,KAAK,CAACE,MAAP,CAAP,IAAyBD,OAAO,CAACD,KAAK,CAACG,MAAP,CAApD,CAAP;AACH;;AACD,SAASC,mBAAT,CAA6BJ,KAA7B,EAAoC;AAChC,SAAOH,QAAQ,CAACG,KAAD,CAAR,IAAmBJ,GAAG,CAACS,KAAJ,CAAUL,KAAK,CAACM,QAAhB,CAAnB,IAAgDT,QAAQ,CAACG,KAAK,CAACO,IAAP,CAA/D;AACH;;AACD,WAAaC,YAAb;AACI,wBAAYC,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAHL;AAAA;AAAA,4BAImBF,IAJnB,EAIyB;AACjB,aAAOA,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAJ,IAAI,EAAI;AAC1B,YAAIH,mBAAmB,CAACG,IAAD,CAAvB,EAA+B;AAC3B,iBAAO,IAAIK,gBAAJ,CAAqBL,IAAI,CAACD,QAA1B,EAAoCC,IAAI,CAACA,IAAzC,EAA+CA,IAAI,CAACM,cAApD,EAAoEN,IAAI,CAACE,QAAzE,CAAP;AACH;;AACD,YAAIV,mBAAmB,CAACQ,IAAD,CAAvB,EAA+B;AAC3B,iBAAO,IAAIO,gBAAJ,CAAqBP,IAAI,CAACJ,MAA1B,EAAkCI,IAAI,CAACL,MAAvC,EAA+CK,IAAI,CAACQ,OAApD,EAA6DR,IAAI,CAACE,QAAlE,CAAP;AACH;;AACD,cAAM,IAAIO,KAAJ,CAAU,kBAAV,CAAN;AACH,OARM,CAAP;AASH;AAdL;;AAAA;AAAA;AAgBA,WAAaJ,gBAAb;AAAA;;AAAA;;AACI,4BAAYN,QAAZ,EAAsBW,QAAtB,EAAgCC,SAAhC,EAA2CT,QAA3C,EAAqD;AAAA;;AAAA;;AACjD,8BAAMA,QAAN;AACA,UAAKH,QAAL,GAAgBA,QAAhB;AACA,UAAKW,QAAL,GAAgBA,QAAhB;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKT,QAAL,GAAgBA,QAAhB;AALiD;AAMpD;;AAPL;AAAA,EAAsCD,YAAtC;AASA,WAAaM,gBAAb;AAAA;;AAAA;;AACI,4BAAYK,WAAZ,EAAyBC,WAAzB,EAAsCL,OAAtC,EAA+CN,QAA/C,EAAyD;AAAA;;AAAA;;AACrD,gCAAMA,QAAN;AACA,WAAKU,WAAL,GAAmBA,WAAnB;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKL,OAAL,GAAeA,OAAf;AACA,WAAKN,QAAL,GAAgBA,QAAhB;AALqD;AAMxD;;AAPL;AAAA,EAAsCD,YAAtC","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { isObject } from '../../../base/common/types.js';\r\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\r\nfunction isWorkspaceFileEdit(thing) {\r\n    return isObject(thing) && (Boolean(thing.newUri) || Boolean(thing.oldUri));\r\n}\r\nfunction isWorkspaceTextEdit(thing) {\r\n    return isObject(thing) && URI.isUri(thing.resource) && isObject(thing.edit);\r\n}\r\nexport class ResourceEdit {\r\n    constructor(metadata) {\r\n        this.metadata = metadata;\r\n    }\r\n    static convert(edit) {\r\n        return edit.edits.map(edit => {\r\n            if (isWorkspaceTextEdit(edit)) {\r\n                return new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\r\n            }\r\n            if (isWorkspaceFileEdit(edit)) {\r\n                return new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\r\n            }\r\n            throw new Error('Unsupported edit');\r\n        });\r\n    }\r\n}\r\nexport class ResourceTextEdit extends ResourceEdit {\r\n    constructor(resource, textEdit, versionId, metadata) {\r\n        super(metadata);\r\n        this.resource = resource;\r\n        this.textEdit = textEdit;\r\n        this.versionId = versionId;\r\n        this.metadata = metadata;\r\n    }\r\n}\r\nexport class ResourceFileEdit extends ResourceEdit {\r\n    constructor(oldResource, newResource, options, metadata) {\r\n        super(metadata);\r\n        this.oldResource = oldResource;\r\n        this.newResource = newResource;\r\n        this.options = options;\r\n        this.metadata = metadata;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}