{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var BasicInplaceReplace = /*#__PURE__*/function () {\n  function BasicInplaceReplace() {\n    _classCallCheck(this, BasicInplaceReplace);\n\n    this._defaultValueSet = [['true', 'false'], ['True', 'False'], ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'], ['public', 'protected', 'private']];\n  }\n\n  _createClass(BasicInplaceReplace, [{\n    key: \"navigateValueSet\",\n    value: function navigateValueSet(range1, text1, range2, text2, up) {\n      if (range1 && text1) {\n        var result = this.doNavigateValueSet(text1, up);\n\n        if (result) {\n          return {\n            range: range1,\n            value: result\n          };\n        }\n      }\n\n      if (range2 && text2) {\n        var _result = this.doNavigateValueSet(text2, up);\n\n        if (_result) {\n          return {\n            range: range2,\n            value: _result\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"doNavigateValueSet\",\n    value: function doNavigateValueSet(text, up) {\n      var numberResult = this.numberReplace(text, up);\n\n      if (numberResult !== null) {\n        return numberResult;\n      }\n\n      return this.textReplace(text, up);\n    }\n  }, {\n    key: \"numberReplace\",\n    value: function numberReplace(value, up) {\n      var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n      var n1 = Number(value);\n      var n2 = parseFloat(value);\n\n      if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n        if (n1 === 0 && !up) {\n          return null; // don't do negative\n          //\t\t\t} else if(n1 === 9 && up) {\n          //\t\t\t\treturn null; // don't insert 10 into a number\n        } else {\n          n1 = Math.floor(n1 * precision);\n          n1 += up ? precision : -precision;\n          return String(n1 / precision);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"textReplace\",\n    value: function textReplace(value, up) {\n      return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n  }, {\n    key: \"valueSetsReplace\",\n    value: function valueSetsReplace(valueSets, value, up) {\n      var result = null;\n\n      for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n        result = this.valueSetReplace(valueSets[i], value, up);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"valueSetReplace\",\n    value: function valueSetReplace(valueSet, value, up) {\n      var idx = valueSet.indexOf(value);\n\n      if (idx >= 0) {\n        idx += up ? +1 : -1;\n\n        if (idx < 0) {\n          idx = valueSet.length - 1;\n        } else {\n          idx %= valueSet.length;\n        }\n\n        return valueSet[idx];\n      }\n\n      return null;\n    }\n  }]);\n\n  return BasicInplaceReplace;\n}();\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js"],"names":["BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","result","doNavigateValueSet","range","value","text","numberResult","numberReplace","textReplace","precision","Math","pow","length","lastIndexOf","n1","Number","n2","parseFloat","isNaN","floor","String","valueSetsReplace","valueSets","i","len","valueSetReplace","valueSet","idx","indexOf","INSTANCE"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class BasicInplaceReplace {\r\n    constructor() {\r\n        this._defaultValueSet = [\r\n            ['true', 'false'],\r\n            ['True', 'False'],\r\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n            ['public', 'protected', 'private'],\r\n        ];\r\n    }\r\n    navigateValueSet(range1, text1, range2, text2, up) {\r\n        if (range1 && text1) {\r\n            let result = this.doNavigateValueSet(text1, up);\r\n            if (result) {\r\n                return {\r\n                    range: range1,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        if (range2 && text2) {\r\n            let result = this.doNavigateValueSet(text2, up);\r\n            if (result) {\r\n                return {\r\n                    range: range2,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    doNavigateValueSet(text, up) {\r\n        let numberResult = this.numberReplace(text, up);\r\n        if (numberResult !== null) {\r\n            return numberResult;\r\n        }\r\n        return this.textReplace(text, up);\r\n    }\r\n    numberReplace(value, up) {\r\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n        let n1 = Number(value);\r\n        let n2 = parseFloat(value);\r\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n            if (n1 === 0 && !up) {\r\n                return null; // don't do negative\r\n                //\t\t\t} else if(n1 === 9 && up) {\r\n                //\t\t\t\treturn null; // don't insert 10 into a number\r\n            }\r\n            else {\r\n                n1 = Math.floor(n1 * precision);\r\n                n1 += up ? precision : -precision;\r\n                return String(n1 / precision);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    textReplace(value, up) {\r\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\r\n    }\r\n    valueSetsReplace(valueSets, value, up) {\r\n        let result = null;\r\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n            result = this.valueSetReplace(valueSets[i], value, up);\r\n        }\r\n        return result;\r\n    }\r\n    valueSetReplace(valueSet, value, up) {\r\n        let idx = valueSet.indexOf(value);\r\n        if (idx >= 0) {\r\n            idx += up ? +1 : -1;\r\n            if (idx < 0) {\r\n                idx = valueSet.length - 1;\r\n            }\r\n            else {\r\n                idx %= valueSet.length;\r\n            }\r\n            return valueSet[idx];\r\n        }\r\n        return null;\r\n    }\r\n}\r\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\r\n"]},"metadata":{},"sourceType":"module"}