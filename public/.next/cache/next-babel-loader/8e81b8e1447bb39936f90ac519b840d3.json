{"ast":null,"code":"import _defineProperty from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _properties;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { createStyleSheet } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent as _isSelectionRangeChangeEvent, isSelectionSingleChangeEvent as _isSelectionSingleChangeEvent, List } from '../../../base/browser/ui/list/listWidget.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose as _dispose, toDisposable, DisposableStore, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { attachListStyler, computeStyles, defaultListStyles } from '../../theme/common/styler.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { ObjectTree, CompressibleObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport var IListService = createDecorator('listService');\n\nvar ListService = /*#__PURE__*/function () {\n  function ListService(_themeService) {\n    _classCallCheck(this, ListService);\n\n    this._themeService = _themeService;\n    this.disposables = new DisposableStore();\n    this.lists = [];\n    this._lastFocusedWidget = undefined;\n    this._hasCreatedStyleController = false;\n  }\n\n  _createClass(ListService, [{\n    key: \"register\",\n    value: function register(widget, extraContextKeys) {\n      var _this = this;\n\n      if (!this._hasCreatedStyleController) {\n        this._hasCreatedStyleController = true; // create a shared default tree style sheet for performance reasons\n\n        var styleController = new DefaultStyleController(createStyleSheet(), '');\n        this.disposables.add(attachListStyler(styleController, this._themeService));\n      }\n\n      if (this.lists.some(function (l) {\n        return l.widget === widget;\n      })) {\n        throw new Error('Cannot register the same widget multiple times');\n      } // Keep in our lists list\n\n\n      var registeredList = {\n        widget: widget,\n        extraContextKeys: extraContextKeys\n      };\n      this.lists.push(registeredList); // Check for currently being focused\n\n      if (widget.getHTMLElement() === document.activeElement) {\n        this._lastFocusedWidget = widget;\n      }\n\n      return combinedDisposable(widget.onDidFocus(function () {\n        return _this._lastFocusedWidget = widget;\n      }), toDisposable(function () {\n        return _this.lists.splice(_this.lists.indexOf(registeredList), 1);\n      }), widget.onDidDispose(function () {\n        _this.lists = _this.lists.filter(function (l) {\n          return l !== registeredList;\n        });\n\n        if (_this._lastFocusedWidget === widget) {\n          _this._lastFocusedWidget = undefined;\n        }\n      }));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n    }\n  }, {\n    key: \"lastFocusedList\",\n    get: function get() {\n      return this._lastFocusedWidget;\n    }\n  }]);\n\n  return ListService;\n}();\n\nListService = __decorate([__param(0, IThemeService)], ListService);\nexport { ListService };\nvar RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport var WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport var WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey));\n_c = WorkbenchListFocusContextKey;\nexport var WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport var WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport var WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport var WorkbenchListSupportsKeyboardNavigation = new RawContextKey('listSupportsKeyboardNavigation', true);\nexport var WorkbenchListAutomaticKeyboardNavigationKey = 'listAutomaticKeyboardNavigation';\nexport var WorkbenchListAutomaticKeyboardNavigation = new RawContextKey(WorkbenchListAutomaticKeyboardNavigationKey, true);\nexport var didBindWorkbenchListAutomaticKeyboardNavigation = false;\n\nfunction createScopedContextKeyService(contextKeyService, widget) {\n  var result = contextKeyService.createScoped(widget.getHTMLElement());\n  RawWorkbenchListFocusContextKey.bindTo(result);\n  return result;\n}\n\nvar multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nvar openModeSettingKey = 'workbench.list.openMode';\nvar horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nvar keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nvar automaticKeyboardNavigationSettingKey = 'workbench.list.automaticKeyboardNavigation';\nvar treeIndentKey = 'workbench.tree.indent';\nvar treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nvar listSmoothScrolling = 'workbench.list.smoothScrolling';\nvar treeExpandMode = 'workbench.tree.expandMode';\n\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n  return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\n\nvar MultipleSelectionController = /*#__PURE__*/function (_Disposable) {\n  _inherits(MultipleSelectionController, _Disposable);\n\n  var _super = _createSuper(MultipleSelectionController);\n\n  function MultipleSelectionController(configurationService) {\n    var _this2;\n\n    _classCallCheck(this, MultipleSelectionController);\n\n    _this2 = _super.call(this);\n    _this2.configurationService = configurationService;\n    _this2.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n\n    _this2.registerListeners();\n\n    return _this2;\n  }\n\n  _createClass(MultipleSelectionController, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this,\n          _s = $RefreshSig$();\n\n      this._register(this.configurationService.onDidChangeConfiguration(_s(function (e) {\n        _s();\n\n        if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n          _this3.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(_this3.configurationService);\n        }\n      }, \"Q9RJKn4mYbYnoHvln1M3bDRZ+9k=\", false, function () {\n        return [useAltAsMultipleSelectionModifier];\n      })));\n    }\n  }, {\n    key: \"isSelectionSingleChangeEvent\",\n    value: function isSelectionSingleChangeEvent(event) {\n      if (this.useAltAsMultipleSelectionModifier) {\n        return event.browserEvent.altKey;\n      }\n\n      return _isSelectionSingleChangeEvent(event);\n    }\n  }, {\n    key: \"isSelectionRangeChangeEvent\",\n    value: function isSelectionRangeChangeEvent(event) {\n      return _isSelectionRangeChangeEvent(event);\n    }\n  }]);\n\n  return MultipleSelectionController;\n}(Disposable);\n\nfunction toWorkbenchListOptions(options, configurationService, keybindingService) {\n  var disposables = new DisposableStore();\n  var result = Object.assign({}, options);\n\n  if (options.multipleSelectionSupport !== false && !options.multipleSelectionController) {\n    var multipleSelectionController = new MultipleSelectionController(configurationService);\n    result.multipleSelectionController = multipleSelectionController;\n    disposables.add(multipleSelectionController);\n  }\n\n  result.keyboardNavigationDelegate = {\n    mightProducePrintableCharacter: function mightProducePrintableCharacter(e) {\n      return keybindingService.mightProducePrintableCharacter(e);\n    }\n  };\n  result.smoothScrolling = configurationService.getValue(listSmoothScrolling);\n  return [result, disposables];\n}\n\nvar WorkbenchList = /*#__PURE__*/function (_List) {\n  _inherits(WorkbenchList, _List);\n\n  var _super2 = _createSuper(WorkbenchList);\n\n  function WorkbenchList(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\n    var _s2 = $RefreshSig$();\n\n    var _this4;\n\n    _classCallCheck(this, WorkbenchList);\n\n    var horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\n\n    var _toWorkbenchListOptio = toWorkbenchListOptions(options, configurationService, keybindingService),\n        _toWorkbenchListOptio2 = _slicedToArray(_toWorkbenchListOptio, 2),\n        workbenchListOptions = _toWorkbenchListOptio2[0],\n        workbenchListOptionsDisposable = _toWorkbenchListOptio2[1];\n\n    _this4 = _super2.call(this, user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({\n      keyboardSupport: false\n    }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), {\n      horizontalScrolling: horizontalScrolling\n    }));\n\n    _this4.disposables.add(workbenchListOptionsDisposable);\n\n    _this4.contextKeyService = createScopedContextKeyService(contextKeyService, _assertThisInitialized(_this4));\n    _this4.themeService = themeService;\n    var listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(_this4.contextKeyService);\n    listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\n    _this4.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(_this4.contextKeyService);\n    _this4.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(_this4.contextKeyService);\n    _this4.listMultiSelection = WorkbenchListMultiSelection.bindTo(_this4.contextKeyService);\n    _this4.horizontalScrolling = options.horizontalScrolling;\n    _this4._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n\n    _this4.disposables.add(_this4.contextKeyService);\n\n    _this4.disposables.add(listService.register(_assertThisInitialized(_this4)));\n\n    if (options.overrideStyles) {\n      _this4.updateStyles(options.overrideStyles);\n    }\n\n    _this4.disposables.add(_this4.onDidChangeSelection(function () {\n      var selection = _this4.getSelection();\n\n      var focus = _this4.getFocus();\n\n      _this4.contextKeyService.bufferChangeEvents(function () {\n        _this4.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n\n        _this4.listMultiSelection.set(selection.length > 1);\n\n        _this4.listDoubleSelection.set(selection.length === 2);\n      });\n    }));\n\n    _this4.disposables.add(_this4.onDidChangeFocus(function () {\n      var selection = _this4.getSelection();\n\n      var focus = _this4.getFocus();\n\n      _this4.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n    }));\n\n    _this4.disposables.add(configurationService.onDidChangeConfiguration(_s2(function (e) {\n      _s2();\n\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this4._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n\n      var options = {};\n\n      if (e.affectsConfiguration(horizontalScrollingKey) && _this4.horizontalScrolling === undefined) {\n        var _horizontalScrolling = configurationService.getValue(horizontalScrollingKey);\n\n        options = Object.assign(Object.assign({}, options), {\n          horizontalScrolling: _horizontalScrolling\n        });\n      }\n\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = configurationService.getValue(listSmoothScrolling);\n        options = Object.assign(Object.assign({}, options), {\n          smoothScrolling: smoothScrolling\n        });\n      }\n\n      if (Object.keys(options).length > 0) {\n        _this4.updateOptions(options);\n      }\n    }, \"Q9RJKn4mYbYnoHvln1M3bDRZ+9k=\", false, function () {\n      return [useAltAsMultipleSelectionModifier];\n    })));\n\n    return _this4;\n  }\n\n  _createClass(WorkbenchList, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchList.prototype), \"updateOptions\", this).call(this, options);\n\n      if (options.overrideStyles) {\n        this.updateStyles(options.overrideStyles);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(WorkbenchList.prototype), \"dispose\", this).call(this);\n\n      if (this._styler) {\n        this._styler.dispose();\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(styles) {\n      if (this._styler) {\n        this._styler.dispose();\n      }\n\n      this._styler = attachListStyler(this, this.themeService, styles);\n    }\n  }]);\n\n  return WorkbenchList;\n}(List);\n\nWorkbenchList = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IThemeService), __param(8, IConfigurationService), __param(9, IKeybindingService)], WorkbenchList);\nexport { WorkbenchList };\n\nvar WorkbenchPagedList = /*#__PURE__*/function (_PagedList) {\n  _inherits(WorkbenchPagedList, _PagedList);\n\n  var _super3 = _createSuper(WorkbenchPagedList);\n\n  function WorkbenchPagedList(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\n    var _s3 = $RefreshSig$();\n\n    var _this5;\n\n    _classCallCheck(this, WorkbenchPagedList);\n\n    var horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\n\n    var _toWorkbenchListOptio3 = toWorkbenchListOptions(options, configurationService, keybindingService),\n        _toWorkbenchListOptio4 = _slicedToArray(_toWorkbenchListOptio3, 2),\n        workbenchListOptions = _toWorkbenchListOptio4[0],\n        workbenchListOptionsDisposable = _toWorkbenchListOptio4[1];\n\n    _this5 = _super3.call(this, user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({\n      keyboardSupport: false\n    }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), {\n      horizontalScrolling: horizontalScrolling\n    }));\n    _this5.disposables = new DisposableStore();\n\n    _this5.disposables.add(workbenchListOptionsDisposable);\n\n    _this5.contextKeyService = createScopedContextKeyService(contextKeyService, _assertThisInitialized(_this5));\n    _this5.horizontalScrolling = options.horizontalScrolling;\n    var listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(_this5.contextKeyService);\n    listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\n    _this5._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n\n    _this5.disposables.add(_this5.contextKeyService);\n\n    _this5.disposables.add(listService.register(_assertThisInitialized(_this5)));\n\n    if (options.overrideStyles) {\n      _this5.disposables.add(attachListStyler(_assertThisInitialized(_this5), themeService, options.overrideStyles));\n    }\n\n    _this5.disposables.add(configurationService.onDidChangeConfiguration(_s3(function (e) {\n      _s3();\n\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this5._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n\n      var options = {};\n\n      if (e.affectsConfiguration(horizontalScrollingKey) && _this5.horizontalScrolling === undefined) {\n        var _horizontalScrolling2 = configurationService.getValue(horizontalScrollingKey);\n\n        options = Object.assign(Object.assign({}, options), {\n          horizontalScrolling: _horizontalScrolling2\n        });\n      }\n\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = configurationService.getValue(listSmoothScrolling);\n        options = Object.assign(Object.assign({}, options), {\n          smoothScrolling: smoothScrolling\n        });\n      }\n\n      if (Object.keys(options).length > 0) {\n        _this5.updateOptions(options);\n      }\n    }, \"Q9RJKn4mYbYnoHvln1M3bDRZ+9k=\", false, function () {\n      return [useAltAsMultipleSelectionModifier];\n    })));\n\n    return _this5;\n  }\n\n  _createClass(WorkbenchPagedList, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(WorkbenchPagedList.prototype), \"dispose\", this).call(this);\n\n      this.disposables.dispose();\n    }\n  }]);\n\n  return WorkbenchPagedList;\n}(PagedList);\n\nWorkbenchPagedList = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IThemeService), __param(8, IConfigurationService), __param(9, IKeybindingService)], WorkbenchPagedList);\nexport { WorkbenchPagedList };\n\nvar ResourceNavigator = /*#__PURE__*/function (_Disposable2) {\n  _inherits(ResourceNavigator, _Disposable2);\n\n  var _super4 = _createSuper(ResourceNavigator);\n\n  function ResourceNavigator(widget, options) {\n    var _this6;\n\n    _classCallCheck(this, ResourceNavigator);\n\n    var _a, _b;\n\n    _this6 = _super4.call(this);\n    _this6.widget = widget;\n    _this6._onDidOpen = _this6._register(new Emitter());\n    _this6.onDidOpen = _this6._onDidOpen.event;\n    _this6.openOnFocus = (_a = options === null || options === void 0 ? void 0 : options.openOnFocus) !== null && _a !== void 0 ? _a : false;\n\n    _this6._register(Event.filter(_this6.widget.onDidChangeSelection, function (e) {\n      return e.browserEvent instanceof KeyboardEvent;\n    })(function (e) {\n      return _this6.onSelectionFromKeyboard(e);\n    }));\n\n    _this6._register(_this6.widget.onPointer(function (e) {\n      return _this6.onPointer(e.element, e.browserEvent);\n    }));\n\n    _this6._register(_this6.widget.onMouseDblClick(function (e) {\n      return _this6.onMouseDblClick(e.element, e.browserEvent);\n    }));\n\n    if (_this6.openOnFocus) {\n      _this6._register(Event.filter(_this6.widget.onDidChangeFocus, function (e) {\n        return e.browserEvent instanceof KeyboardEvent;\n      })(function (e) {\n        return _this6.onFocusFromKeyboard(e);\n      }));\n    }\n\n    if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\n      _this6.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n\n      _this6._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(function () {\n        _this6.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n      }));\n    } else {\n      _this6.openOnSingleClick = (_b = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _b !== void 0 ? _b : true;\n    }\n\n    return _this6;\n  }\n\n  _createClass(ResourceNavigator, [{\n    key: \"onFocusFromKeyboard\",\n    value: function onFocusFromKeyboard(event) {\n      var focus = this.widget.getFocus();\n      this.widget.setSelection(focus, event.browserEvent);\n      var selectionKeyboardEvent = event.browserEvent;\n      var preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n      var pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n      var sideBySide = false;\n\n      this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n  }, {\n    key: \"onSelectionFromKeyboard\",\n    value: function onSelectionFromKeyboard(event) {\n      if (event.elements.length !== 1) {\n        return;\n      }\n\n      var selectionKeyboardEvent = event.browserEvent;\n      var preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n      var pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n      var sideBySide = false;\n\n      this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n  }, {\n    key: \"onPointer\",\n    value: function onPointer(element, browserEvent) {\n      if (!this.openOnSingleClick) {\n        return;\n      }\n\n      var isDoubleClick = browserEvent.detail === 2;\n\n      if (isDoubleClick) {\n        return;\n      }\n\n      var isMiddleClick = browserEvent.button === 1;\n      var preserveFocus = true;\n      var pinned = isMiddleClick;\n      var sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n\n      this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n  }, {\n    key: \"onMouseDblClick\",\n    value: function onMouseDblClick(element, browserEvent) {\n      if (!browserEvent) {\n        return;\n      }\n\n      var preserveFocus = false;\n      var pinned = true;\n      var sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n\n      this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n  }, {\n    key: \"_open\",\n    value: function _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n      if (!element) {\n        return;\n      }\n\n      this._onDidOpen.fire({\n        editorOptions: {\n          preserveFocus: preserveFocus,\n          pinned: pinned,\n          revealIfVisible: true\n        },\n        sideBySide: sideBySide,\n        element: element,\n        browserEvent: browserEvent\n      });\n    }\n  }]);\n\n  return ResourceNavigator;\n}(Disposable);\n\nvar TreeResourceNavigator = /*#__PURE__*/function (_ResourceNavigator) {\n  _inherits(TreeResourceNavigator, _ResourceNavigator);\n\n  var _super5 = _createSuper(TreeResourceNavigator);\n\n  function TreeResourceNavigator(widget, options) {\n    var _this7;\n\n    _classCallCheck(this, TreeResourceNavigator);\n\n    _this7 = _super5.call(this, widget, options);\n    _this7.widget = widget;\n    return _this7;\n  }\n\n  _createClass(TreeResourceNavigator, [{\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      var _a;\n\n      return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\n    }\n  }]);\n\n  return TreeResourceNavigator;\n}(ResourceNavigator);\n\nfunction createKeyboardNavigationEventFilter(container, keybindingService) {\n  var inChord = false;\n  return function (event) {\n    if (inChord) {\n      inChord = false;\n      return false;\n    }\n\n    var result = keybindingService.softDispatch(event, container);\n\n    if (result && result.enterChord) {\n      inChord = true;\n      return false;\n    }\n\n    inChord = false;\n    return true;\n  };\n}\n\nvar WorkbenchObjectTree = /*#__PURE__*/function (_ObjectTree) {\n  _inherits(WorkbenchObjectTree, _ObjectTree);\n\n  var _super6 = _createSuper(WorkbenchObjectTree);\n\n  function WorkbenchObjectTree(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\n    var _this8;\n\n    _classCallCheck(this, WorkbenchObjectTree);\n\n    var _workbenchTreeDataPre = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService),\n        treeOptions = _workbenchTreeDataPre.options,\n        getAutomaticKeyboardNavigation = _workbenchTreeDataPre.getAutomaticKeyboardNavigation,\n        disposable = _workbenchTreeDataPre.disposable;\n\n    _this8 = _super6.call(this, user, container, delegate, renderers, treeOptions);\n\n    _this8.disposables.add(disposable);\n\n    _this8.internals = new WorkbenchTreeInternals(_assertThisInitialized(_this8), options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\n\n    _this8.disposables.add(_this8.internals);\n\n    return _this8;\n  }\n\n  return WorkbenchObjectTree;\n}(ObjectTree);\n\nWorkbenchObjectTree = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IThemeService), __param(8, IConfigurationService), __param(9, IKeybindingService), __param(10, IAccessibilityService)], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\n\nvar WorkbenchCompressibleObjectTree = /*#__PURE__*/function (_CompressibleObjectTr) {\n  _inherits(WorkbenchCompressibleObjectTree, _CompressibleObjectTr);\n\n  var _super7 = _createSuper(WorkbenchCompressibleObjectTree);\n\n  function WorkbenchCompressibleObjectTree(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\n    var _this9;\n\n    _classCallCheck(this, WorkbenchCompressibleObjectTree);\n\n    var _workbenchTreeDataPre2 = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService),\n        treeOptions = _workbenchTreeDataPre2.options,\n        getAutomaticKeyboardNavigation = _workbenchTreeDataPre2.getAutomaticKeyboardNavigation,\n        disposable = _workbenchTreeDataPre2.disposable;\n\n    _this9 = _super7.call(this, user, container, delegate, renderers, treeOptions);\n\n    _this9.disposables.add(disposable);\n\n    _this9.internals = new WorkbenchTreeInternals(_assertThisInitialized(_this9), options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\n\n    _this9.disposables.add(_this9.internals);\n\n    return _this9;\n  }\n\n  _createClass(WorkbenchCompressibleObjectTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(WorkbenchCompressibleObjectTree.prototype), \"updateOptions\", this).call(this, options);\n\n      if (options.overrideStyles) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n    }\n  }]);\n\n  return WorkbenchCompressibleObjectTree;\n}(CompressibleObjectTree);\n\nWorkbenchCompressibleObjectTree = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IThemeService), __param(8, IConfigurationService), __param(9, IKeybindingService), __param(10, IAccessibilityService)], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\n\nvar WorkbenchDataTree = /*#__PURE__*/function (_DataTree) {\n  _inherits(WorkbenchDataTree, _DataTree);\n\n  var _super8 = _createSuper(WorkbenchDataTree);\n\n  function WorkbenchDataTree(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\n    var _this10;\n\n    _classCallCheck(this, WorkbenchDataTree);\n\n    var _workbenchTreeDataPre3 = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService),\n        treeOptions = _workbenchTreeDataPre3.options,\n        getAutomaticKeyboardNavigation = _workbenchTreeDataPre3.getAutomaticKeyboardNavigation,\n        disposable = _workbenchTreeDataPre3.disposable;\n\n    _this10 = _super8.call(this, user, container, delegate, renderers, dataSource, treeOptions);\n\n    _this10.disposables.add(disposable);\n\n    _this10.internals = new WorkbenchTreeInternals(_assertThisInitialized(_this10), options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\n\n    _this10.disposables.add(_this10.internals);\n\n    return _this10;\n  }\n\n  _createClass(WorkbenchDataTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(WorkbenchDataTree.prototype), \"updateOptions\", this).call(this, options);\n\n      if (options.overrideStyles) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n    }\n  }]);\n\n  return WorkbenchDataTree;\n}(DataTree);\n\nWorkbenchDataTree = __decorate([__param(6, IContextKeyService), __param(7, IListService), __param(8, IThemeService), __param(9, IConfigurationService), __param(10, IKeybindingService), __param(11, IAccessibilityService)], WorkbenchDataTree);\nexport { WorkbenchDataTree };\n\nvar WorkbenchAsyncDataTree = /*#__PURE__*/function (_AsyncDataTree) {\n  _inherits(WorkbenchAsyncDataTree, _AsyncDataTree);\n\n  var _super9 = _createSuper(WorkbenchAsyncDataTree);\n\n  function WorkbenchAsyncDataTree(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\n    var _this11;\n\n    _classCallCheck(this, WorkbenchAsyncDataTree);\n\n    var _workbenchTreeDataPre4 = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService),\n        treeOptions = _workbenchTreeDataPre4.options,\n        getAutomaticKeyboardNavigation = _workbenchTreeDataPre4.getAutomaticKeyboardNavigation,\n        disposable = _workbenchTreeDataPre4.disposable;\n\n    _this11 = _super9.call(this, user, container, delegate, renderers, dataSource, treeOptions);\n\n    _this11.disposables.add(disposable);\n\n    _this11.internals = new WorkbenchTreeInternals(_assertThisInitialized(_this11), options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\n\n    _this11.disposables.add(_this11.internals);\n\n    return _this11;\n  }\n\n  _createClass(WorkbenchAsyncDataTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(WorkbenchAsyncDataTree.prototype), \"updateOptions\", this).call(this, options);\n\n      if (options.overrideStyles) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n    }\n  }, {\n    key: \"onDidOpen\",\n    get: function get() {\n      return this.internals.onDidOpen;\n    }\n  }]);\n\n  return WorkbenchAsyncDataTree;\n}(AsyncDataTree);\n\nWorkbenchAsyncDataTree = __decorate([__param(6, IContextKeyService), __param(7, IListService), __param(8, IThemeService), __param(9, IConfigurationService), __param(10, IKeybindingService), __param(11, IAccessibilityService)], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\n\nvar WorkbenchCompressibleAsyncDataTree = /*#__PURE__*/function (_CompressibleAsyncDat) {\n  _inherits(WorkbenchCompressibleAsyncDataTree, _CompressibleAsyncDat);\n\n  var _super10 = _createSuper(WorkbenchCompressibleAsyncDataTree);\n\n  function WorkbenchCompressibleAsyncDataTree(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\n    var _this12;\n\n    _classCallCheck(this, WorkbenchCompressibleAsyncDataTree);\n\n    var _workbenchTreeDataPre5 = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService),\n        treeOptions = _workbenchTreeDataPre5.options,\n        getAutomaticKeyboardNavigation = _workbenchTreeDataPre5.getAutomaticKeyboardNavigation,\n        disposable = _workbenchTreeDataPre5.disposable;\n\n    _this12 = _super10.call(this, user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\n\n    _this12.disposables.add(disposable);\n\n    _this12.internals = new WorkbenchTreeInternals(_assertThisInitialized(_this12), options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\n\n    _this12.disposables.add(_this12.internals);\n\n    return _this12;\n  }\n\n  return WorkbenchCompressibleAsyncDataTree;\n}(CompressibleAsyncDataTree);\n\nWorkbenchCompressibleAsyncDataTree = __decorate([__param(7, IContextKeyService), __param(8, IListService), __param(9, IThemeService), __param(10, IConfigurationService), __param(11, IKeybindingService), __param(12, IAccessibilityService)], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\n\nfunction workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService) {\n  var _a;\n\n  WorkbenchListSupportsKeyboardNavigation.bindTo(contextKeyService);\n\n  if (!didBindWorkbenchListAutomaticKeyboardNavigation) {\n    WorkbenchListAutomaticKeyboardNavigation.bindTo(contextKeyService);\n    didBindWorkbenchListAutomaticKeyboardNavigation = true;\n  }\n\n  var getAutomaticKeyboardNavigation = function getAutomaticKeyboardNavigation() {\n    // give priority to the context key value to disable this completely\n    var automaticKeyboardNavigation = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationKey);\n\n    if (automaticKeyboardNavigation) {\n      automaticKeyboardNavigation = configurationService.getValue(automaticKeyboardNavigationSettingKey);\n    }\n\n    return automaticKeyboardNavigation;\n  };\n\n  var accessibilityOn = accessibilityService.isScreenReaderOptimized();\n  var keyboardNavigation = options.simpleKeyboardNavigation || accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\n  var horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\n\n  var _toWorkbenchListOptio5 = toWorkbenchListOptions(options, configurationService, keybindingService),\n      _toWorkbenchListOptio6 = _slicedToArray(_toWorkbenchListOptio5, 2),\n      workbenchListOptions = _toWorkbenchListOptio6[0],\n      disposable = _toWorkbenchListOptio6[1];\n\n  var additionalScrollHeight = options.additionalScrollHeight;\n  return {\n    getAutomaticKeyboardNavigation: getAutomaticKeyboardNavigation,\n    disposable: disposable,\n    options: Object.assign(Object.assign({\n      // ...options, // TODO@Joao why is this not splatted here?\n      keyboardSupport: false\n    }, workbenchListOptions), {\n      indent: configurationService.getValue(treeIndentKey),\n      renderIndentGuides: configurationService.getValue(treeRenderIndentGuidesKey),\n      smoothScrolling: configurationService.getValue(listSmoothScrolling),\n      automaticKeyboardNavigation: getAutomaticKeyboardNavigation(),\n      simpleKeyboardNavigation: keyboardNavigation === 'simple',\n      filterOnType: keyboardNavigation === 'filter',\n      horizontalScrolling: horizontalScrolling,\n      keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(container, keybindingService),\n      additionalScrollHeight: additionalScrollHeight,\n      hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements,\n      expandOnlyOnDoubleClick: configurationService.getValue(openModeSettingKey) === 'doubleClick',\n      expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : configurationService.getValue(treeExpandMode) === 'doubleClick'\n    })\n  };\n}\n\nvar WorkbenchTreeInternals = /*#__PURE__*/function () {\n  function WorkbenchTreeInternals(tree, options, getAutomaticKeyboardNavigation, overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService) {\n    var _this13 = this,\n        _s4 = $RefreshSig$();\n\n    _classCallCheck(this, WorkbenchTreeInternals);\n\n    this.tree = tree;\n    this.themeService = themeService;\n    this.disposables = [];\n    this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n    var listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n    listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\n    this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n    this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n    this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n    this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    var interestingContextKeys = new Set();\n    interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationKey);\n\n    var updateKeyboardNavigation = function updateKeyboardNavigation() {\n      var accessibilityOn = accessibilityService.isScreenReaderOptimized();\n      var keyboardNavigation = accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\n      tree.updateOptions({\n        simpleKeyboardNavigation: keyboardNavigation === 'simple',\n        filterOnType: keyboardNavigation === 'filter'\n      });\n    };\n\n    this.updateStyleOverrides(overrideStyles);\n    this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(function () {\n      var selection = tree.getSelection();\n      var focus = tree.getFocus();\n\n      _this13.contextKeyService.bufferChangeEvents(function () {\n        _this13.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n\n        _this13.hasMultiSelection.set(selection.length > 1);\n\n        _this13.hasDoubleSelection.set(selection.length === 2);\n      });\n    }), tree.onDidChangeFocus(function () {\n      var selection = tree.getSelection();\n      var focus = tree.getFocus();\n\n      _this13.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n    }), configurationService.onDidChangeConfiguration(_s4(function (e) {\n      _s4();\n\n      var newOptions = {};\n\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this13._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n\n      if (e.affectsConfiguration(treeIndentKey)) {\n        var indent = configurationService.getValue(treeIndentKey);\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          indent: indent\n        });\n      }\n\n      if (e.affectsConfiguration(treeRenderIndentGuidesKey)) {\n        var renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          renderIndentGuides: renderIndentGuides\n        });\n      }\n\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = configurationService.getValue(listSmoothScrolling);\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          smoothScrolling: smoothScrolling\n        });\n      }\n\n      if (e.affectsConfiguration(keyboardNavigationSettingKey)) {\n        updateKeyboardNavigation();\n      }\n\n      if (e.affectsConfiguration(automaticKeyboardNavigationSettingKey)) {\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          automaticKeyboardNavigation: getAutomaticKeyboardNavigation()\n        });\n      }\n\n      if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n        var horizontalScrolling = configurationService.getValue(horizontalScrollingKey);\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          horizontalScrolling: horizontalScrolling\n        });\n      }\n\n      if (e.affectsConfiguration(openModeSettingKey)) {\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          expandOnlyOnDoubleClick: configurationService.getValue(openModeSettingKey) === 'doubleClick'\n        });\n      }\n\n      if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n        newOptions = Object.assign(Object.assign({}, newOptions), {\n          expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick'\n        });\n      }\n\n      if (Object.keys(newOptions).length > 0) {\n        tree.updateOptions(newOptions);\n      }\n    }, \"Q9RJKn4mYbYnoHvln1M3bDRZ+9k=\", false, function () {\n      return [useAltAsMultipleSelectionModifier];\n    })), this.contextKeyService.onDidChangeContext(function (e) {\n      if (e.affectsSome(interestingContextKeys)) {\n        tree.updateOptions({\n          automaticKeyboardNavigation: getAutomaticKeyboardNavigation()\n        });\n      }\n    }), accessibilityService.onDidChangeScreenReaderOptimized(function () {\n      return updateKeyboardNavigation();\n    }));\n    this.navigator = new TreeResourceNavigator(tree, Object.assign({\n      configurationService: configurationService\n    }, options));\n    this.disposables.push(this.navigator);\n  }\n\n  _createClass(WorkbenchTreeInternals, [{\n    key: \"updateStyleOverrides\",\n    value: function updateStyleOverrides(overrideStyles) {\n      _dispose(this.styler);\n\n      this.styler = overrideStyles ? attachListStyler(this.tree, this.themeService, overrideStyles) : Disposable.None;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables = _dispose(this.disposables);\n\n      _dispose(this.styler);\n\n      this.styler = undefined;\n    }\n  }, {\n    key: \"onDidOpen\",\n    get: function get() {\n      return this.navigator.onDidOpen;\n    }\n  }]);\n\n  return WorkbenchTreeInternals;\n}();\n\nWorkbenchTreeInternals = __decorate([__param(4, IContextKeyService), __param(5, IListService), __param(6, IThemeService), __param(7, IConfigurationService), __param(8, IAccessibilityService)], WorkbenchTreeInternals);\nvar configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n  'id': 'workbench',\n  'order': 7,\n  'title': localize('workbenchConfigurationTitle', \"Workbench\"),\n  'type': 'object',\n  'properties': (_properties = {}, _defineProperty(_properties, multiSelectModifierSettingKey, {\n    'type': 'string',\n    'enum': ['ctrlCmd', 'alt'],\n    'enumDescriptions': [localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"), localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")],\n    'default': 'ctrlCmd',\n    'description': localize({\n      key: 'multiSelectModifier',\n      comment: ['- `ctrlCmd` refers to a value the setting can take and should not be localized.', '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.']\n    }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n  }), _defineProperty(_properties, openModeSettingKey, {\n    'type': 'string',\n    'enum': ['singleClick', 'doubleClick'],\n    'default': 'singleClick',\n    'description': localize({\n      key: 'openModeModifier',\n      comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n    }, \"Controls how to open items in trees and lists using the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. \")\n  }), _defineProperty(_properties, horizontalScrollingKey, {\n    'type': 'boolean',\n    'default': false,\n    'description': localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n  }), _defineProperty(_properties, treeIndentKey, {\n    'type': 'number',\n    'default': 8,\n    minimum: 0,\n    maximum: 40,\n    'description': localize('tree indent setting', \"Controls tree indentation in pixels.\")\n  }), _defineProperty(_properties, treeRenderIndentGuidesKey, {\n    type: 'string',\n    \"enum\": ['none', 'onHover', 'always'],\n    \"default\": 'onHover',\n    description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n  }), _defineProperty(_properties, listSmoothScrolling, {\n    type: 'boolean',\n    \"default\": false,\n    description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\")\n  }), _defineProperty(_properties, keyboardNavigationSettingKey, {\n    'type': 'string',\n    'enum': ['simple', 'highlight', 'filter'],\n    'enumDescriptions': [localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"), localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"), localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")],\n    'default': 'highlight',\n    'description': localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\")\n  }), _defineProperty(_properties, automaticKeyboardNavigationSettingKey, {\n    'type': 'boolean',\n    'default': true,\n    markdownDescription: localize('automatic keyboard navigation setting', \"Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.\")\n  }), _defineProperty(_properties, treeExpandMode, {\n    type: 'string',\n    \"enum\": ['singleClick', 'doubleClick'],\n    \"default\": 'singleClick',\n    description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names.\")\n  }), _properties)\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkbenchListFocusContextKey\");","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createStyleSheet","PagedList","DefaultStyleController","isSelectionRangeChangeEvent","isSelectionSingleChangeEvent","List","Emitter","Event","Disposable","dispose","toDisposable","DisposableStore","combinedDisposable","localize","IConfigurationService","Extensions","ConfigurationExtensions","ContextKeyExpr","IContextKeyService","RawContextKey","createDecorator","IKeybindingService","Registry","attachListStyler","computeStyles","defaultListStyles","IThemeService","InputFocusedContextKey","ObjectTree","CompressibleObjectTree","AsyncDataTree","CompressibleAsyncDataTree","DataTree","IAccessibilityService","IListService","ListService","_themeService","disposables","lists","_lastFocusedWidget","undefined","_hasCreatedStyleController","widget","extraContextKeys","styleController","add","some","l","Error","registeredList","push","getHTMLElement","document","activeElement","onDidFocus","splice","indexOf","onDidDispose","filter","RawWorkbenchListFocusContextKey","WorkbenchListSupportsMultiSelectContextKey","WorkbenchListFocusContextKey","and","not","WorkbenchListHasSelectionOrFocus","WorkbenchListDoubleSelection","WorkbenchListMultiSelection","WorkbenchListSupportsKeyboardNavigation","WorkbenchListAutomaticKeyboardNavigationKey","WorkbenchListAutomaticKeyboardNavigation","didBindWorkbenchListAutomaticKeyboardNavigation","createScopedContextKeyService","contextKeyService","result","createScoped","bindTo","multiSelectModifierSettingKey","openModeSettingKey","horizontalScrollingKey","keyboardNavigationSettingKey","automaticKeyboardNavigationSettingKey","treeIndentKey","treeRenderIndentGuidesKey","listSmoothScrolling","treeExpandMode","useAltAsMultipleSelectionModifier","configurationService","getValue","MultipleSelectionController","registerListeners","_register","onDidChangeConfiguration","e","affectsConfiguration","event","browserEvent","altKey","toWorkbenchListOptions","options","keybindingService","assign","multipleSelectionSupport","multipleSelectionController","keyboardNavigationDelegate","mightProducePrintableCharacter","smoothScrolling","WorkbenchList","user","container","delegate","renderers","listService","themeService","horizontalScrolling","workbenchListOptions","workbenchListOptionsDisposable","keyboardSupport","getColorTheme","listSupportsMultiSelect","set","listHasSelectionOrFocus","listDoubleSelection","listMultiSelection","_useAltAsMultipleSelectionModifier","register","overrideStyles","updateStyles","onDidChangeSelection","selection","getSelection","focus","getFocus","bufferChangeEvents","onDidChangeFocus","keys","updateOptions","_styler","styles","WorkbenchPagedList","ResourceNavigator","_a","_b","_onDidOpen","onDidOpen","openOnFocus","KeyboardEvent","onSelectionFromKeyboard","onPointer","element","onMouseDblClick","onFocusFromKeyboard","openOnSingleClick","setSelection","selectionKeyboardEvent","preserveFocus","pinned","sideBySide","_open","getSelectedElement","elements","isDoubleClick","detail","isMiddleClick","button","ctrlKey","metaKey","fire","editorOptions","revealIfVisible","TreeResourceNavigator","createKeyboardNavigationEventFilter","inChord","softDispatch","enterChord","WorkbenchObjectTree","accessibilityService","workbenchTreeDataPreamble","treeOptions","getAutomaticKeyboardNavigation","disposable","internals","WorkbenchTreeInternals","WorkbenchCompressibleObjectTree","updateStyleOverrides","WorkbenchDataTree","dataSource","WorkbenchAsyncDataTree","WorkbenchCompressibleAsyncDataTree","virtualDelegate","compressionDelegate","automaticKeyboardNavigation","getContextKeyValue","accessibilityOn","isScreenReaderOptimized","keyboardNavigation","simpleKeyboardNavigation","additionalScrollHeight","indent","renderIndentGuides","filterOnType","keyboardNavigationEventFilter","hideTwistiesOfChildlessElements","expandOnlyOnDoubleClick","expandOnlyOnTwistieClick","tree","hasSelectionOrFocus","hasDoubleSelection","hasMultiSelection","interestingContextKeys","Set","updateKeyboardNavigation","newOptions","onDidChangeContext","affectsSome","onDidChangeScreenReaderOptimized","navigator","styler","None","configurationRegistry","as","Configuration","registerConfiguration","comment","minimum","maximum","type","description","markdownDescription"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createStyleSheet } from '../../../base/browser/dom.js';\r\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\r\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { Disposable, dispose, toDisposable, DisposableStore, combinedDisposable } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { attachListStyler, computeStyles, defaultListStyles } from '../../theme/common/styler.js';\r\nimport { IThemeService } from '../../theme/common/themeService.js';\r\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\r\nimport { ObjectTree, CompressibleObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\r\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\r\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\r\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\r\nexport const IListService = createDecorator('listService');\r\nlet ListService = class ListService {\r\n    constructor(_themeService) {\r\n        this._themeService = _themeService;\r\n        this.disposables = new DisposableStore();\r\n        this.lists = [];\r\n        this._lastFocusedWidget = undefined;\r\n        this._hasCreatedStyleController = false;\r\n    }\r\n    get lastFocusedList() {\r\n        return this._lastFocusedWidget;\r\n    }\r\n    register(widget, extraContextKeys) {\r\n        if (!this._hasCreatedStyleController) {\r\n            this._hasCreatedStyleController = true;\r\n            // create a shared default tree style sheet for performance reasons\r\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\r\n            this.disposables.add(attachListStyler(styleController, this._themeService));\r\n        }\r\n        if (this.lists.some(l => l.widget === widget)) {\r\n            throw new Error('Cannot register the same widget multiple times');\r\n        }\r\n        // Keep in our lists list\r\n        const registeredList = { widget, extraContextKeys };\r\n        this.lists.push(registeredList);\r\n        // Check for currently being focused\r\n        if (widget.getHTMLElement() === document.activeElement) {\r\n            this._lastFocusedWidget = widget;\r\n        }\r\n        return combinedDisposable(widget.onDidFocus(() => this._lastFocusedWidget = widget), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\r\n            this.lists = this.lists.filter(l => l !== registeredList);\r\n            if (this._lastFocusedWidget === widget) {\r\n                this._lastFocusedWidget = undefined;\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this.disposables.dispose();\r\n    }\r\n};\r\nListService = __decorate([\r\n    __param(0, IThemeService)\r\n], ListService);\r\nexport { ListService };\r\nconst RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\r\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\r\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey));\r\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\r\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\r\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\r\nexport const WorkbenchListSupportsKeyboardNavigation = new RawContextKey('listSupportsKeyboardNavigation', true);\r\nexport const WorkbenchListAutomaticKeyboardNavigationKey = 'listAutomaticKeyboardNavigation';\r\nexport const WorkbenchListAutomaticKeyboardNavigation = new RawContextKey(WorkbenchListAutomaticKeyboardNavigationKey, true);\r\nexport let didBindWorkbenchListAutomaticKeyboardNavigation = false;\r\nfunction createScopedContextKeyService(contextKeyService, widget) {\r\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\r\n    RawWorkbenchListFocusContextKey.bindTo(result);\r\n    return result;\r\n}\r\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\r\nconst openModeSettingKey = 'workbench.list.openMode';\r\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\r\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\r\nconst automaticKeyboardNavigationSettingKey = 'workbench.list.automaticKeyboardNavigation';\r\nconst treeIndentKey = 'workbench.tree.indent';\r\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\r\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\r\nconst treeExpandMode = 'workbench.tree.expandMode';\r\nfunction useAltAsMultipleSelectionModifier(configurationService) {\r\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\r\n}\r\nclass MultipleSelectionController extends Disposable {\r\n    constructor(configurationService) {\r\n        super();\r\n        this.configurationService = configurationService;\r\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\r\n            }\r\n        }));\r\n    }\r\n    isSelectionSingleChangeEvent(event) {\r\n        if (this.useAltAsMultipleSelectionModifier) {\r\n            return event.browserEvent.altKey;\r\n        }\r\n        return isSelectionSingleChangeEvent(event);\r\n    }\r\n    isSelectionRangeChangeEvent(event) {\r\n        return isSelectionRangeChangeEvent(event);\r\n    }\r\n}\r\nfunction toWorkbenchListOptions(options, configurationService, keybindingService) {\r\n    const disposables = new DisposableStore();\r\n    const result = Object.assign({}, options);\r\n    if (options.multipleSelectionSupport !== false && !options.multipleSelectionController) {\r\n        const multipleSelectionController = new MultipleSelectionController(configurationService);\r\n        result.multipleSelectionController = multipleSelectionController;\r\n        disposables.add(multipleSelectionController);\r\n    }\r\n    result.keyboardNavigationDelegate = {\r\n        mightProducePrintableCharacter(e) {\r\n            return keybindingService.mightProducePrintableCharacter(e);\r\n        }\r\n    };\r\n    result.smoothScrolling = configurationService.getValue(listSmoothScrolling);\r\n    return [result, disposables];\r\n}\r\nlet WorkbenchList = class WorkbenchList extends List {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\r\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\r\n        const [workbenchListOptions, workbenchListOptionsDisposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\r\n        this.disposables.add(workbenchListOptionsDisposable);\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\r\n        this.themeService = themeService;\r\n        const listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\r\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\r\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\r\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\r\n        this.horizontalScrolling = options.horizontalScrolling;\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.disposables.add(this.contextKeyService);\r\n        this.disposables.add(listService.register(this));\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        this.disposables.add(this.onDidChangeSelection(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.contextKeyService.bufferChangeEvents(() => {\r\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n                this.listMultiSelection.set(selection.length > 1);\r\n                this.listDoubleSelection.set(selection.length === 2);\r\n            });\r\n        }));\r\n        this.disposables.add(this.onDidChangeFocus(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n        }));\r\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            let options = {};\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = configurationService.getValue(horizontalScrollingKey);\r\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = configurationService.getValue(listSmoothScrolling);\r\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\r\n            }\r\n            if (Object.keys(options).length > 0) {\r\n                this.updateOptions(options);\r\n            }\r\n        }));\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this._styler) {\r\n            this._styler.dispose();\r\n        }\r\n    }\r\n    updateStyles(styles) {\r\n        if (this._styler) {\r\n            this._styler.dispose();\r\n        }\r\n        this._styler = attachListStyler(this, this.themeService, styles);\r\n    }\r\n};\r\nWorkbenchList = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService)\r\n], WorkbenchList);\r\nexport { WorkbenchList };\r\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\r\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\r\n        const [workbenchListOptions, workbenchListOptionsDisposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\r\n        this.disposables = new DisposableStore();\r\n        this.disposables.add(workbenchListOptionsDisposable);\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\r\n        this.horizontalScrolling = options.horizontalScrolling;\r\n        const listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.disposables.add(this.contextKeyService);\r\n        this.disposables.add(listService.register(this));\r\n        if (options.overrideStyles) {\r\n            this.disposables.add(attachListStyler(this, themeService, options.overrideStyles));\r\n        }\r\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            let options = {};\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = configurationService.getValue(horizontalScrollingKey);\r\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = configurationService.getValue(listSmoothScrolling);\r\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\r\n            }\r\n            if (Object.keys(options).length > 0) {\r\n                this.updateOptions(options);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.disposables.dispose();\r\n    }\r\n};\r\nWorkbenchPagedList = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService)\r\n], WorkbenchPagedList);\r\nexport { WorkbenchPagedList };\r\nclass ResourceNavigator extends Disposable {\r\n    constructor(widget, options) {\r\n        var _a, _b;\r\n        super();\r\n        this.widget = widget;\r\n        this._onDidOpen = this._register(new Emitter());\r\n        this.onDidOpen = this._onDidOpen.event;\r\n        this.openOnFocus = (_a = options === null || options === void 0 ? void 0 : options.openOnFocus) !== null && _a !== void 0 ? _a : false;\r\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => e.browserEvent instanceof KeyboardEvent)(e => this.onSelectionFromKeyboard(e)));\r\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\r\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\r\n        if (this.openOnFocus) {\r\n            this._register(Event.filter(this.widget.onDidChangeFocus, e => e.browserEvent instanceof KeyboardEvent)(e => this.onFocusFromKeyboard(e)));\r\n        }\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\r\n            this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\r\n            this._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(() => {\r\n                this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\r\n            }));\r\n        }\r\n        else {\r\n            this.openOnSingleClick = (_b = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _b !== void 0 ? _b : true;\r\n        }\r\n    }\r\n    onFocusFromKeyboard(event) {\r\n        const focus = this.widget.getFocus();\r\n        this.widget.setSelection(focus, event.browserEvent);\r\n        const selectionKeyboardEvent = event.browserEvent;\r\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\r\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\r\n        const sideBySide = false;\r\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\r\n    }\r\n    onSelectionFromKeyboard(event) {\r\n        if (event.elements.length !== 1) {\r\n            return;\r\n        }\r\n        const selectionKeyboardEvent = event.browserEvent;\r\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\r\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\r\n        const sideBySide = false;\r\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\r\n    }\r\n    onPointer(element, browserEvent) {\r\n        if (!this.openOnSingleClick) {\r\n            return;\r\n        }\r\n        const isDoubleClick = browserEvent.detail === 2;\r\n        if (isDoubleClick) {\r\n            return;\r\n        }\r\n        const isMiddleClick = browserEvent.button === 1;\r\n        const preserveFocus = true;\r\n        const pinned = isMiddleClick;\r\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\r\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\r\n    }\r\n    onMouseDblClick(element, browserEvent) {\r\n        if (!browserEvent) {\r\n            return;\r\n        }\r\n        const preserveFocus = false;\r\n        const pinned = true;\r\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\r\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\r\n    }\r\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        this._onDidOpen.fire({\r\n            editorOptions: {\r\n                preserveFocus,\r\n                pinned,\r\n                revealIfVisible: true\r\n            },\r\n            sideBySide,\r\n            element,\r\n            browserEvent\r\n        });\r\n    }\r\n}\r\nclass TreeResourceNavigator extends ResourceNavigator {\r\n    constructor(widget, options) {\r\n        super(widget, options);\r\n        this.widget = widget;\r\n    }\r\n    getSelectedElement() {\r\n        var _a;\r\n        return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\r\n    }\r\n}\r\nfunction createKeyboardNavigationEventFilter(container, keybindingService) {\r\n    let inChord = false;\r\n    return event => {\r\n        if (inChord) {\r\n            inChord = false;\r\n            return false;\r\n        }\r\n        const result = keybindingService.softDispatch(event, container);\r\n        if (result && result.enterChord) {\r\n            inChord = true;\r\n            return false;\r\n        }\r\n        inChord = false;\r\n        return true;\r\n    };\r\n}\r\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n};\r\nWorkbenchObjectTree = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService),\r\n    __param(10, IAccessibilityService)\r\n], WorkbenchObjectTree);\r\nexport { WorkbenchObjectTree };\r\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n    }\r\n};\r\nWorkbenchCompressibleObjectTree = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService),\r\n    __param(10, IAccessibilityService)\r\n], WorkbenchCompressibleObjectTree);\r\nexport { WorkbenchCompressibleObjectTree };\r\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n    }\r\n};\r\nWorkbenchDataTree = __decorate([\r\n    __param(6, IContextKeyService),\r\n    __param(7, IListService),\r\n    __param(8, IThemeService),\r\n    __param(9, IConfigurationService),\r\n    __param(10, IKeybindingService),\r\n    __param(11, IAccessibilityService)\r\n], WorkbenchDataTree);\r\nexport { WorkbenchDataTree };\r\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    get onDidOpen() { return this.internals.onDidOpen; }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n    }\r\n};\r\nWorkbenchAsyncDataTree = __decorate([\r\n    __param(6, IContextKeyService),\r\n    __param(7, IListService),\r\n    __param(8, IThemeService),\r\n    __param(9, IConfigurationService),\r\n    __param(10, IKeybindingService),\r\n    __param(11, IAccessibilityService)\r\n], WorkbenchAsyncDataTree);\r\nexport { WorkbenchAsyncDataTree };\r\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\r\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n};\r\nWorkbenchCompressibleAsyncDataTree = __decorate([\r\n    __param(7, IContextKeyService),\r\n    __param(8, IListService),\r\n    __param(9, IThemeService),\r\n    __param(10, IConfigurationService),\r\n    __param(11, IKeybindingService),\r\n    __param(12, IAccessibilityService)\r\n], WorkbenchCompressibleAsyncDataTree);\r\nexport { WorkbenchCompressibleAsyncDataTree };\r\nfunction workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService) {\r\n    var _a;\r\n    WorkbenchListSupportsKeyboardNavigation.bindTo(contextKeyService);\r\n    if (!didBindWorkbenchListAutomaticKeyboardNavigation) {\r\n        WorkbenchListAutomaticKeyboardNavigation.bindTo(contextKeyService);\r\n        didBindWorkbenchListAutomaticKeyboardNavigation = true;\r\n    }\r\n    const getAutomaticKeyboardNavigation = () => {\r\n        // give priority to the context key value to disable this completely\r\n        let automaticKeyboardNavigation = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationKey);\r\n        if (automaticKeyboardNavigation) {\r\n            automaticKeyboardNavigation = configurationService.getValue(automaticKeyboardNavigationSettingKey);\r\n        }\r\n        return automaticKeyboardNavigation;\r\n    };\r\n    const accessibilityOn = accessibilityService.isScreenReaderOptimized();\r\n    const keyboardNavigation = options.simpleKeyboardNavigation || accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\r\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : configurationService.getValue(horizontalScrollingKey);\r\n    const [workbenchListOptions, disposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n    const additionalScrollHeight = options.additionalScrollHeight;\r\n    return {\r\n        getAutomaticKeyboardNavigation,\r\n        disposable,\r\n        options: Object.assign(Object.assign({ \r\n            // ...options, // TODO@Joao why is this not splatted here?\r\n            keyboardSupport: false }, workbenchListOptions), { indent: configurationService.getValue(treeIndentKey), renderIndentGuides: configurationService.getValue(treeRenderIndentGuidesKey), smoothScrolling: configurationService.getValue(listSmoothScrolling), automaticKeyboardNavigation: getAutomaticKeyboardNavigation(), simpleKeyboardNavigation: keyboardNavigation === 'simple', filterOnType: keyboardNavigation === 'filter', horizontalScrolling, keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(container, keybindingService), additionalScrollHeight, hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements, expandOnlyOnDoubleClick: configurationService.getValue(openModeSettingKey) === 'doubleClick', expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : (configurationService.getValue(treeExpandMode) === 'doubleClick') })\r\n    };\r\n}\r\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\r\n    constructor(tree, options, getAutomaticKeyboardNavigation, overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService) {\r\n        this.tree = tree;\r\n        this.themeService = themeService;\r\n        this.disposables = [];\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\r\n        const listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        listSupportsMultiSelect.set(!(options.multipleSelectionSupport === false));\r\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\r\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\r\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        const interestingContextKeys = new Set();\r\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationKey);\r\n        const updateKeyboardNavigation = () => {\r\n            const accessibilityOn = accessibilityService.isScreenReaderOptimized();\r\n            const keyboardNavigation = accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\r\n            tree.updateOptions({\r\n                simpleKeyboardNavigation: keyboardNavigation === 'simple',\r\n                filterOnType: keyboardNavigation === 'filter'\r\n            });\r\n        };\r\n        this.updateStyleOverrides(overrideStyles);\r\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\r\n            const selection = tree.getSelection();\r\n            const focus = tree.getFocus();\r\n            this.contextKeyService.bufferChangeEvents(() => {\r\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n                this.hasMultiSelection.set(selection.length > 1);\r\n                this.hasDoubleSelection.set(selection.length === 2);\r\n            });\r\n        }), tree.onDidChangeFocus(() => {\r\n            const selection = tree.getSelection();\r\n            const focus = tree.getFocus();\r\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n        }), configurationService.onDidChangeConfiguration(e => {\r\n            let newOptions = {};\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            if (e.affectsConfiguration(treeIndentKey)) {\r\n                const indent = configurationService.getValue(treeIndentKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { indent });\r\n            }\r\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey)) {\r\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { renderIndentGuides });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = configurationService.getValue(listSmoothScrolling);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { smoothScrolling });\r\n            }\r\n            if (e.affectsConfiguration(keyboardNavigationSettingKey)) {\r\n                updateKeyboardNavigation();\r\n            }\r\n            if (e.affectsConfiguration(automaticKeyboardNavigationSettingKey)) {\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { automaticKeyboardNavigation: getAutomaticKeyboardNavigation() });\r\n            }\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = configurationService.getValue(horizontalScrollingKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(openModeSettingKey)) {\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { expandOnlyOnDoubleClick: configurationService.getValue(openModeSettingKey) === 'doubleClick' });\r\n            }\r\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' });\r\n            }\r\n            if (Object.keys(newOptions).length > 0) {\r\n                tree.updateOptions(newOptions);\r\n            }\r\n        }), this.contextKeyService.onDidChangeContext(e => {\r\n            if (e.affectsSome(interestingContextKeys)) {\r\n                tree.updateOptions({ automaticKeyboardNavigation: getAutomaticKeyboardNavigation() });\r\n            }\r\n        }), accessibilityService.onDidChangeScreenReaderOptimized(() => updateKeyboardNavigation()));\r\n        this.navigator = new TreeResourceNavigator(tree, Object.assign({ configurationService }, options));\r\n        this.disposables.push(this.navigator);\r\n    }\r\n    get onDidOpen() { return this.navigator.onDidOpen; }\r\n    updateStyleOverrides(overrideStyles) {\r\n        dispose(this.styler);\r\n        this.styler = overrideStyles ? attachListStyler(this.tree, this.themeService, overrideStyles) : Disposable.None;\r\n    }\r\n    dispose() {\r\n        this.disposables = dispose(this.disposables);\r\n        dispose(this.styler);\r\n        this.styler = undefined;\r\n    }\r\n};\r\nWorkbenchTreeInternals = __decorate([\r\n    __param(4, IContextKeyService),\r\n    __param(5, IListService),\r\n    __param(6, IThemeService),\r\n    __param(7, IConfigurationService),\r\n    __param(8, IAccessibilityService)\r\n], WorkbenchTreeInternals);\r\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\r\nconfigurationRegistry.registerConfiguration({\r\n    'id': 'workbench',\r\n    'order': 7,\r\n    'title': localize('workbenchConfigurationTitle', \"Workbench\"),\r\n    'type': 'object',\r\n    'properties': {\r\n        [multiSelectModifierSettingKey]: {\r\n            'type': 'string',\r\n            'enum': ['ctrlCmd', 'alt'],\r\n            'enumDescriptions': [\r\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\r\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\r\n            ],\r\n            'default': 'ctrlCmd',\r\n            'description': localize({\r\n                key: 'multiSelectModifier',\r\n                comment: [\r\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\r\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\r\n                ]\r\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\r\n        },\r\n        [openModeSettingKey]: {\r\n            'type': 'string',\r\n            'enum': ['singleClick', 'doubleClick'],\r\n            'default': 'singleClick',\r\n            'description': localize({\r\n                key: 'openModeModifier',\r\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\r\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. \")\r\n        },\r\n        [horizontalScrollingKey]: {\r\n            'type': 'boolean',\r\n            'default': false,\r\n            'description': localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\r\n        },\r\n        [treeIndentKey]: {\r\n            'type': 'number',\r\n            'default': 8,\r\n            minimum: 0,\r\n            maximum: 40,\r\n            'description': localize('tree indent setting', \"Controls tree indentation in pixels.\")\r\n        },\r\n        [treeRenderIndentGuidesKey]: {\r\n            type: 'string',\r\n            enum: ['none', 'onHover', 'always'],\r\n            default: 'onHover',\r\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\r\n        },\r\n        [listSmoothScrolling]: {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\r\n        },\r\n        [keyboardNavigationSettingKey]: {\r\n            'type': 'string',\r\n            'enum': ['simple', 'highlight', 'filter'],\r\n            'enumDescriptions': [\r\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\r\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\r\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\r\n            ],\r\n            'default': 'highlight',\r\n            'description': localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\")\r\n        },\r\n        [automaticKeyboardNavigationSettingKey]: {\r\n            'type': 'boolean',\r\n            'default': true,\r\n            markdownDescription: localize('automatic keyboard navigation setting', \"Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.\")\r\n        },\r\n        [treeExpandMode]: {\r\n            type: 'string',\r\n            enum: ['singleClick', 'doubleClick'],\r\n            default: 'singleClick',\r\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names.\"),\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}