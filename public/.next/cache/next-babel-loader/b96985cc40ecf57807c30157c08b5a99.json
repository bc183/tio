{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './contextMenuHandler.css';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { EventType, $, isHTMLElement } from '../../../base/browser/dom.js';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nimport { domEvent } from '../../../base/browser/event.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nexport var ContextMenuHandler = /*#__PURE__*/function () {\n  function ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n    _classCallCheck(this, ContextMenuHandler);\n\n    this.contextViewService = contextViewService;\n    this.telemetryService = telemetryService;\n    this.notificationService = notificationService;\n    this.keybindingService = keybindingService;\n    this.themeService = themeService;\n    this.focusToReturn = null;\n    this.block = null;\n    this.options = {\n      blockMouse: true\n    };\n  }\n\n  _createClass(ContextMenuHandler, [{\n    key: \"configure\",\n    value: function configure(options) {\n      this.options = options;\n    }\n  }, {\n    key: \"showContextMenu\",\n    value: function showContextMenu(delegate) {\n      var _this = this;\n\n      var actions = delegate.getActions();\n\n      if (!actions.length) {\n        return; // Don't render an empty context menu\n      }\n\n      this.focusToReturn = document.activeElement;\n      var menu;\n      var shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n      this.contextViewService.showContextView({\n        getAnchor: function getAnchor() {\n          return delegate.getAnchor();\n        },\n        canRelayout: false,\n        anchorAlignment: delegate.anchorAlignment,\n        anchorAxisAlignment: delegate.anchorAxisAlignment,\n        render: function render(container) {\n          var className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n\n          if (className) {\n            container.className += ' ' + className;\n          } // Render invisible div to block mouse interaction in the rest of the UI\n\n\n          if (_this.options.blockMouse) {\n            _this.block = container.appendChild($('.context-view-block'));\n            _this.block.style.position = 'fixed';\n            _this.block.style.cursor = 'initial';\n            _this.block.style.left = '0';\n            _this.block.style.top = '0';\n            _this.block.style.width = '100%';\n            _this.block.style.height = '100%';\n            _this.block.style.zIndex = '-1';\n            domEvent(_this.block, EventType.MOUSE_DOWN)(function (e) {\n              return e.stopPropagation();\n            });\n          }\n\n          var menuDisposables = new DisposableStore();\n          var actionRunner = delegate.actionRunner || new ActionRunner();\n          actionRunner.onBeforeRun(_this.onActionRun, _this, menuDisposables);\n          actionRunner.onDidRun(_this.onDidActionRun, _this, menuDisposables);\n          menu = new Menu(container, actions, {\n            actionViewItemProvider: delegate.getActionViewItem,\n            context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n            actionRunner: actionRunner,\n            getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : function (action) {\n              return _this.keybindingService.lookupKeybinding(action.id);\n            }\n          });\n          menuDisposables.add(attachMenuStyler(menu, _this.themeService));\n          menu.onDidCancel(function () {\n            return _this.contextViewService.hideContextView(true);\n          }, null, menuDisposables);\n          menu.onDidBlur(function () {\n            return _this.contextViewService.hideContextView(true);\n          }, null, menuDisposables);\n          domEvent(window, EventType.BLUR)(function () {\n            _this.contextViewService.hideContextView(true);\n          }, null, menuDisposables);\n          domEvent(window, EventType.MOUSE_DOWN)(function (e) {\n            if (e.defaultPrevented) {\n              return;\n            }\n\n            var event = new StandardMouseEvent(e);\n            var element = event.target; // Don't do anything as we are likely creating a context menu\n\n            if (event.rightButton) {\n              return;\n            }\n\n            while (element) {\n              if (element === container) {\n                return;\n              }\n\n              element = element.parentElement;\n            }\n\n            _this.contextViewService.hideContextView(true);\n          }, null, menuDisposables);\n          return combinedDisposable(menuDisposables, menu);\n        },\n        focus: function focus() {\n          if (menu) {\n            menu.focus(!!delegate.autoSelectFirstItem);\n          }\n        },\n        onHide: function onHide(didCancel) {\n          if (delegate.onHide) {\n            delegate.onHide(!!didCancel);\n          }\n\n          if (_this.block) {\n            _this.block.remove();\n\n            _this.block = null;\n          }\n\n          if (_this.focusToReturn) {\n            _this.focusToReturn.focus();\n          }\n        }\n      }, shadowRootElement, !!shadowRootElement);\n    }\n  }, {\n    key: \"onActionRun\",\n    value: function onActionRun(e) {\n      if (this.telemetryService) {\n        this.telemetryService.publicLog2('workbenchActionExecuted', {\n          id: e.action.id,\n          from: 'contextMenu'\n        });\n      }\n\n      this.contextViewService.hideContextView(false); // Restore focus here\n\n      if (this.focusToReturn) {\n        this.focusToReturn.focus();\n      }\n    }\n  }, {\n    key: \"onDidActionRun\",\n    value: function onDidActionRun(e) {\n      if (e.error) {\n        this.notificationService.error(e.error);\n      }\n    }\n  }]);\n\n  return ContextMenuHandler;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js"],"names":["ActionRunner","combinedDisposable","DisposableStore","Menu","EventType","$","isHTMLElement","attachMenuStyler","domEvent","StandardMouseEvent","ContextMenuHandler","contextViewService","telemetryService","notificationService","keybindingService","themeService","focusToReturn","block","options","blockMouse","delegate","actions","getActions","length","document","activeElement","menu","shadowRootElement","domForShadowRoot","undefined","showContextView","getAnchor","canRelayout","anchorAlignment","anchorAxisAlignment","render","container","className","getMenuClassName","appendChild","style","position","cursor","left","top","width","height","zIndex","MOUSE_DOWN","e","stopPropagation","menuDisposables","actionRunner","onBeforeRun","onActionRun","onDidRun","onDidActionRun","actionViewItemProvider","getActionViewItem","context","getActionsContext","getKeyBinding","action","lookupKeybinding","id","add","onDidCancel","hideContextView","onDidBlur","window","BLUR","defaultPrevented","event","element","target","rightButton","parentElement","focus","autoSelectFirstItem","onHide","didCancel","remove","publicLog2","from","error"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAO,0BAAP;AACA,SAASA,YAAT,QAA6B,iCAA7B;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,mCAApD;AACA,SAASC,IAAT,QAAqB,uCAArB;AACA,SAASC,SAAT,EAAoBC,CAApB,EAAuBC,aAAvB,QAA4C,8BAA5C;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,WAAaC,kBAAb;AACI,8BAAYC,kBAAZ,EAAgCC,gBAAhC,EAAkDC,mBAAlD,EAAuEC,iBAAvE,EAA0FC,YAA1F,EAAwG;AAAA;;AACpG,SAAKJ,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAf;AACH;;AAVL;AAAA;AAAA,8BAWcD,OAXd,EAWuB;AACf,WAAKA,OAAL,GAAeA,OAAf;AACH;AAbL;AAAA;AAAA,oCAcoBE,QAdpB,EAc8B;AAAA;;AACtB,UAAMC,OAAO,GAAGD,QAAQ,CAACE,UAAT,EAAhB;;AACA,UAAI,CAACD,OAAO,CAACE,MAAb,EAAqB;AACjB,eADiB,CACT;AACX;;AACD,WAAKP,aAAL,GAAqBQ,QAAQ,CAACC,aAA9B;AACA,UAAIC,IAAJ;AACA,UAAIC,iBAAiB,GAAGrB,aAAa,CAACc,QAAQ,CAACQ,gBAAV,CAAb,GAA2CR,QAAQ,CAACQ,gBAApD,GAAuEC,SAA/F;AACA,WAAKlB,kBAAL,CAAwBmB,eAAxB,CAAwC;AACpCC,QAAAA,SAAS,EAAE;AAAA,iBAAMX,QAAQ,CAACW,SAAT,EAAN;AAAA,SADyB;AAEpCC,QAAAA,WAAW,EAAE,KAFuB;AAGpCC,QAAAA,eAAe,EAAEb,QAAQ,CAACa,eAHU;AAIpCC,QAAAA,mBAAmB,EAAEd,QAAQ,CAACc,mBAJM;AAKpCC,QAAAA,MAAM,EAAE,gBAACC,SAAD,EAAe;AACnB,cAAIC,SAAS,GAAGjB,QAAQ,CAACkB,gBAAT,GAA4BlB,QAAQ,CAACkB,gBAAT,EAA5B,GAA0D,EAA1E;;AACA,cAAID,SAAJ,EAAe;AACXD,YAAAA,SAAS,CAACC,SAAV,IAAuB,MAAMA,SAA7B;AACH,WAJkB,CAKnB;;;AACA,cAAI,KAAI,CAACnB,OAAL,CAAaC,UAAjB,EAA6B;AACzB,YAAA,KAAI,CAACF,KAAL,GAAamB,SAAS,CAACG,WAAV,CAAsBlC,CAAC,CAAC,qBAAD,CAAvB,CAAb;AACA,YAAA,KAAI,CAACY,KAAL,CAAWuB,KAAX,CAAiBC,QAAjB,GAA4B,OAA5B;AACA,YAAA,KAAI,CAACxB,KAAL,CAAWuB,KAAX,CAAiBE,MAAjB,GAA0B,SAA1B;AACA,YAAA,KAAI,CAACzB,KAAL,CAAWuB,KAAX,CAAiBG,IAAjB,GAAwB,GAAxB;AACA,YAAA,KAAI,CAAC1B,KAAL,CAAWuB,KAAX,CAAiBI,GAAjB,GAAuB,GAAvB;AACA,YAAA,KAAI,CAAC3B,KAAL,CAAWuB,KAAX,CAAiBK,KAAjB,GAAyB,MAAzB;AACA,YAAA,KAAI,CAAC5B,KAAL,CAAWuB,KAAX,CAAiBM,MAAjB,GAA0B,MAA1B;AACA,YAAA,KAAI,CAAC7B,KAAL,CAAWuB,KAAX,CAAiBO,MAAjB,GAA0B,IAA1B;AACAvC,YAAAA,QAAQ,CAAC,KAAI,CAACS,KAAN,EAAab,SAAS,CAAC4C,UAAvB,CAAR,CAA2C,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,eAAF,EAAP;AAAA,aAA3C;AACH;;AACD,cAAMC,eAAe,GAAG,IAAIjD,eAAJ,EAAxB;AACA,cAAMkD,YAAY,GAAGhC,QAAQ,CAACgC,YAAT,IAAyB,IAAIpD,YAAJ,EAA9C;AACAoD,UAAAA,YAAY,CAACC,WAAb,CAAyB,KAAI,CAACC,WAA9B,EAA2C,KAA3C,EAAiDH,eAAjD;AACAC,UAAAA,YAAY,CAACG,QAAb,CAAsB,KAAI,CAACC,cAA3B,EAA2C,KAA3C,EAAiDL,eAAjD;AACAzB,UAAAA,IAAI,GAAG,IAAIvB,IAAJ,CAASiC,SAAT,EAAoBf,OAApB,EAA6B;AAChCoC,YAAAA,sBAAsB,EAAErC,QAAQ,CAACsC,iBADD;AAEhCC,YAAAA,OAAO,EAAEvC,QAAQ,CAACwC,iBAAT,GAA6BxC,QAAQ,CAACwC,iBAAT,EAA7B,GAA4D,IAFrC;AAGhCR,YAAAA,YAAY,EAAZA,YAHgC;AAIhCS,YAAAA,aAAa,EAAEzC,QAAQ,CAACyC,aAAT,GAAyBzC,QAAQ,CAACyC,aAAlC,GAAkD,UAAAC,MAAM;AAAA,qBAAI,KAAI,CAAChD,iBAAL,CAAuBiD,gBAAvB,CAAwCD,MAAM,CAACE,EAA/C,CAAJ;AAAA;AAJvC,WAA7B,CAAP;AAMAb,UAAAA,eAAe,CAACc,GAAhB,CAAoB1D,gBAAgB,CAACmB,IAAD,EAAO,KAAI,CAACX,YAAZ,CAApC;AACAW,UAAAA,IAAI,CAACwC,WAAL,CAAiB;AAAA,mBAAM,KAAI,CAACvD,kBAAL,CAAwBwD,eAAxB,CAAwC,IAAxC,CAAN;AAAA,WAAjB,EAAsE,IAAtE,EAA4EhB,eAA5E;AACAzB,UAAAA,IAAI,CAAC0C,SAAL,CAAe;AAAA,mBAAM,KAAI,CAACzD,kBAAL,CAAwBwD,eAAxB,CAAwC,IAAxC,CAAN;AAAA,WAAf,EAAoE,IAApE,EAA0EhB,eAA1E;AACA3C,UAAAA,QAAQ,CAAC6D,MAAD,EAASjE,SAAS,CAACkE,IAAnB,CAAR,CAAiC,YAAM;AAAE,YAAA,KAAI,CAAC3D,kBAAL,CAAwBwD,eAAxB,CAAwC,IAAxC;AAAgD,WAAzF,EAA2F,IAA3F,EAAiGhB,eAAjG;AACA3C,UAAAA,QAAQ,CAAC6D,MAAD,EAASjE,SAAS,CAAC4C,UAAnB,CAAR,CAAuC,UAACC,CAAD,EAAO;AAC1C,gBAAIA,CAAC,CAACsB,gBAAN,EAAwB;AACpB;AACH;;AACD,gBAAIC,KAAK,GAAG,IAAI/D,kBAAJ,CAAuBwC,CAAvB,CAAZ;AACA,gBAAIwB,OAAO,GAAGD,KAAK,CAACE,MAApB,CAL0C,CAM1C;;AACA,gBAAIF,KAAK,CAACG,WAAV,EAAuB;AACnB;AACH;;AACD,mBAAOF,OAAP,EAAgB;AACZ,kBAAIA,OAAO,KAAKrC,SAAhB,EAA2B;AACvB;AACH;;AACDqC,cAAAA,OAAO,GAAGA,OAAO,CAACG,aAAlB;AACH;;AACD,YAAA,KAAI,CAACjE,kBAAL,CAAwBwD,eAAxB,CAAwC,IAAxC;AACH,WAjBD,EAiBG,IAjBH,EAiBShB,eAjBT;AAkBA,iBAAOlD,kBAAkB,CAACkD,eAAD,EAAkBzB,IAAlB,CAAzB;AACH,SAvDmC;AAwDpCmD,QAAAA,KAAK,EAAE,iBAAM;AACT,cAAInD,IAAJ,EAAU;AACNA,YAAAA,IAAI,CAACmD,KAAL,CAAW,CAAC,CAACzD,QAAQ,CAAC0D,mBAAtB;AACH;AACJ,SA5DmC;AA6DpCC,QAAAA,MAAM,EAAE,gBAACC,SAAD,EAAe;AACnB,cAAI5D,QAAQ,CAAC2D,MAAb,EAAqB;AACjB3D,YAAAA,QAAQ,CAAC2D,MAAT,CAAgB,CAAC,CAACC,SAAlB;AACH;;AACD,cAAI,KAAI,CAAC/D,KAAT,EAAgB;AACZ,YAAA,KAAI,CAACA,KAAL,CAAWgE,MAAX;;AACA,YAAA,KAAI,CAAChE,KAAL,GAAa,IAAb;AACH;;AACD,cAAI,KAAI,CAACD,aAAT,EAAwB;AACpB,YAAA,KAAI,CAACA,aAAL,CAAmB6D,KAAnB;AACH;AACJ;AAxEmC,OAAxC,EAyEGlD,iBAzEH,EAyEsB,CAAC,CAACA,iBAzExB;AA0EH;AAhGL;AAAA;AAAA,gCAiGgBsB,CAjGhB,EAiGmB;AACX,UAAI,KAAKrC,gBAAT,EAA2B;AACvB,aAAKA,gBAAL,CAAsBsE,UAAtB,CAAiC,yBAAjC,EAA4D;AAAElB,UAAAA,EAAE,EAAEf,CAAC,CAACa,MAAF,CAASE,EAAf;AAAmBmB,UAAAA,IAAI,EAAE;AAAzB,SAA5D;AACH;;AACD,WAAKxE,kBAAL,CAAwBwD,eAAxB,CAAwC,KAAxC,EAJW,CAKX;;AACA,UAAI,KAAKnD,aAAT,EAAwB;AACpB,aAAKA,aAAL,CAAmB6D,KAAnB;AACH;AACJ;AA1GL;AAAA;AAAA,mCA2GmB5B,CA3GnB,EA2GsB;AACd,UAAIA,CAAC,CAACmC,KAAN,EAAa;AACT,aAAKvE,mBAAL,CAAyBuE,KAAzB,CAA+BnC,CAAC,CAACmC,KAAjC;AACH;AACJ;AA/GL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './contextMenuHandler.css';\r\nimport { ActionRunner } from '../../../base/common/actions.js';\r\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\r\nimport { EventType, $, isHTMLElement } from '../../../base/browser/dom.js';\r\nimport { attachMenuStyler } from '../../theme/common/styler.js';\r\nimport { domEvent } from '../../../base/browser/event.js';\r\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\r\nexport class ContextMenuHandler {\r\n    constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\r\n        this.contextViewService = contextViewService;\r\n        this.telemetryService = telemetryService;\r\n        this.notificationService = notificationService;\r\n        this.keybindingService = keybindingService;\r\n        this.themeService = themeService;\r\n        this.focusToReturn = null;\r\n        this.block = null;\r\n        this.options = { blockMouse: true };\r\n    }\r\n    configure(options) {\r\n        this.options = options;\r\n    }\r\n    showContextMenu(delegate) {\r\n        const actions = delegate.getActions();\r\n        if (!actions.length) {\r\n            return; // Don't render an empty context menu\r\n        }\r\n        this.focusToReturn = document.activeElement;\r\n        let menu;\r\n        let shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\r\n        this.contextViewService.showContextView({\r\n            getAnchor: () => delegate.getAnchor(),\r\n            canRelayout: false,\r\n            anchorAlignment: delegate.anchorAlignment,\r\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\r\n            render: (container) => {\r\n                let className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\r\n                if (className) {\r\n                    container.className += ' ' + className;\r\n                }\r\n                // Render invisible div to block mouse interaction in the rest of the UI\r\n                if (this.options.blockMouse) {\r\n                    this.block = container.appendChild($('.context-view-block'));\r\n                    this.block.style.position = 'fixed';\r\n                    this.block.style.cursor = 'initial';\r\n                    this.block.style.left = '0';\r\n                    this.block.style.top = '0';\r\n                    this.block.style.width = '100%';\r\n                    this.block.style.height = '100%';\r\n                    this.block.style.zIndex = '-1';\r\n                    domEvent(this.block, EventType.MOUSE_DOWN)((e) => e.stopPropagation());\r\n                }\r\n                const menuDisposables = new DisposableStore();\r\n                const actionRunner = delegate.actionRunner || new ActionRunner();\r\n                actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\r\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\r\n                menu = new Menu(container, actions, {\r\n                    actionViewItemProvider: delegate.getActionViewItem,\r\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\r\n                    actionRunner,\r\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\r\n                });\r\n                menuDisposables.add(attachMenuStyler(menu, this.themeService));\r\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\r\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\r\n                domEvent(window, EventType.BLUR)(() => { this.contextViewService.hideContextView(true); }, null, menuDisposables);\r\n                domEvent(window, EventType.MOUSE_DOWN)((e) => {\r\n                    if (e.defaultPrevented) {\r\n                        return;\r\n                    }\r\n                    let event = new StandardMouseEvent(e);\r\n                    let element = event.target;\r\n                    // Don't do anything as we are likely creating a context menu\r\n                    if (event.rightButton) {\r\n                        return;\r\n                    }\r\n                    while (element) {\r\n                        if (element === container) {\r\n                            return;\r\n                        }\r\n                        element = element.parentElement;\r\n                    }\r\n                    this.contextViewService.hideContextView(true);\r\n                }, null, menuDisposables);\r\n                return combinedDisposable(menuDisposables, menu);\r\n            },\r\n            focus: () => {\r\n                if (menu) {\r\n                    menu.focus(!!delegate.autoSelectFirstItem);\r\n                }\r\n            },\r\n            onHide: (didCancel) => {\r\n                if (delegate.onHide) {\r\n                    delegate.onHide(!!didCancel);\r\n                }\r\n                if (this.block) {\r\n                    this.block.remove();\r\n                    this.block = null;\r\n                }\r\n                if (this.focusToReturn) {\r\n                    this.focusToReturn.focus();\r\n                }\r\n            }\r\n        }, shadowRootElement, !!shadowRootElement);\r\n    }\r\n    onActionRun(e) {\r\n        if (this.telemetryService) {\r\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\r\n        }\r\n        this.contextViewService.hideContextView(false);\r\n        // Restore focus here\r\n        if (this.focusToReturn) {\r\n            this.focusToReturn.focus();\r\n        }\r\n    }\r\n    onDidActionRun(e) {\r\n        if (e.error) {\r\n            this.notificationService.error(e.error);\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}