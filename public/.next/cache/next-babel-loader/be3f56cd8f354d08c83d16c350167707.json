{"ast":null,"code":"import _defineProperty from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks as _computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\r\n * @internal\r\n */\n\nvar MirrorModel = /*#__PURE__*/function (_BaseMirrorModel) {\n  _inherits(MirrorModel, _BaseMirrorModel);\n\n  var _super = _createSuper(MirrorModel);\n\n  function MirrorModel() {\n    _classCallCheck(this, MirrorModel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MirrorModel, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.getText();\n    }\n  }, {\n    key: \"getLinesContent\",\n    value: function getLinesContent() {\n      return this._lines.slice(0);\n    }\n  }, {\n    key: \"getLineCount\",\n    value: function getLineCount() {\n      return this._lines.length;\n    }\n  }, {\n    key: \"getLineContent\",\n    value: function getLineContent(lineNumber) {\n      return this._lines[lineNumber - 1];\n    }\n  }, {\n    key: \"getWordAtPosition\",\n    value: function getWordAtPosition(position, wordDefinition) {\n      var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n\n      if (wordAtText) {\n        return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"words\",\n    value: function words(wordDefinition) {\n      var lines = this._lines;\n\n      var wordenize = this._wordenize.bind(this);\n\n      var lineNumber = 0;\n      var lineText = '';\n      var wordRangesIdx = 0;\n      var wordRanges = [];\n      return _defineProperty({}, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var value;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!true) {\n                  _context.next = 18;\n                  break;\n                }\n\n                if (!(wordRangesIdx < wordRanges.length)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                _context.next = 6;\n                return value;\n\n              case 6:\n                _context.next = 16;\n                break;\n\n              case 8:\n                if (!(lineNumber < lines.length)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                lineText = lines[lineNumber];\n                wordRanges = wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                _context.next = 16;\n                break;\n\n              case 15:\n                return _context.abrupt(\"break\", 18);\n\n              case 16:\n                _context.next = 0;\n                break;\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"getLineWords\",\n    value: function getLineWords(lineNumber, wordDefinition) {\n      var content = this._lines[lineNumber - 1];\n\n      var ranges = this._wordenize(content, wordDefinition);\n\n      var words = [];\n\n      var _iterator = _createForOfIteratorHelper(ranges),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var range = _step.value;\n          words.push({\n            word: content.substring(range.start, range.end),\n            startColumn: range.start + 1,\n            endColumn: range.end + 1\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return words;\n    }\n  }, {\n    key: \"_wordenize\",\n    value: function _wordenize(content, wordDefinition) {\n      var result = [];\n      var match;\n      wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n      while (match = wordDefinition.exec(content)) {\n        if (match[0].length === 0) {\n          // it did match the empty string\n          break;\n        }\n\n        result.push({\n          start: match.index,\n          end: match.index + match[0].length\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(range) {\n      range = this._validateRange(range);\n\n      if (range.startLineNumber === range.endLineNumber) {\n        return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n      }\n\n      var lineEnding = this._eol;\n      var startLineIndex = range.startLineNumber - 1;\n      var endLineIndex = range.endLineNumber - 1;\n      var resultLines = [];\n      resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\n      for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n        resultLines.push(this._lines[i]);\n      }\n\n      resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n      return resultLines.join(lineEnding);\n    }\n  }, {\n    key: \"offsetAt\",\n    value: function offsetAt(position) {\n      position = this._validatePosition(position);\n\n      this._ensureLineStarts();\n\n      return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    }\n  }, {\n    key: \"positionAt\",\n    value: function positionAt(offset) {\n      offset = Math.floor(offset);\n      offset = Math.max(0, offset);\n\n      this._ensureLineStarts();\n\n      var out = this._lineStarts.getIndexOf(offset);\n\n      var lineLength = this._lines[out.index].length; // Ensure we return a valid position\n\n      return {\n        lineNumber: 1 + out.index,\n        column: 1 + Math.min(out.remainder, lineLength)\n      };\n    }\n  }, {\n    key: \"_validateRange\",\n    value: function _validateRange(range) {\n      var start = this._validatePosition({\n        lineNumber: range.startLineNumber,\n        column: range.startColumn\n      });\n\n      var end = this._validatePosition({\n        lineNumber: range.endLineNumber,\n        column: range.endColumn\n      });\n\n      if (start.lineNumber !== range.startLineNumber || start.column !== range.startColumn || end.lineNumber !== range.endLineNumber || end.column !== range.endColumn) {\n        return {\n          startLineNumber: start.lineNumber,\n          startColumn: start.column,\n          endLineNumber: end.lineNumber,\n          endColumn: end.column\n        };\n      }\n\n      return range;\n    }\n  }, {\n    key: \"_validatePosition\",\n    value: function _validatePosition(position) {\n      if (!Position.isIPosition(position)) {\n        throw new Error('bad position');\n      }\n\n      var lineNumber = position.lineNumber,\n          column = position.column;\n      var hasChanged = false;\n\n      if (lineNumber < 1) {\n        lineNumber = 1;\n        column = 1;\n        hasChanged = true;\n      } else if (lineNumber > this._lines.length) {\n        lineNumber = this._lines.length;\n        column = this._lines[lineNumber - 1].length + 1;\n        hasChanged = true;\n      } else {\n        var maxCharacter = this._lines[lineNumber - 1].length + 1;\n\n        if (column < 1) {\n          column = 1;\n          hasChanged = true;\n        } else if (column > maxCharacter) {\n          column = maxCharacter;\n          hasChanged = true;\n        }\n      }\n\n      if (!hasChanged) {\n        return position;\n      } else {\n        return {\n          lineNumber: lineNumber,\n          column: column\n        };\n      }\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      return this._uri;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this._versionId;\n    }\n  }, {\n    key: \"eol\",\n    get: function get() {\n      return this._eol;\n    }\n  }]);\n\n  return MirrorModel;\n}(BaseMirrorModel);\n/**\r\n * @internal\r\n */\n\n\nexport var EditorSimpleWorker = /*#__PURE__*/function () {\n  function EditorSimpleWorker(host, foreignModuleFactory) {\n    _classCallCheck(this, EditorSimpleWorker);\n\n    this._host = host;\n    this._models = Object.create(null);\n    this._foreignModuleFactory = foreignModuleFactory;\n    this._foreignModule = null;\n  }\n\n  _createClass(EditorSimpleWorker, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._models = Object.create(null);\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(uri) {\n      return this._models[uri];\n    }\n  }, {\n    key: \"_getModels\",\n    value: function _getModels() {\n      var _this = this;\n\n      var all = [];\n      Object.keys(this._models).forEach(function (key) {\n        return all.push(_this._models[key]);\n      });\n      return all;\n    }\n  }, {\n    key: \"acceptNewModel\",\n    value: function acceptNewModel(data) {\n      this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n  }, {\n    key: \"acceptModelChanged\",\n    value: function acceptModelChanged(strURL, e) {\n      if (!this._models[strURL]) {\n        return;\n      }\n\n      var model = this._models[strURL];\n      model.onEvents(e);\n    }\n  }, {\n    key: \"acceptRemovedModel\",\n    value: function acceptRemovedModel(strURL) {\n      if (!this._models[strURL]) {\n        return;\n      }\n\n      delete this._models[strURL];\n    } // ---- BEGIN diff --------------------------------------------------------------------------\n\n  }, {\n    key: \"computeDiff\",\n    value: function computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var original, modified, originalLines, modifiedLines, diffComputer, diffResult, identical;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                original = this._getModel(originalUrl);\n                modified = this._getModel(modifiedUrl);\n\n                if (!(!original || !modified)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 4:\n                originalLines = original.getLinesContent();\n                modifiedLines = modified.getLinesContent();\n                diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                  shouldComputeCharChanges: true,\n                  shouldPostProcessCharChanges: true,\n                  shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                  shouldMakePrettyDiff: true,\n                  maxComputationTime: maxComputationTime\n                });\n                diffResult = diffComputer.computeDiff();\n                identical = diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified);\n                return _context2.abrupt(\"return\", {\n                  quitEarly: diffResult.quitEarly,\n                  identical: identical,\n                  changes: diffResult.changes\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"_modelsAreIdentical\",\n    value: function _modelsAreIdentical(original, modified) {\n      var originalLineCount = original.getLineCount();\n      var modifiedLineCount = modified.getLineCount();\n\n      if (originalLineCount !== modifiedLineCount) {\n        return false;\n      }\n\n      for (var line = 1; line <= originalLineCount; line++) {\n        var originalLine = original.getLineContent(line);\n        var modifiedLine = modified.getLineContent(line);\n\n        if (originalLine !== modifiedLine) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"computeMoreMinimalEdits\",\n    value: function computeMoreMinimalEdits(modelUrl, edits) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var model, result, lastEol, _iterator2, _step2, _step2$value, range, text, eol, original, changes, editOffset, _iterator3, _step3, change, start, end, newEdit;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                model = this._getModel(modelUrl);\n\n                if (model) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", edits);\n\n              case 3:\n                result = [];\n                lastEol = undefined;\n                edits = mergeSort(edits, function (a, b) {\n                  if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                  } // eol only changes should go to the end\n\n\n                  var aRng = a.range ? 0 : 1;\n                  var bRng = b.range ? 0 : 1;\n                  return aRng - bRng;\n                });\n                _iterator2 = _createForOfIteratorHelper(edits);\n                _context3.prev = 7;\n\n                _iterator2.s();\n\n              case 9:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _step2$value = _step2.value, range = _step2$value.range, text = _step2$value.text, eol = _step2$value.eol;\n\n                if (typeof eol === 'number') {\n                  lastEol = eol;\n                }\n\n                if (!(Range.isEmpty(range) && !text)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                return _context3.abrupt(\"continue\", 25);\n\n              case 14:\n                original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n                if (!(original === text)) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                return _context3.abrupt(\"continue\", 25);\n\n              case 18:\n                if (!(Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                result.push({\n                  range: range,\n                  text: text\n                });\n                return _context3.abrupt(\"continue\", 25);\n\n              case 21:\n                // compute diff between original and edit.text\n                changes = stringDiff(original, text, false);\n                editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                _iterator3 = _createForOfIteratorHelper(changes);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    change = _step3.value;\n                    start = model.positionAt(editOffset + change.originalStart);\n                    end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    newEdit = {\n                      text: text.substr(change.modifiedStart, change.modifiedLength),\n                      range: {\n                        startLineNumber: start.lineNumber,\n                        startColumn: start.column,\n                        endLineNumber: end.lineNumber,\n                        endColumn: end.column\n                      }\n                    };\n\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                      result.push(newEdit);\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 25:\n                _context3.next = 9;\n                break;\n\n              case 27:\n                _context3.next = 32;\n                break;\n\n              case 29:\n                _context3.prev = 29;\n                _context3.t0 = _context3[\"catch\"](7);\n\n                _iterator2.e(_context3.t0);\n\n              case 32:\n                _context3.prev = 32;\n\n                _iterator2.f();\n\n                return _context3.finish(32);\n\n              case 35:\n                if (typeof lastEol === 'number') {\n                  result.push({\n                    eol: lastEol,\n                    text: '',\n                    range: {\n                      startLineNumber: 0,\n                      startColumn: 0,\n                      endLineNumber: 0,\n                      endColumn: 0\n                    }\n                  });\n                }\n\n                return _context3.abrupt(\"return\", result);\n\n              case 37:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[7, 29, 32, 35]]);\n      }));\n    } // ---- END minimal edits ---------------------------------------------------------------\n\n  }, {\n    key: \"computeLinks\",\n    value: function computeLinks(modelUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var model;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                model = this._getModel(modelUrl);\n\n                if (model) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", null);\n\n              case 3:\n                return _context4.abrupt(\"return\", _computeLinks(model));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"textualSuggest\",\n    value: function textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var sw, wordDefRegExp, seen, _iterator4, _step4, url, model, _iterator5, _step5, word;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                sw = new StopWatch(true);\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n                seen = new Set();\n                _iterator4 = _createForOfIteratorHelper(modelUrls);\n                _context5.prev = 4;\n\n                _iterator4.s();\n\n              case 6:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context5.next = 33;\n                  break;\n                }\n\n                url = _step4.value;\n                model = this._getModel(url);\n\n                if (model) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                return _context5.abrupt(\"continue\", 31);\n\n              case 11:\n                _iterator5 = _createForOfIteratorHelper(model.words(wordDefRegExp));\n                _context5.prev = 12;\n\n                _iterator5.s();\n\n              case 14:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                word = _step5.value;\n\n                if (!(word === leadingWord || !isNaN(Number(word)))) {\n                  _context5.next = 18;\n                  break;\n                }\n\n                return _context5.abrupt(\"continue\", 21);\n\n              case 18:\n                seen.add(word);\n\n                if (!(seen.size > EditorSimpleWorker._suggestionsLimit)) {\n                  _context5.next = 21;\n                  break;\n                }\n\n                return _context5.abrupt(\"break\", 33);\n\n              case 21:\n                _context5.next = 14;\n                break;\n\n              case 23:\n                _context5.next = 28;\n                break;\n\n              case 25:\n                _context5.prev = 25;\n                _context5.t0 = _context5[\"catch\"](12);\n\n                _iterator5.e(_context5.t0);\n\n              case 28:\n                _context5.prev = 28;\n\n                _iterator5.f();\n\n                return _context5.finish(28);\n\n              case 31:\n                _context5.next = 6;\n                break;\n\n              case 33:\n                _context5.next = 38;\n                break;\n\n              case 35:\n                _context5.prev = 35;\n                _context5.t1 = _context5[\"catch\"](4);\n\n                _iterator4.e(_context5.t1);\n\n              case 38:\n                _context5.prev = 38;\n\n                _iterator4.f();\n\n                return _context5.finish(38);\n\n              case 41:\n                return _context5.abrupt(\"return\", {\n                  words: Array.from(seen),\n                  duration: sw.elapsed()\n                });\n\n              case 42:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[4, 35, 38, 41], [12, 25, 28, 31]]);\n      }));\n    } // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n\n  }, {\n    key: \"computeWordRanges\",\n    value: function computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var model, wordDefRegExp, result, line, words, _iterator6, _step6, word, array;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                model = this._getModel(modelUrl);\n\n                if (model) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", Object.create(null));\n\n              case 3:\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n                result = Object.create(null);\n                line = range.startLineNumber;\n\n              case 6:\n                if (!(line < range.endLineNumber)) {\n                  _context6.next = 31;\n                  break;\n                }\n\n                words = model.getLineWords(line, wordDefRegExp);\n                _iterator6 = _createForOfIteratorHelper(words);\n                _context6.prev = 9;\n\n                _iterator6.s();\n\n              case 11:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context6.next = 20;\n                  break;\n                }\n\n                word = _step6.value;\n\n                if (isNaN(Number(word.word))) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                return _context6.abrupt(\"continue\", 18);\n\n              case 15:\n                array = result[word.word];\n\n                if (!array) {\n                  array = [];\n                  result[word.word] = array;\n                }\n\n                array.push({\n                  startLineNumber: line,\n                  startColumn: word.startColumn,\n                  endLineNumber: line,\n                  endColumn: word.endColumn\n                });\n\n              case 18:\n                _context6.next = 11;\n                break;\n\n              case 20:\n                _context6.next = 25;\n                break;\n\n              case 22:\n                _context6.prev = 22;\n                _context6.t0 = _context6[\"catch\"](9);\n\n                _iterator6.e(_context6.t0);\n\n              case 25:\n                _context6.prev = 25;\n\n                _iterator6.f();\n\n                return _context6.finish(25);\n\n              case 28:\n                line++;\n                _context6.next = 6;\n                break;\n\n              case 31:\n                return _context6.abrupt(\"return\", result);\n\n              case 32:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[9, 22, 25, 28]]);\n      }));\n    } //#endregion\n\n  }, {\n    key: \"navigateValueSet\",\n    value: function navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var model, wordDefRegExp, selectionText, wordRange, word, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                model = this._getModel(modelUrl);\n\n                if (model) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", null);\n\n              case 3:\n                wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n                if (range.startColumn === range.endColumn) {\n                  range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                  };\n                }\n\n                selectionText = model.getValueInRange(range);\n                wordRange = model.getWordAtPosition({\n                  lineNumber: range.startLineNumber,\n                  column: range.startColumn\n                }, wordDefRegExp);\n\n                if (wordRange) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", null);\n\n              case 9:\n                word = model.getValueInRange(wordRange);\n                result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n                return _context7.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    } // ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n  }, {\n    key: \"loadForeignModule\",\n    value: function loadForeignModule(moduleId, createData, foreignHostMethods) {\n      var _this2 = this;\n\n      var proxyMethodRequest = function proxyMethodRequest(method, args) {\n        return _this2._host.fhr(method, args);\n      };\n\n      var foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n      var ctx = {\n        host: foreignHost,\n        getMirrorModels: function getMirrorModels() {\n          return _this2._getModels();\n        }\n      };\n\n      if (this._foreignModuleFactory) {\n        this._foreignModule = this._foreignModuleFactory(ctx, createData); // static foreing module\n\n        return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n      } // ESM-comment-begin\n      // \t\treturn new Promise<any>((resolve, reject) => {\n      // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n      // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n      // \n      // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n      // \n      // \t\t\t}, reject);\n      // \t\t});\n      // ESM-comment-end\n      // ESM-uncomment-begin\n\n\n      return Promise.reject(new Error(\"Unexpected usage\")); // ESM-uncomment-end\n    } // foreign method request\n\n  }, {\n    key: \"fmr\",\n    value: function fmr(method, args) {\n      if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n        return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n      }\n\n      try {\n        return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }]);\n\n  return EditorSimpleWorker;\n}(); // ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\n\nEditorSimpleWorker._diffLimit = 100000; // ---- BEGIN suggest --------------------------------------------------------------------------\n\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\n\nexport function create(host) {\n  return new EditorSimpleWorker(host, null);\n}\n\nif (typeof importScripts === 'function') {\n  // Running in a web worker\n  globals.monaco = createMonacoBaseAPI();\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","mergeSort","stringDiff","globals","URI","Position","Range","DiffComputer","MirrorTextModel","BaseMirrorModel","ensureValidWordDefinition","getWordAtText","computeLinks","BasicInplaceReplace","createMonacoBaseAPI","types","StopWatch","MirrorModel","getText","_lines","slice","length","lineNumber","position","wordDefinition","wordAtText","column","startColumn","endColumn","lines","wordenize","_wordenize","bind","lineText","wordRangesIdx","wordRanges","Symbol","iterator","substring","start","end","content","ranges","words","range","push","word","match","lastIndex","exec","index","_validateRange","startLineNumber","endLineNumber","lineEnding","_eol","startLineIndex","endLineIndex","resultLines","i","join","_validatePosition","_ensureLineStarts","_lineStarts","getAccumulatedValue","offset","Math","floor","max","out","getIndexOf","lineLength","min","remainder","isIPosition","Error","hasChanged","maxCharacter","_uri","_versionId","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","Object","create","_foreignModuleFactory","_foreignModule","uri","all","keys","forEach","key","data","url","parse","EOL","versionId","strURL","model","onEvents","originalUrl","modifiedUrl","ignoreTrimWhitespace","maxComputationTime","original","_getModel","modified","originalLines","getLinesContent","modifiedLines","diffComputer","shouldComputeCharChanges","shouldPostProcessCharChanges","shouldIgnoreTrimWhitespace","shouldMakePrettyDiff","diffResult","computeDiff","identical","changes","_modelsAreIdentical","quitEarly","originalLineCount","getLineCount","modifiedLineCount","line","originalLine","getLineContent","modifiedLine","modelUrl","edits","lastEol","undefined","a","b","compareRangesUsingStarts","aRng","bRng","text","eol","isEmpty","getValueInRange","replace","_diffLimit","editOffset","offsetAt","lift","getStartPosition","change","positionAt","originalStart","originalLength","newEdit","substr","modifiedStart","modifiedLength","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","RegExp","seen","Set","isNaN","Number","add","size","_suggestionsLimit","Array","from","duration","elapsed","getLineWords","array","up","selectionText","wordRange","getWordAtPosition","INSTANCE","navigateValueSet","moduleId","createData","foreignHostMethods","proxyMethodRequest","method","args","fhr","foreignHost","createProxyObject","ctx","getMirrorModels","_getModels","getAllMethodNames","importScripts","monaco"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,SAAT,QAA0B,gCAA1B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,GAAT,QAAoB,6BAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,eAAe,IAAIC,eAA5B,QAAmD,6BAAnD;AACA,SAASC,yBAAT,EAAoCC,aAApC,QAAyD,wBAAzD;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,0BAA7B;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,+BAAvB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA;AACA;AACA;;IACMC,W;;;;;;;;;;;;;+BAUS;AACP,aAAO,KAAKC,OAAL,EAAP;AACH;;;sCACiB;AACd,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CAAP;AACH;;;mCACc;AACX,aAAO,KAAKD,MAAL,CAAYE,MAAnB;AACH;;;mCACcC,U,EAAY;AACvB,aAAO,KAAKH,MAAL,CAAYG,UAAU,GAAG,CAAzB,CAAP;AACH;;;sCACiBC,Q,EAAUC,c,EAAgB;AACxC,UAAIC,UAAU,GAAGd,aAAa,CAACY,QAAQ,CAACG,MAAV,EAAkBhB,yBAAyB,CAACc,cAAD,CAA3C,EAA6D,KAAKL,MAAL,CAAYI,QAAQ,CAACD,UAAT,GAAsB,CAAlC,CAA7D,EAAmG,CAAnG,CAA9B;;AACA,UAAIG,UAAJ,EAAgB;AACZ,eAAO,IAAInB,KAAJ,CAAUiB,QAAQ,CAACD,UAAnB,EAA+BG,UAAU,CAACE,WAA1C,EAAuDJ,QAAQ,CAACD,UAAhE,EAA4EG,UAAU,CAACG,SAAvF,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;;0BACKJ,c,EAAgB;AAClB,UAAMK,KAAK,GAAG,KAAKV,MAAnB;;AACA,UAAMW,SAAS,GAAG,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;;AACA,UAAIV,UAAU,GAAG,CAAjB;AACA,UAAIW,QAAQ,GAAG,EAAf;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,iCACMC,MAAM,CAACC,QADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEe,IAFf;AAAA;AAAA;AAAA;;AAAA,sBAGgBH,aAAa,GAAGC,UAAU,CAACd,MAH3C;AAAA;AAAA;AAAA;;AAIsBjC,gBAAAA,KAJtB,GAI8B6C,QAAQ,CAACK,SAAT,CAAmBH,UAAU,CAACD,aAAD,CAAV,CAA0BK,KAA7C,EAAoDJ,UAAU,CAACD,aAAD,CAAV,CAA0BM,GAA9E,CAJ9B;AAKgBN,gBAAAA,aAAa,IAAI,CAAjB;AALhB;AAMgB,uBAAM9C,KAAN;;AANhB;AAAA;AAAA;;AAAA;AAAA,sBASoBkC,UAAU,GAAGO,KAAK,CAACR,MATvC;AAAA;AAAA;AAAA;;AAUoBY,gBAAAA,QAAQ,GAAGJ,KAAK,CAACP,UAAD,CAAhB;AACAa,gBAAAA,UAAU,GAAGL,SAAS,CAACG,QAAD,EAAWT,cAAX,CAAtB;AACAU,gBAAAA,aAAa,GAAG,CAAhB;AACAZ,gBAAAA,UAAU,IAAI,CAAd;AAbpB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBH;;;iCACYA,U,EAAYE,c,EAAgB;AACrC,UAAIiB,OAAO,GAAG,KAAKtB,MAAL,CAAYG,UAAU,GAAG,CAAzB,CAAd;;AACA,UAAIoB,MAAM,GAAG,KAAKX,UAAL,CAAgBU,OAAhB,EAAyBjB,cAAzB,CAAb;;AACA,UAAImB,KAAK,GAAG,EAAZ;;AAHqC,iDAIjBD,MAJiB;AAAA;;AAAA;AAIrC,4DAA4B;AAAA,cAAjBE,KAAiB;AACxBD,UAAAA,KAAK,CAACE,IAAN,CAAW;AACPC,YAAAA,IAAI,EAAEL,OAAO,CAACH,SAAR,CAAkBM,KAAK,CAACL,KAAxB,EAA+BK,KAAK,CAACJ,GAArC,CADC;AAEPb,YAAAA,WAAW,EAAEiB,KAAK,CAACL,KAAN,GAAc,CAFpB;AAGPX,YAAAA,SAAS,EAAEgB,KAAK,CAACJ,GAAN,GAAY;AAHhB,WAAX;AAKH;AAVoC;AAAA;AAAA;AAAA;AAAA;;AAWrC,aAAOG,KAAP;AACH;;;+BACUF,O,EAASjB,c,EAAgB;AAChC,UAAM3B,MAAM,GAAG,EAAf;AACA,UAAIkD,KAAJ;AACAvB,MAAAA,cAAc,CAACwB,SAAf,GAA2B,CAA3B,CAHgC,CAGF;;AAC9B,aAAOD,KAAK,GAAGvB,cAAc,CAACyB,IAAf,CAAoBR,OAApB,CAAf,EAA6C;AACzC,YAAIM,KAAK,CAAC,CAAD,CAAL,CAAS1B,MAAT,KAAoB,CAAxB,EAA2B;AACvB;AACA;AACH;;AACDxB,QAAAA,MAAM,CAACgD,IAAP,CAAY;AAAEN,UAAAA,KAAK,EAAEQ,KAAK,CAACG,KAAf;AAAsBV,UAAAA,GAAG,EAAEO,KAAK,CAACG,KAAN,GAAcH,KAAK,CAAC,CAAD,CAAL,CAAS1B;AAAlD,SAAZ;AACH;;AACD,aAAOxB,MAAP;AACH;;;oCACe+C,K,EAAO;AACnBA,MAAAA,KAAK,GAAG,KAAKO,cAAL,CAAoBP,KAApB,CAAR;;AACA,UAAIA,KAAK,CAACQ,eAAN,KAA0BR,KAAK,CAACS,aAApC,EAAmD;AAC/C,eAAO,KAAKlC,MAAL,CAAYyB,KAAK,CAACQ,eAAN,GAAwB,CAApC,EAAuCd,SAAvC,CAAiDM,KAAK,CAACjB,WAAN,GAAoB,CAArE,EAAwEiB,KAAK,CAAChB,SAAN,GAAkB,CAA1F,CAAP;AACH;;AACD,UAAI0B,UAAU,GAAG,KAAKC,IAAtB;AACA,UAAIC,cAAc,GAAGZ,KAAK,CAACQ,eAAN,GAAwB,CAA7C;AACA,UAAIK,YAAY,GAAGb,KAAK,CAACS,aAAN,GAAsB,CAAzC;AACA,UAAIK,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,CAACb,IAAZ,CAAiB,KAAK1B,MAAL,CAAYqC,cAAZ,EAA4BlB,SAA5B,CAAsCM,KAAK,CAACjB,WAAN,GAAoB,CAA1D,CAAjB;;AACA,WAAK,IAAIgC,CAAC,GAAGH,cAAc,GAAG,CAA9B,EAAiCG,CAAC,GAAGF,YAArC,EAAmDE,CAAC,EAApD,EAAwD;AACpDD,QAAAA,WAAW,CAACb,IAAZ,CAAiB,KAAK1B,MAAL,CAAYwC,CAAZ,CAAjB;AACH;;AACDD,MAAAA,WAAW,CAACb,IAAZ,CAAiB,KAAK1B,MAAL,CAAYsC,YAAZ,EAA0BnB,SAA1B,CAAoC,CAApC,EAAuCM,KAAK,CAAChB,SAAN,GAAkB,CAAzD,CAAjB;AACA,aAAO8B,WAAW,CAACE,IAAZ,CAAiBN,UAAjB,CAAP;AACH;;;6BACQ/B,Q,EAAU;AACfA,MAAAA,QAAQ,GAAG,KAAKsC,iBAAL,CAAuBtC,QAAvB,CAAX;;AACA,WAAKuC,iBAAL;;AACA,aAAO,KAAKC,WAAL,CAAiBC,mBAAjB,CAAqCzC,QAAQ,CAACD,UAAT,GAAsB,CAA3D,KAAiEC,QAAQ,CAACG,MAAT,GAAkB,CAAnF,CAAP;AACH;;;+BACUuC,M,EAAQ;AACfA,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAT;AACAA,MAAAA,MAAM,GAAGC,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYH,MAAZ,CAAT;;AACA,WAAKH,iBAAL;;AACA,UAAIO,GAAG,GAAG,KAAKN,WAAL,CAAiBO,UAAjB,CAA4BL,MAA5B,CAAV;;AACA,UAAIM,UAAU,GAAG,KAAKpD,MAAL,CAAYkD,GAAG,CAACnB,KAAhB,EAAuB7B,MAAxC,CALe,CAMf;;AACA,aAAO;AACHC,QAAAA,UAAU,EAAE,IAAI+C,GAAG,CAACnB,KADjB;AAEHxB,QAAAA,MAAM,EAAE,IAAIwC,IAAI,CAACM,GAAL,CAASH,GAAG,CAACI,SAAb,EAAwBF,UAAxB;AAFT,OAAP;AAIH;;;mCACc3B,K,EAAO;AAClB,UAAML,KAAK,GAAG,KAAKsB,iBAAL,CAAuB;AAAEvC,QAAAA,UAAU,EAAEsB,KAAK,CAACQ,eAApB;AAAqC1B,QAAAA,MAAM,EAAEkB,KAAK,CAACjB;AAAnD,OAAvB,CAAd;;AACA,UAAMa,GAAG,GAAG,KAAKqB,iBAAL,CAAuB;AAAEvC,QAAAA,UAAU,EAAEsB,KAAK,CAACS,aAApB;AAAmC3B,QAAAA,MAAM,EAAEkB,KAAK,CAAChB;AAAjD,OAAvB,CAAZ;;AACA,UAAIW,KAAK,CAACjB,UAAN,KAAqBsB,KAAK,CAACQ,eAA3B,IACGb,KAAK,CAACb,MAAN,KAAiBkB,KAAK,CAACjB,WAD1B,IAEGa,GAAG,CAAClB,UAAJ,KAAmBsB,KAAK,CAACS,aAF5B,IAGGb,GAAG,CAACd,MAAJ,KAAekB,KAAK,CAAChB,SAH5B,EAGuC;AACnC,eAAO;AACHwB,UAAAA,eAAe,EAAEb,KAAK,CAACjB,UADpB;AAEHK,UAAAA,WAAW,EAAEY,KAAK,CAACb,MAFhB;AAGH2B,UAAAA,aAAa,EAAEb,GAAG,CAAClB,UAHhB;AAIHM,UAAAA,SAAS,EAAEY,GAAG,CAACd;AAJZ,SAAP;AAMH;;AACD,aAAOkB,KAAP;AACH;;;sCACiBrB,Q,EAAU;AACxB,UAAI,CAAClB,QAAQ,CAACqE,WAAT,CAAqBnD,QAArB,CAAL,EAAqC;AACjC,cAAM,IAAIoD,KAAJ,CAAU,cAAV,CAAN;AACH;;AAHuB,UAIlBrD,UAJkB,GAIKC,QAJL,CAIlBD,UAJkB;AAAA,UAINI,MAJM,GAIKH,QAJL,CAING,MAJM;AAKxB,UAAIkD,UAAU,GAAG,KAAjB;;AACA,UAAItD,UAAU,GAAG,CAAjB,EAAoB;AAChBA,QAAAA,UAAU,GAAG,CAAb;AACAI,QAAAA,MAAM,GAAG,CAAT;AACAkD,QAAAA,UAAU,GAAG,IAAb;AACH,OAJD,MAKK,IAAItD,UAAU,GAAG,KAAKH,MAAL,CAAYE,MAA7B,EAAqC;AACtCC,QAAAA,UAAU,GAAG,KAAKH,MAAL,CAAYE,MAAzB;AACAK,QAAAA,MAAM,GAAG,KAAKP,MAAL,CAAYG,UAAU,GAAG,CAAzB,EAA4BD,MAA5B,GAAqC,CAA9C;AACAuD,QAAAA,UAAU,GAAG,IAAb;AACH,OAJI,MAKA;AACD,YAAIC,YAAY,GAAG,KAAK1D,MAAL,CAAYG,UAAU,GAAG,CAAzB,EAA4BD,MAA5B,GAAqC,CAAxD;;AACA,YAAIK,MAAM,GAAG,CAAb,EAAgB;AACZA,UAAAA,MAAM,GAAG,CAAT;AACAkD,UAAAA,UAAU,GAAG,IAAb;AACH,SAHD,MAIK,IAAIlD,MAAM,GAAGmD,YAAb,EAA2B;AAC5BnD,UAAAA,MAAM,GAAGmD,YAAT;AACAD,UAAAA,UAAU,GAAG,IAAb;AACH;AACJ;;AACD,UAAI,CAACA,UAAL,EAAiB;AACb,eAAOrD,QAAP;AACH,OAFD,MAGK;AACD,eAAO;AAAED,UAAAA,UAAU,EAAVA,UAAF;AAAcI,UAAAA,MAAM,EAANA;AAAd,SAAP;AACH;AACJ;;;wBAtKS;AACN,aAAO,KAAKoD,IAAZ;AACH;;;wBACa;AACV,aAAO,KAAKC,UAAZ;AACH;;;wBACS;AACN,aAAO,KAAKxB,IAAZ;AACH;;;;EATqB9C,e;AAyK1B;AACA;AACA;;;AACA,WAAauE,kBAAb;AACI,8BAAYC,IAAZ,EAAkBC,oBAAlB,EAAwC;AAAA;;AACpC,SAAKC,KAAL,GAAaF,IAAb;AACA,SAAKG,OAAL,GAAeC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAf;AACA,SAAKC,qBAAL,GAA6BL,oBAA7B;AACA,SAAKM,cAAL,GAAsB,IAAtB;AACH;;AANL;AAAA;AAAA,8BAOc;AACN,WAAKJ,OAAL,GAAeC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAf;AACH;AATL;AAAA;AAAA,8BAUcG,GAVd,EAUmB;AACX,aAAO,KAAKL,OAAL,CAAaK,GAAb,CAAP;AACH;AAZL;AAAA;AAAA,iCAaiB;AAAA;;AACT,UAAIC,GAAG,GAAG,EAAV;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,KAAKP,OAAjB,EAA0BQ,OAA1B,CAAkC,UAACC,GAAD;AAAA,eAASH,GAAG,CAAC7C,IAAJ,CAAS,KAAI,CAACuC,OAAL,CAAaS,GAAb,CAAT,CAAT;AAAA,OAAlC;AACA,aAAOH,GAAP;AACH;AAjBL;AAAA;AAAA,mCAkBmBI,IAlBnB,EAkByB;AACjB,WAAKV,OAAL,CAAaU,IAAI,CAACC,GAAlB,IAAyB,IAAI9E,WAAJ,CAAgBb,GAAG,CAAC4F,KAAJ,CAAUF,IAAI,CAACC,GAAf,CAAhB,EAAqCD,IAAI,CAACjE,KAA1C,EAAiDiE,IAAI,CAACG,GAAtD,EAA2DH,IAAI,CAACI,SAAhE,CAAzB;AACH;AApBL;AAAA;AAAA,uCAqBuBC,MArBvB,EAqB+BxG,CArB/B,EAqBkC;AAC1B,UAAI,CAAC,KAAKyF,OAAL,CAAae,MAAb,CAAL,EAA2B;AACvB;AACH;;AACD,UAAIC,KAAK,GAAG,KAAKhB,OAAL,CAAae,MAAb,CAAZ;AACAC,MAAAA,KAAK,CAACC,QAAN,CAAe1G,CAAf;AACH;AA3BL;AAAA;AAAA,uCA4BuBwG,MA5BvB,EA4B+B;AACvB,UAAI,CAAC,KAAKf,OAAL,CAAae,MAAb,CAAL,EAA2B;AACvB;AACH;;AACD,aAAO,KAAKf,OAAL,CAAae,MAAb,CAAP;AACH,KAjCL,CAkCI;;AAlCJ;AAAA;AAAA,gCAmCgBG,WAnChB,EAmC6BC,WAnC7B,EAmC0CC,oBAnC1C,EAmCgEC,kBAnChE,EAmCoF;AAC5E,aAAO3H,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B4H,gBAAAA,QAD6B,GAClB,KAAKC,SAAL,CAAeL,WAAf,CADkB;AAE7BM,gBAAAA,QAF6B,GAElB,KAAKD,SAAL,CAAeJ,WAAf,CAFkB;;AAAA,sBAG/B,CAACG,QAAD,IAAa,CAACE,QAHiB;AAAA;AAAA;AAAA;;AAAA,kDAIxB,IAJwB;;AAAA;AAM7BC,gBAAAA,aAN6B,GAMbH,QAAQ,CAACI,eAAT,EANa;AAO7BC,gBAAAA,aAP6B,GAObH,QAAQ,CAACE,eAAT,EAPa;AAQ7BE,gBAAAA,YAR6B,GAQd,IAAIzG,YAAJ,CAAiBsG,aAAjB,EAAgCE,aAAhC,EAA+C;AAChEE,kBAAAA,wBAAwB,EAAE,IADsC;AAEhEC,kBAAAA,4BAA4B,EAAE,IAFkC;AAGhEC,kBAAAA,0BAA0B,EAAEX,oBAHoC;AAIhEY,kBAAAA,oBAAoB,EAAE,IAJ0C;AAKhEX,kBAAAA,kBAAkB,EAAEA;AAL4C,iBAA/C,CARc;AAe7BY,gBAAAA,UAf6B,GAehBL,YAAY,CAACM,WAAb,EAfgB;AAgB7BC,gBAAAA,SAhB6B,GAgBhBF,UAAU,CAACG,OAAX,CAAmBnG,MAAnB,GAA4B,CAA5B,GAAgC,KAAhC,GAAwC,KAAKoG,mBAAL,CAAyBf,QAAzB,EAAmCE,QAAnC,CAhBxB;AAAA,kDAiB5B;AACHc,kBAAAA,SAAS,EAAEL,UAAU,CAACK,SADnB;AAEHH,kBAAAA,SAAS,EAAEA,SAFR;AAGHC,kBAAAA,OAAO,EAAEH,UAAU,CAACG;AAHjB,iBAjB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAuBH;AA3DL;AAAA;AAAA,wCA4DwBd,QA5DxB,EA4DkCE,QA5DlC,EA4D4C;AACpC,UAAMe,iBAAiB,GAAGjB,QAAQ,CAACkB,YAAT,EAA1B;AACA,UAAMC,iBAAiB,GAAGjB,QAAQ,CAACgB,YAAT,EAA1B;;AACA,UAAID,iBAAiB,KAAKE,iBAA1B,EAA6C;AACzC,eAAO,KAAP;AACH;;AACD,WAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAIH,iBAA3B,EAA8CG,IAAI,EAAlD,EAAsD;AAClD,YAAMC,YAAY,GAAGrB,QAAQ,CAACsB,cAAT,CAAwBF,IAAxB,CAArB;AACA,YAAMG,YAAY,GAAGrB,QAAQ,CAACoB,cAAT,CAAwBF,IAAxB,CAArB;;AACA,YAAIC,YAAY,KAAKE,YAArB,EAAmC;AAC/B,iBAAO,KAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH;AA1EL;AAAA;AAAA,4CA2E4BC,QA3E5B,EA2EsCC,KA3EtC,EA2E6C;AACrC,aAAOrJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC7BsH,gBAAAA,KAD6B,GACrB,KAAKO,SAAL,CAAeuB,QAAf,CADqB;;AAAA,oBAE9B9B,KAF8B;AAAA;AAAA;AAAA;;AAAA,kDAGxB+B,KAHwB;;AAAA;AAK7BtI,gBAAAA,MAL6B,GAKpB,EALoB;AAM/BuI,gBAAAA,OAN+B,GAMrBC,SANqB;AAOnCF,gBAAAA,KAAK,GAAGlI,SAAS,CAACkI,KAAD,EAAQ,UAACG,CAAD,EAAIC,CAAJ,EAAU;AAC/B,sBAAID,CAAC,CAAC1F,KAAF,IAAW2F,CAAC,CAAC3F,KAAjB,EAAwB;AACpB,2BAAOtC,KAAK,CAACkI,wBAAN,CAA+BF,CAAC,CAAC1F,KAAjC,EAAwC2F,CAAC,CAAC3F,KAA1C,CAAP;AACH,mBAH8B,CAI/B;;;AACA,sBAAI6F,IAAI,GAAGH,CAAC,CAAC1F,KAAF,GAAU,CAAV,GAAc,CAAzB;AACA,sBAAI8F,IAAI,GAAGH,CAAC,CAAC3F,KAAF,GAAU,CAAV,GAAc,CAAzB;AACA,yBAAO6F,IAAI,GAAGC,IAAd;AACH,iBARgB,CAAjB;AAPmC,wDAgBFP,KAhBE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,6CAgBxBvF,KAhBwB,gBAgBxBA,KAhBwB,EAgBjB+F,IAhBiB,gBAgBjBA,IAhBiB,EAgBXC,GAhBW,gBAgBXA,GAhBW;;AAiB/B,oBAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBR,kBAAAA,OAAO,GAAGQ,GAAV;AACH;;AAnB8B,sBAoB3BtI,KAAK,CAACuI,OAAN,CAAcjG,KAAd,KAAwB,CAAC+F,IApBE;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAwBzBjC,gBAAAA,QAxByB,GAwBdN,KAAK,CAAC0C,eAAN,CAAsBlG,KAAtB,CAxBc;AAyB/B+F,gBAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,aAAb,EAA4B3C,KAAK,CAACwC,GAAlC,CAAP;;AAzB+B,sBA0B3BlC,QAAQ,KAAKiC,IA1Bc;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,sBA+B3BzE,IAAI,CAACE,GAAL,CAASuE,IAAI,CAACtH,MAAd,EAAsBqF,QAAQ,CAACrF,MAA/B,IAAyC2D,kBAAkB,CAACgE,UA/BjC;AAAA;AAAA;AAAA;;AAgC3BnJ,gBAAAA,MAAM,CAACgD,IAAP,CAAY;AAAED,kBAAAA,KAAK,EAALA,KAAF;AAAS+F,kBAAAA,IAAI,EAAJA;AAAT,iBAAZ;AAhC2B;;AAAA;AAmC/B;AACMnB,gBAAAA,OApCyB,GAoCftH,UAAU,CAACwG,QAAD,EAAWiC,IAAX,EAAiB,KAAjB,CApCK;AAqCzBM,gBAAAA,UArCyB,GAqCZ7C,KAAK,CAAC8C,QAAN,CAAe5I,KAAK,CAAC6I,IAAN,CAAWvG,KAAX,EAAkBwG,gBAAlB,EAAf,CArCY;AAAA,wDAsCV5B,OAtCU;;AAAA;AAsC/B,yEAA8B;AAAnB6B,oBAAAA,MAAmB;AACpB9G,oBAAAA,KADoB,GACZ6D,KAAK,CAACkD,UAAN,CAAiBL,UAAU,GAAGI,MAAM,CAACE,aAArC,CADY;AAEpB/G,oBAAAA,GAFoB,GAEd4D,KAAK,CAACkD,UAAN,CAAiBL,UAAU,GAAGI,MAAM,CAACE,aAApB,GAAoCF,MAAM,CAACG,cAA5D,CAFc;AAGpBC,oBAAAA,OAHoB,GAGV;AACZd,sBAAAA,IAAI,EAAEA,IAAI,CAACe,MAAL,CAAYL,MAAM,CAACM,aAAnB,EAAkCN,MAAM,CAACO,cAAzC,CADM;AAEZhH,sBAAAA,KAAK,EAAE;AAAEQ,wBAAAA,eAAe,EAAEb,KAAK,CAACjB,UAAzB;AAAqCK,wBAAAA,WAAW,EAAEY,KAAK,CAACb,MAAxD;AAAgE2B,wBAAAA,aAAa,EAAEb,GAAG,CAAClB,UAAnF;AAA+FM,wBAAAA,SAAS,EAAEY,GAAG,CAACd;AAA9G;AAFK,qBAHU;;AAO1B,wBAAI0E,KAAK,CAAC0C,eAAN,CAAsBW,OAAO,CAAC7G,KAA9B,MAAyC6G,OAAO,CAACd,IAArD,EAA2D;AACvD9I,sBAAAA,MAAM,CAACgD,IAAP,CAAY4G,OAAZ;AACH;AACJ;AAhD8B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAkDnC,oBAAI,OAAOrB,OAAP,KAAmB,QAAvB,EAAiC;AAC7BvI,kBAAAA,MAAM,CAACgD,IAAP,CAAY;AAAE+F,oBAAAA,GAAG,EAAER,OAAP;AAAgBO,oBAAAA,IAAI,EAAE,EAAtB;AAA0B/F,oBAAAA,KAAK,EAAE;AAAEQ,sBAAAA,eAAe,EAAE,CAAnB;AAAsBzB,sBAAAA,WAAW,EAAE,CAAnC;AAAsC0B,sBAAAA,aAAa,EAAE,CAArD;AAAwDzB,sBAAAA,SAAS,EAAE;AAAnE;AAAjC,mBAAZ;AACH;;AApDkC,kDAqD5B/B,MArD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAuDH,KAnIL,CAoII;;AApIJ;AAAA;AAAA,iCAqIiBqI,QArIjB,EAqI2B;AACnB,aAAOpJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BsH,gBAAAA,KAD+B,GACvB,KAAKO,SAAL,CAAeuB,QAAf,CADuB;;AAAA,oBAE9B9B,KAF8B;AAAA;AAAA;AAAA;;AAAA,kDAGxB,IAHwB;;AAAA;AAAA,kDAK5BxF,aAAY,CAACwF,KAAD,CALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAOH;AA7IL;AAAA;AAAA,mCA8ImByD,SA9InB,EA8I8BC,WA9I9B,EA8I2CC,OA9I3C,EA8IoDC,YA9IpD,EA8IkE;AAC1D,aAAOlL,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC7BmL,gBAAAA,EAD6B,GACxB,IAAIjJ,SAAJ,CAAc,IAAd,CADwB;AAE7BkJ,gBAAAA,aAF6B,GAEb,IAAIC,MAAJ,CAAWJ,OAAX,EAAoBC,YAApB,CAFa;AAG7BI,gBAAAA,IAH6B,GAGtB,IAAIC,GAAJ,EAHsB;AAAA,wDAIZR,SAJY;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAInB9D,gBAAAA,GAJmB;AAKzBK,gBAAAA,KALyB,GAKjB,KAAKO,SAAL,CAAeZ,GAAf,CALiB;;AAAA,oBAM1BK,KAN0B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,wDASdA,KAAK,CAACzD,KAAN,CAAYuH,aAAZ,CATc;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStBpH,gBAAAA,IATsB;;AAAA,sBAUvBA,IAAI,KAAKgH,WAAT,IAAwB,CAACQ,KAAK,CAACC,MAAM,CAACzH,IAAD,CAAP,CAVP;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAa3BsH,gBAAAA,IAAI,CAACI,GAAL,CAAS1H,IAAT;;AAb2B,sBAcvBsH,IAAI,CAACK,IAAL,GAAYzF,kBAAkB,CAAC0F,iBAdR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,kDAmB5B;AAAE/H,kBAAAA,KAAK,EAAEgI,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAT;AAA2BS,kBAAAA,QAAQ,EAAEZ,EAAE,CAACa,OAAH;AAArC,iBAnB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAqBH,KApKL,CAqKI;AACA;;AAtKJ;AAAA;AAAA,sCAuKsB5C,QAvKtB,EAuKgCtF,KAvKhC,EAuKuCmH,OAvKvC,EAuKgDC,YAvKhD,EAuK8D;AACtD,aAAOlL,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/BsH,gBAAAA,KAD+B,GACvB,KAAKO,SAAL,CAAeuB,QAAf,CADuB;;AAAA,oBAE9B9B,KAF8B;AAAA;AAAA;AAAA;;AAAA,kDAGxBf,MAAM,CAACC,MAAP,CAAc,IAAd,CAHwB;;AAAA;AAK7B4E,gBAAAA,aAL6B,GAKb,IAAIC,MAAJ,CAAWJ,OAAX,EAAoBC,YAApB,CALa;AAM7BnK,gBAAAA,MAN6B,GAMpBwF,MAAM,CAACC,MAAP,CAAc,IAAd,CANoB;AAO1BwC,gBAAAA,IAP0B,GAOnBlF,KAAK,CAACQ,eAPa;;AAAA;AAAA,sBAOI0E,IAAI,GAAGlF,KAAK,CAACS,aAPjB;AAAA;AAAA;AAAA;;AAQ3BV,gBAAAA,KAR2B,GAQnByD,KAAK,CAAC2E,YAAN,CAAmBjD,IAAnB,EAAyBoC,aAAzB,CARmB;AAAA,wDASZvH,KATY;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASpBG,gBAAAA,IAToB;;AAAA,oBAUtBwH,KAAK,CAACC,MAAM,CAACzH,IAAI,CAACA,IAAN,CAAP,CAViB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAavBkI,gBAAAA,KAbuB,GAafnL,MAAM,CAACiD,IAAI,CAACA,IAAN,CAbS;;AAc3B,oBAAI,CAACkI,KAAL,EAAY;AACRA,kBAAAA,KAAK,GAAG,EAAR;AACAnL,kBAAAA,MAAM,CAACiD,IAAI,CAACA,IAAN,CAAN,GAAoBkI,KAApB;AACH;;AACDA,gBAAAA,KAAK,CAACnI,IAAN,CAAW;AACPO,kBAAAA,eAAe,EAAE0E,IADV;AAEPnG,kBAAAA,WAAW,EAAEmB,IAAI,CAACnB,WAFX;AAGP0B,kBAAAA,aAAa,EAAEyE,IAHR;AAIPlG,kBAAAA,SAAS,EAAEkB,IAAI,CAAClB;AAJT,iBAAX;;AAlB2B;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAOgCkG,gBAAAA,IAAI,EAPpC;AAAA;AAAA;;AAAA;AAAA,kDA0B5BjI,MA1B4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AA4BH,KApML,CAqMI;;AArMJ;AAAA;AAAA,qCAsMqBqI,QAtMrB,EAsM+BtF,KAtM/B,EAsMsCqI,EAtMtC,EAsM0ClB,OAtM1C,EAsMmDC,YAtMnD,EAsMiE;AACzD,aAAOlL,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BsH,gBAAAA,KAD+B,GACvB,KAAKO,SAAL,CAAeuB,QAAf,CADuB;;AAAA,oBAE9B9B,KAF8B;AAAA;AAAA;AAAA;;AAAA,kDAGxB,IAHwB;;AAAA;AAK/B8D,gBAAAA,aAL+B,GAKf,IAAIC,MAAJ,CAAWJ,OAAX,EAAoBC,YAApB,CALe;;AAMnC,oBAAIpH,KAAK,CAACjB,WAAN,KAAsBiB,KAAK,CAAChB,SAAhC,EAA2C;AACvCgB,kBAAAA,KAAK,GAAG;AACJQ,oBAAAA,eAAe,EAAER,KAAK,CAACQ,eADnB;AAEJzB,oBAAAA,WAAW,EAAEiB,KAAK,CAACjB,WAFf;AAGJ0B,oBAAAA,aAAa,EAAET,KAAK,CAACS,aAHjB;AAIJzB,oBAAAA,SAAS,EAAEgB,KAAK,CAAChB,SAAN,GAAkB;AAJzB,mBAAR;AAMH;;AACGsJ,gBAAAA,aAd+B,GAcf9E,KAAK,CAAC0C,eAAN,CAAsBlG,KAAtB,CAde;AAe/BuI,gBAAAA,SAf+B,GAenB/E,KAAK,CAACgF,iBAAN,CAAwB;AAAE9J,kBAAAA,UAAU,EAAEsB,KAAK,CAACQ,eAApB;AAAqC1B,kBAAAA,MAAM,EAAEkB,KAAK,CAACjB;AAAnD,iBAAxB,EAA0FuI,aAA1F,CAfmB;;AAAA,oBAgB9BiB,SAhB8B;AAAA;AAAA;AAAA;;AAAA,kDAiBxB,IAjBwB;;AAAA;AAmB/BrI,gBAAAA,IAnB+B,GAmBxBsD,KAAK,CAAC0C,eAAN,CAAsBqC,SAAtB,CAnBwB;AAoB/BtL,gBAAAA,MApB+B,GAoBtBgB,mBAAmB,CAACwK,QAApB,CAA6BC,gBAA7B,CAA8C1I,KAA9C,EAAqDsI,aAArD,EAAoEC,SAApE,EAA+ErI,IAA/E,EAAqFmI,EAArF,CApBsB;AAAA,kDAqB5BpL,MArB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB,EAAhB;AAuBH,KA9NL,CA+NI;;AA/NJ;AAAA;AAAA,sCAgOsB0L,QAhOtB,EAgOgCC,UAhOhC,EAgO4CC,kBAhO5C,EAgOgE;AAAA;;AACxD,UAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAASC,IAAT,EAAkB;AACzC,eAAO,MAAI,CAACzG,KAAL,CAAW0G,GAAX,CAAeF,MAAf,EAAuBC,IAAvB,CAAP;AACH,OAFD;;AAGA,UAAME,WAAW,GAAG/K,KAAK,CAACgL,iBAAN,CAAwBN,kBAAxB,EAA4CC,kBAA5C,CAApB;AACA,UAAIM,GAAG,GAAG;AACN/G,QAAAA,IAAI,EAAE6G,WADA;AAENG,QAAAA,eAAe,EAAE,2BAAM;AACnB,iBAAO,MAAI,CAACC,UAAL,EAAP;AACH;AAJK,OAAV;;AAMA,UAAI,KAAK3G,qBAAT,EAAgC;AAC5B,aAAKC,cAAL,GAAsB,KAAKD,qBAAL,CAA2ByG,GAA3B,EAAgCR,UAAhC,CAAtB,CAD4B,CAE5B;;AACA,eAAOlM,OAAO,CAACD,OAAR,CAAgB0B,KAAK,CAACoL,iBAAN,CAAwB,KAAK3G,cAA7B,CAAhB,CAAP;AACH,OAfuD,CAgBxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAOlG,OAAO,CAACC,MAAR,CAAe,IAAIoF,KAAJ,oBAAf,CAAP,CA3BwD,CA4BxD;AACH,KA7PL,CA8PI;;AA9PJ;AAAA;AAAA,wBA+PQgH,MA/PR,EA+PgBC,IA/PhB,EA+PsB;AACd,UAAI,CAAC,KAAKpG,cAAN,IAAwB,OAAO,KAAKA,cAAL,CAAoBmG,MAApB,CAAP,KAAuC,UAAnE,EAA+E;AAC3E,eAAOrM,OAAO,CAACC,MAAR,CAAe,IAAIoF,KAAJ,CAAU,uCAAuCgH,MAAjD,CAAf,CAAP;AACH;;AACD,UAAI;AACA,eAAOrM,OAAO,CAACD,OAAR,CAAgB,KAAKmG,cAAL,CAAoBmG,MAApB,EAA4B3L,KAA5B,CAAkC,KAAKwF,cAAvC,EAAuDoG,IAAvD,CAAhB,CAAP;AACH,OAFD,CAGA,OAAOjM,CAAP,EAAU;AACN,eAAOL,OAAO,CAACC,MAAR,CAAeI,CAAf,CAAP;AACH;AACJ;AAzQL;;AAAA;AAAA,I,CA2QA;AACA;;AACAqF,kBAAkB,CAACgE,UAAnB,GAAgC,MAAhC,C,CACA;;AACAhE,kBAAkB,CAAC0F,iBAAnB,GAAuC,KAAvC;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASpF,MAAT,CAAgBL,IAAhB,EAAsB;AACzB,SAAO,IAAID,kBAAJ,CAAuBC,IAAvB,EAA6B,IAA7B,CAAP;AACH;;AACD,IAAI,OAAOmH,aAAP,KAAyB,UAA7B,EAAyC;AACrC;AACAjM,EAAAA,OAAO,CAACkM,MAAR,GAAiBvL,mBAAmB,EAApC;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { mergeSort } from '../../../base/common/arrays.js';\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { globals } from '../../../base/common/platform.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { DiffComputer } from '../diff/diffComputer.js';\r\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\r\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\r\nimport { computeLinks } from '../modes/linkComputer.js';\r\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\r\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n/**\r\n * @internal\r\n */\r\nclass MirrorModel extends BaseMirrorModel {\r\n    get uri() {\r\n        return this._uri;\r\n    }\r\n    get version() {\r\n        return this._versionId;\r\n    }\r\n    get eol() {\r\n        return this._eol;\r\n    }\r\n    getValue() {\r\n        return this.getText();\r\n    }\r\n    getLinesContent() {\r\n        return this._lines.slice(0);\r\n    }\r\n    getLineCount() {\r\n        return this._lines.length;\r\n    }\r\n    getLineContent(lineNumber) {\r\n        return this._lines[lineNumber - 1];\r\n    }\r\n    getWordAtPosition(position, wordDefinition) {\r\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n        if (wordAtText) {\r\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n        }\r\n        return null;\r\n    }\r\n    words(wordDefinition) {\r\n        const lines = this._lines;\r\n        const wordenize = this._wordenize.bind(this);\r\n        let lineNumber = 0;\r\n        let lineText = '';\r\n        let wordRangesIdx = 0;\r\n        let wordRanges = [];\r\n        return {\r\n            *[Symbol.iterator]() {\r\n                while (true) {\r\n                    if (wordRangesIdx < wordRanges.length) {\r\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n                        wordRangesIdx += 1;\r\n                        yield value;\r\n                    }\r\n                    else {\r\n                        if (lineNumber < lines.length) {\r\n                            lineText = lines[lineNumber];\r\n                            wordRanges = wordenize(lineText, wordDefinition);\r\n                            wordRangesIdx = 0;\r\n                            lineNumber += 1;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    getLineWords(lineNumber, wordDefinition) {\r\n        let content = this._lines[lineNumber - 1];\r\n        let ranges = this._wordenize(content, wordDefinition);\r\n        let words = [];\r\n        for (const range of ranges) {\r\n            words.push({\r\n                word: content.substring(range.start, range.end),\r\n                startColumn: range.start + 1,\r\n                endColumn: range.end + 1\r\n            });\r\n        }\r\n        return words;\r\n    }\r\n    _wordenize(content, wordDefinition) {\r\n        const result = [];\r\n        let match;\r\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n        while (match = wordDefinition.exec(content)) {\r\n            if (match[0].length === 0) {\r\n                // it did match the empty string\r\n                break;\r\n            }\r\n            result.push({ start: match.index, end: match.index + match[0].length });\r\n        }\r\n        return result;\r\n    }\r\n    getValueInRange(range) {\r\n        range = this._validateRange(range);\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n        }\r\n        let lineEnding = this._eol;\r\n        let startLineIndex = range.startLineNumber - 1;\r\n        let endLineIndex = range.endLineNumber - 1;\r\n        let resultLines = [];\r\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\r\n            resultLines.push(this._lines[i]);\r\n        }\r\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n        return resultLines.join(lineEnding);\r\n    }\r\n    offsetAt(position) {\r\n        position = this._validatePosition(position);\r\n        this._ensureLineStarts();\r\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\r\n    }\r\n    positionAt(offset) {\r\n        offset = Math.floor(offset);\r\n        offset = Math.max(0, offset);\r\n        this._ensureLineStarts();\r\n        let out = this._lineStarts.getIndexOf(offset);\r\n        let lineLength = this._lines[out.index].length;\r\n        // Ensure we return a valid position\r\n        return {\r\n            lineNumber: 1 + out.index,\r\n            column: 1 + Math.min(out.remainder, lineLength)\r\n        };\r\n    }\r\n    _validateRange(range) {\r\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n        if (start.lineNumber !== range.startLineNumber\r\n            || start.column !== range.startColumn\r\n            || end.lineNumber !== range.endLineNumber\r\n            || end.column !== range.endColumn) {\r\n            return {\r\n                startLineNumber: start.lineNumber,\r\n                startColumn: start.column,\r\n                endLineNumber: end.lineNumber,\r\n                endColumn: end.column\r\n            };\r\n        }\r\n        return range;\r\n    }\r\n    _validatePosition(position) {\r\n        if (!Position.isIPosition(position)) {\r\n            throw new Error('bad position');\r\n        }\r\n        let { lineNumber, column } = position;\r\n        let hasChanged = false;\r\n        if (lineNumber < 1) {\r\n            lineNumber = 1;\r\n            column = 1;\r\n            hasChanged = true;\r\n        }\r\n        else if (lineNumber > this._lines.length) {\r\n            lineNumber = this._lines.length;\r\n            column = this._lines[lineNumber - 1].length + 1;\r\n            hasChanged = true;\r\n        }\r\n        else {\r\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n            if (column < 1) {\r\n                column = 1;\r\n                hasChanged = true;\r\n            }\r\n            else if (column > maxCharacter) {\r\n                column = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (!hasChanged) {\r\n            return position;\r\n        }\r\n        else {\r\n            return { lineNumber, column };\r\n        }\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class EditorSimpleWorker {\r\n    constructor(host, foreignModuleFactory) {\r\n        this._host = host;\r\n        this._models = Object.create(null);\r\n        this._foreignModuleFactory = foreignModuleFactory;\r\n        this._foreignModule = null;\r\n    }\r\n    dispose() {\r\n        this._models = Object.create(null);\r\n    }\r\n    _getModel(uri) {\r\n        return this._models[uri];\r\n    }\r\n    _getModels() {\r\n        let all = [];\r\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\r\n        return all;\r\n    }\r\n    acceptNewModel(data) {\r\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n    }\r\n    acceptModelChanged(strURL, e) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        let model = this._models[strURL];\r\n        model.onEvents(e);\r\n    }\r\n    acceptRemovedModel(strURL) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        delete this._models[strURL];\r\n    }\r\n    // ---- BEGIN diff --------------------------------------------------------------------------\r\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const original = this._getModel(originalUrl);\r\n            const modified = this._getModel(modifiedUrl);\r\n            if (!original || !modified) {\r\n                return null;\r\n            }\r\n            const originalLines = original.getLinesContent();\r\n            const modifiedLines = modified.getLinesContent();\r\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n                shouldComputeCharChanges: true,\r\n                shouldPostProcessCharChanges: true,\r\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n                shouldMakePrettyDiff: true,\r\n                maxComputationTime: maxComputationTime\r\n            });\r\n            const diffResult = diffComputer.computeDiff();\r\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\r\n            return {\r\n                quitEarly: diffResult.quitEarly,\r\n                identical: identical,\r\n                changes: diffResult.changes\r\n            };\r\n        });\r\n    }\r\n    _modelsAreIdentical(original, modified) {\r\n        const originalLineCount = original.getLineCount();\r\n        const modifiedLineCount = modified.getLineCount();\r\n        if (originalLineCount !== modifiedLineCount) {\r\n            return false;\r\n        }\r\n        for (let line = 1; line <= originalLineCount; line++) {\r\n            const originalLine = original.getLineContent(line);\r\n            const modifiedLine = modified.getLineContent(line);\r\n            if (originalLine !== modifiedLine) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    computeMoreMinimalEdits(modelUrl, edits) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return edits;\r\n            }\r\n            const result = [];\r\n            let lastEol = undefined;\r\n            edits = mergeSort(edits, (a, b) => {\r\n                if (a.range && b.range) {\r\n                    return Range.compareRangesUsingStarts(a.range, b.range);\r\n                }\r\n                // eol only changes should go to the end\r\n                let aRng = a.range ? 0 : 1;\r\n                let bRng = b.range ? 0 : 1;\r\n                return aRng - bRng;\r\n            });\r\n            for (let { range, text, eol } of edits) {\r\n                if (typeof eol === 'number') {\r\n                    lastEol = eol;\r\n                }\r\n                if (Range.isEmpty(range) && !text) {\r\n                    // empty change\r\n                    continue;\r\n                }\r\n                const original = model.getValueInRange(range);\r\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n                if (original === text) {\r\n                    // noop\r\n                    continue;\r\n                }\r\n                // make sure diff won't take too long\r\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\r\n                    result.push({ range, text });\r\n                    continue;\r\n                }\r\n                // compute diff between original and edit.text\r\n                const changes = stringDiff(original, text, false);\r\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n                for (const change of changes) {\r\n                    const start = model.positionAt(editOffset + change.originalStart);\r\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n                    const newEdit = {\r\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\r\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n                    };\r\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n                        result.push(newEdit);\r\n                    }\r\n                }\r\n            }\r\n            if (typeof lastEol === 'number') {\r\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    // ---- END minimal edits ---------------------------------------------------------------\r\n    computeLinks(modelUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            return computeLinks(model);\r\n        });\r\n    }\r\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const sw = new StopWatch(true);\r\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            const seen = new Set();\r\n            outer: for (let url of modelUrls) {\r\n                const model = this._getModel(url);\r\n                if (!model) {\r\n                    continue;\r\n                }\r\n                for (let word of model.words(wordDefRegExp)) {\r\n                    if (word === leadingWord || !isNaN(Number(word))) {\r\n                        continue;\r\n                    }\r\n                    seen.add(word);\r\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\r\n                        break outer;\r\n                    }\r\n                }\r\n            }\r\n            return { words: Array.from(seen), duration: sw.elapsed() };\r\n        });\r\n    }\r\n    // ---- END suggest --------------------------------------------------------------------------\r\n    //#region -- word ranges --\r\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return Object.create(null);\r\n            }\r\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            const result = Object.create(null);\r\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\r\n                let words = model.getLineWords(line, wordDefRegExp);\r\n                for (const word of words) {\r\n                    if (!isNaN(Number(word.word))) {\r\n                        continue;\r\n                    }\r\n                    let array = result[word.word];\r\n                    if (!array) {\r\n                        array = [];\r\n                        result[word.word] = array;\r\n                    }\r\n                    array.push({\r\n                        startLineNumber: line,\r\n                        startColumn: word.startColumn,\r\n                        endLineNumber: line,\r\n                        endColumn: word.endColumn\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    //#endregion\r\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            if (range.startColumn === range.endColumn) {\r\n                range = {\r\n                    startLineNumber: range.startLineNumber,\r\n                    startColumn: range.startColumn,\r\n                    endLineNumber: range.endLineNumber,\r\n                    endColumn: range.endColumn + 1\r\n                };\r\n            }\r\n            let selectionText = model.getValueInRange(range);\r\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n            if (!wordRange) {\r\n                return null;\r\n            }\r\n            let word = model.getValueInRange(wordRange);\r\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n            return result;\r\n        });\r\n    }\r\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\r\n        const proxyMethodRequest = (method, args) => {\r\n            return this._host.fhr(method, args);\r\n        };\r\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\r\n        let ctx = {\r\n            host: foreignHost,\r\n            getMirrorModels: () => {\r\n                return this._getModels();\r\n            }\r\n        };\r\n        if (this._foreignModuleFactory) {\r\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n            // static foreing module\r\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\r\n        }\r\n        // ESM-comment-begin\r\n        // \t\treturn new Promise<any>((resolve, reject) => {\r\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n        // \r\n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\r\n        // \r\n        // \t\t\t}, reject);\r\n        // \t\t});\r\n        // ESM-comment-end\r\n        // ESM-uncomment-begin\r\n        return Promise.reject(new Error(`Unexpected usage`));\r\n        // ESM-uncomment-end\r\n    }\r\n    // foreign method request\r\n    fmr(method, args) {\r\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n}\r\n// ---- END diff --------------------------------------------------------------------------\r\n// ---- BEGIN minimal edits ---------------------------------------------------------------\r\nEditorSimpleWorker._diffLimit = 100000;\r\n// ---- BEGIN suggest --------------------------------------------------------------------------\r\nEditorSimpleWorker._suggestionsLimit = 10000;\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create(host) {\r\n    return new EditorSimpleWorker(host, null);\r\n}\r\nif (typeof importScripts === 'function') {\r\n    // Running in a web worker\r\n    globals.monaco = createMonacoBaseAPI();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}