{"ast":null,"code":"import _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as errors from '../../../base/common/errors.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../config/editorOptions.js';\nimport { TextModel } from '../model/textModel.js';\nimport { DocumentSemanticTokensProviderRegistry } from '../modes.js';\nimport { PLAINTEXT_LANGUAGE_IDENTIFIER } from '../modes/modesRegistry.js';\nimport { ITextResourcePropertiesService } from './textResourceConfigurationService.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\nimport { getDocumentSemanticTokens, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\n\nfunction MODEL_ID(resource) {\n  return resource.toString();\n}\n\n_c = MODEL_ID;\n\nfunction computeModelSha1(model) {\n  // compute the sha1\n  var shaComputer = new StringSHA1();\n  var snapshot = model.createSnapshot();\n  var text;\n\n  while (text = snapshot.read()) {\n    shaComputer.update(text);\n  }\n\n  return shaComputer.digest();\n}\n\nvar ModelData = /*#__PURE__*/function () {\n  function ModelData(model, onWillDispose, onDidChangeLanguage) {\n    _classCallCheck(this, ModelData);\n\n    this._modelEventListeners = new DisposableStore();\n    this.model = model;\n    this._languageSelection = null;\n    this._languageSelectionListener = null;\n\n    this._modelEventListeners.add(model.onWillDispose(function () {\n      return onWillDispose(model);\n    }));\n\n    this._modelEventListeners.add(model.onDidChangeLanguage(function (e) {\n      return onDidChangeLanguage(model, e);\n    }));\n  }\n\n  _createClass(ModelData, [{\n    key: \"_disposeLanguageSelection\",\n    value: function _disposeLanguageSelection() {\n      if (this._languageSelectionListener) {\n        this._languageSelectionListener.dispose();\n\n        this._languageSelectionListener = null;\n      }\n\n      if (this._languageSelection) {\n        this._languageSelection.dispose();\n\n        this._languageSelection = null;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._modelEventListeners.dispose();\n\n      this._disposeLanguageSelection();\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(languageSelection) {\n      var _this = this;\n\n      this._disposeLanguageSelection();\n\n      this._languageSelection = languageSelection;\n      this._languageSelectionListener = this._languageSelection.onDidChange(function () {\n        return _this.model.setMode(languageSelection.languageIdentifier);\n      });\n      this.model.setMode(languageSelection.languageIdentifier);\n    }\n  }]);\n\n  return ModelData;\n}();\n\nvar DEFAULT_EOL = platform.isLinux || platform.isMacintosh ? 1\n/* LF */\n: 2\n/* CRLF */\n;\n\nvar DisposedModelInfo = function DisposedModelInfo(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\n  _classCallCheck(this, DisposedModelInfo);\n\n  this.uri = uri;\n  this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\n  this.time = time;\n  this.sharesUndoRedoStack = sharesUndoRedoStack;\n  this.heapSize = heapSize;\n  this.sha1 = sha1;\n  this.versionId = versionId;\n  this.alternativeVersionId = alternativeVersionId;\n};\n\nfunction schemaShouldMaintainUndoRedoElements(resource) {\n  return resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote || resource.scheme === Schemas.userData || resource.scheme === 'fake-fs' // for tests\n  ;\n}\n\nvar ModelServiceImpl = /*#__PURE__*/function (_Disposable) {\n  _inherits(ModelServiceImpl, _Disposable);\n\n  var _super = _createSuper(ModelServiceImpl);\n\n  function ModelServiceImpl(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService) {\n    var _this2;\n\n    _classCallCheck(this, ModelServiceImpl);\n\n    _this2 = _super.call(this);\n    _this2._configurationService = _configurationService;\n    _this2._resourcePropertiesService = _resourcePropertiesService;\n    _this2._themeService = _themeService;\n    _this2._logService = _logService;\n    _this2._undoRedoService = _undoRedoService;\n    _this2._onModelAdded = _this2._register(new Emitter());\n    _this2.onModelAdded = _this2._onModelAdded.event;\n    _this2._onModelRemoved = _this2._register(new Emitter());\n    _this2.onModelRemoved = _this2._onModelRemoved.event;\n    _this2._onModelModeChanged = _this2._register(new Emitter());\n    _this2.onModelModeChanged = _this2._onModelModeChanged.event;\n    _this2._modelCreationOptionsByLanguageAndResource = Object.create(null);\n    _this2._models = {};\n    _this2._disposedModels = new Map();\n    _this2._disposedModelsHeapSize = 0;\n    _this2._semanticStyling = _this2._register(new SemanticStyling(_this2._themeService, _this2._logService));\n\n    _this2._register(_this2._configurationService.onDidChangeConfiguration(function () {\n      return _this2._updateModelOptions();\n    }));\n\n    _this2._updateModelOptions();\n\n    _this2._register(new SemanticColoringFeature(_assertThisInitialized(_this2), _this2._themeService, _this2._configurationService, _this2._semanticStyling));\n\n    return _this2;\n  }\n\n  _createClass(ModelServiceImpl, [{\n    key: \"_getEOL\",\n    value: function _getEOL(resource, language) {\n      if (resource) {\n        return this._resourcePropertiesService.getEOL(resource, language);\n      }\n\n      var eol = this._configurationService.getValue('files.eol', {\n        overrideIdentifier: language\n      });\n\n      if (eol && eol !== 'auto') {\n        return eol;\n      }\n\n      return platform.OS === 3\n      /* Linux */\n      || platform.OS === 2\n      /* Macintosh */\n      ? '\\n' : '\\r\\n';\n    }\n  }, {\n    key: \"_shouldRestoreUndoStack\",\n    value: function _shouldRestoreUndoStack() {\n      var result = this._configurationService.getValue('files.restoreUndoStack');\n\n      if (typeof result === 'boolean') {\n        return result;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getCreationOptions\",\n    value: function getCreationOptions(language, resource, isForSimpleWidget) {\n      var creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n\n      if (!creationOptions) {\n        var editor = this._configurationService.getValue('editor', {\n          overrideIdentifier: language,\n          resource: resource\n        });\n\n        var eol = this._getEOL(resource, language);\n\n        creationOptions = ModelServiceImpl._readModelOptions({\n          editor: editor,\n          eol: eol\n        }, isForSimpleWidget);\n        this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n      }\n\n      return creationOptions;\n    }\n  }, {\n    key: \"_updateModelOptions\",\n    value: function _updateModelOptions() {\n      var oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n      this._modelCreationOptionsByLanguageAndResource = Object.create(null); // Update options on all models\n\n      var keys = Object.keys(this._models);\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        var modelId = keys[i];\n        var modelData = this._models[modelId];\n        var language = modelData.model.getLanguageIdentifier().language;\n        var uri = modelData.model.uri;\n        var oldOptions = oldOptionsByLanguageAndResource[language + uri];\n        var newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n\n        ModelServiceImpl._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n      }\n    }\n  }, {\n    key: \"_insertDisposedModel\",\n    // --- begin IModelService\n    value: function _insertDisposedModel(disposedModelData) {\n      this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n\n      this._disposedModelsHeapSize += disposedModelData.heapSize;\n    }\n  }, {\n    key: \"_removeDisposedModel\",\n    value: function _removeDisposedModel(resource) {\n      var disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n\n      if (disposedModelData) {\n        this._disposedModelsHeapSize -= disposedModelData.heapSize;\n      }\n\n      this._disposedModels[\"delete\"](MODEL_ID(resource));\n\n      return disposedModelData;\n    }\n  }, {\n    key: \"_ensureDisposedModelsHeapSize\",\n    value: function _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\n      if (this._disposedModelsHeapSize > maxModelsHeapSize) {\n        // we must remove some old undo stack elements to free up some memory\n        var disposedModels = [];\n\n        this._disposedModels.forEach(function (entry) {\n          if (!entry.sharesUndoRedoStack) {\n            disposedModels.push(entry);\n          }\n        });\n\n        disposedModels.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n          var disposedModel = disposedModels.shift();\n\n          this._removeDisposedModel(disposedModel.uri);\n\n          if (disposedModel.initialUndoRedoSnapshot !== null) {\n            this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_createModelData\",\n    value: function _createModelData(value, languageIdentifier, resource, isForSimpleWidget) {\n      var _this3 = this;\n\n      // create & save the model\n      var options = this.getCreationOptions(languageIdentifier.language, resource, isForSimpleWidget);\n      var model = new TextModel(value, options, languageIdentifier, resource, this._undoRedoService);\n\n      if (resource && this._disposedModels.has(MODEL_ID(resource))) {\n        var disposedModelData = this._removeDisposedModel(resource);\n\n        var elements = this._undoRedoService.getElements(resource);\n\n        var sha1IsEqual = computeModelSha1(model) === disposedModelData.sha1;\n\n        if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n          var _iterator = _createForOfIteratorHelper(elements.past),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var element = _step.value;\n\n              if (isEditStackElement(element) && element.matchesResource(resource)) {\n                element.setModel(model);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(elements.future),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _element = _step2.value;\n\n              if (isEditStackElement(_element) && _element.matchesResource(resource)) {\n                _element.setModel(model);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this._undoRedoService.setElementsValidFlag(resource, true, function (element) {\n            return isEditStackElement(element) && element.matchesResource(resource);\n          });\n\n          if (sha1IsEqual) {\n            model._overwriteVersionId(disposedModelData.versionId);\n\n            model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n\n            model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n          }\n        } else {\n          if (disposedModelData.initialUndoRedoSnapshot !== null) {\n            this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n          }\n        }\n      }\n\n      var modelId = MODEL_ID(model.uri);\n\n      if (this._models[modelId]) {\n        // There already exists a model with this id => this is a programmer error\n        throw new Error('ModelService: Cannot add model because it already exists!');\n      }\n\n      var modelData = new ModelData(model, function (model) {\n        return _this3._onWillDispose(model);\n      }, function (model, e) {\n        return _this3._onDidChangeLanguage(model, e);\n      });\n      this._models[modelId] = modelData;\n      return modelData;\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(value, languageSelection, resource) {\n      var isForSimpleWidget = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var modelData;\n\n      if (languageSelection) {\n        modelData = this._createModelData(value, languageSelection.languageIdentifier, resource, isForSimpleWidget);\n        this.setMode(modelData.model, languageSelection);\n      } else {\n        modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_IDENTIFIER, resource, isForSimpleWidget);\n      }\n\n      this._onModelAdded.fire(modelData.model);\n\n      return modelData.model;\n    }\n  }, {\n    key: \"setMode\",\n    value: function setMode(model, languageSelection) {\n      if (!languageSelection) {\n        return;\n      }\n\n      var modelData = this._models[MODEL_ID(model.uri)];\n\n      if (!modelData) {\n        return;\n      }\n\n      modelData.setLanguage(languageSelection);\n    }\n  }, {\n    key: \"getModels\",\n    value: function getModels() {\n      var ret = [];\n      var keys = Object.keys(this._models);\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        var modelId = keys[i];\n        ret.push(this._models[modelId].model);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"getModel\",\n    value: function getModel(resource) {\n      var modelId = MODEL_ID(resource);\n      var modelData = this._models[modelId];\n\n      if (!modelData) {\n        return null;\n      }\n\n      return modelData.model;\n    }\n  }, {\n    key: \"getSemanticTokensProviderStyling\",\n    value: function getSemanticTokensProviderStyling(provider) {\n      return this._semanticStyling.get(provider);\n    } // --- end IModelService\n\n  }, {\n    key: \"_onWillDispose\",\n    value: function _onWillDispose(model) {\n      var modelId = MODEL_ID(model.uri);\n      var modelData = this._models[modelId];\n      var sharesUndoRedoStack = this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString();\n      var maintainUndoRedoStack = false;\n      var heapSize = 0;\n\n      if (sharesUndoRedoStack || this._shouldRestoreUndoStack() && schemaShouldMaintainUndoRedoElements(model.uri)) {\n        var elements = this._undoRedoService.getElements(model.uri);\n\n        if (elements.past.length > 0 || elements.future.length > 0) {\n          var _iterator3 = _createForOfIteratorHelper(elements.past),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var element = _step3.value;\n\n              if (isEditStackElement(element) && element.matchesResource(model.uri)) {\n                maintainUndoRedoStack = true;\n                heapSize += element.heapSize(model.uri);\n                element.setModel(model.uri); // remove reference from text buffer instance\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          var _iterator4 = _createForOfIteratorHelper(elements.future),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _element2 = _step4.value;\n\n              if (isEditStackElement(_element2) && _element2.matchesResource(model.uri)) {\n                maintainUndoRedoStack = true;\n                heapSize += _element2.heapSize(model.uri);\n\n                _element2.setModel(model.uri); // remove reference from text buffer instance\n\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      }\n\n      var maxMemory = ModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n\n      if (!maintainUndoRedoStack) {\n        if (!sharesUndoRedoStack) {\n          var initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\n          if (initialUndoRedoSnapshot !== null) {\n            this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n          }\n        }\n      } else if (!sharesUndoRedoStack && heapSize > maxMemory) {\n        // the undo stack for this file would never fit in the configured memory, so don't bother with it.\n        var _initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\n        if (_initialUndoRedoSnapshot !== null) {\n          this._undoRedoService.restoreSnapshot(_initialUndoRedoSnapshot);\n        }\n      } else {\n        this._ensureDisposedModelsHeapSize(maxMemory - heapSize); // We only invalidate the elements, but they remain in the undo-redo service.\n\n\n        this._undoRedoService.setElementsValidFlag(model.uri, false, function (element) {\n          return isEditStackElement(element) && element.matchesResource(model.uri);\n        });\n\n        this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\n      }\n\n      delete this._models[modelId];\n      modelData.dispose(); // clean up cache\n\n      delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageIdentifier().language + model.uri];\n\n      this._onModelRemoved.fire(model);\n    }\n  }, {\n    key: \"_onDidChangeLanguage\",\n    value: function _onDidChangeLanguage(model, e) {\n      var oldModeId = e.oldLanguage;\n      var newModeId = model.getLanguageIdentifier().language;\n      var oldOptions = this.getCreationOptions(oldModeId, model.uri, model.isForSimpleWidget);\n      var newOptions = this.getCreationOptions(newModeId, model.uri, model.isForSimpleWidget);\n\n      ModelServiceImpl._setModelOptionsForModel(model, newOptions, oldOptions);\n\n      this._onModelModeChanged.fire({\n        model: model,\n        oldModeId: oldModeId\n      });\n    }\n  }], [{\n    key: \"_readModelOptions\",\n    value: function _readModelOptions(config, isForSimpleWidget) {\n      var tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n\n      if (config.editor && typeof config.editor.tabSize !== 'undefined') {\n        var parsedTabSize = parseInt(config.editor.tabSize, 10);\n\n        if (!isNaN(parsedTabSize)) {\n          tabSize = parsedTabSize;\n        }\n\n        if (tabSize < 1) {\n          tabSize = 1;\n        }\n      }\n\n      var indentSize = tabSize;\n\n      if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n        var parsedIndentSize = parseInt(config.editor.indentSize, 10);\n\n        if (!isNaN(parsedIndentSize)) {\n          indentSize = parsedIndentSize;\n        }\n\n        if (indentSize < 1) {\n          indentSize = 1;\n        }\n      }\n\n      var insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n\n      if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n        insertSpaces = config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces);\n      }\n\n      var newDefaultEOL = DEFAULT_EOL;\n      var eol = config.eol;\n\n      if (eol === '\\r\\n') {\n        newDefaultEOL = 2\n        /* CRLF */\n        ;\n      } else if (eol === '\\n') {\n        newDefaultEOL = 1\n        /* LF */\n        ;\n      }\n\n      var trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n\n      if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n        trimAutoWhitespace = config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace);\n      }\n\n      var detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n\n      if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n        detectIndentation = config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation);\n      }\n\n      var largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n\n      if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n        largeFileOptimizations = config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations);\n      }\n\n      return {\n        isForSimpleWidget: isForSimpleWidget,\n        tabSize: tabSize,\n        indentSize: indentSize,\n        insertSpaces: insertSpaces,\n        detectIndentation: detectIndentation,\n        defaultEOL: newDefaultEOL,\n        trimAutoWhitespace: trimAutoWhitespace,\n        largeFileOptimizations: largeFileOptimizations\n      };\n    }\n  }, {\n    key: \"_setModelOptionsForModel\",\n    value: function _setModelOptionsForModel(model, newOptions, currentOptions) {\n      if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n        model.setEOL(newOptions.defaultEOL === 1\n        /* LF */\n        ? 0\n        /* LF */\n        : 1\n        /* CRLF */\n        );\n      }\n\n      if (currentOptions && currentOptions.detectIndentation === newOptions.detectIndentation && currentOptions.insertSpaces === newOptions.insertSpaces && currentOptions.tabSize === newOptions.tabSize && currentOptions.indentSize === newOptions.indentSize && currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace) {\n        // Same indent opts, no need to touch the model\n        return;\n      }\n\n      if (newOptions.detectIndentation) {\n        model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n        model.updateOptions({\n          trimAutoWhitespace: newOptions.trimAutoWhitespace\n        });\n      } else {\n        model.updateOptions({\n          insertSpaces: newOptions.insertSpaces,\n          tabSize: newOptions.tabSize,\n          indentSize: newOptions.indentSize,\n          trimAutoWhitespace: newOptions.trimAutoWhitespace\n        });\n      }\n    }\n  }]);\n\n  return ModelServiceImpl;\n}(Disposable);\n\nModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\nModelServiceImpl = __decorate([__param(0, IConfigurationService), __param(1, ITextResourcePropertiesService), __param(2, IThemeService), __param(3, ILogService), __param(4, IUndoRedoService)], ModelServiceImpl);\nexport { ModelServiceImpl };\nexport var SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n  var _a;\n\n  var setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, {\n    overrideIdentifier: model.getLanguageIdentifier().language,\n    resource: model.uri\n  })) === null || _a === void 0 ? void 0 : _a.enabled;\n\n  if (typeof setting === 'boolean') {\n    return setting;\n  }\n\n  return themeService.getColorTheme().semanticHighlighting;\n}\n\nvar SemanticColoringFeature = /*#__PURE__*/function (_Disposable2) {\n  _inherits(SemanticColoringFeature, _Disposable2);\n\n  var _super2 = _createSuper(SemanticColoringFeature);\n\n  function SemanticColoringFeature(modelService, themeService, configurationService, semanticStyling) {\n    var _this4;\n\n    _classCallCheck(this, SemanticColoringFeature);\n\n    _this4 = _super2.call(this);\n    _this4._watchers = Object.create(null);\n    _this4._semanticStyling = semanticStyling;\n\n    var register = function register(model) {\n      _this4._watchers[model.uri.toString()] = new ModelSemanticColoring(model, themeService, _this4._semanticStyling);\n    };\n\n    var deregister = function deregister(model, modelSemanticColoring) {\n      modelSemanticColoring.dispose();\n      delete _this4._watchers[model.uri.toString()];\n    };\n\n    var handleSettingOrThemeChange = function handleSettingOrThemeChange() {\n      var _iterator5 = _createForOfIteratorHelper(modelService.getModels()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var model = _step5.value;\n\n          var curr = _this4._watchers[model.uri.toString()];\n\n          if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n            if (!curr) {\n              register(model);\n            }\n          } else {\n            if (curr) {\n              deregister(model, curr);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    };\n\n    _this4._register(modelService.onModelAdded(function (model) {\n      if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n        register(model);\n      }\n    }));\n\n    _this4._register(modelService.onModelRemoved(function (model) {\n      var curr = _this4._watchers[model.uri.toString()];\n\n      if (curr) {\n        deregister(model, curr);\n      }\n    }));\n\n    _this4._register(configurationService.onDidChangeConfiguration(function (e) {\n      if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n        handleSettingOrThemeChange();\n      }\n    }));\n\n    _this4._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n\n    return _this4;\n  }\n\n  return SemanticColoringFeature;\n}(Disposable);\n\nvar SemanticStyling = /*#__PURE__*/function (_Disposable3) {\n  _inherits(SemanticStyling, _Disposable3);\n\n  var _super3 = _createSuper(SemanticStyling);\n\n  function SemanticStyling(_themeService, _logService) {\n    var _this5;\n\n    _classCallCheck(this, SemanticStyling);\n\n    _this5 = _super3.call(this);\n    _this5._themeService = _themeService;\n    _this5._logService = _logService;\n    _this5._caches = new WeakMap();\n\n    _this5._register(_this5._themeService.onDidColorThemeChange(function () {\n      _this5._caches = new WeakMap();\n    }));\n\n    return _this5;\n  }\n\n  _createClass(SemanticStyling, [{\n    key: \"get\",\n    value: function get(provider) {\n      if (!this._caches.has(provider)) {\n        this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._logService));\n      }\n\n      return this._caches.get(provider);\n    }\n  }]);\n\n  return SemanticStyling;\n}(Disposable);\n\nvar SemanticTokensResponse = /*#__PURE__*/function () {\n  function SemanticTokensResponse(_provider, resultId, data) {\n    _classCallCheck(this, SemanticTokensResponse);\n\n    this._provider = _provider;\n    this.resultId = resultId;\n    this.data = data;\n  }\n\n  _createClass(SemanticTokensResponse, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._provider.releaseDocumentSemanticTokens(this.resultId);\n    }\n  }]);\n\n  return SemanticTokensResponse;\n}();\n\nexport var ModelSemanticColoring = /*#__PURE__*/function (_Disposable4) {\n  _inherits(ModelSemanticColoring, _Disposable4);\n\n  var _super4 = _createSuper(ModelSemanticColoring);\n\n  function ModelSemanticColoring(model, themeService, stylingProvider) {\n    var _this6;\n\n    _classCallCheck(this, ModelSemanticColoring);\n\n    _this6 = _super4.call(this);\n    _this6._isDisposed = false;\n    _this6._model = model;\n    _this6._semanticStyling = stylingProvider;\n    _this6._fetchDocumentSemanticTokens = _this6._register(new RunOnceScheduler(function () {\n      return _this6._fetchDocumentSemanticTokensNow();\n    }, ModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY));\n    _this6._currentDocumentResponse = null;\n    _this6._currentDocumentRequestCancellationTokenSource = null;\n    _this6._documentProvidersChangeListeners = [];\n\n    _this6._register(_this6._model.onDidChangeContent(function () {\n      if (!_this6._fetchDocumentSemanticTokens.isScheduled()) {\n        _this6._fetchDocumentSemanticTokens.schedule();\n      }\n    }));\n\n    var bindDocumentChangeListeners = function bindDocumentChangeListeners() {\n      dispose(_this6._documentProvidersChangeListeners);\n      _this6._documentProvidersChangeListeners = [];\n\n      var _iterator6 = _createForOfIteratorHelper(DocumentSemanticTokensProviderRegistry.all(model)),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var provider = _step6.value;\n\n          if (typeof provider.onDidChange === 'function') {\n            _this6._documentProvidersChangeListeners.push(provider.onDidChange(function () {\n              return _this6._fetchDocumentSemanticTokens.schedule(0);\n            }));\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    };\n\n    bindDocumentChangeListeners();\n\n    _this6._register(DocumentSemanticTokensProviderRegistry.onDidChange(function () {\n      bindDocumentChangeListeners();\n\n      _this6._fetchDocumentSemanticTokens.schedule();\n    }));\n\n    _this6._register(themeService.onDidColorThemeChange(function (_) {\n      // clear out existing tokens\n      _this6._setDocumentSemanticTokens(null, null, null, []);\n\n      _this6._fetchDocumentSemanticTokens.schedule();\n    }));\n\n    _this6._fetchDocumentSemanticTokens.schedule(0);\n\n    return _this6;\n  }\n\n  _createClass(ModelSemanticColoring, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._currentDocumentResponse) {\n        this._currentDocumentResponse.dispose();\n\n        this._currentDocumentResponse = null;\n      }\n\n      if (this._currentDocumentRequestCancellationTokenSource) {\n        this._currentDocumentRequestCancellationTokenSource.cancel();\n\n        this._currentDocumentRequestCancellationTokenSource = null;\n      }\n\n      this._setDocumentSemanticTokens(null, null, null, []);\n\n      this._isDisposed = true;\n\n      _get(_getPrototypeOf(ModelSemanticColoring.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"_fetchDocumentSemanticTokensNow\",\n    value: function _fetchDocumentSemanticTokensNow() {\n      var _this7 = this;\n\n      if (this._currentDocumentRequestCancellationTokenSource) {\n        // there is already a request running, let it finish...\n        return;\n      }\n\n      var cancellationTokenSource = new CancellationTokenSource();\n      var lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n      var r = getDocumentSemanticTokens(this._model, lastResultId, cancellationTokenSource.token);\n\n      if (!r) {\n        // there is no provider\n        if (this._currentDocumentResponse) {\n          // there are semantic tokens set\n          this._model.setSemanticTokens(null, false);\n        }\n\n        return;\n      }\n\n      var provider = r.provider,\n          request = r.request;\n      this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n      var pendingChanges = [];\n\n      var contentChangeListener = this._model.onDidChangeContent(function (e) {\n        pendingChanges.push(e);\n      });\n\n      var styling = this._semanticStyling.get(provider);\n\n      request.then(function (res) {\n        _this7._currentDocumentRequestCancellationTokenSource = null;\n        contentChangeListener.dispose();\n\n        _this7._setDocumentSemanticTokens(provider, res || null, styling, pendingChanges);\n      }, function (err) {\n        var isExpectedError = err && (errors.isPromiseCanceledError(err) || typeof err.message === 'string' && err.message.indexOf('busy') !== -1);\n\n        if (!isExpectedError) {\n          errors.onUnexpectedError(err);\n        } // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n        // The API does not have a special error kind to express this...\n\n\n        _this7._currentDocumentRequestCancellationTokenSource = null;\n        contentChangeListener.dispose();\n\n        if (pendingChanges.length > 0) {\n          // More changes occurred while the request was running\n          if (!_this7._fetchDocumentSemanticTokens.isScheduled()) {\n            _this7._fetchDocumentSemanticTokens.schedule();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_setDocumentSemanticTokens\",\n    value: function _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\n      var _this8 = this;\n\n      var currentResponse = this._currentDocumentResponse;\n\n      var rescheduleIfNeeded = function rescheduleIfNeeded() {\n        if (pendingChanges.length > 0 && !_this8._fetchDocumentSemanticTokens.isScheduled()) {\n          _this8._fetchDocumentSemanticTokens.schedule();\n        }\n      };\n\n      if (this._currentDocumentResponse) {\n        this._currentDocumentResponse.dispose();\n\n        this._currentDocumentResponse = null;\n      }\n\n      if (this._isDisposed) {\n        // disposed!\n        if (provider && tokens) {\n          provider.releaseDocumentSemanticTokens(tokens.resultId);\n        }\n\n        return;\n      }\n\n      if (!provider || !styling) {\n        this._model.setSemanticTokens(null, false);\n\n        return;\n      }\n\n      if (!tokens) {\n        this._model.setSemanticTokens(null, true);\n\n        rescheduleIfNeeded();\n        return;\n      }\n\n      if (isSemanticTokensEdits(tokens)) {\n        if (!currentResponse) {\n          // not possible!\n          this._model.setSemanticTokens(null, true);\n\n          return;\n        }\n\n        if (tokens.edits.length === 0) {\n          // nothing to do!\n          tokens = {\n            resultId: tokens.resultId,\n            data: currentResponse.data\n          };\n        } else {\n          var deltaLength = 0;\n\n          var _iterator7 = _createForOfIteratorHelper(tokens.edits),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _edit = _step7.value;\n              deltaLength += (_edit.data ? _edit.data.length : 0) - _edit.deleteCount;\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          var srcData = currentResponse.data;\n          var destData = new Uint32Array(srcData.length + deltaLength);\n          var srcLastStart = srcData.length;\n          var destLastStart = destData.length;\n\n          for (var i = tokens.edits.length - 1; i >= 0; i--) {\n            var edit = tokens.edits[i];\n            var copyCount = srcLastStart - (edit.start + edit.deleteCount);\n\n            if (copyCount > 0) {\n              ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n\n              destLastStart -= copyCount;\n            }\n\n            if (edit.data) {\n              ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n\n              destLastStart -= edit.data.length;\n            }\n\n            srcLastStart = edit.start;\n          }\n\n          if (srcLastStart > 0) {\n            ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\n          }\n\n          tokens = {\n            resultId: tokens.resultId,\n            data: destData\n          };\n        }\n      }\n\n      if (isSemanticTokens(tokens)) {\n        this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n        var result = toMultilineTokens2(tokens, styling, this._model.getLanguageIdentifier()); // Adjust incoming semantic tokens\n\n        if (pendingChanges.length > 0) {\n          // More changes occurred while the request was running\n          // We need to:\n          // 1. Adjust incoming semantic tokens\n          // 2. Request them again\n          var _iterator8 = _createForOfIteratorHelper(pendingChanges),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var change = _step8.value;\n\n              var _iterator9 = _createForOfIteratorHelper(result),\n                  _step9;\n\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var area = _step9.value;\n\n                  var _iterator10 = _createForOfIteratorHelper(change.changes),\n                      _step10;\n\n                  try {\n                    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                      var singleChange = _step10.value;\n                      area.applyEdit(singleChange.range, singleChange.text);\n                    }\n                  } catch (err) {\n                    _iterator10.e(err);\n                  } finally {\n                    _iterator10.f();\n                  }\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        }\n\n        this._model.setSemanticTokens(result, true);\n      } else {\n        this._model.setSemanticTokens(null, true);\n      }\n\n      rescheduleIfNeeded();\n    }\n  }], [{\n    key: \"_copy\",\n    value: function _copy(src, srcOffset, dest, destOffset, length) {\n      for (var i = 0; i < length; i++) {\n        dest[destOffset + i] = src[srcOffset + i];\n      }\n    }\n  }]);\n\n  return ModelSemanticColoring;\n}(Disposable);\nModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY = 300;\n\nvar _c;\n\n$RefreshReg$(_c, \"MODEL_ID\");","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/services/modelServiceImpl.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Emitter","Disposable","DisposableStore","dispose","platform","errors","EDITOR_MODEL_DEFAULTS","TextModel","DocumentSemanticTokensProviderRegistry","PLAINTEXT_LANGUAGE_IDENTIFIER","ITextResourcePropertiesService","IConfigurationService","RunOnceScheduler","CancellationTokenSource","IThemeService","ILogService","IUndoRedoService","StringSHA1","isEditStackElement","Schemas","SemanticTokensProviderStyling","toMultilineTokens2","getDocumentSemanticTokens","isSemanticTokens","isSemanticTokensEdits","MODEL_ID","resource","toString","computeModelSha1","model","shaComputer","snapshot","createSnapshot","text","read","update","digest","ModelData","onWillDispose","onDidChangeLanguage","_modelEventListeners","_languageSelection","_languageSelectionListener","add","e","_disposeLanguageSelection","languageSelection","onDidChange","setMode","languageIdentifier","DEFAULT_EOL","isLinux","isMacintosh","DisposedModelInfo","uri","initialUndoRedoSnapshot","time","sharesUndoRedoStack","heapSize","sha1","versionId","alternativeVersionId","schemaShouldMaintainUndoRedoElements","scheme","file","vscodeRemote","userData","ModelServiceImpl","_configurationService","_resourcePropertiesService","_themeService","_logService","_undoRedoService","_onModelAdded","_register","onModelAdded","event","_onModelRemoved","onModelRemoved","_onModelModeChanged","onModelModeChanged","_modelCreationOptionsByLanguageAndResource","create","_models","_disposedModels","Map","_disposedModelsHeapSize","_semanticStyling","SemanticStyling","onDidChangeConfiguration","_updateModelOptions","SemanticColoringFeature","language","getEOL","eol","getValue","overrideIdentifier","OS","result","isForSimpleWidget","creationOptions","editor","_getEOL","_readModelOptions","oldOptionsByLanguageAndResource","keys","len","modelId","modelData","getLanguageIdentifier","oldOptions","newOptions","getCreationOptions","_setModelOptionsForModel","disposedModelData","set","get","maxModelsHeapSize","disposedModels","forEach","entry","push","sort","a","b","disposedModel","shift","_removeDisposedModel","restoreSnapshot","value","options","has","elements","getElements","sha1IsEqual","past","element","matchesResource","setModel","future","setElementsValidFlag","_overwriteVersionId","_overwriteAlternativeVersionId","_overwriteInitialUndoRedoSnapshot","Error","_onWillDispose","_onDidChangeLanguage","_createModelData","fire","setLanguage","ret","provider","getUriComparisonKey","maintainUndoRedoStack","_shouldRestoreUndoStack","maxMemory","MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK","getInitialUndoRedoSnapshot","_ensureDisposedModelsHeapSize","_insertDisposedModel","Date","now","getVersionId","getAlternativeVersionId","oldModeId","oldLanguage","newModeId","config","tabSize","parsedTabSize","parseInt","isNaN","indentSize","parsedIndentSize","insertSpaces","Boolean","newDefaultEOL","trimAutoWhitespace","detectIndentation","largeFileOptimizations","defaultEOL","currentOptions","getLineCount","setEOL","updateOptions","SEMANTIC_HIGHLIGHTING_SETTING_ID","isSemanticColoringEnabled","themeService","configurationService","_a","setting","enabled","getColorTheme","semanticHighlighting","modelService","semanticStyling","_watchers","register","ModelSemanticColoring","deregister","modelSemanticColoring","handleSettingOrThemeChange","getModels","curr","affectsConfiguration","onDidColorThemeChange","_caches","WeakMap","getLegend","SemanticTokensResponse","_provider","resultId","data","releaseDocumentSemanticTokens","stylingProvider","_isDisposed","_model","_fetchDocumentSemanticTokens","_fetchDocumentSemanticTokensNow","FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY","_currentDocumentResponse","_currentDocumentRequestCancellationTokenSource","_documentProvidersChangeListeners","onDidChangeContent","isScheduled","schedule","bindDocumentChangeListeners","all","_","_setDocumentSemanticTokens","cancel","cancellationTokenSource","lastResultId","token","setSemanticTokens","request","pendingChanges","contentChangeListener","styling","then","res","err","isExpectedError","isPromiseCanceledError","message","indexOf","onUnexpectedError","tokens","currentResponse","rescheduleIfNeeded","edits","deltaLength","edit","deleteCount","srcData","destData","Uint32Array","srcLastStart","destLastStart","copyCount","start","_copy","change","area","changes","singleChange","applyEdit","range","src","srcOffset","dest","destOffset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as errors from '../../../base/common/errors.js';\r\nimport { EDITOR_MODEL_DEFAULTS } from '../config/editorOptions.js';\r\nimport { TextModel } from '../model/textModel.js';\r\nimport { DocumentSemanticTokensProviderRegistry } from '../modes.js';\r\nimport { PLAINTEXT_LANGUAGE_IDENTIFIER } from '../modes/modesRegistry.js';\r\nimport { ITextResourcePropertiesService } from './textResourceConfigurationService.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\r\nimport { StringSHA1 } from '../../../base/common/hash.js';\r\nimport { isEditStackElement } from '../model/editStack.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\r\nimport { getDocumentSemanticTokens, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\r\nfunction MODEL_ID(resource) {\r\n    return resource.toString();\r\n}\r\nfunction computeModelSha1(model) {\r\n    // compute the sha1\r\n    const shaComputer = new StringSHA1();\r\n    const snapshot = model.createSnapshot();\r\n    let text;\r\n    while ((text = snapshot.read())) {\r\n        shaComputer.update(text);\r\n    }\r\n    return shaComputer.digest();\r\n}\r\nclass ModelData {\r\n    constructor(model, onWillDispose, onDidChangeLanguage) {\r\n        this._modelEventListeners = new DisposableStore();\r\n        this.model = model;\r\n        this._languageSelection = null;\r\n        this._languageSelectionListener = null;\r\n        this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\r\n        this._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\r\n    }\r\n    _disposeLanguageSelection() {\r\n        if (this._languageSelectionListener) {\r\n            this._languageSelectionListener.dispose();\r\n            this._languageSelectionListener = null;\r\n        }\r\n        if (this._languageSelection) {\r\n            this._languageSelection.dispose();\r\n            this._languageSelection = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._modelEventListeners.dispose();\r\n        this._disposeLanguageSelection();\r\n    }\r\n    setLanguage(languageSelection) {\r\n        this._disposeLanguageSelection();\r\n        this._languageSelection = languageSelection;\r\n        this._languageSelectionListener = this._languageSelection.onDidChange(() => this.model.setMode(languageSelection.languageIdentifier));\r\n        this.model.setMode(languageSelection.languageIdentifier);\r\n    }\r\n}\r\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? 1 /* LF */ : 2 /* CRLF */;\r\nclass DisposedModelInfo {\r\n    constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\r\n        this.uri = uri;\r\n        this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\r\n        this.time = time;\r\n        this.sharesUndoRedoStack = sharesUndoRedoStack;\r\n        this.heapSize = heapSize;\r\n        this.sha1 = sha1;\r\n        this.versionId = versionId;\r\n        this.alternativeVersionId = alternativeVersionId;\r\n    }\r\n}\r\nfunction schemaShouldMaintainUndoRedoElements(resource) {\r\n    return (resource.scheme === Schemas.file\r\n        || resource.scheme === Schemas.vscodeRemote\r\n        || resource.scheme === Schemas.userData\r\n        || resource.scheme === 'fake-fs' // for tests\r\n    );\r\n}\r\nlet ModelServiceImpl = class ModelServiceImpl extends Disposable {\r\n    constructor(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService) {\r\n        super();\r\n        this._configurationService = _configurationService;\r\n        this._resourcePropertiesService = _resourcePropertiesService;\r\n        this._themeService = _themeService;\r\n        this._logService = _logService;\r\n        this._undoRedoService = _undoRedoService;\r\n        this._onModelAdded = this._register(new Emitter());\r\n        this.onModelAdded = this._onModelAdded.event;\r\n        this._onModelRemoved = this._register(new Emitter());\r\n        this.onModelRemoved = this._onModelRemoved.event;\r\n        this._onModelModeChanged = this._register(new Emitter());\r\n        this.onModelModeChanged = this._onModelModeChanged.event;\r\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\r\n        this._models = {};\r\n        this._disposedModels = new Map();\r\n        this._disposedModelsHeapSize = 0;\r\n        this._semanticStyling = this._register(new SemanticStyling(this._themeService, this._logService));\r\n        this._register(this._configurationService.onDidChangeConfiguration(() => this._updateModelOptions()));\r\n        this._updateModelOptions();\r\n        this._register(new SemanticColoringFeature(this, this._themeService, this._configurationService, this._semanticStyling));\r\n    }\r\n    static _readModelOptions(config, isForSimpleWidget) {\r\n        let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\r\n        if (config.editor && typeof config.editor.tabSize !== 'undefined') {\r\n            const parsedTabSize = parseInt(config.editor.tabSize, 10);\r\n            if (!isNaN(parsedTabSize)) {\r\n                tabSize = parsedTabSize;\r\n            }\r\n            if (tabSize < 1) {\r\n                tabSize = 1;\r\n            }\r\n        }\r\n        let indentSize = tabSize;\r\n        if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\r\n            const parsedIndentSize = parseInt(config.editor.indentSize, 10);\r\n            if (!isNaN(parsedIndentSize)) {\r\n                indentSize = parsedIndentSize;\r\n            }\r\n            if (indentSize < 1) {\r\n                indentSize = 1;\r\n            }\r\n        }\r\n        let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\r\n        if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\r\n            insertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\r\n        }\r\n        let newDefaultEOL = DEFAULT_EOL;\r\n        const eol = config.eol;\r\n        if (eol === '\\r\\n') {\r\n            newDefaultEOL = 2 /* CRLF */;\r\n        }\r\n        else if (eol === '\\n') {\r\n            newDefaultEOL = 1 /* LF */;\r\n        }\r\n        let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\r\n        if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\r\n            trimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\r\n        }\r\n        let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\r\n        if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\r\n            detectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\r\n        }\r\n        let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\r\n        if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\r\n            largeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\r\n        }\r\n        return {\r\n            isForSimpleWidget: isForSimpleWidget,\r\n            tabSize: tabSize,\r\n            indentSize: indentSize,\r\n            insertSpaces: insertSpaces,\r\n            detectIndentation: detectIndentation,\r\n            defaultEOL: newDefaultEOL,\r\n            trimAutoWhitespace: trimAutoWhitespace,\r\n            largeFileOptimizations: largeFileOptimizations\r\n        };\r\n    }\r\n    _getEOL(resource, language) {\r\n        if (resource) {\r\n            return this._resourcePropertiesService.getEOL(resource, language);\r\n        }\r\n        const eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\r\n        if (eol && eol !== 'auto') {\r\n            return eol;\r\n        }\r\n        return platform.OS === 3 /* Linux */ || platform.OS === 2 /* Macintosh */ ? '\\n' : '\\r\\n';\r\n    }\r\n    _shouldRestoreUndoStack() {\r\n        const result = this._configurationService.getValue('files.restoreUndoStack');\r\n        if (typeof result === 'boolean') {\r\n            return result;\r\n        }\r\n        return true;\r\n    }\r\n    getCreationOptions(language, resource, isForSimpleWidget) {\r\n        let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\r\n        if (!creationOptions) {\r\n            const editor = this._configurationService.getValue('editor', { overrideIdentifier: language, resource });\r\n            const eol = this._getEOL(resource, language);\r\n            creationOptions = ModelServiceImpl._readModelOptions({ editor, eol }, isForSimpleWidget);\r\n            this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\r\n        }\r\n        return creationOptions;\r\n    }\r\n    _updateModelOptions() {\r\n        const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\r\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\r\n        // Update options on all models\r\n        const keys = Object.keys(this._models);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const modelId = keys[i];\r\n            const modelData = this._models[modelId];\r\n            const language = modelData.model.getLanguageIdentifier().language;\r\n            const uri = modelData.model.uri;\r\n            const oldOptions = oldOptionsByLanguageAndResource[language + uri];\r\n            const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\r\n            ModelServiceImpl._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\r\n        }\r\n    }\r\n    static _setModelOptionsForModel(model, newOptions, currentOptions) {\r\n        if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\r\n            model.setEOL(newOptions.defaultEOL === 1 /* LF */ ? 0 /* LF */ : 1 /* CRLF */);\r\n        }\r\n        if (currentOptions\r\n            && (currentOptions.detectIndentation === newOptions.detectIndentation)\r\n            && (currentOptions.insertSpaces === newOptions.insertSpaces)\r\n            && (currentOptions.tabSize === newOptions.tabSize)\r\n            && (currentOptions.indentSize === newOptions.indentSize)\r\n            && (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)) {\r\n            // Same indent opts, no need to touch the model\r\n            return;\r\n        }\r\n        if (newOptions.detectIndentation) {\r\n            model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\r\n            model.updateOptions({\r\n                trimAutoWhitespace: newOptions.trimAutoWhitespace\r\n            });\r\n        }\r\n        else {\r\n            model.updateOptions({\r\n                insertSpaces: newOptions.insertSpaces,\r\n                tabSize: newOptions.tabSize,\r\n                indentSize: newOptions.indentSize,\r\n                trimAutoWhitespace: newOptions.trimAutoWhitespace\r\n            });\r\n        }\r\n    }\r\n    // --- begin IModelService\r\n    _insertDisposedModel(disposedModelData) {\r\n        this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\r\n        this._disposedModelsHeapSize += disposedModelData.heapSize;\r\n    }\r\n    _removeDisposedModel(resource) {\r\n        const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\r\n        if (disposedModelData) {\r\n            this._disposedModelsHeapSize -= disposedModelData.heapSize;\r\n        }\r\n        this._disposedModels.delete(MODEL_ID(resource));\r\n        return disposedModelData;\r\n    }\r\n    _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\r\n        if (this._disposedModelsHeapSize > maxModelsHeapSize) {\r\n            // we must remove some old undo stack elements to free up some memory\r\n            const disposedModels = [];\r\n            this._disposedModels.forEach(entry => {\r\n                if (!entry.sharesUndoRedoStack) {\r\n                    disposedModels.push(entry);\r\n                }\r\n            });\r\n            disposedModels.sort((a, b) => a.time - b.time);\r\n            while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\r\n                const disposedModel = disposedModels.shift();\r\n                this._removeDisposedModel(disposedModel.uri);\r\n                if (disposedModel.initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _createModelData(value, languageIdentifier, resource, isForSimpleWidget) {\r\n        // create & save the model\r\n        const options = this.getCreationOptions(languageIdentifier.language, resource, isForSimpleWidget);\r\n        const model = new TextModel(value, options, languageIdentifier, resource, this._undoRedoService);\r\n        if (resource && this._disposedModels.has(MODEL_ID(resource))) {\r\n            const disposedModelData = this._removeDisposedModel(resource);\r\n            const elements = this._undoRedoService.getElements(resource);\r\n            const sha1IsEqual = (computeModelSha1(model) === disposedModelData.sha1);\r\n            if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\r\n                for (const element of elements.past) {\r\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\r\n                        element.setModel(model);\r\n                    }\r\n                }\r\n                for (const element of elements.future) {\r\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\r\n                        element.setModel(model);\r\n                    }\r\n                }\r\n                this._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\r\n                if (sha1IsEqual) {\r\n                    model._overwriteVersionId(disposedModelData.versionId);\r\n                    model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\r\n                    model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n            else {\r\n                if (disposedModelData.initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n        const modelId = MODEL_ID(model.uri);\r\n        if (this._models[modelId]) {\r\n            // There already exists a model with this id => this is a programmer error\r\n            throw new Error('ModelService: Cannot add model because it already exists!');\r\n        }\r\n        const modelData = new ModelData(model, (model) => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\r\n        this._models[modelId] = modelData;\r\n        return modelData;\r\n    }\r\n    createModel(value, languageSelection, resource, isForSimpleWidget = false) {\r\n        let modelData;\r\n        if (languageSelection) {\r\n            modelData = this._createModelData(value, languageSelection.languageIdentifier, resource, isForSimpleWidget);\r\n            this.setMode(modelData.model, languageSelection);\r\n        }\r\n        else {\r\n            modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_IDENTIFIER, resource, isForSimpleWidget);\r\n        }\r\n        this._onModelAdded.fire(modelData.model);\r\n        return modelData.model;\r\n    }\r\n    setMode(model, languageSelection) {\r\n        if (!languageSelection) {\r\n            return;\r\n        }\r\n        const modelData = this._models[MODEL_ID(model.uri)];\r\n        if (!modelData) {\r\n            return;\r\n        }\r\n        modelData.setLanguage(languageSelection);\r\n    }\r\n    getModels() {\r\n        const ret = [];\r\n        const keys = Object.keys(this._models);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const modelId = keys[i];\r\n            ret.push(this._models[modelId].model);\r\n        }\r\n        return ret;\r\n    }\r\n    getModel(resource) {\r\n        const modelId = MODEL_ID(resource);\r\n        const modelData = this._models[modelId];\r\n        if (!modelData) {\r\n            return null;\r\n        }\r\n        return modelData.model;\r\n    }\r\n    getSemanticTokensProviderStyling(provider) {\r\n        return this._semanticStyling.get(provider);\r\n    }\r\n    // --- end IModelService\r\n    _onWillDispose(model) {\r\n        const modelId = MODEL_ID(model.uri);\r\n        const modelData = this._models[modelId];\r\n        const sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\r\n        let maintainUndoRedoStack = false;\r\n        let heapSize = 0;\r\n        if (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && schemaShouldMaintainUndoRedoElements(model.uri))) {\r\n            const elements = this._undoRedoService.getElements(model.uri);\r\n            if (elements.past.length > 0 || elements.future.length > 0) {\r\n                for (const element of elements.past) {\r\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\r\n                        maintainUndoRedoStack = true;\r\n                        heapSize += element.heapSize(model.uri);\r\n                        element.setModel(model.uri); // remove reference from text buffer instance\r\n                    }\r\n                }\r\n                for (const element of elements.future) {\r\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\r\n                        maintainUndoRedoStack = true;\r\n                        heapSize += element.heapSize(model.uri);\r\n                        element.setModel(model.uri); // remove reference from text buffer instance\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const maxMemory = ModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\r\n        if (!maintainUndoRedoStack) {\r\n            if (!sharesUndoRedoStack) {\r\n                const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\r\n                if (initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n        else if (!sharesUndoRedoStack && heapSize > maxMemory) {\r\n            // the undo stack for this file would never fit in the configured memory, so don't bother with it.\r\n            const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\r\n            if (initialUndoRedoSnapshot !== null) {\r\n                this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\r\n            }\r\n        }\r\n        else {\r\n            this._ensureDisposedModelsHeapSize(maxMemory - heapSize);\r\n            // We only invalidate the elements, but they remain in the undo-redo service.\r\n            this._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\r\n            this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\r\n        }\r\n        delete this._models[modelId];\r\n        modelData.dispose();\r\n        // clean up cache\r\n        delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageIdentifier().language + model.uri];\r\n        this._onModelRemoved.fire(model);\r\n    }\r\n    _onDidChangeLanguage(model, e) {\r\n        const oldModeId = e.oldLanguage;\r\n        const newModeId = model.getLanguageIdentifier().language;\r\n        const oldOptions = this.getCreationOptions(oldModeId, model.uri, model.isForSimpleWidget);\r\n        const newOptions = this.getCreationOptions(newModeId, model.uri, model.isForSimpleWidget);\r\n        ModelServiceImpl._setModelOptionsForModel(model, newOptions, oldOptions);\r\n        this._onModelModeChanged.fire({ model, oldModeId });\r\n    }\r\n};\r\nModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\r\nModelServiceImpl = __decorate([\r\n    __param(0, IConfigurationService),\r\n    __param(1, ITextResourcePropertiesService),\r\n    __param(2, IThemeService),\r\n    __param(3, ILogService),\r\n    __param(4, IUndoRedoService)\r\n], ModelServiceImpl);\r\nexport { ModelServiceImpl };\r\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\r\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\r\n    var _a;\r\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageIdentifier().language, resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\r\n    if (typeof setting === 'boolean') {\r\n        return setting;\r\n    }\r\n    return themeService.getColorTheme().semanticHighlighting;\r\n}\r\nclass SemanticColoringFeature extends Disposable {\r\n    constructor(modelService, themeService, configurationService, semanticStyling) {\r\n        super();\r\n        this._watchers = Object.create(null);\r\n        this._semanticStyling = semanticStyling;\r\n        const register = (model) => {\r\n            this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, themeService, this._semanticStyling);\r\n        };\r\n        const deregister = (model, modelSemanticColoring) => {\r\n            modelSemanticColoring.dispose();\r\n            delete this._watchers[model.uri.toString()];\r\n        };\r\n        const handleSettingOrThemeChange = () => {\r\n            for (let model of modelService.getModels()) {\r\n                const curr = this._watchers[model.uri.toString()];\r\n                if (isSemanticColoringEnabled(model, themeService, configurationService)) {\r\n                    if (!curr) {\r\n                        register(model);\r\n                    }\r\n                }\r\n                else {\r\n                    if (curr) {\r\n                        deregister(model, curr);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this._register(modelService.onModelAdded((model) => {\r\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\r\n                register(model);\r\n            }\r\n        }));\r\n        this._register(modelService.onModelRemoved((model) => {\r\n            const curr = this._watchers[model.uri.toString()];\r\n            if (curr) {\r\n                deregister(model, curr);\r\n            }\r\n        }));\r\n        this._register(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\r\n                handleSettingOrThemeChange();\r\n            }\r\n        }));\r\n        this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\r\n    }\r\n}\r\nclass SemanticStyling extends Disposable {\r\n    constructor(_themeService, _logService) {\r\n        super();\r\n        this._themeService = _themeService;\r\n        this._logService = _logService;\r\n        this._caches = new WeakMap();\r\n        this._register(this._themeService.onDidColorThemeChange(() => {\r\n            this._caches = new WeakMap();\r\n        }));\r\n    }\r\n    get(provider) {\r\n        if (!this._caches.has(provider)) {\r\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._logService));\r\n        }\r\n        return this._caches.get(provider);\r\n    }\r\n}\r\nclass SemanticTokensResponse {\r\n    constructor(_provider, resultId, data) {\r\n        this._provider = _provider;\r\n        this.resultId = resultId;\r\n        this.data = data;\r\n    }\r\n    dispose() {\r\n        this._provider.releaseDocumentSemanticTokens(this.resultId);\r\n    }\r\n}\r\nexport class ModelSemanticColoring extends Disposable {\r\n    constructor(model, themeService, stylingProvider) {\r\n        super();\r\n        this._isDisposed = false;\r\n        this._model = model;\r\n        this._semanticStyling = stylingProvider;\r\n        this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY));\r\n        this._currentDocumentResponse = null;\r\n        this._currentDocumentRequestCancellationTokenSource = null;\r\n        this._documentProvidersChangeListeners = [];\r\n        this._register(this._model.onDidChangeContent(() => {\r\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                this._fetchDocumentSemanticTokens.schedule();\r\n            }\r\n        }));\r\n        const bindDocumentChangeListeners = () => {\r\n            dispose(this._documentProvidersChangeListeners);\r\n            this._documentProvidersChangeListeners = [];\r\n            for (const provider of DocumentSemanticTokensProviderRegistry.all(model)) {\r\n                if (typeof provider.onDidChange === 'function') {\r\n                    this._documentProvidersChangeListeners.push(provider.onDidChange(() => this._fetchDocumentSemanticTokens.schedule(0)));\r\n                }\r\n            }\r\n        };\r\n        bindDocumentChangeListeners();\r\n        this._register(DocumentSemanticTokensProviderRegistry.onDidChange(() => {\r\n            bindDocumentChangeListeners();\r\n            this._fetchDocumentSemanticTokens.schedule();\r\n        }));\r\n        this._register(themeService.onDidColorThemeChange(_ => {\r\n            // clear out existing tokens\r\n            this._setDocumentSemanticTokens(null, null, null, []);\r\n            this._fetchDocumentSemanticTokens.schedule();\r\n        }));\r\n        this._fetchDocumentSemanticTokens.schedule(0);\r\n    }\r\n    dispose() {\r\n        if (this._currentDocumentResponse) {\r\n            this._currentDocumentResponse.dispose();\r\n            this._currentDocumentResponse = null;\r\n        }\r\n        if (this._currentDocumentRequestCancellationTokenSource) {\r\n            this._currentDocumentRequestCancellationTokenSource.cancel();\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n        }\r\n        this._setDocumentSemanticTokens(null, null, null, []);\r\n        this._isDisposed = true;\r\n        super.dispose();\r\n    }\r\n    _fetchDocumentSemanticTokensNow() {\r\n        if (this._currentDocumentRequestCancellationTokenSource) {\r\n            // there is already a request running, let it finish...\r\n            return;\r\n        }\r\n        const cancellationTokenSource = new CancellationTokenSource();\r\n        const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\r\n        const r = getDocumentSemanticTokens(this._model, lastResultId, cancellationTokenSource.token);\r\n        if (!r) {\r\n            // there is no provider\r\n            if (this._currentDocumentResponse) {\r\n                // there are semantic tokens set\r\n                this._model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const { provider, request } = r;\r\n        this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\r\n        const pendingChanges = [];\r\n        const contentChangeListener = this._model.onDidChangeContent((e) => {\r\n            pendingChanges.push(e);\r\n        });\r\n        const styling = this._semanticStyling.get(provider);\r\n        request.then((res) => {\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n            contentChangeListener.dispose();\r\n            this._setDocumentSemanticTokens(provider, res || null, styling, pendingChanges);\r\n        }, (err) => {\r\n            const isExpectedError = err && (errors.isPromiseCanceledError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\r\n            if (!isExpectedError) {\r\n                errors.onUnexpectedError(err);\r\n            }\r\n            // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\r\n            // The API does not have a special error kind to express this...\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n            contentChangeListener.dispose();\r\n            if (pendingChanges.length > 0) {\r\n                // More changes occurred while the request was running\r\n                if (!this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                    this._fetchDocumentSemanticTokens.schedule();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static _copy(src, srcOffset, dest, destOffset, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            dest[destOffset + i] = src[srcOffset + i];\r\n        }\r\n    }\r\n    _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\r\n        const currentResponse = this._currentDocumentResponse;\r\n        const rescheduleIfNeeded = () => {\r\n            if (pendingChanges.length > 0 && !this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                this._fetchDocumentSemanticTokens.schedule();\r\n            }\r\n        };\r\n        if (this._currentDocumentResponse) {\r\n            this._currentDocumentResponse.dispose();\r\n            this._currentDocumentResponse = null;\r\n        }\r\n        if (this._isDisposed) {\r\n            // disposed!\r\n            if (provider && tokens) {\r\n                provider.releaseDocumentSemanticTokens(tokens.resultId);\r\n            }\r\n            return;\r\n        }\r\n        if (!provider || !styling) {\r\n            this._model.setSemanticTokens(null, false);\r\n            return;\r\n        }\r\n        if (!tokens) {\r\n            this._model.setSemanticTokens(null, true);\r\n            rescheduleIfNeeded();\r\n            return;\r\n        }\r\n        if (isSemanticTokensEdits(tokens)) {\r\n            if (!currentResponse) {\r\n                // not possible!\r\n                this._model.setSemanticTokens(null, true);\r\n                return;\r\n            }\r\n            if (tokens.edits.length === 0) {\r\n                // nothing to do!\r\n                tokens = {\r\n                    resultId: tokens.resultId,\r\n                    data: currentResponse.data\r\n                };\r\n            }\r\n            else {\r\n                let deltaLength = 0;\r\n                for (const edit of tokens.edits) {\r\n                    deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\r\n                }\r\n                const srcData = currentResponse.data;\r\n                const destData = new Uint32Array(srcData.length + deltaLength);\r\n                let srcLastStart = srcData.length;\r\n                let destLastStart = destData.length;\r\n                for (let i = tokens.edits.length - 1; i >= 0; i--) {\r\n                    const edit = tokens.edits[i];\r\n                    const copyCount = srcLastStart - (edit.start + edit.deleteCount);\r\n                    if (copyCount > 0) {\r\n                        ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\r\n                        destLastStart -= copyCount;\r\n                    }\r\n                    if (edit.data) {\r\n                        ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\r\n                        destLastStart -= edit.data.length;\r\n                    }\r\n                    srcLastStart = edit.start;\r\n                }\r\n                if (srcLastStart > 0) {\r\n                    ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\r\n                }\r\n                tokens = {\r\n                    resultId: tokens.resultId,\r\n                    data: destData\r\n                };\r\n            }\r\n        }\r\n        if (isSemanticTokens(tokens)) {\r\n            this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\r\n            const result = toMultilineTokens2(tokens, styling, this._model.getLanguageIdentifier());\r\n            // Adjust incoming semantic tokens\r\n            if (pendingChanges.length > 0) {\r\n                // More changes occurred while the request was running\r\n                // We need to:\r\n                // 1. Adjust incoming semantic tokens\r\n                // 2. Request them again\r\n                for (const change of pendingChanges) {\r\n                    for (const area of result) {\r\n                        for (const singleChange of change.changes) {\r\n                            area.applyEdit(singleChange.range, singleChange.text);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._model.setSemanticTokens(result, true);\r\n        }\r\n        else {\r\n            this._model.setSemanticTokens(null, true);\r\n        }\r\n        rescheduleIfNeeded();\r\n    }\r\n}\r\nModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY = 300;\r\n"]},"metadata":{},"sourceType":"module"}