{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/barath007/projects/tio/client/context/auth.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Axios from \"axios\";\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nconst StateContext = /*#__PURE__*/createContext({\n  authenticated: false,\n  user: null,\n  loading: true\n});\nconst DispatchContext = /*#__PURE__*/createContext(null);\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authenticated: true,\n        user: payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authenticated: false,\n        user: null\n      });\n\n    case 'STOP_LOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    default:\n      throw new Error(`Unknown action type: ${type}`);\n  }\n};\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {\n    user: null,\n    authenticated: false,\n    loading: true\n  });\n  useEffect(() => {\n    Axios.get('/auth/me').then(res => {\n      dispatch({\n        type: 'LOGIN',\n        payload: res.data\n      });\n      dispatch({\n        type: 'STOP_LOADING',\n        payload: \"\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'STOP_LOADING',\n        payload: \"\"\n      });\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\nexport const useAuthState = () => useContext(StateContext);\nexport const useAuthDispatch = () => useContext(DispatchContext);","map":{"version":3,"sources":["/home/barath007/projects/tio/client/context/auth.tsx"],"names":["Axios","createContext","useContext","useEffect","useReducer","StateContext","authenticated","user","loading","DispatchContext","reducer","state","type","payload","Error","AuthProvider","children","dispatch","get","then","res","data","catch","err","console","log","useAuthState","useAuthDispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AAcA,MAAMC,YAAY,gBAAGJ,aAAa,CAAQ;AACtCK,EAAAA,aAAa,EAAE,KADuB;AAEtCC,EAAAA,IAAI,EAAE,IAFgC;AAGtCC,EAAAA,OAAO,EAAE;AAH6B,CAAR,CAAlC;AAMA,MAAMC,eAAe,gBAAGR,aAAa,CAAC,IAAD,CAArC;;AACA,MAAMS,OAAO,GAAG,CAACC,KAAD,EAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAf,KAA6C;AACzD,UAAOD,IAAP;AACI,SAAK,OAAL;AACI,6CACOD,KADP;AAEIL,QAAAA,aAAa,EAAE,IAFnB;AAGIC,QAAAA,IAAI,EAAEM;AAHV;;AAKJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIL,QAAAA,aAAa,EAAE,KAFnB;AAGIC,QAAAA,IAAI,EAAE;AAHV;;AAKJ,SAAK,cAAL;AACI,6CACOI,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,YAAM,IAAIM,KAAJ,CAAW,wBAAuBF,IAAK,EAAvC,CAAN;AAnBR;AAqBH,CAtBD;;AAwBA,OAAO,MAAMG,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA6C;AACrE,QAAM;AAAA,OAAEL,KAAF;AAAA,OAASM;AAAT,MAAsBb,UAAU,CAACM,OAAD,EAAU;AAC5CH,IAAAA,IAAI,EAAE,IADsC;AAE5CD,IAAAA,aAAa,EAAE,KAF6B;AAG5CE,IAAAA,OAAO,EAAE;AAHmC,GAAV,CAAtC;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAACkB,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA4BC,GAAD,IAAS;AAChCH,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEO,GAAG,CAACC;AAA9B,OAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAC,cAAP;AAAuBC,QAAAA,OAAO,EAAC;AAA/B,OAAD,CAAR;AACH,KAHD,EAGGS,KAHH,CAGSC,GAAG,IAAI;AACZN,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAC,cAAP;AAAuBC,QAAAA,OAAO,EAAC;AAA/B,OAAD,CAAR;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEN,QAAjC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEN,KAA9B;AAAA,gBACKK;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxBM;AA0BP,OAAO,MAAMU,YAAY,GAAG,MAAMxB,UAAU,CAACG,YAAD,CAArC;AACP,OAAO,MAAMsB,eAAe,GAAG,MAAMzB,UAAU,CAACO,eAAD,CAAxC","sourcesContent":["import Axios from \"axios\";\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nimport { User } from \"../types\";\n\ninterface State {\n    authenticated: boolean;\n    user: User | undefined;\n    loading: boolean;\n}\n\ninterface Action {\n    type: string;\n    payload: any;\n}\n\nconst StateContext = createContext<State>({\n    authenticated: false,\n    user: null,\n    loading: true\n});\n\nconst DispatchContext = createContext(null)\nconst reducer = (state: State, { type, payload }: Action) => {\n    switch(type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                authenticated: true,\n                user: payload\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                authenticated: false,\n                user: null\n            }\n        case 'STOP_LOADING':\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            throw new Error(`Unknown action type: ${type}`)\n    }\n}\n\nexport const AuthProvider = ({children}: {children: React.ReactNode}) => {\n    const [ state, dispatch ] = useReducer(reducer, {\n        user: null,\n        authenticated: false,\n        loading: true\n    });\n\n    useEffect(() => {\n        Axios.get('/auth/me').then((res) => {\n            dispatch({ type: 'LOGIN', payload: res.data })\n            dispatch({ type:'STOP_LOADING', payload:\"\" })\n        }).catch(err => {\n            dispatch({ type:'STOP_LOADING', payload:\"\" })\n            console.log(err);\n        }) \n    }, [])\n\n    return(\n        <DispatchContext.Provider value={dispatch}>\n            <StateContext.Provider value={state}>\n                {children}\n            </StateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport const useAuthState = () => useContext(StateContext);\nexport const useAuthDispatch = () => useContext(DispatchContext);\n\n"]},"metadata":{},"sourceType":"module"}