{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from '../../registry/common/platform.js';\nimport { ThemeIcon } from './themeService.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport * as Codicons from '../../../base/common/codicons.js'; //  ------ API types\n// color registry\n\nexport var Extensions = {\n  IconContribution: 'base.contributions.icons'\n};\n\nvar IconRegistry = /*#__PURE__*/function () {\n  function IconRegistry() {\n    _classCallCheck(this, IconRegistry);\n\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this.iconSchema = {\n      definitions: {\n        icons: {\n          type: 'object',\n          properties: {\n            fontId: {\n              type: 'string',\n              description: localize('iconDefintion.fontId', 'The id of the font to use. If not set, the font that is defined first is used.')\n            },\n            fontCharacter: {\n              type: 'string',\n              description: localize('iconDefintion.fontCharacter', 'The font character associated with the icon definition.')\n            }\n          },\n          additionalProperties: false,\n          defaultSnippets: [{\n            body: {\n              fontCharacter: '\\\\\\\\e030'\n            }\n          }]\n        }\n      },\n      type: 'object',\n      properties: {}\n    };\n    this.iconReferenceSchema = {\n      type: 'string',\n      \"enum\": [],\n      enumDescriptions: []\n    };\n    this.iconsById = {};\n  }\n\n  _createClass(IconRegistry, [{\n    key: \"registerIcon\",\n    value: function registerIcon(id, defaults, description, deprecationMessage) {\n      var existing = this.iconsById[id];\n\n      if (existing) {\n        if (description && !existing.description) {\n          existing.description = description;\n          this.iconSchema.properties[id].markdownDescription = \"\".concat(description, \" $(\").concat(id, \")\");\n          var enumIndex = this.iconReferenceSchema[\"enum\"].indexOf(id);\n\n          if (enumIndex !== -1) {\n            this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n          }\n\n          this._onDidChange.fire();\n        }\n\n        return existing;\n      }\n\n      var iconContribution = {\n        id: id,\n        description: description,\n        defaults: defaults,\n        deprecationMessage: deprecationMessage\n      };\n      this.iconsById[id] = iconContribution;\n      var propertySchema = {\n        $ref: '#/definitions/icons'\n      };\n\n      if (deprecationMessage) {\n        propertySchema.deprecationMessage = deprecationMessage;\n      }\n\n      if (description) {\n        propertySchema.markdownDescription = \"\".concat(description, \": $(\").concat(id, \")\");\n      }\n\n      this.iconSchema.properties[id] = propertySchema;\n      this.iconReferenceSchema[\"enum\"].push(id);\n      this.iconReferenceSchema.enumDescriptions.push(description || '');\n\n      this._onDidChange.fire();\n\n      return {\n        id: id\n      };\n    }\n  }, {\n    key: \"getIconSchema\",\n    value: function getIconSchema() {\n      return this.iconSchema;\n    }\n  }, {\n    key: \"getCSS\",\n    value: function getCSS() {\n      var rules = [];\n\n      for (var id in this.iconsById) {\n        var rule = this.formatRule(id);\n\n        if (rule) {\n          rules.push(rule);\n        }\n      }\n\n      return rules.join('\\n');\n    }\n  }, {\n    key: \"formatRule\",\n    value: function formatRule(id) {\n      var definition = this.iconsById[id].defaults;\n\n      while (ThemeIcon.isThemeIcon(definition)) {\n        var c = this.iconsById[definition.id];\n\n        if (!c) {\n          return undefined;\n        }\n\n        definition = c.defaults;\n      }\n\n      return \".codicon-\".concat(id, \":before { content: '\").concat(definition.character, \"'; }\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      var sorter = function sorter(i1, i2) {\n        return i1.id.localeCompare(i2.id);\n      };\n\n      var classNames = function classNames(i) {\n        while (ThemeIcon.isThemeIcon(i.defaults)) {\n          i = _this.iconsById[i.defaults.id];\n        }\n\n        return \"codicon codicon-\".concat(i ? i.id : '');\n      };\n\n      var reference = [];\n      reference.push(\"| preview     | identifier                        | default codicon id                | description\");\n      reference.push(\"| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |\");\n      var contributions = Object.keys(this.iconsById).map(function (key) {\n        return _this.iconsById[key];\n      });\n\n      var _iterator = _createForOfIteratorHelper(contributions.filter(function (i) {\n        return !!i.description;\n      }).sort(sorter)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n          reference.push(\"|<i class=\\\"\".concat(classNames(i), \"\\\"></i>|\").concat(i.id, \"|\").concat(ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id, \"|\").concat(i.description || '', \"|\"));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      reference.push(\"| preview     | identifier                        \");\n      reference.push(\"| ----------- | --------------------------------- |\");\n\n      var _iterator2 = _createForOfIteratorHelper(contributions.filter(function (i) {\n        return !ThemeIcon.isThemeIcon(i.defaults);\n      }).sort(sorter)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _i = _step2.value;\n          reference.push(\"|<i class=\\\"\".concat(classNames(_i), \"\\\"></i>|\").concat(_i.id, \"|\"));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return reference.join('\\n');\n    }\n  }]);\n\n  return IconRegistry;\n}();\n\nvar iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n  return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n  return iconRegistry;\n}\n\nfunction initialize() {\n  var _iterator3 = _createForOfIteratorHelper(Codicons.iconRegistry.all),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var icon = _step3.value;\n      iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  Codicons.iconRegistry.onDidRegister(function (icon) {\n    return iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\n  });\n}\n\ninitialize();\nexport var iconsSchemaId = 'vscode://schemas/icons';\nvar schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nvar delayer = new RunOnceScheduler(function () {\n  return schemaRegistry.notifySchemaChanged(iconsSchemaId);\n}, 200);\niconRegistry.onDidChange(function () {\n  if (!delayer.isScheduled()) {\n    delayer.schedule();\n  }\n}); //setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\n\nexport var widgetClose = registerIcon('widget-close', Codicons.Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js"],"names":["platform","ThemeIcon","Emitter","localize","Extensions","JSONExtensions","RunOnceScheduler","Codicons","IconContribution","IconRegistry","_onDidChange","onDidChange","event","iconSchema","definitions","icons","type","properties","fontId","description","fontCharacter","additionalProperties","defaultSnippets","body","iconReferenceSchema","enumDescriptions","iconsById","id","defaults","deprecationMessage","existing","markdownDescription","enumIndex","indexOf","fire","iconContribution","propertySchema","$ref","push","rules","rule","formatRule","join","definition","isThemeIcon","c","undefined","character","sorter","i1","i2","localeCompare","classNames","i","reference","contributions","Object","keys","map","key","filter","sort","iconRegistry","Registry","add","registerIcon","getIconRegistry","initialize","all","icon","onDidRegister","iconsSchemaId","schemaRegistry","as","JSONContribution","registerSchema","getIconSchema","delayer","notifySchemaChanged","isScheduled","schedule","widgetClose","Codicon","close"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as platform from '../../registry/common/platform.js';\r\nimport { ThemeIcon } from './themeService.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport * as Codicons from '../../../base/common/codicons.js';\r\n//  ------ API types\r\n// color registry\r\nexport const Extensions = {\r\n    IconContribution: 'base.contributions.icons'\r\n};\r\nclass IconRegistry {\r\n    constructor() {\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this.iconSchema = {\r\n            definitions: {\r\n                icons: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        fontId: { type: 'string', description: localize('iconDefintion.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\r\n                        fontCharacter: { type: 'string', description: localize('iconDefintion.fontCharacter', 'The font character associated with the icon definition.') }\r\n                    },\r\n                    additionalProperties: false,\r\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\r\n                }\r\n            },\r\n            type: 'object',\r\n            properties: {}\r\n        };\r\n        this.iconReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\r\n        this.iconsById = {};\r\n    }\r\n    registerIcon(id, defaults, description, deprecationMessage) {\r\n        const existing = this.iconsById[id];\r\n        if (existing) {\r\n            if (description && !existing.description) {\r\n                existing.description = description;\r\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\r\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\r\n                if (enumIndex !== -1) {\r\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\r\n                }\r\n                this._onDidChange.fire();\r\n            }\r\n            return existing;\r\n        }\r\n        let iconContribution = { id, description, defaults, deprecationMessage };\r\n        this.iconsById[id] = iconContribution;\r\n        let propertySchema = { $ref: '#/definitions/icons' };\r\n        if (deprecationMessage) {\r\n            propertySchema.deprecationMessage = deprecationMessage;\r\n        }\r\n        if (description) {\r\n            propertySchema.markdownDescription = `${description}: $(${id})`;\r\n        }\r\n        this.iconSchema.properties[id] = propertySchema;\r\n        this.iconReferenceSchema.enum.push(id);\r\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\r\n        this._onDidChange.fire();\r\n        return { id };\r\n    }\r\n    getIconSchema() {\r\n        return this.iconSchema;\r\n    }\r\n    getCSS() {\r\n        const rules = [];\r\n        for (let id in this.iconsById) {\r\n            const rule = this.formatRule(id);\r\n            if (rule) {\r\n                rules.push(rule);\r\n            }\r\n        }\r\n        return rules.join('\\n');\r\n    }\r\n    formatRule(id) {\r\n        let definition = this.iconsById[id].defaults;\r\n        while (ThemeIcon.isThemeIcon(definition)) {\r\n            const c = this.iconsById[definition.id];\r\n            if (!c) {\r\n                return undefined;\r\n            }\r\n            definition = c.defaults;\r\n        }\r\n        return `.codicon-${id}:before { content: '${definition.character}'; }`;\r\n    }\r\n    toString() {\r\n        const sorter = (i1, i2) => {\r\n            return i1.id.localeCompare(i2.id);\r\n        };\r\n        const classNames = (i) => {\r\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\r\n                i = this.iconsById[i.defaults.id];\r\n            }\r\n            return `codicon codicon-${i ? i.id : ''}`;\r\n        };\r\n        let reference = [];\r\n        reference.push(`| preview     | identifier                        | default codicon id                | description`);\r\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\r\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\r\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\r\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\r\n        }\r\n        reference.push(`| preview     | identifier                        `);\r\n        reference.push(`| ----------- | --------------------------------- |`);\r\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\r\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\r\n        }\r\n        return reference.join('\\n');\r\n    }\r\n}\r\nconst iconRegistry = new IconRegistry();\r\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\r\nexport function registerIcon(id, defaults, description, deprecationMessage) {\r\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\r\n}\r\nexport function getIconRegistry() {\r\n    return iconRegistry;\r\n}\r\nfunction initialize() {\r\n    for (const icon of Codicons.iconRegistry.all) {\r\n        iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\r\n    }\r\n    Codicons.iconRegistry.onDidRegister(icon => iconRegistry.registerIcon(icon.id, icon.definition, icon.description));\r\n}\r\ninitialize();\r\nexport const iconsSchemaId = 'vscode://schemas/icons';\r\nlet schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\r\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\r\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\r\niconRegistry.onDidChange(() => {\r\n    if (!delayer.isScheduled()) {\r\n        delayer.schedule();\r\n    }\r\n});\r\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\r\n// common icons\r\nexport const widgetClose = registerIcon('widget-close', Codicons.Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\r\n"]},"metadata":{},"sourceType":"module"}