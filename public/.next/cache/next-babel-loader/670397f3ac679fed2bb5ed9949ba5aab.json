{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from './dom.js';\nimport { IframeUtils } from './iframe.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { DisposableStore } from '../common/lifecycle.js';\nexport function standardMouseMoveMerger(lastEvent, currentEvent) {\n  var ev = new StandardMouseEvent(currentEvent);\n  ev.preventDefault();\n  return {\n    leftButton: ev.leftButton,\n    buttons: ev.buttons,\n    posx: ev.posx,\n    posy: ev.posy\n  };\n}\nexport var GlobalMouseMoveMonitor = /*#__PURE__*/function () {\n  function GlobalMouseMoveMonitor() {\n    _classCallCheck(this, GlobalMouseMoveMonitor);\n\n    this._hooks = new DisposableStore();\n    this._mouseMoveEventMerger = null;\n    this._mouseMoveCallback = null;\n    this._onStopCallback = null;\n  }\n\n  _createClass(GlobalMouseMoveMonitor, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.stopMonitoring(false);\n\n      this._hooks.dispose();\n    }\n  }, {\n    key: \"stopMonitoring\",\n    value: function stopMonitoring(invokeStopCallback, browserEvent) {\n      if (!this.isMonitoring()) {\n        // Not monitoring\n        return;\n      } // Unhook\n\n\n      this._hooks.clear();\n\n      this._mouseMoveEventMerger = null;\n      this._mouseMoveCallback = null;\n      var onStopCallback = this._onStopCallback;\n      this._onStopCallback = null;\n\n      if (invokeStopCallback && onStopCallback) {\n        onStopCallback(browserEvent);\n      }\n    }\n  }, {\n    key: \"isMonitoring\",\n    value: function isMonitoring() {\n      return !!this._mouseMoveEventMerger;\n    }\n  }, {\n    key: \"startMonitoring\",\n    value: function startMonitoring(initialElement, initialButtons, mouseMoveEventMerger, mouseMoveCallback, onStopCallback) {\n      var _this = this;\n\n      if (this.isMonitoring()) {\n        // I am already hooked\n        return;\n      }\n\n      this._mouseMoveEventMerger = mouseMoveEventMerger;\n      this._mouseMoveCallback = mouseMoveCallback;\n      this._onStopCallback = onStopCallback;\n      var windowChain = IframeUtils.getSameOriginWindowChain();\n      var mouseMove = 'mousemove';\n      var mouseUp = 'mouseup';\n      var listenTo = windowChain.map(function (element) {\n        return element.window.document;\n      });\n      var shadowRoot = dom.getShadowRoot(initialElement);\n\n      if (shadowRoot) {\n        listenTo.unshift(shadowRoot);\n      }\n\n      var _iterator = _createForOfIteratorHelper(listenTo),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          this._hooks.add(dom.addDisposableThrottledListener(element, mouseMove, function (data) {\n            if (data.buttons !== initialButtons) {\n              // Buttons state has changed in the meantime\n              _this.stopMonitoring(true);\n\n              return;\n            }\n\n            _this._mouseMoveCallback(data);\n          }, function (lastEvent, currentEvent) {\n            return _this._mouseMoveEventMerger(lastEvent, currentEvent);\n          }));\n\n          this._hooks.add(dom.addDisposableListener(element, mouseUp, function (e) {\n            return _this.stopMonitoring(true);\n          }));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (IframeUtils.hasDifferentOriginAncestor()) {\n        var lastSameOriginAncestor = windowChain[windowChain.length - 1]; // We might miss a mouse up if it happens outside the iframe\n        // This one is for Chrome\n\n        this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseout', function (browserEvent) {\n          var e = new StandardMouseEvent(browserEvent);\n\n          if (e.target.tagName.toLowerCase() === 'html') {\n            _this.stopMonitoring(true);\n          }\n        })); // This one is for FF\n\n\n        this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseover', function (browserEvent) {\n          var e = new StandardMouseEvent(browserEvent);\n\n          if (e.target.tagName.toLowerCase() === 'html') {\n            _this.stopMonitoring(true);\n          }\n        })); // This one is for IE\n\n\n        this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document.body, 'mouseleave', function (browserEvent) {\n          _this.stopMonitoring(true);\n        }));\n      }\n    }\n  }]);\n\n  return GlobalMouseMoveMonitor;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/globalMouseMoveMonitor.js"],"names":["dom","IframeUtils","StandardMouseEvent","DisposableStore","standardMouseMoveMerger","lastEvent","currentEvent","ev","preventDefault","leftButton","buttons","posx","posy","GlobalMouseMoveMonitor","_hooks","_mouseMoveEventMerger","_mouseMoveCallback","_onStopCallback","stopMonitoring","dispose","invokeStopCallback","browserEvent","isMonitoring","clear","onStopCallback","initialElement","initialButtons","mouseMoveEventMerger","mouseMoveCallback","windowChain","getSameOriginWindowChain","mouseMove","mouseUp","listenTo","map","element","window","document","shadowRoot","getShadowRoot","unshift","add","addDisposableThrottledListener","data","addDisposableListener","e","hasDifferentOriginAncestor","lastSameOriginAncestor","length","target","tagName","toLowerCase","body"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from './dom.js';\r\nimport { IframeUtils } from './iframe.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { DisposableStore } from '../common/lifecycle.js';\r\nexport function standardMouseMoveMerger(lastEvent, currentEvent) {\r\n    let ev = new StandardMouseEvent(currentEvent);\r\n    ev.preventDefault();\r\n    return {\r\n        leftButton: ev.leftButton,\r\n        buttons: ev.buttons,\r\n        posx: ev.posx,\r\n        posy: ev.posy\r\n    };\r\n}\r\nexport class GlobalMouseMoveMonitor {\r\n    constructor() {\r\n        this._hooks = new DisposableStore();\r\n        this._mouseMoveEventMerger = null;\r\n        this._mouseMoveCallback = null;\r\n        this._onStopCallback = null;\r\n    }\r\n    dispose() {\r\n        this.stopMonitoring(false);\r\n        this._hooks.dispose();\r\n    }\r\n    stopMonitoring(invokeStopCallback, browserEvent) {\r\n        if (!this.isMonitoring()) {\r\n            // Not monitoring\r\n            return;\r\n        }\r\n        // Unhook\r\n        this._hooks.clear();\r\n        this._mouseMoveEventMerger = null;\r\n        this._mouseMoveCallback = null;\r\n        const onStopCallback = this._onStopCallback;\r\n        this._onStopCallback = null;\r\n        if (invokeStopCallback && onStopCallback) {\r\n            onStopCallback(browserEvent);\r\n        }\r\n    }\r\n    isMonitoring() {\r\n        return !!this._mouseMoveEventMerger;\r\n    }\r\n    startMonitoring(initialElement, initialButtons, mouseMoveEventMerger, mouseMoveCallback, onStopCallback) {\r\n        if (this.isMonitoring()) {\r\n            // I am already hooked\r\n            return;\r\n        }\r\n        this._mouseMoveEventMerger = mouseMoveEventMerger;\r\n        this._mouseMoveCallback = mouseMoveCallback;\r\n        this._onStopCallback = onStopCallback;\r\n        const windowChain = IframeUtils.getSameOriginWindowChain();\r\n        const mouseMove = 'mousemove';\r\n        const mouseUp = 'mouseup';\r\n        const listenTo = windowChain.map(element => element.window.document);\r\n        const shadowRoot = dom.getShadowRoot(initialElement);\r\n        if (shadowRoot) {\r\n            listenTo.unshift(shadowRoot);\r\n        }\r\n        for (const element of listenTo) {\r\n            this._hooks.add(dom.addDisposableThrottledListener(element, mouseMove, (data) => {\r\n                if (data.buttons !== initialButtons) {\r\n                    // Buttons state has changed in the meantime\r\n                    this.stopMonitoring(true);\r\n                    return;\r\n                }\r\n                this._mouseMoveCallback(data);\r\n            }, (lastEvent, currentEvent) => this._mouseMoveEventMerger(lastEvent, currentEvent)));\r\n            this._hooks.add(dom.addDisposableListener(element, mouseUp, (e) => this.stopMonitoring(true)));\r\n        }\r\n        if (IframeUtils.hasDifferentOriginAncestor()) {\r\n            let lastSameOriginAncestor = windowChain[windowChain.length - 1];\r\n            // We might miss a mouse up if it happens outside the iframe\r\n            // This one is for Chrome\r\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseout', (browserEvent) => {\r\n                let e = new StandardMouseEvent(browserEvent);\r\n                if (e.target.tagName.toLowerCase() === 'html') {\r\n                    this.stopMonitoring(true);\r\n                }\r\n            }));\r\n            // This one is for FF\r\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseover', (browserEvent) => {\r\n                let e = new StandardMouseEvent(browserEvent);\r\n                if (e.target.tagName.toLowerCase() === 'html') {\r\n                    this.stopMonitoring(true);\r\n                }\r\n            }));\r\n            // This one is for IE\r\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document.body, 'mouseleave', (browserEvent) => {\r\n                this.stopMonitoring(true);\r\n            }));\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}