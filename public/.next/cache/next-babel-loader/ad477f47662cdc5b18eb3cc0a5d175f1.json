{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { $ } from '../../dom.js';\n\nfunction removeFromParent(element) {\n  try {\n    if (element.parentElement) {\n      element.parentElement.removeChild(element);\n    }\n  } catch (e) {// this will throw if this happens due to a blur event, nasty business\n  }\n}\n\nexport var RowCache = /*#__PURE__*/function () {\n  function RowCache(renderers) {\n    _classCallCheck(this, RowCache);\n\n    this.renderers = renderers;\n    this.cache = new Map();\n  }\n  /**\r\n   * Returns a row either by creating a new one or reusing\r\n   * a previously released row which shares the same templateId.\r\n   */\n\n\n  _createClass(RowCache, [{\n    key: \"alloc\",\n    value: function alloc(templateId) {\n      var result = this.getTemplateCache(templateId).pop();\n\n      if (!result) {\n        var domNode = $('.monaco-list-row');\n        var renderer = this.getRenderer(templateId);\n        var templateData = renderer.renderTemplate(domNode);\n        result = {\n          domNode: domNode,\n          templateId: templateId,\n          templateData: templateData\n        };\n      }\n\n      return result;\n    }\n    /**\r\n     * Releases the row for eventual reuse.\r\n     */\n\n  }, {\n    key: \"release\",\n    value: function release(row) {\n      if (!row) {\n        return;\n      }\n\n      this.releaseRow(row);\n    }\n  }, {\n    key: \"releaseRow\",\n    value: function releaseRow(row) {\n      var domNode = row.domNode,\n          templateId = row.templateId;\n\n      if (domNode) {\n        domNode.classList.remove('scrolling');\n        removeFromParent(domNode);\n      }\n\n      var cache = this.getTemplateCache(templateId);\n      cache.push(row);\n    }\n  }, {\n    key: \"getTemplateCache\",\n    value: function getTemplateCache(templateId) {\n      var result = this.cache.get(templateId);\n\n      if (!result) {\n        result = [];\n        this.cache.set(templateId, result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this = this;\n\n      this.cache.forEach(function (cachedRows, templateId) {\n        var _iterator = _createForOfIteratorHelper(cachedRows),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var cachedRow = _step.value;\n\n            var renderer = _this.getRenderer(templateId);\n\n            renderer.disposeTemplate(cachedRow.templateData);\n            cachedRow.templateData = null;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n      this.cache.clear();\n    }\n  }, {\n    key: \"getRenderer\",\n    value: function getRenderer(templateId) {\n      var renderer = this.renderers.get(templateId);\n\n      if (!renderer) {\n        throw new Error(\"No renderer found for \".concat(templateId));\n      }\n\n      return renderer;\n    }\n  }]);\n\n  return RowCache;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rowCache.js"],"names":["$","removeFromParent","element","parentElement","removeChild","e","RowCache","renderers","cache","Map","templateId","result","getTemplateCache","pop","domNode","renderer","getRenderer","templateData","renderTemplate","row","releaseRow","classList","remove","push","get","set","forEach","cachedRows","cachedRow","disposeTemplate","clear","Error"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $ } from '../../dom.js';\r\nfunction removeFromParent(element) {\r\n    try {\r\n        if (element.parentElement) {\r\n            element.parentElement.removeChild(element);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this will throw if this happens due to a blur event, nasty business\r\n    }\r\n}\r\nexport class RowCache {\r\n    constructor(renderers) {\r\n        this.renderers = renderers;\r\n        this.cache = new Map();\r\n    }\r\n    /**\r\n     * Returns a row either by creating a new one or reusing\r\n     * a previously released row which shares the same templateId.\r\n     */\r\n    alloc(templateId) {\r\n        let result = this.getTemplateCache(templateId).pop();\r\n        if (!result) {\r\n            const domNode = $('.monaco-list-row');\r\n            const renderer = this.getRenderer(templateId);\r\n            const templateData = renderer.renderTemplate(domNode);\r\n            result = { domNode, templateId, templateData };\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Releases the row for eventual reuse.\r\n     */\r\n    release(row) {\r\n        if (!row) {\r\n            return;\r\n        }\r\n        this.releaseRow(row);\r\n    }\r\n    releaseRow(row) {\r\n        const { domNode, templateId } = row;\r\n        if (domNode) {\r\n            domNode.classList.remove('scrolling');\r\n            removeFromParent(domNode);\r\n        }\r\n        const cache = this.getTemplateCache(templateId);\r\n        cache.push(row);\r\n    }\r\n    getTemplateCache(templateId) {\r\n        let result = this.cache.get(templateId);\r\n        if (!result) {\r\n            result = [];\r\n            this.cache.set(templateId, result);\r\n        }\r\n        return result;\r\n    }\r\n    dispose() {\r\n        this.cache.forEach((cachedRows, templateId) => {\r\n            for (const cachedRow of cachedRows) {\r\n                const renderer = this.getRenderer(templateId);\r\n                renderer.disposeTemplate(cachedRow.templateData);\r\n                cachedRow.templateData = null;\r\n            }\r\n        });\r\n        this.cache.clear();\r\n    }\r\n    getRenderer(templateId) {\r\n        const renderer = this.renderers.get(templateId);\r\n        if (!renderer) {\r\n            throw new Error(`No renderer found for ${templateId}`);\r\n        }\r\n        return renderer;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}