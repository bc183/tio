{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nexport var TokenizationRegistryImpl = /*#__PURE__*/function () {\n  function TokenizationRegistryImpl() {\n    _classCallCheck(this, TokenizationRegistryImpl);\n\n    this._map = new Map();\n    this._promises = new Map();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._colorMap = null;\n  }\n\n  _createClass(TokenizationRegistryImpl, [{\n    key: \"fire\",\n    value: function fire(languages) {\n      this._onDidChange.fire({\n        changedLanguages: languages,\n        changedColorMap: false\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(language, support) {\n      var _this = this;\n\n      this._map.set(language, support);\n\n      this.fire([language]);\n      return toDisposable(function () {\n        if (_this._map.get(language) !== support) {\n          return;\n        }\n\n        _this._map[\"delete\"](language);\n\n        _this.fire([language]);\n      });\n    }\n  }, {\n    key: \"registerPromise\",\n    value: function registerPromise(language, supportPromise) {\n      var _this2 = this;\n\n      var registration = null;\n      var isDisposed = false;\n\n      this._promises.set(language, supportPromise.then(function (support) {\n        _this2._promises[\"delete\"](language);\n\n        if (isDisposed || !support) {\n          return;\n        }\n\n        registration = _this2.register(language, support);\n      }));\n\n      return toDisposable(function () {\n        isDisposed = true;\n\n        if (registration) {\n          registration.dispose();\n        }\n      });\n    }\n  }, {\n    key: \"getPromise\",\n    value: function getPromise(language) {\n      var _this3 = this;\n\n      var support = this.get(language);\n\n      if (support) {\n        return Promise.resolve(support);\n      }\n\n      var promise = this._promises.get(language);\n\n      if (promise) {\n        return promise.then(function (_) {\n          return _this3.get(language);\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"get\",\n    value: function get(language) {\n      return this._map.get(language) || null;\n    }\n  }, {\n    key: \"setColorMap\",\n    value: function setColorMap(colorMap) {\n      this._colorMap = colorMap;\n\n      this._onDidChange.fire({\n        changedLanguages: Array.from(this._map.keys()),\n        changedColorMap: true\n      });\n    }\n  }, {\n    key: \"getColorMap\",\n    value: function getColorMap() {\n      return this._colorMap;\n    }\n  }, {\n    key: \"getDefaultBackground\",\n    value: function getDefaultBackground() {\n      if (this._colorMap && this._colorMap.length > 2\n      /* DefaultBackground */\n      ) {\n          return this._colorMap[2\n          /* DefaultBackground */\n          ];\n        }\n\n      return null;\n    }\n  }]);\n\n  return TokenizationRegistryImpl;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/modes/tokenizationRegistry.js"],"names":["Emitter","toDisposable","TokenizationRegistryImpl","_map","Map","_promises","_onDidChange","onDidChange","event","_colorMap","languages","fire","changedLanguages","changedColorMap","language","support","set","get","supportPromise","registration","isDisposed","then","register","dispose","Promise","resolve","promise","_","colorMap","Array","from","keys","length"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nexport class TokenizationRegistryImpl {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._promises = new Map();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._colorMap = null;\r\n    }\r\n    fire(languages) {\r\n        this._onDidChange.fire({\r\n            changedLanguages: languages,\r\n            changedColorMap: false\r\n        });\r\n    }\r\n    register(language, support) {\r\n        this._map.set(language, support);\r\n        this.fire([language]);\r\n        return toDisposable(() => {\r\n            if (this._map.get(language) !== support) {\r\n                return;\r\n            }\r\n            this._map.delete(language);\r\n            this.fire([language]);\r\n        });\r\n    }\r\n    registerPromise(language, supportPromise) {\r\n        let registration = null;\r\n        let isDisposed = false;\r\n        this._promises.set(language, supportPromise.then(support => {\r\n            this._promises.delete(language);\r\n            if (isDisposed || !support) {\r\n                return;\r\n            }\r\n            registration = this.register(language, support);\r\n        }));\r\n        return toDisposable(() => {\r\n            isDisposed = true;\r\n            if (registration) {\r\n                registration.dispose();\r\n            }\r\n        });\r\n    }\r\n    getPromise(language) {\r\n        const support = this.get(language);\r\n        if (support) {\r\n            return Promise.resolve(support);\r\n        }\r\n        const promise = this._promises.get(language);\r\n        if (promise) {\r\n            return promise.then(_ => this.get(language));\r\n        }\r\n        return null;\r\n    }\r\n    get(language) {\r\n        return (this._map.get(language) || null);\r\n    }\r\n    setColorMap(colorMap) {\r\n        this._colorMap = colorMap;\r\n        this._onDidChange.fire({\r\n            changedLanguages: Array.from(this._map.keys()),\r\n            changedColorMap: true\r\n        });\r\n    }\r\n    getColorMap() {\r\n        return this._colorMap;\r\n    }\r\n    getDefaultBackground() {\r\n        if (this._colorMap && this._colorMap.length > 2 /* DefaultBackground */) {\r\n            return this._colorMap[2 /* DefaultBackground */];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}