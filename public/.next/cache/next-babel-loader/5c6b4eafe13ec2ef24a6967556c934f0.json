{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './countBadge.css';\nimport { $, append } from '../../dom.js';\nimport { format } from '../../../common/strings.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nvar defaultOpts = {\n  badgeBackground: Color.fromHex('#4D4D4D'),\n  badgeForeground: Color.fromHex('#FFFFFF')\n};\nexport var CountBadge = /*#__PURE__*/function () {\n  function CountBadge(container, options) {\n    _classCallCheck(this, CountBadge);\n\n    this.count = 0;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.badgeBackground = this.options.badgeBackground;\n    this.badgeForeground = this.options.badgeForeground;\n    this.badgeBorder = this.options.badgeBorder;\n    this.element = append(container, $('.monaco-count-badge'));\n    this.countFormat = this.options.countFormat || '{0}';\n    this.titleFormat = this.options.titleFormat || '';\n    this.setCount(this.options.count || 0);\n  }\n\n  _createClass(CountBadge, [{\n    key: \"setCount\",\n    value: function setCount(count) {\n      this.count = count;\n      this.render();\n    }\n  }, {\n    key: \"setTitleFormat\",\n    value: function setTitleFormat(titleFormat) {\n      this.titleFormat = titleFormat;\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.element.textContent = format(this.countFormat, this.count);\n      this.element.title = format(this.titleFormat, this.count);\n      this.applyStyles();\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      this.badgeBackground = styles.badgeBackground;\n      this.badgeForeground = styles.badgeForeground;\n      this.badgeBorder = styles.badgeBorder;\n      this.applyStyles();\n    }\n  }, {\n    key: \"applyStyles\",\n    value: function applyStyles() {\n      if (this.element) {\n        var background = this.badgeBackground ? this.badgeBackground.toString() : '';\n        var foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n        var border = this.badgeBorder ? this.badgeBorder.toString() : '';\n        this.element.style.backgroundColor = background;\n        this.element.style.color = foreground;\n        this.element.style.borderWidth = border ? '1px' : '';\n        this.element.style.borderStyle = border ? 'solid' : '';\n        this.element.style.borderColor = border;\n      }\n    }\n  }]);\n\n  return CountBadge;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js"],"names":["$","append","format","Color","mixin","defaultOpts","badgeBackground","fromHex","badgeForeground","CountBadge","container","options","count","Object","create","badgeBorder","element","countFormat","titleFormat","setCount","render","textContent","title","applyStyles","styles","background","toString","foreground","border","style","backgroundColor","color","borderWidth","borderStyle","borderColor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './countBadge.css';\r\nimport { $, append } from '../../dom.js';\r\nimport { format } from '../../../common/strings.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nconst defaultOpts = {\r\n    badgeBackground: Color.fromHex('#4D4D4D'),\r\n    badgeForeground: Color.fromHex('#FFFFFF')\r\n};\r\nexport class CountBadge {\r\n    constructor(container, options) {\r\n        this.count = 0;\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOpts, false);\r\n        this.badgeBackground = this.options.badgeBackground;\r\n        this.badgeForeground = this.options.badgeForeground;\r\n        this.badgeBorder = this.options.badgeBorder;\r\n        this.element = append(container, $('.monaco-count-badge'));\r\n        this.countFormat = this.options.countFormat || '{0}';\r\n        this.titleFormat = this.options.titleFormat || '';\r\n        this.setCount(this.options.count || 0);\r\n    }\r\n    setCount(count) {\r\n        this.count = count;\r\n        this.render();\r\n    }\r\n    setTitleFormat(titleFormat) {\r\n        this.titleFormat = titleFormat;\r\n        this.render();\r\n    }\r\n    render() {\r\n        this.element.textContent = format(this.countFormat, this.count);\r\n        this.element.title = format(this.titleFormat, this.count);\r\n        this.applyStyles();\r\n    }\r\n    style(styles) {\r\n        this.badgeBackground = styles.badgeBackground;\r\n        this.badgeForeground = styles.badgeForeground;\r\n        this.badgeBorder = styles.badgeBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.element) {\r\n            const background = this.badgeBackground ? this.badgeBackground.toString() : '';\r\n            const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\r\n            const border = this.badgeBorder ? this.badgeBorder.toString() : '';\r\n            this.element.style.backgroundColor = background;\r\n            this.element.style.color = foreground;\r\n            this.element.style.borderWidth = border ? '1px' : '';\r\n            this.element.style.borderStyle = border ? 'solid' : '';\r\n            this.element.style.borderColor = border;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}