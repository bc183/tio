{"ast":null,"code":"import _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var RestrictedRenderingContext = /*#__PURE__*/function () {\n  function RestrictedRenderingContext(viewLayout, viewportData) {\n    _classCallCheck(this, RestrictedRenderingContext);\n\n    this._viewLayout = viewLayout;\n    this.viewportData = viewportData;\n    this.scrollWidth = this._viewLayout.getScrollWidth();\n    this.scrollHeight = this._viewLayout.getScrollHeight();\n    this.visibleRange = this.viewportData.visibleRange;\n    this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n\n    var vInfo = this._viewLayout.getCurrentViewport();\n\n    this.scrollTop = vInfo.top;\n    this.scrollLeft = vInfo.left;\n    this.viewportWidth = vInfo.width;\n    this.viewportHeight = vInfo.height;\n  }\n\n  _createClass(RestrictedRenderingContext, [{\n    key: \"getScrolledTopFromAbsoluteTop\",\n    value: function getScrolledTopFromAbsoluteTop(absoluteTop) {\n      return absoluteTop - this.scrollTop;\n    }\n  }, {\n    key: \"getVerticalOffsetForLineNumber\",\n    value: function getVerticalOffsetForLineNumber(lineNumber) {\n      return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n  }, {\n    key: \"getDecorationsInViewport\",\n    value: function getDecorationsInViewport() {\n      return this.viewportData.getDecorationsInViewport();\n    }\n  }]);\n\n  return RestrictedRenderingContext;\n}();\nexport var RenderingContext = /*#__PURE__*/function (_RestrictedRenderingC) {\n  _inherits(RenderingContext, _RestrictedRenderingC);\n\n  var _super = _createSuper(RenderingContext);\n\n  function RenderingContext(viewLayout, viewportData, viewLines) {\n    var _this;\n\n    _classCallCheck(this, RenderingContext);\n\n    _this = _super.call(this, viewLayout, viewportData);\n    _this._viewLines = viewLines;\n    return _this;\n  }\n\n  _createClass(RenderingContext, [{\n    key: \"linesVisibleRangesForRange\",\n    value: function linesVisibleRangesForRange(range, includeNewLines) {\n      return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n  }, {\n    key: \"visibleRangeForPosition\",\n    value: function visibleRangeForPosition(position) {\n      return this._viewLines.visibleRangeForPosition(position);\n    }\n  }]);\n\n  return RenderingContext;\n}(RestrictedRenderingContext);\nexport var LineVisibleRanges = function LineVisibleRanges(outsideRenderedLine, lineNumber, ranges) {\n  _classCallCheck(this, LineVisibleRanges);\n\n  this.outsideRenderedLine = outsideRenderedLine;\n  this.lineNumber = lineNumber;\n  this.ranges = ranges;\n};\nexport var HorizontalRange = /*#__PURE__*/function () {\n  function HorizontalRange(left, width) {\n    _classCallCheck(this, HorizontalRange);\n\n    this.left = Math.round(left);\n    this.width = Math.round(width);\n  }\n\n  _createClass(HorizontalRange, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"[\".concat(this.left, \",\").concat(this.width, \"]\");\n    }\n  }]);\n\n  return HorizontalRange;\n}();\nexport var HorizontalPosition = function HorizontalPosition(outsideRenderedLine, left) {\n  _classCallCheck(this, HorizontalPosition);\n\n  this.outsideRenderedLine = outsideRenderedLine;\n  this.left = Math.round(left);\n};\nexport var VisibleRanges = function VisibleRanges(outsideRenderedLine, ranges) {\n  _classCallCheck(this, VisibleRanges);\n\n  this.outsideRenderedLine = outsideRenderedLine;\n  this.ranges = ranges;\n};","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/view/renderingContext.js"],"names":["RestrictedRenderingContext","viewLayout","viewportData","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","getVerticalOffsetForLineNumber","getDecorationsInViewport","RenderingContext","viewLines","_viewLines","range","includeNewLines","linesVisibleRangesForRange","position","visibleRangeForPosition","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","Math","round","HorizontalPosition","VisibleRanges"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,0BAAb;AACI,sCAAYC,UAAZ,EAAwBC,YAAxB,EAAsC;AAAA;;AAClC,SAAKC,WAAL,GAAmBF,UAAnB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKE,WAAL,GAAmB,KAAKD,WAAL,CAAiBE,cAAjB,EAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKH,WAAL,CAAiBI,eAAjB,EAApB;AACA,SAAKC,YAAL,GAAoB,KAAKN,YAAL,CAAkBM,YAAtC;AACA,SAAKC,eAAL,GAAuB,KAAKP,YAAL,CAAkBO,eAAzC;;AACA,QAAMC,KAAK,GAAG,KAAKP,WAAL,CAAiBQ,kBAAjB,EAAd;;AACA,SAAKC,SAAL,GAAiBF,KAAK,CAACG,GAAvB;AACA,SAAKC,UAAL,GAAkBJ,KAAK,CAACK,IAAxB;AACA,SAAKC,aAAL,GAAqBN,KAAK,CAACO,KAA3B;AACA,SAAKC,cAAL,GAAsBR,KAAK,CAACS,MAA5B;AACH;;AAbL;AAAA;AAAA,kDAckCC,WAdlC,EAc+C;AACvC,aAAOA,WAAW,GAAG,KAAKR,SAA1B;AACH;AAhBL;AAAA;AAAA,mDAiBmCS,UAjBnC,EAiB+C;AACvC,aAAO,KAAKlB,WAAL,CAAiBmB,8BAAjB,CAAgDD,UAAhD,CAAP;AACH;AAnBL;AAAA;AAAA,+CAoB+B;AACvB,aAAO,KAAKnB,YAAL,CAAkBqB,wBAAlB,EAAP;AACH;AAtBL;;AAAA;AAAA;AAwBA,WAAaC,gBAAb;AAAA;;AAAA;;AACI,4BAAYvB,UAAZ,EAAwBC,YAAxB,EAAsCuB,SAAtC,EAAiD;AAAA;;AAAA;;AAC7C,8BAAMxB,UAAN,EAAkBC,YAAlB;AACA,UAAKwB,UAAL,GAAkBD,SAAlB;AAF6C;AAGhD;;AAJL;AAAA;AAAA,+CAK+BE,KAL/B,EAKsCC,eALtC,EAKuD;AAC/C,aAAO,KAAKF,UAAL,CAAgBG,0BAAhB,CAA2CF,KAA3C,EAAkDC,eAAlD,CAAP;AACH;AAPL;AAAA;AAAA,4CAQ4BE,QAR5B,EAQsC;AAC9B,aAAO,KAAKJ,UAAL,CAAgBK,uBAAhB,CAAwCD,QAAxC,CAAP;AACH;AAVL;;AAAA;AAAA,EAAsC9B,0BAAtC;AAYA,WAAagC,iBAAb,GACI,2BAAYC,mBAAZ,EAAiCZ,UAAjC,EAA6Ca,MAA7C,EAAqD;AAAA;;AACjD,OAAKD,mBAAL,GAA2BA,mBAA3B;AACA,OAAKZ,UAAL,GAAkBA,UAAlB;AACA,OAAKa,MAAL,GAAcA,MAAd;AACH,CALL;AAOA,WAAaC,eAAb;AACI,2BAAYpB,IAAZ,EAAkBE,KAAlB,EAAyB;AAAA;;AACrB,SAAKF,IAAL,GAAYqB,IAAI,CAACC,KAAL,CAAWtB,IAAX,CAAZ;AACA,SAAKE,KAAL,GAAamB,IAAI,CAACC,KAAL,CAAWpB,KAAX,CAAb;AACH;;AAJL;AAAA;AAAA,+BAKe;AACP,wBAAW,KAAKF,IAAhB,cAAwB,KAAKE,KAA7B;AACH;AAPL;;AAAA;AAAA;AASA,WAAaqB,kBAAb,GACI,4BAAYL,mBAAZ,EAAiClB,IAAjC,EAAuC;AAAA;;AACnC,OAAKkB,mBAAL,GAA2BA,mBAA3B;AACA,OAAKlB,IAAL,GAAYqB,IAAI,CAACC,KAAL,CAAWtB,IAAX,CAAZ;AACH,CAJL;AAMA,WAAawB,aAAb,GACI,uBAAYN,mBAAZ,EAAiCC,MAAjC,EAAyC;AAAA;;AACrC,OAAKD,mBAAL,GAA2BA,mBAA3B;AACA,OAAKC,MAAL,GAAcA,MAAd;AACH,CAJL","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class RestrictedRenderingContext {\r\n    constructor(viewLayout, viewportData) {\r\n        this._viewLayout = viewLayout;\r\n        this.viewportData = viewportData;\r\n        this.scrollWidth = this._viewLayout.getScrollWidth();\r\n        this.scrollHeight = this._viewLayout.getScrollHeight();\r\n        this.visibleRange = this.viewportData.visibleRange;\r\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\r\n        const vInfo = this._viewLayout.getCurrentViewport();\r\n        this.scrollTop = vInfo.top;\r\n        this.scrollLeft = vInfo.left;\r\n        this.viewportWidth = vInfo.width;\r\n        this.viewportHeight = vInfo.height;\r\n    }\r\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\r\n        return absoluteTop - this.scrollTop;\r\n    }\r\n    getVerticalOffsetForLineNumber(lineNumber) {\r\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\r\n    }\r\n    getDecorationsInViewport() {\r\n        return this.viewportData.getDecorationsInViewport();\r\n    }\r\n}\r\nexport class RenderingContext extends RestrictedRenderingContext {\r\n    constructor(viewLayout, viewportData, viewLines) {\r\n        super(viewLayout, viewportData);\r\n        this._viewLines = viewLines;\r\n    }\r\n    linesVisibleRangesForRange(range, includeNewLines) {\r\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\r\n    }\r\n    visibleRangeForPosition(position) {\r\n        return this._viewLines.visibleRangeForPosition(position);\r\n    }\r\n}\r\nexport class LineVisibleRanges {\r\n    constructor(outsideRenderedLine, lineNumber, ranges) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.lineNumber = lineNumber;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\nexport class HorizontalRange {\r\n    constructor(left, width) {\r\n        this.left = Math.round(left);\r\n        this.width = Math.round(width);\r\n    }\r\n    toString() {\r\n        return `[${this.left},${this.width}]`;\r\n    }\r\n}\r\nexport class HorizontalPosition {\r\n    constructor(outsideRenderedLine, left) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.left = Math.round(left);\r\n    }\r\n}\r\nexport class VisibleRanges {\r\n    constructor(outsideRenderedLine, ranges) {\r\n        this.outsideRenderedLine = outsideRenderedLine;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}