{"ast":null,"code":"import _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { userAgent, isMacintosh, isLinux, isWindows, isWeb } from '../../../base/common/platform.js';\n\nvar _userAgent = userAgent || '';\n\nvar STATIC_VALUES = new Map();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\nSTATIC_VALUES.set('isEdge', _userAgent.indexOf('Edg/') >= 0);\nSTATIC_VALUES.set('isFirefox', _userAgent.indexOf('Firefox') >= 0);\nSTATIC_VALUES.set('isChrome', _userAgent.indexOf('Chrome') >= 0);\nSTATIC_VALUES.set('isSafari', _userAgent.indexOf('Safari') >= 0);\nSTATIC_VALUES.set('isIPad', _userAgent.indexOf('iPad') >= 0);\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport var ContextKeyExpr = /*#__PURE__*/function () {\n  function ContextKeyExpr() {\n    _classCallCheck(this, ContextKeyExpr);\n  }\n\n  _createClass(ContextKeyExpr, null, [{\n    key: \"has\",\n    value: function has(key) {\n      return ContextKeyDefinedExpr.create(key);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(key, value) {\n      return ContextKeyEqualsExpr.create(key, value);\n    }\n  }, {\n    key: \"regex\",\n    value: function regex(key, value) {\n      return ContextKeyRegexExpr.create(key, value);\n    }\n  }, {\n    key: \"not\",\n    value: function not(key) {\n      return ContextKeyNotExpr.create(key);\n    }\n  }, {\n    key: \"and\",\n    value: function and() {\n      for (var _len = arguments.length, expr = new Array(_len), _key = 0; _key < _len; _key++) {\n        expr[_key] = arguments[_key];\n      }\n\n      return ContextKeyAndExpr.create(expr);\n    }\n  }, {\n    key: \"or\",\n    value: function or() {\n      for (var _len2 = arguments.length, expr = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        expr[_key2] = arguments[_key2];\n      }\n\n      return ContextKeyOrExpr.create(expr);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(serialized) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!serialized) {\n        return undefined;\n      }\n\n      return this._deserializeOrExpression(serialized, strict);\n    }\n  }, {\n    key: \"_deserializeOrExpression\",\n    value: function _deserializeOrExpression(serialized, strict) {\n      var _this = this;\n\n      var pieces = serialized.split('||');\n      return ContextKeyOrExpr.create(pieces.map(function (p) {\n        return _this._deserializeAndExpression(p, strict);\n      }));\n    }\n  }, {\n    key: \"_deserializeAndExpression\",\n    value: function _deserializeAndExpression(serialized, strict) {\n      var _this2 = this;\n\n      var pieces = serialized.split('&&');\n      return ContextKeyAndExpr.create(pieces.map(function (p) {\n        return _this2._deserializeOne(p, strict);\n      }));\n    }\n  }, {\n    key: \"_deserializeOne\",\n    value: function _deserializeOne(serializedOne, strict) {\n      serializedOne = serializedOne.trim();\n\n      if (serializedOne.indexOf('!=') >= 0) {\n        var pieces = serializedOne.split('!=');\n        return ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n      }\n\n      if (serializedOne.indexOf('==') >= 0) {\n        var _pieces = serializedOne.split('==');\n\n        return ContextKeyEqualsExpr.create(_pieces[0].trim(), this._deserializeValue(_pieces[1], strict));\n      }\n\n      if (serializedOne.indexOf('=~') >= 0) {\n        var _pieces2 = serializedOne.split('=~');\n\n        return ContextKeyRegexExpr.create(_pieces2[0].trim(), this._deserializeRegexValue(_pieces2[1], strict));\n      }\n\n      if (serializedOne.indexOf(' in ') >= 0) {\n        var _pieces3 = serializedOne.split(' in ');\n\n        return ContextKeyInExpr.create(_pieces3[0].trim(), _pieces3[1].trim());\n      }\n\n      if (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n        var _pieces4 = serializedOne.split('>=');\n\n        return ContextKeyGreaterEqualsExpr.create(_pieces4[0].trim(), _pieces4[1].trim());\n      }\n\n      if (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n        var _pieces5 = serializedOne.split('>');\n\n        return ContextKeyGreaterExpr.create(_pieces5[0].trim(), _pieces5[1].trim());\n      }\n\n      if (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n        var _pieces6 = serializedOne.split('<=');\n\n        return ContextKeySmallerEqualsExpr.create(_pieces6[0].trim(), _pieces6[1].trim());\n      }\n\n      if (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n        var _pieces7 = serializedOne.split('<');\n\n        return ContextKeySmallerExpr.create(_pieces7[0].trim(), _pieces7[1].trim());\n      }\n\n      if (/^\\!\\s*/.test(serializedOne)) {\n        return ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n      }\n\n      return ContextKeyDefinedExpr.create(serializedOne);\n    }\n  }, {\n    key: \"_deserializeValue\",\n    value: function _deserializeValue(serializedValue, strict) {\n      serializedValue = serializedValue.trim();\n\n      if (serializedValue === 'true') {\n        return true;\n      }\n\n      if (serializedValue === 'false') {\n        return false;\n      }\n\n      var m = /^'([^']*)'$/.exec(serializedValue);\n\n      if (m) {\n        return m[1].trim();\n      }\n\n      return serializedValue;\n    }\n  }, {\n    key: \"_deserializeRegexValue\",\n    value: function _deserializeRegexValue(serializedValue, strict) {\n      if (isFalsyOrWhitespace(serializedValue)) {\n        if (strict) {\n          throw new Error('missing regexp-value for =~-expression');\n        } else {\n          console.warn('missing regexp-value for =~-expression');\n        }\n\n        return null;\n      }\n\n      var start = serializedValue.indexOf('/');\n      var end = serializedValue.lastIndexOf('/');\n\n      if (start === end || start < 0\n      /* || to < 0 */\n      ) {\n          if (strict) {\n            throw new Error(\"bad regexp-value '\".concat(serializedValue, \"', missing /-enclosure\"));\n          } else {\n            console.warn(\"bad regexp-value '\".concat(serializedValue, \"', missing /-enclosure\"));\n          }\n\n          return null;\n        }\n\n      var value = serializedValue.slice(start + 1, end);\n      var caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\n      try {\n        return new RegExp(value, caseIgnoreFlag);\n      } catch (e) {\n        if (strict) {\n          throw new Error(\"bad regexp-value '\".concat(serializedValue, \"', parse error: \").concat(e));\n        } else {\n          console.warn(\"bad regexp-value '\".concat(serializedValue, \"', parse error: \").concat(e));\n        }\n\n        return null;\n      }\n    }\n  }]);\n\n  return ContextKeyExpr;\n}();\n\nfunction _cmp(a, b) {\n  return a.cmp(b);\n}\n\nexport var ContextKeyFalseExpr = /*#__PURE__*/function () {\n  function ContextKeyFalseExpr() {\n    _classCallCheck(this, ContextKeyFalseExpr);\n\n    this.type = 0\n    /* False */\n    ;\n  }\n\n  _createClass(ContextKeyFalseExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      return this.type - other.type;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return other.type === this.type;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return false;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return 'false';\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyTrueExpr.INSTANCE;\n    }\n  }]);\n\n  return ContextKeyFalseExpr;\n}();\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport var ContextKeyTrueExpr = /*#__PURE__*/function () {\n  function ContextKeyTrueExpr() {\n    _classCallCheck(this, ContextKeyTrueExpr);\n\n    this.type = 1\n    /* True */\n    ;\n  }\n\n  _createClass(ContextKeyTrueExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      return this.type - other.type;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return other.type === this.type;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return true;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return 'true';\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyFalseExpr.INSTANCE;\n    }\n  }]);\n\n  return ContextKeyTrueExpr;\n}();\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport var ContextKeyDefinedExpr = /*#__PURE__*/function () {\n  function ContextKeyDefinedExpr(key) {\n    _classCallCheck(this, ContextKeyDefinedExpr);\n\n    this.key = key;\n    this.type = 2\n    /* Defined */\n    ;\n  }\n\n  _createClass(ContextKeyDefinedExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp1(this.key, other.key);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return !!context.getValue(this.key);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return this.key;\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyNotExpr.create(this.key);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key) {\n      var staticValue = STATIC_VALUES.get(key);\n\n      if (typeof staticValue === 'boolean') {\n        return staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n      }\n\n      return new ContextKeyDefinedExpr(key);\n    }\n  }]);\n\n  return ContextKeyDefinedExpr;\n}();\nexport var ContextKeyEqualsExpr = /*#__PURE__*/function () {\n  function ContextKeyEqualsExpr(key, value) {\n    _classCallCheck(this, ContextKeyEqualsExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 4\n    /* Equals */\n    ;\n  }\n\n  _createClass(ContextKeyEqualsExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      // Intentional ==\n      // eslint-disable-next-line eqeqeq\n      return context.getValue(this.key) == this.value;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" == '\").concat(this.value, \"'\");\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyNotEqualsExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      if (typeof value === 'boolean') {\n        return value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key);\n      }\n\n      var staticValue = STATIC_VALUES.get(key);\n\n      if (typeof staticValue === 'boolean') {\n        var trueValue = staticValue ? 'true' : 'false';\n        return value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n      }\n\n      return new ContextKeyEqualsExpr(key, value);\n    }\n  }]);\n\n  return ContextKeyEqualsExpr;\n}();\nexport var ContextKeyInExpr = /*#__PURE__*/function () {\n  function ContextKeyInExpr(key, valueKey) {\n    _classCallCheck(this, ContextKeyInExpr);\n\n    this.key = key;\n    this.valueKey = valueKey;\n    this.type = 10\n    /* In */\n    ;\n  }\n\n  _createClass(ContextKeyInExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.valueKey === other.valueKey;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      var source = context.getValue(this.valueKey);\n      var item = context.getValue(this.key);\n\n      if (Array.isArray(source)) {\n        return source.indexOf(item) >= 0;\n      }\n\n      if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n        return hasOwnProperty.call(source, item);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" in '\").concat(this.valueKey, \"'\");\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key, this.valueKey];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyNotInExpr.create(this);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, valueKey) {\n      return new ContextKeyInExpr(key, valueKey);\n    }\n  }]);\n\n  return ContextKeyInExpr;\n}();\nexport var ContextKeyNotInExpr = /*#__PURE__*/function () {\n  function ContextKeyNotInExpr(_actual) {\n    _classCallCheck(this, ContextKeyNotInExpr);\n\n    this._actual = _actual;\n    this.type = 11\n    /* NotIn */\n    ; //\n  }\n\n  _createClass(ContextKeyNotInExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return this._actual.cmp(other._actual);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this._actual.equals(other._actual);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return !this._actual.evaluate(context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._actual.keys();\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this._actual;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(actual) {\n      return new ContextKeyNotInExpr(actual);\n    }\n  }]);\n\n  return ContextKeyNotInExpr;\n}();\nexport var ContextKeyNotEqualsExpr = /*#__PURE__*/function () {\n  function ContextKeyNotEqualsExpr(key, value) {\n    _classCallCheck(this, ContextKeyNotEqualsExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 5\n    /* NotEquals */\n    ;\n  }\n\n  _createClass(ContextKeyNotEqualsExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      // Intentional !=\n      // eslint-disable-next-line eqeqeq\n      return context.getValue(this.key) != this.value;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" != '\").concat(this.value, \"'\");\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyEqualsExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      if (typeof value === 'boolean') {\n        if (value) {\n          return ContextKeyNotExpr.create(key);\n        }\n\n        return ContextKeyDefinedExpr.create(key);\n      }\n\n      var staticValue = STATIC_VALUES.get(key);\n\n      if (typeof staticValue === 'boolean') {\n        var falseValue = staticValue ? 'true' : 'false';\n        return value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE;\n      }\n\n      return new ContextKeyNotEqualsExpr(key, value);\n    }\n  }]);\n\n  return ContextKeyNotEqualsExpr;\n}();\nexport var ContextKeyNotExpr = /*#__PURE__*/function () {\n  function ContextKeyNotExpr(key) {\n    _classCallCheck(this, ContextKeyNotExpr);\n\n    this.key = key;\n    this.type = 3\n    /* Not */\n    ;\n  }\n\n  _createClass(ContextKeyNotExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp1(this.key, other.key);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return !context.getValue(this.key);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"!\".concat(this.key);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyDefinedExpr.create(this.key);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key) {\n      var staticValue = STATIC_VALUES.get(key);\n\n      if (typeof staticValue === 'boolean') {\n        return staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE;\n      }\n\n      return new ContextKeyNotExpr(key);\n    }\n  }]);\n\n  return ContextKeyNotExpr;\n}();\nexport var ContextKeyGreaterExpr = /*#__PURE__*/function () {\n  function ContextKeyGreaterExpr(key, value) {\n    _classCallCheck(this, ContextKeyGreaterExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 12\n    /* Greater */\n    ;\n  }\n\n  _createClass(ContextKeyGreaterExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return parseFloat(context.getValue(this.key)) > parseFloat(this.value);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" > \").concat(this.value);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeySmallerEqualsExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      return new ContextKeyGreaterExpr(key, value);\n    }\n  }]);\n\n  return ContextKeyGreaterExpr;\n}();\nexport var ContextKeyGreaterEqualsExpr = /*#__PURE__*/function () {\n  function ContextKeyGreaterEqualsExpr(key, value) {\n    _classCallCheck(this, ContextKeyGreaterEqualsExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 13\n    /* GreaterEquals */\n    ;\n  }\n\n  _createClass(ContextKeyGreaterEqualsExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return parseFloat(context.getValue(this.key)) >= parseFloat(this.value);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" >= \").concat(this.value);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeySmallerExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      return new ContextKeyGreaterEqualsExpr(key, value);\n    }\n  }]);\n\n  return ContextKeyGreaterEqualsExpr;\n}();\nexport var ContextKeySmallerExpr = /*#__PURE__*/function () {\n  function ContextKeySmallerExpr(key, value) {\n    _classCallCheck(this, ContextKeySmallerExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 14\n    /* Smaller */\n    ;\n  }\n\n  _createClass(ContextKeySmallerExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return parseFloat(context.getValue(this.key)) < parseFloat(this.value);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" < \").concat(this.value);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyGreaterEqualsExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      return new ContextKeySmallerExpr(key, value);\n    }\n  }]);\n\n  return ContextKeySmallerExpr;\n}();\nexport var ContextKeySmallerEqualsExpr = /*#__PURE__*/function () {\n  function ContextKeySmallerEqualsExpr(key, value) {\n    _classCallCheck(this, ContextKeySmallerEqualsExpr);\n\n    this.key = key;\n    this.value = value;\n    this.type = 15\n    /* SmallerEquals */\n    ;\n  }\n\n  _createClass(ContextKeySmallerEqualsExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return cmp2(this.key, this.value, other.key, other.value);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this.key === other.key && this.value === other.value;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return parseFloat(context.getValue(this.key)) <= parseFloat(this.value);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return \"\".concat(this.key, \" <= \").concat(this.value);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyGreaterExpr.create(this.key, this.value);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, value) {\n      return new ContextKeySmallerEqualsExpr(key, value);\n    }\n  }]);\n\n  return ContextKeySmallerEqualsExpr;\n}();\nexport var ContextKeyRegexExpr = /*#__PURE__*/function () {\n  function ContextKeyRegexExpr(key, regexp) {\n    _classCallCheck(this, ContextKeyRegexExpr);\n\n    this.key = key;\n    this.regexp = regexp;\n    this.type = 7\n    /* Regex */\n    ; //\n  }\n\n  _createClass(ContextKeyRegexExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      if (this.key < other.key) {\n        return -1;\n      }\n\n      if (this.key > other.key) {\n        return 1;\n      }\n\n      var thisSource = this.regexp ? this.regexp.source : '';\n      var otherSource = other.regexp ? other.regexp.source : '';\n\n      if (thisSource < otherSource) {\n        return -1;\n      }\n\n      if (thisSource > otherSource) {\n        return 1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        var thisSource = this.regexp ? this.regexp.source : '';\n        var otherSource = other.regexp ? other.regexp.source : '';\n        return this.key === other.key && thisSource === otherSource;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      var value = context.getValue(this.key);\n      return this.regexp ? this.regexp.test(value) : false;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      var value = this.regexp ? \"/\".concat(this.regexp.source, \"/\").concat(this.regexp.ignoreCase ? 'i' : '') : '/invalid/';\n      return \"\".concat(this.key, \" =~ \").concat(value);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return [this.key];\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return ContextKeyNotRegexExpr.create(this);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(key, regexp) {\n      return new ContextKeyRegexExpr(key, regexp);\n    }\n  }]);\n\n  return ContextKeyRegexExpr;\n}();\nexport var ContextKeyNotRegexExpr = /*#__PURE__*/function () {\n  function ContextKeyNotRegexExpr(_actual) {\n    _classCallCheck(this, ContextKeyNotRegexExpr);\n\n    this._actual = _actual;\n    this.type = 8\n    /* NotRegex */\n    ; //\n  }\n\n  _createClass(ContextKeyNotRegexExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      return this._actual.cmp(other._actual);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        return this._actual.equals(other._actual);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      return !this._actual.evaluate(context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._actual.keys();\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this._actual;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(actual) {\n      return new ContextKeyNotRegexExpr(actual);\n    }\n  }]);\n\n  return ContextKeyNotRegexExpr;\n}();\nexport var ContextKeyAndExpr = /*#__PURE__*/function () {\n  function ContextKeyAndExpr(expr) {\n    _classCallCheck(this, ContextKeyAndExpr);\n\n    this.expr = expr;\n    this.type = 6\n    /* And */\n    ;\n  }\n\n  _createClass(ContextKeyAndExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      if (this.expr.length < other.expr.length) {\n        return -1;\n      }\n\n      if (this.expr.length > other.expr.length) {\n        return 1;\n      }\n\n      for (var i = 0, len = this.expr.length; i < len; i++) {\n        var r = _cmp(this.expr[i], other.expr[i]);\n\n        if (r !== 0) {\n          return r;\n        }\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        if (this.expr.length !== other.expr.length) {\n          return false;\n        }\n\n        for (var i = 0, len = this.expr.length; i < len; i++) {\n          if (!this.expr[i].equals(other.expr[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      for (var i = 0, len = this.expr.length; i < len; i++) {\n        if (!this.expr[i].evaluate(context)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return this.expr.map(function (e) {\n        return e.serialize();\n      }).join(' && ');\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var result = [];\n\n      var _iterator = _createForOfIteratorHelper(this.expr),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var expr = _step.value;\n          result.push.apply(result, _toConsumableArray(expr.keys()));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var result = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.expr),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var expr = _step2.value;\n          result.push(expr.negate());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return ContextKeyOrExpr.create(result);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(_expr) {\n      return ContextKeyAndExpr._normalizeArr(_expr);\n    }\n  }, {\n    key: \"_normalizeArr\",\n    value: function _normalizeArr(arr) {\n      var expr = [];\n      var hasTrue = false;\n\n      var _iterator3 = _createForOfIteratorHelper(arr),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n\n          if (!e) {\n            continue;\n          }\n\n          if (e.type === 1\n          /* True */\n          ) {\n              // anything && true ==> anything\n              hasTrue = true;\n              continue;\n            }\n\n          if (e.type === 0\n          /* False */\n          ) {\n              // anything && false ==> false\n              return ContextKeyFalseExpr.INSTANCE;\n            }\n\n          if (e.type === 6\n          /* And */\n          ) {\n              expr.push.apply(expr, _toConsumableArray(e.expr));\n              continue;\n            }\n\n          expr.push(e);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (expr.length === 0 && hasTrue) {\n        return ContextKeyTrueExpr.INSTANCE;\n      }\n\n      if (expr.length === 0) {\n        return undefined;\n      }\n\n      if (expr.length === 1) {\n        return expr[0];\n      }\n\n      expr.sort(_cmp); // We must distribute any OR expression because we don't support parens\n      // OR extensions will be at the end (due to sorting rules)\n\n      var _loop = function _loop() {\n        var lastElement = expr[expr.length - 1];\n\n        if (lastElement.type !== 9\n        /* Or */\n        ) {\n            return \"break\";\n          } // pop the last element\n\n\n        expr.pop(); // pop the second to last element\n\n        var secondToLastElement = expr.pop(); // distribute `lastElement` over `secondToLastElement`\n\n        var resultElement = ContextKeyOrExpr.create(lastElement.expr.map(function (el) {\n          return ContextKeyAndExpr.create([el, secondToLastElement]);\n        }));\n\n        if (resultElement) {\n          expr.push(resultElement);\n          expr.sort(_cmp);\n        }\n      };\n\n      while (expr.length > 1) {\n        var _ret = _loop();\n\n        if (_ret === \"break\") break;\n      }\n\n      if (expr.length === 1) {\n        return expr[0];\n      }\n\n      return new ContextKeyAndExpr(expr);\n    }\n  }]);\n\n  return ContextKeyAndExpr;\n}();\nexport var ContextKeyOrExpr = /*#__PURE__*/function () {\n  function ContextKeyOrExpr(expr) {\n    _classCallCheck(this, ContextKeyOrExpr);\n\n    this.expr = expr;\n    this.type = 9\n    /* Or */\n    ;\n  }\n\n  _createClass(ContextKeyOrExpr, [{\n    key: \"cmp\",\n    value: function cmp(other) {\n      if (other.type !== this.type) {\n        return this.type - other.type;\n      }\n\n      if (this.expr.length < other.expr.length) {\n        return -1;\n      }\n\n      if (this.expr.length > other.expr.length) {\n        return 1;\n      }\n\n      for (var i = 0, len = this.expr.length; i < len; i++) {\n        var r = _cmp(this.expr[i], other.expr[i]);\n\n        if (r !== 0) {\n          return r;\n        }\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (other.type === this.type) {\n        if (this.expr.length !== other.expr.length) {\n          return false;\n        }\n\n        for (var i = 0, len = this.expr.length; i < len; i++) {\n          if (!this.expr[i].equals(other.expr[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(context) {\n      for (var i = 0, len = this.expr.length; i < len; i++) {\n        if (this.expr[i].evaluate(context)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return this.expr.map(function (e) {\n        return e.serialize();\n      }).join(' || ');\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var result = [];\n\n      var _iterator4 = _createForOfIteratorHelper(this.expr),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var expr = _step4.value;\n          result.push.apply(result, _toConsumableArray(expr.keys()));\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var result = [];\n\n      var _iterator5 = _createForOfIteratorHelper(this.expr),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var expr = _step5.value;\n          result.push(expr.negate());\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var terminals = function terminals(node) {\n        if (node.type === 9\n        /* Or */\n        ) {\n            return node.expr;\n          }\n\n        return [node];\n      }; // We don't support parens, so here we distribute the AND over the OR terminals\n      // We always take the first 2 AND pairs and distribute them\n\n\n      while (result.length > 1) {\n        var LEFT = result.shift();\n        var RIGHT = result.shift();\n        var all = [];\n\n        var _iterator6 = _createForOfIteratorHelper(terminals(LEFT)),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var left = _step6.value;\n\n            var _iterator7 = _createForOfIteratorHelper(terminals(RIGHT)),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var right = _step7.value;\n                all.push(ContextKeyExpr.and(left, right));\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        result.unshift(ContextKeyExpr.or.apply(ContextKeyExpr, all));\n      }\n\n      return result[0];\n    }\n  }], [{\n    key: \"create\",\n    value: function create(_expr) {\n      var expr = ContextKeyOrExpr._normalizeArr(_expr);\n\n      if (expr.length === 0) {\n        return undefined;\n      }\n\n      if (expr.length === 1) {\n        return expr[0];\n      }\n\n      return new ContextKeyOrExpr(expr);\n    }\n  }, {\n    key: \"_normalizeArr\",\n    value: function _normalizeArr(arr) {\n      var expr = [];\n      var hasFalse = false;\n\n      if (arr) {\n        for (var i = 0, len = arr.length; i < len; i++) {\n          var e = arr[i];\n\n          if (!e) {\n            continue;\n          }\n\n          if (e.type === 0\n          /* False */\n          ) {\n              // anything || false ==> anything\n              hasFalse = true;\n              continue;\n            }\n\n          if (e.type === 1\n          /* True */\n          ) {\n              // anything || true ==> true\n              return [ContextKeyTrueExpr.INSTANCE];\n            }\n\n          if (e.type === 9\n          /* Or */\n          ) {\n              expr = expr.concat(e.expr);\n              continue;\n            }\n\n          expr.push(e);\n        }\n\n        if (expr.length === 0 && hasFalse) {\n          return [ContextKeyFalseExpr.INSTANCE];\n        }\n\n        expr.sort(_cmp);\n      }\n\n      return expr;\n    }\n  }]);\n\n  return ContextKeyOrExpr;\n}();\nexport var RawContextKey = /*#__PURE__*/function (_ContextKeyDefinedExp) {\n  _inherits(RawContextKey, _ContextKeyDefinedExp);\n\n  var _super = _createSuper(RawContextKey);\n\n  function RawContextKey(key, defaultValue) {\n    var _this3;\n\n    _classCallCheck(this, RawContextKey);\n\n    _this3 = _super.call(this, key);\n    _this3._defaultValue = defaultValue;\n    return _this3;\n  }\n\n  _createClass(RawContextKey, [{\n    key: \"bindTo\",\n    value: function bindTo(target) {\n      return target.createKey(this.key, this._defaultValue);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(target) {\n      return target.getContextKeyValue(this.key);\n    }\n  }, {\n    key: \"toNegated\",\n    value: function toNegated() {\n      return ContextKeyExpr.not(this.key);\n    }\n  }, {\n    key: \"isEqualTo\",\n    value: function isEqualTo(value) {\n      return ContextKeyExpr.equals(this.key, value);\n    }\n  }]);\n\n  return RawContextKey;\n}(ContextKeyDefinedExpr);\nexport var IContextKeyService = createDecorator('contextKeyService');\nexport var SET_CONTEXT_COMMAND_ID = 'setContext';\n\nfunction cmp1(key1, key2) {\n  if (key1 < key2) {\n    return -1;\n  }\n\n  if (key1 > key2) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction cmp2(key1, value1, key2, value2) {\n  if (key1 < key2) {\n    return -1;\n  }\n\n  if (key1 > key2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  return 0;\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js"],"names":["isFalsyOrWhitespace","createDecorator","userAgent","isMacintosh","isLinux","isWindows","isWeb","_userAgent","STATIC_VALUES","Map","set","indexOf","hasOwnProperty","Object","prototype","ContextKeyExpr","key","ContextKeyDefinedExpr","create","value","ContextKeyEqualsExpr","ContextKeyRegexExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","strict","undefined","_deserializeOrExpression","pieces","split","map","p","_deserializeAndExpression","_deserializeOne","serializedOne","trim","ContextKeyNotEqualsExpr","_deserializeValue","_deserializeRegexValue","ContextKeyInExpr","test","ContextKeyGreaterEqualsExpr","ContextKeyGreaterExpr","ContextKeySmallerEqualsExpr","ContextKeySmallerExpr","substr","serializedValue","m","exec","Error","console","warn","start","end","lastIndexOf","slice","caseIgnoreFlag","RegExp","e","cmp","a","b","ContextKeyFalseExpr","type","other","context","ContextKeyTrueExpr","INSTANCE","cmp1","getValue","staticValue","get","cmp2","trueValue","valueKey","source","item","Array","isArray","call","ContextKeyNotInExpr","_actual","equals","evaluate","keys","actual","falseValue","parseFloat","regexp","thisSource","otherSource","ignoreCase","ContextKeyNotRegexExpr","length","i","len","r","serialize","join","result","push","negate","_expr","_normalizeArr","arr","hasTrue","sort","lastElement","pop","secondToLastElement","resultElement","el","terminals","node","LEFT","shift","RIGHT","all","left","right","and","unshift","or","hasFalse","concat","RawContextKey","defaultValue","_defaultValue","target","createKey","getContextKeyValue","not","IContextKeyService","SET_CONTEXT_COMMAND_ID","key1","key2","value1","value2"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,mBAAT,QAAoC,iCAApC;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,EAA0CC,SAA1C,EAAqDC,KAArD,QAAkE,kCAAlE;;AACA,IAAIC,UAAU,GAAGL,SAAS,IAAI,EAA9B;;AACA,IAAMM,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACAD,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2B,KAA3B;AACAF,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,IAA1B;AACAF,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2BP,WAA3B;AACAK,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6BN,OAA7B;AACAI,aAAa,CAACE,GAAd,CAAkB,WAAlB,EAA+BL,SAA/B;AACAG,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2BJ,KAA3B;AACAE,aAAa,CAACE,GAAd,CAAkB,aAAlB,EAAiCP,WAAW,IAAI,CAACG,KAAjD;AACAE,aAAa,CAACE,GAAd,CAAkB,QAAlB,EAA4BH,UAAU,CAACI,OAAX,CAAmB,MAAnB,KAA8B,CAA1D;AACAH,aAAa,CAACE,GAAd,CAAkB,WAAlB,EAA+BH,UAAU,CAACI,OAAX,CAAmB,SAAnB,KAAiC,CAAhE;AACAH,aAAa,CAACE,GAAd,CAAkB,UAAlB,EAA8BH,UAAU,CAACI,OAAX,CAAmB,QAAnB,KAAgC,CAA9D;AACAH,aAAa,CAACE,GAAd,CAAkB,UAAlB,EAA8BH,UAAU,CAACI,OAAX,CAAmB,QAAnB,KAAgC,CAA9D;AACAH,aAAa,CAACE,GAAd,CAAkB,QAAlB,EAA4BH,UAAU,CAACI,OAAX,CAAmB,MAAnB,KAA8B,CAA1D;AACA,IAAMC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AACA,WAAaG,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wBACeC,GADf,EACoB;AACZ,aAAOC,qBAAqB,CAACC,MAAtB,CAA6BF,GAA7B,CAAP;AACH;AAHL;AAAA;AAAA,2BAIkBA,GAJlB,EAIuBG,KAJvB,EAI8B;AACtB,aAAOC,oBAAoB,CAACF,MAArB,CAA4BF,GAA5B,EAAiCG,KAAjC,CAAP;AACH;AANL;AAAA;AAAA,0BAOiBH,GAPjB,EAOsBG,KAPtB,EAO6B;AACrB,aAAOE,mBAAmB,CAACH,MAApB,CAA2BF,GAA3B,EAAgCG,KAAhC,CAAP;AACH;AATL;AAAA;AAAA,wBAUeH,GAVf,EAUoB;AACZ,aAAOM,iBAAiB,CAACJ,MAAlB,CAAyBF,GAAzB,CAAP;AACH;AAZL;AAAA;AAAA,0BAawB;AAAA,wCAANO,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAChB,aAAOC,iBAAiB,CAACN,MAAlB,CAAyBK,IAAzB,CAAP;AACH;AAfL;AAAA;AAAA,yBAgBuB;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACf,aAAOE,gBAAgB,CAACP,MAAjB,CAAwBK,IAAxB,CAAP;AACH;AAlBL;AAAA;AAAA,gCAmBuBG,UAnBvB,EAmBmD;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;;AAC3C,UAAI,CAACD,UAAL,EAAiB;AACb,eAAOE,SAAP;AACH;;AACD,aAAO,KAAKC,wBAAL,CAA8BH,UAA9B,EAA0CC,MAA1C,CAAP;AACH;AAxBL;AAAA;AAAA,6CAyBoCD,UAzBpC,EAyBgDC,MAzBhD,EAyBwD;AAAA;;AAChD,UAAIG,MAAM,GAAGJ,UAAU,CAACK,KAAX,CAAiB,IAAjB,CAAb;AACA,aAAON,gBAAgB,CAACP,MAAjB,CAAwBY,MAAM,CAACE,GAAP,CAAW,UAAAC,CAAC;AAAA,eAAI,KAAI,CAACC,yBAAL,CAA+BD,CAA/B,EAAkCN,MAAlC,CAAJ;AAAA,OAAZ,CAAxB,CAAP;AACH;AA5BL;AAAA;AAAA,8CA6BqCD,UA7BrC,EA6BiDC,MA7BjD,EA6ByD;AAAA;;AACjD,UAAIG,MAAM,GAAGJ,UAAU,CAACK,KAAX,CAAiB,IAAjB,CAAb;AACA,aAAOP,iBAAiB,CAACN,MAAlB,CAAyBY,MAAM,CAACE,GAAP,CAAW,UAAAC,CAAC;AAAA,eAAI,MAAI,CAACE,eAAL,CAAqBF,CAArB,EAAwBN,MAAxB,CAAJ;AAAA,OAAZ,CAAzB,CAAP;AACH;AAhCL;AAAA;AAAA,oCAiC2BS,aAjC3B,EAiC0CT,MAjC1C,EAiCkD;AAC1CS,MAAAA,aAAa,GAAGA,aAAa,CAACC,IAAd,EAAhB;;AACA,UAAID,aAAa,CAACzB,OAAd,CAAsB,IAAtB,KAA+B,CAAnC,EAAsC;AAClC,YAAImB,MAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,IAApB,CAAb;AACA,eAAOO,uBAAuB,CAACpB,MAAxB,CAA+BY,MAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA/B,EAAiD,KAAKE,iBAAL,CAAuBT,MAAM,CAAC,CAAD,CAA7B,EAAkCH,MAAlC,CAAjD,CAAP;AACH;;AACD,UAAIS,aAAa,CAACzB,OAAd,CAAsB,IAAtB,KAA+B,CAAnC,EAAsC;AAClC,YAAImB,OAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,IAApB,CAAb;;AACA,eAAOX,oBAAoB,CAACF,MAArB,CAA4BY,OAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA5B,EAA8C,KAAKE,iBAAL,CAAuBT,OAAM,CAAC,CAAD,CAA7B,EAAkCH,MAAlC,CAA9C,CAAP;AACH;;AACD,UAAIS,aAAa,CAACzB,OAAd,CAAsB,IAAtB,KAA+B,CAAnC,EAAsC;AAClC,YAAImB,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,IAApB,CAAb;;AACA,eAAOV,mBAAmB,CAACH,MAApB,CAA2BY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA3B,EAA6C,KAAKG,sBAAL,CAA4BV,QAAM,CAAC,CAAD,CAAlC,EAAuCH,MAAvC,CAA7C,CAAP;AACH;;AACD,UAAIS,aAAa,CAACzB,OAAd,CAAsB,MAAtB,KAAiC,CAArC,EAAwC;AACpC,YAAImB,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,MAApB,CAAb;;AACA,eAAOU,gBAAgB,CAACvB,MAAjB,CAAwBY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAAxB,EAA0CP,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA1C,CAAP;AACH;;AACD,UAAI,qBAAqBK,IAArB,CAA0BN,aAA1B,CAAJ,EAA8C;AAC1C,YAAMN,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,IAApB,CAAf;;AACA,eAAOY,2BAA2B,CAACzB,MAA5B,CAAmCY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAAnC,EAAqDP,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAArD,CAAP;AACH;;AACD,UAAI,oBAAoBK,IAApB,CAAyBN,aAAzB,CAAJ,EAA6C;AACzC,YAAMN,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,GAApB,CAAf;;AACA,eAAOa,qBAAqB,CAAC1B,MAAtB,CAA6BY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA7B,EAA+CP,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA/C,CAAP;AACH;;AACD,UAAI,qBAAqBK,IAArB,CAA0BN,aAA1B,CAAJ,EAA8C;AAC1C,YAAMN,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,IAApB,CAAf;;AACA,eAAOc,2BAA2B,CAAC3B,MAA5B,CAAmCY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAAnC,EAAqDP,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAArD,CAAP;AACH;;AACD,UAAI,oBAAoBK,IAApB,CAAyBN,aAAzB,CAAJ,EAA6C;AACzC,YAAMN,QAAM,GAAGM,aAAa,CAACL,KAAd,CAAoB,GAApB,CAAf;;AACA,eAAOe,qBAAqB,CAAC5B,MAAtB,CAA6BY,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA7B,EAA+CP,QAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,EAA/C,CAAP;AACH;;AACD,UAAI,SAASK,IAAT,CAAcN,aAAd,CAAJ,EAAkC;AAC9B,eAAOd,iBAAiB,CAACJ,MAAlB,CAAyBkB,aAAa,CAACW,MAAd,CAAqB,CAArB,EAAwBV,IAAxB,EAAzB,CAAP;AACH;;AACD,aAAOpB,qBAAqB,CAACC,MAAtB,CAA6BkB,aAA7B,CAAP;AACH;AAvEL;AAAA;AAAA,sCAwE6BY,eAxE7B,EAwE8CrB,MAxE9C,EAwEsD;AAC9CqB,MAAAA,eAAe,GAAGA,eAAe,CAACX,IAAhB,EAAlB;;AACA,UAAIW,eAAe,KAAK,MAAxB,EAAgC;AAC5B,eAAO,IAAP;AACH;;AACD,UAAIA,eAAe,KAAK,OAAxB,EAAiC;AAC7B,eAAO,KAAP;AACH;;AACD,UAAIC,CAAC,GAAG,cAAcC,IAAd,CAAmBF,eAAnB,CAAR;;AACA,UAAIC,CAAJ,EAAO;AACH,eAAOA,CAAC,CAAC,CAAD,CAAD,CAAKZ,IAAL,EAAP;AACH;;AACD,aAAOW,eAAP;AACH;AArFL;AAAA;AAAA,2CAsFkCA,eAtFlC,EAsFmDrB,MAtFnD,EAsF2D;AACnD,UAAI3B,mBAAmB,CAACgD,eAAD,CAAvB,EAA0C;AACtC,YAAIrB,MAAJ,EAAY;AACR,gBAAM,IAAIwB,KAAJ,CAAU,wCAAV,CAAN;AACH,SAFD,MAGK;AACDC,UAAAA,OAAO,CAACC,IAAR,CAAa,wCAAb;AACH;;AACD,eAAO,IAAP;AACH;;AACD,UAAIC,KAAK,GAAGN,eAAe,CAACrC,OAAhB,CAAwB,GAAxB,CAAZ;AACA,UAAI4C,GAAG,GAAGP,eAAe,CAACQ,WAAhB,CAA4B,GAA5B,CAAV;;AACA,UAAIF,KAAK,KAAKC,GAAV,IAAiBD,KAAK,GAAG;AAAE;AAA/B,QAAgD;AAC5C,cAAI3B,MAAJ,EAAY;AACR,kBAAM,IAAIwB,KAAJ,6BAA+BH,eAA/B,4BAAN;AACH,WAFD,MAGK;AACDI,YAAAA,OAAO,CAACC,IAAR,6BAAkCL,eAAlC;AACH;;AACD,iBAAO,IAAP;AACH;;AACD,UAAI7B,KAAK,GAAG6B,eAAe,CAACS,KAAhB,CAAsBH,KAAK,GAAG,CAA9B,EAAiCC,GAAjC,CAAZ;AACA,UAAIG,cAAc,GAAGV,eAAe,CAACO,GAAG,GAAG,CAAP,CAAf,KAA6B,GAA7B,GAAmC,GAAnC,GAAyC,EAA9D;;AACA,UAAI;AACA,eAAO,IAAII,MAAJ,CAAWxC,KAAX,EAAkBuC,cAAlB,CAAP;AACH,OAFD,CAGA,OAAOE,CAAP,EAAU;AACN,YAAIjC,MAAJ,EAAY;AACR,gBAAM,IAAIwB,KAAJ,6BAA+BH,eAA/B,6BAAiEY,CAAjE,EAAN;AACH,SAFD,MAGK;AACDR,UAAAA,OAAO,CAACC,IAAR,6BAAkCL,eAAlC,6BAAoEY,CAApE;AACH;;AACD,eAAO,IAAP;AACH;AACJ;AAzHL;;AAAA;AAAA;;AA2HA,SAASC,IAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACf,SAAOD,CAAC,CAACD,GAAF,CAAME,CAAN,CAAP;AACH;;AACD,WAAaC,mBAAb;AACI,iCAAc;AAAA;;AACV,SAAKC,IAAL,GAAY;AAAE;AAAd;AACH;;AAHL;AAAA;AAAA,wBAIQC,KAJR,EAIe;AACP,aAAO,KAAKD,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;AANL;AAAA;AAAA,2BAOWC,KAPX,EAOkB;AACV,aAAQA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAA5B;AACH;AATL;AAAA;AAAA,6BAUaE,OAVb,EAUsB;AACd,aAAO,KAAP;AACH;AAZL;AAAA;AAAA,gCAagB;AACR,aAAO,OAAP;AACH;AAfL;AAAA;AAAA,2BAgBW;AACH,aAAO,EAAP;AACH;AAlBL;AAAA;AAAA,6BAmBa;AACL,aAAOC,kBAAkB,CAACC,QAA1B;AACH;AArBL;;AAAA;AAAA;AAuBAL,mBAAmB,CAACK,QAApB,GAA+B,IAAIL,mBAAJ,EAA/B;AACA,WAAaI,kBAAb;AACI,gCAAc;AAAA;;AACV,SAAKH,IAAL,GAAY;AAAE;AAAd;AACH;;AAHL;AAAA;AAAA,wBAIQC,KAJR,EAIe;AACP,aAAO,KAAKD,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;AANL;AAAA;AAAA,2BAOWC,KAPX,EAOkB;AACV,aAAQA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAA5B;AACH;AATL;AAAA;AAAA,6BAUaE,OAVb,EAUsB;AACd,aAAO,IAAP;AACH;AAZL;AAAA;AAAA,gCAagB;AACR,aAAO,MAAP;AACH;AAfL;AAAA;AAAA,2BAgBW;AACH,aAAO,EAAP;AACH;AAlBL;AAAA;AAAA,6BAmBa;AACL,aAAOH,mBAAmB,CAACK,QAA3B;AACH;AArBL;;AAAA;AAAA;AAuBAD,kBAAkB,CAACC,QAAnB,GAA8B,IAAID,kBAAJ,EAA9B;AACA,WAAanD,qBAAb;AACI,iCAAYD,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKiD,IAAL,GAAY;AAAE;AAAd;AACH;;AAJL;AAAA;AAAA,wBAYQC,KAZR,EAYe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOK,IAAI,CAAC,KAAKtD,GAAN,EAAWkD,KAAK,CAAClD,GAAjB,CAAX;AACH;AAjBL;AAAA;AAAA,2BAkBWkD,KAlBX,EAkBkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAA3B;AACH;;AACD,aAAO,KAAP;AACH;AAvBL;AAAA;AAAA,6BAwBamD,OAxBb,EAwBsB;AACd,aAAQ,CAAC,CAACA,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAV;AACH;AA1BL;AAAA;AAAA,gCA2BgB;AACR,aAAO,KAAKA,GAAZ;AACH;AA7BL;AAAA;AAAA,2BA8BW;AACH,aAAO,CAAC,KAAKA,GAAN,CAAP;AACH;AAhCL;AAAA;AAAA,6BAiCa;AACL,aAAOM,iBAAiB,CAACJ,MAAlB,CAAyB,KAAKF,GAA9B,CAAP;AACH;AAnCL;AAAA;AAAA,2BAKkBA,GALlB,EAKuB;AACf,UAAMwD,WAAW,GAAGhE,aAAa,CAACiE,GAAd,CAAkBzD,GAAlB,CAApB;;AACA,UAAI,OAAOwD,WAAP,KAAuB,SAA3B,EAAsC;AAClC,eAAOA,WAAW,GAAGJ,kBAAkB,CAACC,QAAtB,GAAiCL,mBAAmB,CAACK,QAAvE;AACH;;AACD,aAAO,IAAIpD,qBAAJ,CAA0BD,GAA1B,CAAP;AACH;AAXL;;AAAA;AAAA;AAqCA,WAAaI,oBAAb;AACI,gCAAYJ,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAE;AAAd;AACH;;AALL;AAAA;AAAA,wBAiBQC,KAjBR,EAiBe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAtBL;AAAA;AAAA,2BAuBW+C,KAvBX,EAuBkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AA5BL;AAAA;AAAA,6BA6BagD,OA7Bb,EA6BsB;AACd;AACA;AACA,aAAQA,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,KAA8B,KAAKG,KAA3C;AACH;AAjCL;AAAA;AAAA,gCAkCgB;AACR,uBAAU,KAAKH,GAAf,kBAA0B,KAAKG,KAA/B;AACH;AApCL;AAAA;AAAA,2BAqCW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AAvCL;AAAA;AAAA,6BAwCa;AACL,aAAOsB,uBAAuB,CAACpB,MAAxB,CAA+B,KAAKF,GAApC,EAAyC,KAAKG,KAA9C,CAAP;AACH;AA1CL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,UAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC5B,eAAQA,KAAK,GAAGF,qBAAqB,CAACC,MAAtB,CAA6BF,GAA7B,CAAH,GAAuCM,iBAAiB,CAACJ,MAAlB,CAAyBF,GAAzB,CAApD;AACH;;AACD,UAAMwD,WAAW,GAAGhE,aAAa,CAACiE,GAAd,CAAkBzD,GAAlB,CAApB;;AACA,UAAI,OAAOwD,WAAP,KAAuB,SAA3B,EAAsC;AAClC,YAAMG,SAAS,GAAGH,WAAW,GAAG,MAAH,GAAY,OAAzC;AACA,eAAQrD,KAAK,KAAKwD,SAAV,GAAsBP,kBAAkB,CAACC,QAAzC,GAAoDL,mBAAmB,CAACK,QAAhF;AACH;;AACD,aAAO,IAAIjD,oBAAJ,CAAyBJ,GAAzB,EAA8BG,KAA9B,CAAP;AACH;AAhBL;;AAAA;AAAA;AA4CA,WAAasB,gBAAb;AACI,4BAAYzB,GAAZ,EAAiB4D,QAAjB,EAA2B;AAAA;;AACvB,SAAK5D,GAAL,GAAWA,GAAX;AACA,SAAK4D,QAAL,GAAgBA,QAAhB;AACA,SAAKX,IAAL,GAAY;AAAG;AAAf;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAK4D,QAAhB,EAA0BV,KAAK,CAAClD,GAAhC,EAAqCkD,KAAK,CAACU,QAA3C,CAAX;AACH;AAdL;AAAA;AAAA,2BAeWV,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAK4D,QAAL,KAAkBV,KAAK,CAACU,QAA1D;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBaT,OArBb,EAqBsB;AACd,UAAMU,MAAM,GAAGV,OAAO,CAACI,QAAR,CAAiB,KAAKK,QAAtB,CAAf;AACA,UAAME,IAAI,GAAGX,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAb;;AACA,UAAI+D,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACvB,eAAQA,MAAM,CAAClE,OAAP,CAAemE,IAAf,KAAwB,CAAhC;AACH;;AACD,UAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOD,MAAP,KAAkB,QAA9C,IAA0DA,MAAM,KAAK,IAAzE,EAA+E;AAC3E,eAAOjE,cAAc,CAACqE,IAAf,CAAoBJ,MAApB,EAA4BC,IAA5B,CAAP;AACH;;AACD,aAAO,KAAP;AACH;AA/BL;AAAA;AAAA,gCAgCgB;AACR,uBAAU,KAAK9D,GAAf,kBAA0B,KAAK4D,QAA/B;AACH;AAlCL;AAAA;AAAA,2BAmCW;AACH,aAAO,CAAC,KAAK5D,GAAN,EAAW,KAAK4D,QAAhB,CAAP;AACH;AArCL;AAAA;AAAA,6BAsCa;AACL,aAAOM,mBAAmB,CAAChE,MAApB,CAA2B,IAA3B,CAAP;AACH;AAxCL;AAAA;AAAA,2BAMkBF,GANlB,EAMuB4D,QANvB,EAMiC;AACzB,aAAO,IAAInC,gBAAJ,CAAqBzB,GAArB,EAA0B4D,QAA1B,CAAP;AACH;AARL;;AAAA;AAAA;AA0CA,WAAaM,mBAAb;AACI,+BAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKlB,IAAL,GAAY;AAAG;AAAf,KAFiB,CAGjB;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAO,KAAKkB,OAAL,CAAatB,GAAb,CAAiBK,KAAK,CAACiB,OAAvB,CAAP;AACH;AAdL;AAAA;AAAA,2BAeWjB,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKkB,OAAL,CAAaC,MAAb,CAAoBlB,KAAK,CAACiB,OAA1B,CAAP;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBahB,OArBb,EAqBsB;AACd,aAAO,CAAC,KAAKgB,OAAL,CAAaE,QAAb,CAAsBlB,OAAtB,CAAR;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,YAAM,IAAIhB,KAAJ,CAAU,yBAAV,CAAN;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,KAAKgC,OAAL,CAAaG,IAAb,EAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO,KAAKH,OAAZ;AACH;AAhCL;AAAA;AAAA,2BAMkBI,MANlB,EAM0B;AAClB,aAAO,IAAIL,mBAAJ,CAAwBK,MAAxB,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAajD,uBAAb;AACI,mCAAYtB,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAE;AAAd;AACH;;AALL;AAAA;AAAA,wBAoBQC,KApBR,EAoBe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAzBL;AAAA;AAAA,2BA0BW+C,KA1BX,EA0BkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AA/BL;AAAA;AAAA,6BAgCagD,OAhCb,EAgCsB;AACd;AACA;AACA,aAAQA,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,KAA8B,KAAKG,KAA3C;AACH;AApCL;AAAA;AAAA,gCAqCgB;AACR,uBAAU,KAAKH,GAAf,kBAA0B,KAAKG,KAA/B;AACH;AAvCL;AAAA;AAAA,2BAwCW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AA1CL;AAAA;AAAA,6BA2Ca;AACL,aAAOI,oBAAoB,CAACF,MAArB,CAA4B,KAAKF,GAAjC,EAAsC,KAAKG,KAA3C,CAAP;AACH;AA7CL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,UAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC5B,YAAIA,KAAJ,EAAW;AACP,iBAAOG,iBAAiB,CAACJ,MAAlB,CAAyBF,GAAzB,CAAP;AACH;;AACD,eAAOC,qBAAqB,CAACC,MAAtB,CAA6BF,GAA7B,CAAP;AACH;;AACD,UAAMwD,WAAW,GAAGhE,aAAa,CAACiE,GAAd,CAAkBzD,GAAlB,CAApB;;AACA,UAAI,OAAOwD,WAAP,KAAuB,SAA3B,EAAsC;AAClC,YAAMgB,UAAU,GAAGhB,WAAW,GAAG,MAAH,GAAY,OAA1C;AACA,eAAQrD,KAAK,KAAKqE,UAAV,GAAuBxB,mBAAmB,CAACK,QAA3C,GAAsDD,kBAAkB,CAACC,QAAjF;AACH;;AACD,aAAO,IAAI/B,uBAAJ,CAA4BtB,GAA5B,EAAiCG,KAAjC,CAAP;AACH;AAnBL;;AAAA;AAAA;AA+CA,WAAaG,iBAAb;AACI,6BAAYN,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKiD,IAAL,GAAY;AAAE;AAAd;AACH;;AAJL;AAAA;AAAA,wBAYQC,KAZR,EAYe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOK,IAAI,CAAC,KAAKtD,GAAN,EAAWkD,KAAK,CAAClD,GAAjB,CAAX;AACH;AAjBL;AAAA;AAAA,2BAkBWkD,KAlBX,EAkBkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAA3B;AACH;;AACD,aAAO,KAAP;AACH;AAvBL;AAAA;AAAA,6BAwBamD,OAxBb,EAwBsB;AACd,aAAQ,CAACA,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAT;AACH;AA1BL;AAAA;AAAA,gCA2BgB;AACR,wBAAW,KAAKA,GAAhB;AACH;AA7BL;AAAA;AAAA,2BA8BW;AACH,aAAO,CAAC,KAAKA,GAAN,CAAP;AACH;AAhCL;AAAA;AAAA,6BAiCa;AACL,aAAOC,qBAAqB,CAACC,MAAtB,CAA6B,KAAKF,GAAlC,CAAP;AACH;AAnCL;AAAA;AAAA,2BAKkBA,GALlB,EAKuB;AACf,UAAMwD,WAAW,GAAGhE,aAAa,CAACiE,GAAd,CAAkBzD,GAAlB,CAApB;;AACA,UAAI,OAAOwD,WAAP,KAAuB,SAA3B,EAAsC;AAClC,eAAQA,WAAW,GAAGR,mBAAmB,CAACK,QAAvB,GAAkCD,kBAAkB,CAACC,QAAxE;AACH;;AACD,aAAO,IAAI/C,iBAAJ,CAAsBN,GAAtB,CAAP;AACH;AAXL;;AAAA;AAAA;AAqCA,WAAa4B,qBAAb;AACI,iCAAY5B,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAG;AAAf;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAdL;AAAA;AAAA,2BAeW+C,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBagD,OArBb,EAqBsB;AACd,aAAQsB,UAAU,CAACtB,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAD,CAAV,GAAyCyE,UAAU,CAAC,KAAKtE,KAAN,CAA3D;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,uBAAU,KAAKH,GAAf,gBAAwB,KAAKG,KAA7B;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO6B,2BAA2B,CAAC3B,MAA5B,CAAmC,KAAKF,GAAxC,EAA6C,KAAKG,KAAlD,CAAP;AACH;AAhCL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,aAAO,IAAIyB,qBAAJ,CAA0B5B,GAA1B,EAA+BG,KAA/B,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAawB,2BAAb;AACI,uCAAY3B,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAG;AAAf;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAdL;AAAA;AAAA,2BAeW+C,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBagD,OArBb,EAqBsB;AACd,aAAQsB,UAAU,CAACtB,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAD,CAAV,IAA0CyE,UAAU,CAAC,KAAKtE,KAAN,CAA5D;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,uBAAU,KAAKH,GAAf,iBAAyB,KAAKG,KAA9B;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO8B,qBAAqB,CAAC5B,MAAtB,CAA6B,KAAKF,GAAlC,EAAuC,KAAKG,KAA5C,CAAP;AACH;AAhCL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,aAAO,IAAIwB,2BAAJ,CAAgC3B,GAAhC,EAAqCG,KAArC,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAa2B,qBAAb;AACI,iCAAY9B,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAG;AAAf;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAdL;AAAA;AAAA,2BAeW+C,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBagD,OArBb,EAqBsB;AACd,aAAQsB,UAAU,CAACtB,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAD,CAAV,GAAyCyE,UAAU,CAAC,KAAKtE,KAAN,CAA3D;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,uBAAU,KAAKH,GAAf,gBAAwB,KAAKG,KAA7B;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO2B,2BAA2B,CAACzB,MAA5B,CAAmC,KAAKF,GAAxC,EAA6C,KAAKG,KAAlD,CAAP;AACH;AAhCL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,aAAO,IAAI2B,qBAAJ,CAA0B9B,GAA1B,EAA+BG,KAA/B,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAa0B,2BAAb;AACI,uCAAY7B,GAAZ,EAAiBG,KAAjB,EAAwB;AAAA;;AACpB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAK8C,IAAL,GAAY;AAAG;AAAf;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAOS,IAAI,CAAC,KAAK1D,GAAN,EAAW,KAAKG,KAAhB,EAAuB+C,KAAK,CAAClD,GAA7B,EAAkCkD,KAAK,CAAC/C,KAAxC,CAAX;AACH;AAdL;AAAA;AAAA,2BAeW+C,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAQ,KAAKjD,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B,KAAKG,KAAL,KAAe+C,KAAK,CAAC/C,KAAvD;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBagD,OArBb,EAqBsB;AACd,aAAQsB,UAAU,CAACtB,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAD,CAAV,IAA0CyE,UAAU,CAAC,KAAKtE,KAAN,CAA5D;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,uBAAU,KAAKH,GAAf,iBAAyB,KAAKG,KAA9B;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO4B,qBAAqB,CAAC1B,MAAtB,CAA6B,KAAKF,GAAlC,EAAuC,KAAKG,KAA5C,CAAP;AACH;AAhCL;AAAA;AAAA,2BAMkBH,GANlB,EAMuBG,KANvB,EAM8B;AACtB,aAAO,IAAI0B,2BAAJ,CAAgC7B,GAAhC,EAAqCG,KAArC,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAaE,mBAAb;AACI,+BAAYL,GAAZ,EAAiB0E,MAAjB,EAAyB;AAAA;;AACrB,SAAK1E,GAAL,GAAWA,GAAX;AACA,SAAK0E,MAAL,GAAcA,MAAd;AACA,SAAKzB,IAAL,GAAY;AAAE;AAAd,KAHqB,CAIrB;AACH;;AANL;AAAA;AAAA,wBAUQC,KAVR,EAUe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,UAAI,KAAKjD,GAAL,GAAWkD,KAAK,CAAClD,GAArB,EAA0B;AACtB,eAAO,CAAC,CAAR;AACH;;AACD,UAAI,KAAKA,GAAL,GAAWkD,KAAK,CAAClD,GAArB,EAA0B;AACtB,eAAO,CAAP;AACH;;AACD,UAAM2E,UAAU,GAAG,KAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYb,MAA1B,GAAmC,EAAtD;AACA,UAAMe,WAAW,GAAG1B,KAAK,CAACwB,MAAN,GAAexB,KAAK,CAACwB,MAAN,CAAab,MAA5B,GAAqC,EAAzD;;AACA,UAAIc,UAAU,GAAGC,WAAjB,EAA8B;AAC1B,eAAO,CAAC,CAAR;AACH;;AACD,UAAID,UAAU,GAAGC,WAAjB,EAA8B;AAC1B,eAAO,CAAP;AACH;;AACD,aAAO,CAAP;AACH;AA7BL;AAAA;AAAA,2BA8BW1B,KA9BX,EA8BkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,YAAM0B,UAAU,GAAG,KAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYb,MAA1B,GAAmC,EAAtD;AACA,YAAMe,WAAW,GAAG1B,KAAK,CAACwB,MAAN,GAAexB,KAAK,CAACwB,MAAN,CAAab,MAA5B,GAAqC,EAAzD;AACA,eAAQ,KAAK7D,GAAL,KAAakD,KAAK,CAAClD,GAAnB,IAA0B2E,UAAU,KAAKC,WAAjD;AACH;;AACD,aAAO,KAAP;AACH;AArCL;AAAA;AAAA,6BAsCazB,OAtCb,EAsCsB;AACd,UAAIhD,KAAK,GAAGgD,OAAO,CAACI,QAAR,CAAiB,KAAKvD,GAAtB,CAAZ;AACA,aAAO,KAAK0E,MAAL,GAAc,KAAKA,MAAL,CAAYhD,IAAZ,CAAiBvB,KAAjB,CAAd,GAAwC,KAA/C;AACH;AAzCL;AAAA;AAAA,gCA0CgB;AACR,UAAMA,KAAK,GAAG,KAAKuE,MAAL,cACJ,KAAKA,MAAL,CAAYb,MADR,cACkB,KAAKa,MAAL,CAAYG,UAAZ,GAAyB,GAAzB,GAA+B,EADjD,IAER,WAFN;AAGA,uBAAU,KAAK7E,GAAf,iBAAyBG,KAAzB;AACH;AA/CL;AAAA;AAAA,2BAgDW;AACH,aAAO,CAAC,KAAKH,GAAN,CAAP;AACH;AAlDL;AAAA;AAAA,6BAmDa;AACL,aAAO8E,sBAAsB,CAAC5E,MAAvB,CAA8B,IAA9B,CAAP;AACH;AArDL;AAAA;AAAA,2BAOkBF,GAPlB,EAOuB0E,MAPvB,EAO+B;AACvB,aAAO,IAAIrE,mBAAJ,CAAwBL,GAAxB,EAA6B0E,MAA7B,CAAP;AACH;AATL;;AAAA;AAAA;AAuDA,WAAaI,sBAAb;AACI,kCAAYX,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKlB,IAAL,GAAY;AAAE;AAAd,KAFiB,CAGjB;AACH;;AALL;AAAA;AAAA,wBASQC,KATR,EASe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,aAAO,KAAKkB,OAAL,CAAatB,GAAb,CAAiBK,KAAK,CAACiB,OAAvB,CAAP;AACH;AAdL;AAAA;AAAA,2BAeWjB,KAfX,EAekB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKkB,OAAL,CAAaC,MAAb,CAAoBlB,KAAK,CAACiB,OAA1B,CAAP;AACH;;AACD,aAAO,KAAP;AACH;AApBL;AAAA;AAAA,6BAqBahB,OArBb,EAqBsB;AACd,aAAO,CAAC,KAAKgB,OAAL,CAAaE,QAAb,CAAsBlB,OAAtB,CAAR;AACH;AAvBL;AAAA;AAAA,gCAwBgB;AACR,YAAM,IAAIhB,KAAJ,CAAU,yBAAV,CAAN;AACH;AA1BL;AAAA;AAAA,2BA2BW;AACH,aAAO,KAAKgC,OAAL,CAAaG,IAAb,EAAP;AACH;AA7BL;AAAA;AAAA,6BA8Ba;AACL,aAAO,KAAKH,OAAZ;AACH;AAhCL;AAAA;AAAA,2BAMkBI,MANlB,EAM0B;AAClB,aAAO,IAAIO,sBAAJ,CAA2BP,MAA3B,CAAP;AACH;AARL;;AAAA;AAAA;AAkCA,WAAa/D,iBAAb;AACI,6BAAYD,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAK0C,IAAL,GAAY;AAAE;AAAd;AACH;;AAJL;AAAA;AAAA,wBAQQC,KARR,EAQe;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,UAAI,KAAK1C,IAAL,CAAUwE,MAAV,GAAmB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAAlC,EAA0C;AACtC,eAAO,CAAC,CAAR;AACH;;AACD,UAAI,KAAKxE,IAAL,CAAUwE,MAAV,GAAmB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAAlC,EAA0C;AACtC,eAAO,CAAP;AACH;;AACD,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,YAAME,CAAC,GAAGrC,IAAG,CAAC,KAAKtC,IAAL,CAAUyE,CAAV,CAAD,EAAe9B,KAAK,CAAC3C,IAAN,CAAWyE,CAAX,CAAf,CAAb;;AACA,YAAIE,CAAC,KAAK,CAAV,EAAa;AACT,iBAAOA,CAAP;AACH;AACJ;;AACD,aAAO,CAAP;AACH;AAzBL;AAAA;AAAA,2BA0BWhC,KA1BX,EA0BkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,YAAI,KAAK1C,IAAL,CAAUwE,MAAV,KAAqB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAApC,EAA4C;AACxC,iBAAO,KAAP;AACH;;AACD,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,cAAI,CAAC,KAAKzE,IAAL,CAAUyE,CAAV,EAAaZ,MAAb,CAAoBlB,KAAK,CAAC3C,IAAN,CAAWyE,CAAX,CAApB,CAAL,EAAyC;AACrC,mBAAO,KAAP;AACH;AACJ;;AACD,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH;AAvCL;AAAA;AAAA,6BAwCa7B,OAxCb,EAwCsB;AACd,WAAK,IAAI6B,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,YAAI,CAAC,KAAKzE,IAAL,CAAUyE,CAAV,EAAaX,QAAb,CAAsBlB,OAAtB,CAAL,EAAqC;AACjC,iBAAO,KAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH;AA/CL;AAAA;AAAA,gCAuGgB;AACR,aAAO,KAAK5C,IAAL,CAAUS,GAAV,CAAc,UAAA4B,CAAC;AAAA,eAAIA,CAAC,CAACuC,SAAF,EAAJ;AAAA,OAAf,EAAkCC,IAAlC,CAAuC,MAAvC,CAAP;AACH;AAzGL;AAAA;AAAA,2BA0GW;AACH,UAAMC,MAAM,GAAG,EAAf;;AADG,iDAEc,KAAK9E,IAFnB;AAAA;;AAAA;AAEH,4DAA4B;AAAA,cAAnBA,IAAmB;AACxB8E,UAAAA,MAAM,CAACC,IAAP,OAAAD,MAAM,qBAAS9E,IAAI,CAAC+D,IAAL,EAAT,EAAN;AACH;AAJE;AAAA;AAAA;AAAA;AAAA;;AAKH,aAAOe,MAAP;AACH;AAhHL;AAAA;AAAA,6BAiHa;AACL,UAAIA,MAAM,GAAG,EAAb;;AADK,kDAEY,KAAK9E,IAFjB;AAAA;;AAAA;AAEL,+DAA4B;AAAA,cAAnBA,IAAmB;AACxB8E,UAAAA,MAAM,CAACC,IAAP,CAAY/E,IAAI,CAACgF,MAAL,EAAZ;AACH;AAJI;AAAA;AAAA;AAAA;AAAA;;AAKL,aAAO9E,gBAAgB,CAACP,MAAjB,CAAwBmF,MAAxB,CAAP;AACH;AAvHL;AAAA;AAAA,2BAKkBG,KALlB,EAKyB;AACjB,aAAOhF,iBAAiB,CAACiF,aAAlB,CAAgCD,KAAhC,CAAP;AACH;AAPL;AAAA;AAAA,kCAgDyBE,GAhDzB,EAgD8B;AACtB,UAAMnF,IAAI,GAAG,EAAb;AACA,UAAIoF,OAAO,GAAG,KAAd;;AAFsB,kDAGND,GAHM;AAAA;;AAAA;AAGtB,+DAAqB;AAAA,cAAV9C,CAAU;;AACjB,cAAI,CAACA,CAAL,EAAQ;AACJ;AACH;;AACD,cAAIA,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA6B;AACzB;AACA0C,cAAAA,OAAO,GAAG,IAAV;AACA;AACH;;AACD,cAAI/C,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA8B;AAC1B;AACA,qBAAOD,mBAAmB,CAACK,QAA3B;AACH;;AACD,cAAIT,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA4B;AACxB1C,cAAAA,IAAI,CAAC+E,IAAL,OAAA/E,IAAI,qBAASqC,CAAC,CAACrC,IAAX,EAAJ;AACA;AACH;;AACDA,UAAAA,IAAI,CAAC+E,IAAL,CAAU1C,CAAV;AACH;AArBqB;AAAA;AAAA;AAAA;AAAA;;AAsBtB,UAAIrC,IAAI,CAACwE,MAAL,KAAgB,CAAhB,IAAqBY,OAAzB,EAAkC;AAC9B,eAAOvC,kBAAkB,CAACC,QAA1B;AACH;;AACD,UAAI9C,IAAI,CAACwE,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOnE,SAAP;AACH;;AACD,UAAIL,IAAI,CAACwE,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOxE,IAAI,CAAC,CAAD,CAAX;AACH;;AACDA,MAAAA,IAAI,CAACqF,IAAL,CAAU/C,IAAV,EA/BsB,CAgCtB;AACA;;AAjCsB;AAmClB,YAAMgD,WAAW,GAAGtF,IAAI,CAACA,IAAI,CAACwE,MAAL,GAAc,CAAf,CAAxB;;AACA,YAAIc,WAAW,CAAC5C,IAAZ,KAAqB;AAAE;AAA3B,UAAqC;AACjC;AACH,WAtCiB,CAuClB;;;AACA1C,QAAAA,IAAI,CAACuF,GAAL,GAxCkB,CAyClB;;AACA,YAAMC,mBAAmB,GAAGxF,IAAI,CAACuF,GAAL,EAA5B,CA1CkB,CA2ClB;;AACA,YAAME,aAAa,GAAGvF,gBAAgB,CAACP,MAAjB,CAAwB2F,WAAW,CAACtF,IAAZ,CAAiBS,GAAjB,CAAqB,UAAAiF,EAAE;AAAA,iBAAIzF,iBAAiB,CAACN,MAAlB,CAAyB,CAAC+F,EAAD,EAAKF,mBAAL,CAAzB,CAAJ;AAAA,SAAvB,CAAxB,CAAtB;;AACA,YAAIC,aAAJ,EAAmB;AACfzF,UAAAA,IAAI,CAAC+E,IAAL,CAAUU,aAAV;AACAzF,UAAAA,IAAI,CAACqF,IAAL,CAAU/C,IAAV;AACH;AAhDiB;;AAkCtB,aAAOtC,IAAI,CAACwE,MAAL,GAAc,CAArB,EAAwB;AAAA;;AAAA,8BAGhB;AAYP;;AACD,UAAIxE,IAAI,CAACwE,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOxE,IAAI,CAAC,CAAD,CAAX;AACH;;AACD,aAAO,IAAIC,iBAAJ,CAAsBD,IAAtB,CAAP;AACH;AAtGL;;AAAA;AAAA;AAyHA,WAAaE,gBAAb;AACI,4BAAYF,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAK0C,IAAL,GAAY;AAAE;AAAd;AACH;;AAJL;AAAA;AAAA,wBAeQC,KAfR,EAee;AACP,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,eAAO,KAAKA,IAAL,GAAYC,KAAK,CAACD,IAAzB;AACH;;AACD,UAAI,KAAK1C,IAAL,CAAUwE,MAAV,GAAmB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAAlC,EAA0C;AACtC,eAAO,CAAC,CAAR;AACH;;AACD,UAAI,KAAKxE,IAAL,CAAUwE,MAAV,GAAmB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAAlC,EAA0C;AACtC,eAAO,CAAP;AACH;;AACD,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,YAAME,CAAC,GAAGrC,IAAG,CAAC,KAAKtC,IAAL,CAAUyE,CAAV,CAAD,EAAe9B,KAAK,CAAC3C,IAAN,CAAWyE,CAAX,CAAf,CAAb;;AACA,YAAIE,CAAC,KAAK,CAAV,EAAa;AACT,iBAAOA,CAAP;AACH;AACJ;;AACD,aAAO,CAAP;AACH;AAhCL;AAAA;AAAA,2BAiCWhC,KAjCX,EAiCkB;AACV,UAAIA,KAAK,CAACD,IAAN,KAAe,KAAKA,IAAxB,EAA8B;AAC1B,YAAI,KAAK1C,IAAL,CAAUwE,MAAV,KAAqB7B,KAAK,CAAC3C,IAAN,CAAWwE,MAApC,EAA4C;AACxC,iBAAO,KAAP;AACH;;AACD,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,cAAI,CAAC,KAAKzE,IAAL,CAAUyE,CAAV,EAAaZ,MAAb,CAAoBlB,KAAK,CAAC3C,IAAN,CAAWyE,CAAX,CAApB,CAAL,EAAyC;AACrC,mBAAO,KAAP;AACH;AACJ;;AACD,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH;AA9CL;AAAA;AAAA,6BA+Ca7B,OA/Cb,EA+CsB;AACd,WAAK,IAAI6B,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAK1E,IAAL,CAAUwE,MAAhC,EAAwCC,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,YAAI,KAAKzE,IAAL,CAAUyE,CAAV,EAAaX,QAAb,CAAsBlB,OAAtB,CAAJ,EAAoC;AAChC,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH;AAtDL;AAAA;AAAA,gCAsFgB;AACR,aAAO,KAAK5C,IAAL,CAAUS,GAAV,CAAc,UAAA4B,CAAC;AAAA,eAAIA,CAAC,CAACuC,SAAF,EAAJ;AAAA,OAAf,EAAkCC,IAAlC,CAAuC,MAAvC,CAAP;AACH;AAxFL;AAAA;AAAA,2BAyFW;AACH,UAAMC,MAAM,GAAG,EAAf;;AADG,kDAEc,KAAK9E,IAFnB;AAAA;;AAAA;AAEH,+DAA4B;AAAA,cAAnBA,IAAmB;AACxB8E,UAAAA,MAAM,CAACC,IAAP,OAAAD,MAAM,qBAAS9E,IAAI,CAAC+D,IAAL,EAAT,EAAN;AACH;AAJE;AAAA;AAAA;AAAA;AAAA;;AAKH,aAAOe,MAAP;AACH;AA/FL;AAAA;AAAA,6BAgGa;AACL,UAAIA,MAAM,GAAG,EAAb;;AADK,kDAEY,KAAK9E,IAFjB;AAAA;;AAAA;AAEL,+DAA4B;AAAA,cAAnBA,IAAmB;AACxB8E,UAAAA,MAAM,CAACC,IAAP,CAAY/E,IAAI,CAACgF,MAAL,EAAZ;AACH;AAJI;AAAA;AAAA;AAAA;AAAA;;AAKL,UAAMW,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxB,YAAIA,IAAI,CAAClD,IAAL,KAAc;AAAE;AAApB,UAA8B;AAC1B,mBAAOkD,IAAI,CAAC5F,IAAZ;AACH;;AACD,eAAO,CAAC4F,IAAD,CAAP;AACH,OALD,CALK,CAWL;AACA;;;AACA,aAAOd,MAAM,CAACN,MAAP,GAAgB,CAAvB,EAA0B;AACtB,YAAMqB,IAAI,GAAGf,MAAM,CAACgB,KAAP,EAAb;AACA,YAAMC,KAAK,GAAGjB,MAAM,CAACgB,KAAP,EAAd;AACA,YAAME,GAAG,GAAG,EAAZ;;AAHsB,oDAIHL,SAAS,CAACE,IAAD,CAJN;AAAA;;AAAA;AAItB,iEAAoC;AAAA,gBAAzBI,IAAyB;;AAAA,wDACZN,SAAS,CAACI,KAAD,CADG;AAAA;;AAAA;AAChC,qEAAsC;AAAA,oBAA3BG,KAA2B;AAClCF,gBAAAA,GAAG,CAACjB,IAAJ,CAASvF,cAAc,CAAC2G,GAAf,CAAmBF,IAAnB,EAAyBC,KAAzB,CAAT;AACH;AAH+B;AAAA;AAAA;AAAA;AAAA;AAInC;AARqB;AAAA;AAAA;AAAA;AAAA;;AAStBpB,QAAAA,MAAM,CAACsB,OAAP,CAAe5G,cAAc,CAAC6G,EAAf,OAAA7G,cAAc,EAAOwG,GAAP,CAA7B;AACH;;AACD,aAAOlB,MAAM,CAAC,CAAD,CAAb;AACH;AAzHL;AAAA;AAAA,2BAKkBG,KALlB,EAKyB;AACjB,UAAMjF,IAAI,GAAGE,gBAAgB,CAACgF,aAAjB,CAA+BD,KAA/B,CAAb;;AACA,UAAIjF,IAAI,CAACwE,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOnE,SAAP;AACH;;AACD,UAAIL,IAAI,CAACwE,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOxE,IAAI,CAAC,CAAD,CAAX;AACH;;AACD,aAAO,IAAIE,gBAAJ,CAAqBF,IAArB,CAAP;AACH;AAdL;AAAA;AAAA,kCAuDyBmF,GAvDzB,EAuD8B;AACtB,UAAInF,IAAI,GAAG,EAAX;AACA,UAAIsG,QAAQ,GAAG,KAAf;;AACA,UAAInB,GAAJ,EAAS;AACL,aAAK,IAAIV,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGS,GAAG,CAACX,MAA1B,EAAkCC,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,cAAMpC,CAAC,GAAG8C,GAAG,CAACV,CAAD,CAAb;;AACA,cAAI,CAACpC,CAAL,EAAQ;AACJ;AACH;;AACD,cAAIA,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA8B;AAC1B;AACA4D,cAAAA,QAAQ,GAAG,IAAX;AACA;AACH;;AACD,cAAIjE,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA6B;AACzB;AACA,qBAAO,CAACG,kBAAkB,CAACC,QAApB,CAAP;AACH;;AACD,cAAIT,CAAC,CAACK,IAAF,KAAW;AAAE;AAAjB,YAA2B;AACvB1C,cAAAA,IAAI,GAAGA,IAAI,CAACuG,MAAL,CAAYlE,CAAC,CAACrC,IAAd,CAAP;AACA;AACH;;AACDA,UAAAA,IAAI,CAAC+E,IAAL,CAAU1C,CAAV;AACH;;AACD,YAAIrC,IAAI,CAACwE,MAAL,KAAgB,CAAhB,IAAqB8B,QAAzB,EAAmC;AAC/B,iBAAO,CAAC7D,mBAAmB,CAACK,QAArB,CAAP;AACH;;AACD9C,QAAAA,IAAI,CAACqF,IAAL,CAAU/C,IAAV;AACH;;AACD,aAAOtC,IAAP;AACH;AArFL;;AAAA;AAAA;AA2HA,WAAawG,aAAb;AAAA;;AAAA;;AACI,yBAAY/G,GAAZ,EAAiBgH,YAAjB,EAA+B;AAAA;;AAAA;;AAC3B,+BAAMhH,GAAN;AACA,WAAKiH,aAAL,GAAqBD,YAArB;AAF2B;AAG9B;;AAJL;AAAA;AAAA,2BAKWE,MALX,EAKmB;AACX,aAAOA,MAAM,CAACC,SAAP,CAAiB,KAAKnH,GAAtB,EAA2B,KAAKiH,aAAhC,CAAP;AACH;AAPL;AAAA;AAAA,6BAQaC,MARb,EAQqB;AACb,aAAOA,MAAM,CAACE,kBAAP,CAA0B,KAAKpH,GAA/B,CAAP;AACH;AAVL;AAAA;AAAA,gCAWgB;AACR,aAAOD,cAAc,CAACsH,GAAf,CAAmB,KAAKrH,GAAxB,CAAP;AACH;AAbL;AAAA;AAAA,8BAccG,KAdd,EAcqB;AACb,aAAOJ,cAAc,CAACqE,MAAf,CAAsB,KAAKpE,GAA3B,EAAgCG,KAAhC,CAAP;AACH;AAhBL;;AAAA;AAAA,EAAmCF,qBAAnC;AAkBA,OAAO,IAAMqH,kBAAkB,GAAGrI,eAAe,CAAC,mBAAD,CAA1C;AACP,OAAO,IAAMsI,sBAAsB,GAAG,YAA/B;;AACP,SAASjE,IAAT,CAAckE,IAAd,EAAoBC,IAApB,EAA0B;AACtB,MAAID,IAAI,GAAGC,IAAX,EAAiB;AACb,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,IAAI,GAAGC,IAAX,EAAiB;AACb,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH;;AACD,SAAS/D,IAAT,CAAc8D,IAAd,EAAoBE,MAApB,EAA4BD,IAA5B,EAAkCE,MAAlC,EAA0C;AACtC,MAAIH,IAAI,GAAGC,IAAX,EAAiB;AACb,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,IAAI,GAAGC,IAAX,EAAiB;AACb,WAAO,CAAP;AACH;;AACD,MAAIC,MAAM,GAAGC,MAAb,EAAqB;AACjB,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,MAAM,GAAGC,MAAb,EAAqB;AACjB,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { userAgent, isMacintosh, isLinux, isWindows, isWeb } from '../../../base/common/platform.js';\r\nlet _userAgent = userAgent || '';\r\nconst STATIC_VALUES = new Map();\r\nSTATIC_VALUES.set('false', false);\r\nSTATIC_VALUES.set('true', true);\r\nSTATIC_VALUES.set('isMac', isMacintosh);\r\nSTATIC_VALUES.set('isLinux', isLinux);\r\nSTATIC_VALUES.set('isWindows', isWindows);\r\nSTATIC_VALUES.set('isWeb', isWeb);\r\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\r\nSTATIC_VALUES.set('isEdge', _userAgent.indexOf('Edg/') >= 0);\r\nSTATIC_VALUES.set('isFirefox', _userAgent.indexOf('Firefox') >= 0);\r\nSTATIC_VALUES.set('isChrome', _userAgent.indexOf('Chrome') >= 0);\r\nSTATIC_VALUES.set('isSafari', _userAgent.indexOf('Safari') >= 0);\r\nSTATIC_VALUES.set('isIPad', _userAgent.indexOf('iPad') >= 0);\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport class ContextKeyExpr {\r\n    static has(key) {\r\n        return ContextKeyDefinedExpr.create(key);\r\n    }\r\n    static equals(key, value) {\r\n        return ContextKeyEqualsExpr.create(key, value);\r\n    }\r\n    static regex(key, value) {\r\n        return ContextKeyRegexExpr.create(key, value);\r\n    }\r\n    static not(key) {\r\n        return ContextKeyNotExpr.create(key);\r\n    }\r\n    static and(...expr) {\r\n        return ContextKeyAndExpr.create(expr);\r\n    }\r\n    static or(...expr) {\r\n        return ContextKeyOrExpr.create(expr);\r\n    }\r\n    static deserialize(serialized, strict = false) {\r\n        if (!serialized) {\r\n            return undefined;\r\n        }\r\n        return this._deserializeOrExpression(serialized, strict);\r\n    }\r\n    static _deserializeOrExpression(serialized, strict) {\r\n        let pieces = serialized.split('||');\r\n        return ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\r\n    }\r\n    static _deserializeAndExpression(serialized, strict) {\r\n        let pieces = serialized.split('&&');\r\n        return ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\r\n    }\r\n    static _deserializeOne(serializedOne, strict) {\r\n        serializedOne = serializedOne.trim();\r\n        if (serializedOne.indexOf('!=') >= 0) {\r\n            let pieces = serializedOne.split('!=');\r\n            return ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\r\n        }\r\n        if (serializedOne.indexOf('==') >= 0) {\r\n            let pieces = serializedOne.split('==');\r\n            return ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\r\n        }\r\n        if (serializedOne.indexOf('=~') >= 0) {\r\n            let pieces = serializedOne.split('=~');\r\n            return ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\r\n        }\r\n        if (serializedOne.indexOf(' in ') >= 0) {\r\n            let pieces = serializedOne.split(' in ');\r\n            return ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\r\n        }\r\n        if (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\r\n            const pieces = serializedOne.split('>=');\r\n            return ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\r\n        }\r\n        if (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\r\n            const pieces = serializedOne.split('>');\r\n            return ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\r\n        }\r\n        if (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\r\n            const pieces = serializedOne.split('<=');\r\n            return ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\r\n        }\r\n        if (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\r\n            const pieces = serializedOne.split('<');\r\n            return ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\r\n        }\r\n        if (/^\\!\\s*/.test(serializedOne)) {\r\n            return ContextKeyNotExpr.create(serializedOne.substr(1).trim());\r\n        }\r\n        return ContextKeyDefinedExpr.create(serializedOne);\r\n    }\r\n    static _deserializeValue(serializedValue, strict) {\r\n        serializedValue = serializedValue.trim();\r\n        if (serializedValue === 'true') {\r\n            return true;\r\n        }\r\n        if (serializedValue === 'false') {\r\n            return false;\r\n        }\r\n        let m = /^'([^']*)'$/.exec(serializedValue);\r\n        if (m) {\r\n            return m[1].trim();\r\n        }\r\n        return serializedValue;\r\n    }\r\n    static _deserializeRegexValue(serializedValue, strict) {\r\n        if (isFalsyOrWhitespace(serializedValue)) {\r\n            if (strict) {\r\n                throw new Error('missing regexp-value for =~-expression');\r\n            }\r\n            else {\r\n                console.warn('missing regexp-value for =~-expression');\r\n            }\r\n            return null;\r\n        }\r\n        let start = serializedValue.indexOf('/');\r\n        let end = serializedValue.lastIndexOf('/');\r\n        if (start === end || start < 0 /* || to < 0 */) {\r\n            if (strict) {\r\n                throw new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\r\n            }\r\n            else {\r\n                console.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\r\n            }\r\n            return null;\r\n        }\r\n        let value = serializedValue.slice(start + 1, end);\r\n        let caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\r\n        try {\r\n            return new RegExp(value, caseIgnoreFlag);\r\n        }\r\n        catch (e) {\r\n            if (strict) {\r\n                throw new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\r\n            }\r\n            else {\r\n                console.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n}\r\nfunction cmp(a, b) {\r\n    return a.cmp(b);\r\n}\r\nexport class ContextKeyFalseExpr {\r\n    constructor() {\r\n        this.type = 0 /* False */;\r\n    }\r\n    cmp(other) {\r\n        return this.type - other.type;\r\n    }\r\n    equals(other) {\r\n        return (other.type === this.type);\r\n    }\r\n    evaluate(context) {\r\n        return false;\r\n    }\r\n    serialize() {\r\n        return 'false';\r\n    }\r\n    keys() {\r\n        return [];\r\n    }\r\n    negate() {\r\n        return ContextKeyTrueExpr.INSTANCE;\r\n    }\r\n}\r\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\r\nexport class ContextKeyTrueExpr {\r\n    constructor() {\r\n        this.type = 1 /* True */;\r\n    }\r\n    cmp(other) {\r\n        return this.type - other.type;\r\n    }\r\n    equals(other) {\r\n        return (other.type === this.type);\r\n    }\r\n    evaluate(context) {\r\n        return true;\r\n    }\r\n    serialize() {\r\n        return 'true';\r\n    }\r\n    keys() {\r\n        return [];\r\n    }\r\n    negate() {\r\n        return ContextKeyFalseExpr.INSTANCE;\r\n    }\r\n}\r\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\r\nexport class ContextKeyDefinedExpr {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.type = 2 /* Defined */;\r\n    }\r\n    static create(key) {\r\n        const staticValue = STATIC_VALUES.get(key);\r\n        if (typeof staticValue === 'boolean') {\r\n            return staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\r\n        }\r\n        return new ContextKeyDefinedExpr(key);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp1(this.key, other.key);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (!!context.getValue(this.key));\r\n    }\r\n    serialize() {\r\n        return this.key;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyNotExpr.create(this.key);\r\n    }\r\n}\r\nexport class ContextKeyEqualsExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 4 /* Equals */;\r\n    }\r\n    static create(key, value) {\r\n        if (typeof value === 'boolean') {\r\n            return (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\r\n        }\r\n        const staticValue = STATIC_VALUES.get(key);\r\n        if (typeof staticValue === 'boolean') {\r\n            const trueValue = staticValue ? 'true' : 'false';\r\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\r\n        }\r\n        return new ContextKeyEqualsExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        // Intentional ==\r\n        // eslint-disable-next-line eqeqeq\r\n        return (context.getValue(this.key) == this.value);\r\n    }\r\n    serialize() {\r\n        return `${this.key} == '${this.value}'`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyNotEqualsExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeyInExpr {\r\n    constructor(key, valueKey) {\r\n        this.key = key;\r\n        this.valueKey = valueKey;\r\n        this.type = 10 /* In */;\r\n    }\r\n    static create(key, valueKey) {\r\n        return new ContextKeyInExpr(key, valueKey);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.valueKey === other.valueKey);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        const source = context.getValue(this.valueKey);\r\n        const item = context.getValue(this.key);\r\n        if (Array.isArray(source)) {\r\n            return (source.indexOf(item) >= 0);\r\n        }\r\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\r\n            return hasOwnProperty.call(source, item);\r\n        }\r\n        return false;\r\n    }\r\n    serialize() {\r\n        return `${this.key} in '${this.valueKey}'`;\r\n    }\r\n    keys() {\r\n        return [this.key, this.valueKey];\r\n    }\r\n    negate() {\r\n        return ContextKeyNotInExpr.create(this);\r\n    }\r\n}\r\nexport class ContextKeyNotInExpr {\r\n    constructor(_actual) {\r\n        this._actual = _actual;\r\n        this.type = 11 /* NotIn */;\r\n        //\r\n    }\r\n    static create(actual) {\r\n        return new ContextKeyNotInExpr(actual);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return this._actual.cmp(other._actual);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return this._actual.equals(other._actual);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return !this._actual.evaluate(context);\r\n    }\r\n    serialize() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    keys() {\r\n        return this._actual.keys();\r\n    }\r\n    negate() {\r\n        return this._actual;\r\n    }\r\n}\r\nexport class ContextKeyNotEqualsExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 5 /* NotEquals */;\r\n    }\r\n    static create(key, value) {\r\n        if (typeof value === 'boolean') {\r\n            if (value) {\r\n                return ContextKeyNotExpr.create(key);\r\n            }\r\n            return ContextKeyDefinedExpr.create(key);\r\n        }\r\n        const staticValue = STATIC_VALUES.get(key);\r\n        if (typeof staticValue === 'boolean') {\r\n            const falseValue = staticValue ? 'true' : 'false';\r\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\r\n        }\r\n        return new ContextKeyNotEqualsExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        // Intentional !=\r\n        // eslint-disable-next-line eqeqeq\r\n        return (context.getValue(this.key) != this.value);\r\n    }\r\n    serialize() {\r\n        return `${this.key} != '${this.value}'`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyEqualsExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeyNotExpr {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.type = 3 /* Not */;\r\n    }\r\n    static create(key) {\r\n        const staticValue = STATIC_VALUES.get(key);\r\n        if (typeof staticValue === 'boolean') {\r\n            return (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\r\n        }\r\n        return new ContextKeyNotExpr(key);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp1(this.key, other.key);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (!context.getValue(this.key));\r\n    }\r\n    serialize() {\r\n        return `!${this.key}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyDefinedExpr.create(this.key);\r\n    }\r\n}\r\nexport class ContextKeyGreaterExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 12 /* Greater */;\r\n    }\r\n    static create(key, value) {\r\n        return new ContextKeyGreaterExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (parseFloat(context.getValue(this.key)) > parseFloat(this.value));\r\n    }\r\n    serialize() {\r\n        return `${this.key} > ${this.value}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeySmallerEqualsExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeyGreaterEqualsExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 13 /* GreaterEquals */;\r\n    }\r\n    static create(key, value) {\r\n        return new ContextKeyGreaterEqualsExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (parseFloat(context.getValue(this.key)) >= parseFloat(this.value));\r\n    }\r\n    serialize() {\r\n        return `${this.key} >= ${this.value}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeySmallerExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeySmallerExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 14 /* Smaller */;\r\n    }\r\n    static create(key, value) {\r\n        return new ContextKeySmallerExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (parseFloat(context.getValue(this.key)) < parseFloat(this.value));\r\n    }\r\n    serialize() {\r\n        return `${this.key} < ${this.value}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyGreaterEqualsExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeySmallerEqualsExpr {\r\n    constructor(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.type = 15 /* SmallerEquals */;\r\n    }\r\n    static create(key, value) {\r\n        return new ContextKeySmallerEqualsExpr(key, value);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return cmp2(this.key, this.value, other.key, other.value);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return (this.key === other.key && this.value === other.value);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return (parseFloat(context.getValue(this.key)) <= parseFloat(this.value));\r\n    }\r\n    serialize() {\r\n        return `${this.key} <= ${this.value}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyGreaterExpr.create(this.key, this.value);\r\n    }\r\n}\r\nexport class ContextKeyRegexExpr {\r\n    constructor(key, regexp) {\r\n        this.key = key;\r\n        this.regexp = regexp;\r\n        this.type = 7 /* Regex */;\r\n        //\r\n    }\r\n    static create(key, regexp) {\r\n        return new ContextKeyRegexExpr(key, regexp);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        if (this.key < other.key) {\r\n            return -1;\r\n        }\r\n        if (this.key > other.key) {\r\n            return 1;\r\n        }\r\n        const thisSource = this.regexp ? this.regexp.source : '';\r\n        const otherSource = other.regexp ? other.regexp.source : '';\r\n        if (thisSource < otherSource) {\r\n            return -1;\r\n        }\r\n        if (thisSource > otherSource) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            const thisSource = this.regexp ? this.regexp.source : '';\r\n            const otherSource = other.regexp ? other.regexp.source : '';\r\n            return (this.key === other.key && thisSource === otherSource);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        let value = context.getValue(this.key);\r\n        return this.regexp ? this.regexp.test(value) : false;\r\n    }\r\n    serialize() {\r\n        const value = this.regexp\r\n            ? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\r\n            : '/invalid/';\r\n        return `${this.key} =~ ${value}`;\r\n    }\r\n    keys() {\r\n        return [this.key];\r\n    }\r\n    negate() {\r\n        return ContextKeyNotRegexExpr.create(this);\r\n    }\r\n}\r\nexport class ContextKeyNotRegexExpr {\r\n    constructor(_actual) {\r\n        this._actual = _actual;\r\n        this.type = 8 /* NotRegex */;\r\n        //\r\n    }\r\n    static create(actual) {\r\n        return new ContextKeyNotRegexExpr(actual);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        return this._actual.cmp(other._actual);\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            return this._actual.equals(other._actual);\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        return !this._actual.evaluate(context);\r\n    }\r\n    serialize() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    keys() {\r\n        return this._actual.keys();\r\n    }\r\n    negate() {\r\n        return this._actual;\r\n    }\r\n}\r\nexport class ContextKeyAndExpr {\r\n    constructor(expr) {\r\n        this.expr = expr;\r\n        this.type = 6 /* And */;\r\n    }\r\n    static create(_expr) {\r\n        return ContextKeyAndExpr._normalizeArr(_expr);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        if (this.expr.length < other.expr.length) {\r\n            return -1;\r\n        }\r\n        if (this.expr.length > other.expr.length) {\r\n            return 1;\r\n        }\r\n        for (let i = 0, len = this.expr.length; i < len; i++) {\r\n            const r = cmp(this.expr[i], other.expr[i]);\r\n            if (r !== 0) {\r\n                return r;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            if (this.expr.length !== other.expr.length) {\r\n                return false;\r\n            }\r\n            for (let i = 0, len = this.expr.length; i < len; i++) {\r\n                if (!this.expr[i].equals(other.expr[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        for (let i = 0, len = this.expr.length; i < len; i++) {\r\n            if (!this.expr[i].evaluate(context)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static _normalizeArr(arr) {\r\n        const expr = [];\r\n        let hasTrue = false;\r\n        for (const e of arr) {\r\n            if (!e) {\r\n                continue;\r\n            }\r\n            if (e.type === 1 /* True */) {\r\n                // anything && true ==> anything\r\n                hasTrue = true;\r\n                continue;\r\n            }\r\n            if (e.type === 0 /* False */) {\r\n                // anything && false ==> false\r\n                return ContextKeyFalseExpr.INSTANCE;\r\n            }\r\n            if (e.type === 6 /* And */) {\r\n                expr.push(...e.expr);\r\n                continue;\r\n            }\r\n            expr.push(e);\r\n        }\r\n        if (expr.length === 0 && hasTrue) {\r\n            return ContextKeyTrueExpr.INSTANCE;\r\n        }\r\n        if (expr.length === 0) {\r\n            return undefined;\r\n        }\r\n        if (expr.length === 1) {\r\n            return expr[0];\r\n        }\r\n        expr.sort(cmp);\r\n        // We must distribute any OR expression because we don't support parens\r\n        // OR extensions will be at the end (due to sorting rules)\r\n        while (expr.length > 1) {\r\n            const lastElement = expr[expr.length - 1];\r\n            if (lastElement.type !== 9 /* Or */) {\r\n                break;\r\n            }\r\n            // pop the last element\r\n            expr.pop();\r\n            // pop the second to last element\r\n            const secondToLastElement = expr.pop();\r\n            // distribute `lastElement` over `secondToLastElement`\r\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement])));\r\n            if (resultElement) {\r\n                expr.push(resultElement);\r\n                expr.sort(cmp);\r\n            }\r\n        }\r\n        if (expr.length === 1) {\r\n            return expr[0];\r\n        }\r\n        return new ContextKeyAndExpr(expr);\r\n    }\r\n    serialize() {\r\n        return this.expr.map(e => e.serialize()).join(' && ');\r\n    }\r\n    keys() {\r\n        const result = [];\r\n        for (let expr of this.expr) {\r\n            result.push(...expr.keys());\r\n        }\r\n        return result;\r\n    }\r\n    negate() {\r\n        let result = [];\r\n        for (let expr of this.expr) {\r\n            result.push(expr.negate());\r\n        }\r\n        return ContextKeyOrExpr.create(result);\r\n    }\r\n}\r\nexport class ContextKeyOrExpr {\r\n    constructor(expr) {\r\n        this.expr = expr;\r\n        this.type = 9 /* Or */;\r\n    }\r\n    static create(_expr) {\r\n        const expr = ContextKeyOrExpr._normalizeArr(_expr);\r\n        if (expr.length === 0) {\r\n            return undefined;\r\n        }\r\n        if (expr.length === 1) {\r\n            return expr[0];\r\n        }\r\n        return new ContextKeyOrExpr(expr);\r\n    }\r\n    cmp(other) {\r\n        if (other.type !== this.type) {\r\n            return this.type - other.type;\r\n        }\r\n        if (this.expr.length < other.expr.length) {\r\n            return -1;\r\n        }\r\n        if (this.expr.length > other.expr.length) {\r\n            return 1;\r\n        }\r\n        for (let i = 0, len = this.expr.length; i < len; i++) {\r\n            const r = cmp(this.expr[i], other.expr[i]);\r\n            if (r !== 0) {\r\n                return r;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    equals(other) {\r\n        if (other.type === this.type) {\r\n            if (this.expr.length !== other.expr.length) {\r\n                return false;\r\n            }\r\n            for (let i = 0, len = this.expr.length; i < len; i++) {\r\n                if (!this.expr[i].equals(other.expr[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    evaluate(context) {\r\n        for (let i = 0, len = this.expr.length; i < len; i++) {\r\n            if (this.expr[i].evaluate(context)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static _normalizeArr(arr) {\r\n        let expr = [];\r\n        let hasFalse = false;\r\n        if (arr) {\r\n            for (let i = 0, len = arr.length; i < len; i++) {\r\n                const e = arr[i];\r\n                if (!e) {\r\n                    continue;\r\n                }\r\n                if (e.type === 0 /* False */) {\r\n                    // anything || false ==> anything\r\n                    hasFalse = true;\r\n                    continue;\r\n                }\r\n                if (e.type === 1 /* True */) {\r\n                    // anything || true ==> true\r\n                    return [ContextKeyTrueExpr.INSTANCE];\r\n                }\r\n                if (e.type === 9 /* Or */) {\r\n                    expr = expr.concat(e.expr);\r\n                    continue;\r\n                }\r\n                expr.push(e);\r\n            }\r\n            if (expr.length === 0 && hasFalse) {\r\n                return [ContextKeyFalseExpr.INSTANCE];\r\n            }\r\n            expr.sort(cmp);\r\n        }\r\n        return expr;\r\n    }\r\n    serialize() {\r\n        return this.expr.map(e => e.serialize()).join(' || ');\r\n    }\r\n    keys() {\r\n        const result = [];\r\n        for (let expr of this.expr) {\r\n            result.push(...expr.keys());\r\n        }\r\n        return result;\r\n    }\r\n    negate() {\r\n        let result = [];\r\n        for (let expr of this.expr) {\r\n            result.push(expr.negate());\r\n        }\r\n        const terminals = (node) => {\r\n            if (node.type === 9 /* Or */) {\r\n                return node.expr;\r\n            }\r\n            return [node];\r\n        };\r\n        // We don't support parens, so here we distribute the AND over the OR terminals\r\n        // We always take the first 2 AND pairs and distribute them\r\n        while (result.length > 1) {\r\n            const LEFT = result.shift();\r\n            const RIGHT = result.shift();\r\n            const all = [];\r\n            for (const left of terminals(LEFT)) {\r\n                for (const right of terminals(RIGHT)) {\r\n                    all.push(ContextKeyExpr.and(left, right));\r\n                }\r\n            }\r\n            result.unshift(ContextKeyExpr.or(...all));\r\n        }\r\n        return result[0];\r\n    }\r\n}\r\nexport class RawContextKey extends ContextKeyDefinedExpr {\r\n    constructor(key, defaultValue) {\r\n        super(key);\r\n        this._defaultValue = defaultValue;\r\n    }\r\n    bindTo(target) {\r\n        return target.createKey(this.key, this._defaultValue);\r\n    }\r\n    getValue(target) {\r\n        return target.getContextKeyValue(this.key);\r\n    }\r\n    toNegated() {\r\n        return ContextKeyExpr.not(this.key);\r\n    }\r\n    isEqualTo(value) {\r\n        return ContextKeyExpr.equals(this.key, value);\r\n    }\r\n}\r\nexport const IContextKeyService = createDecorator('contextKeyService');\r\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\r\nfunction cmp1(key1, key2) {\r\n    if (key1 < key2) {\r\n        return -1;\r\n    }\r\n    if (key1 > key2) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction cmp2(key1, value1, key2, value2) {\r\n    if (key1 < key2) {\r\n        return -1;\r\n    }\r\n    if (key1 > key2) {\r\n        return 1;\r\n    }\r\n    if (value1 < value2) {\r\n        return -1;\r\n    }\r\n    if (value1 > value2) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}