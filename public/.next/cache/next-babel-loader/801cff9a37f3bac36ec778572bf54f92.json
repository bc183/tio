{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './media/quickInput.css';\nimport * as dom from '../../../browser/dom.js';\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport Severity from '../../../common/severity.js';\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\nvar $ = dom.$;\nexport var QuickInputBox = /*#__PURE__*/function (_Disposable) {\n  _inherits(QuickInputBox, _Disposable);\n\n  var _super = _createSuper(QuickInputBox);\n\n  function QuickInputBox(parent) {\n    var _this;\n\n    _classCallCheck(this, QuickInputBox);\n\n    _this = _super.call(this);\n    _this.parent = parent;\n\n    _this.onKeyDown = function (handler) {\n      return dom.addDisposableListener(_this.inputBox.inputElement, dom.EventType.KEY_DOWN, function (e) {\n        handler(new StandardKeyboardEvent(e));\n      });\n    };\n\n    _this.onMouseDown = function (handler) {\n      return dom.addDisposableListener(_this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, function (e) {\n        handler(new StandardMouseEvent(e));\n      });\n    };\n\n    _this.onDidChange = function (handler) {\n      return _this.inputBox.onDidChange(handler);\n    };\n\n    _this.container = dom.append(_this.parent, $('.quick-input-box'));\n    _this.inputBox = _this._register(new InputBox(_this.container, undefined));\n    return _this;\n  }\n\n  _createClass(QuickInputBox, [{\n    key: \"select\",\n    value: function select() {\n      var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.inputBox.select(range);\n    }\n  }, {\n    key: \"isSelectionAtEnd\",\n    value: function isSelectionAtEnd() {\n      return this.inputBox.isSelectionAtEnd();\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      this.inputBox.inputElement.setAttribute(name, value);\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(name) {\n      this.inputBox.inputElement.removeAttribute(name);\n    }\n  }, {\n    key: \"showDecoration\",\n    value: function showDecoration(decoration) {\n      if (decoration === Severity.Ignore) {\n        this.inputBox.hideMessage();\n      } else {\n        this.inputBox.showMessage({\n          type: decoration === Severity.Info ? 1\n          /* INFO */\n          : decoration === Severity.Warning ? 2\n          /* WARNING */\n          : 3\n          /* ERROR */\n          ,\n          content: ''\n        });\n      }\n    }\n  }, {\n    key: \"stylesForType\",\n    value: function stylesForType(decoration) {\n      return this.inputBox.stylesForType(decoration === Severity.Info ? 1\n      /* INFO */\n      : decoration === Severity.Warning ? 2\n      /* WARNING */\n      : 3\n      /* ERROR */\n      );\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus() {\n      this.inputBox.focus();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      this.inputBox.layout();\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      this.inputBox.style(styles);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.inputBox.value;\n    },\n    set: function set(value) {\n      this.inputBox.value = value;\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return this.inputBox.inputElement.getAttribute('placeholder') || '';\n    },\n    set: function set(placeholder) {\n      this.inputBox.setPlaceHolder(placeholder);\n    }\n  }, {\n    key: \"ariaLabel\",\n    get: function get() {\n      return this.inputBox.getAriaLabel();\n    },\n    set: function set(ariaLabel) {\n      this.inputBox.setAriaLabel(ariaLabel);\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      return this.inputBox.inputElement.type === 'password';\n    },\n    set: function set(password) {\n      this.inputBox.inputElement.type = password ? 'password' : 'text';\n    }\n  }]);\n\n  return QuickInputBox;\n}(Disposable);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/parts/quickinput/browser/quickInputBox.js"],"names":["dom","InputBox","Disposable","StandardKeyboardEvent","Severity","StandardMouseEvent","$","QuickInputBox","parent","onKeyDown","handler","addDisposableListener","inputBox","inputElement","EventType","KEY_DOWN","e","onMouseDown","MOUSE_DOWN","onDidChange","container","append","_register","undefined","range","select","isSelectionAtEnd","name","value","setAttribute","removeAttribute","decoration","Ignore","hideMessage","showMessage","type","Info","Warning","content","stylesForType","focus","layout","styles","style","getAttribute","placeholder","setPlaceHolder","getAriaLabel","ariaLabel","setAriaLabel","password"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,wBAAP;AACA,OAAO,KAAKA,GAAZ,MAAqB,yBAArB;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,qBAAT,QAAsC,mCAAtC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,IAAMC,CAAC,GAAGN,GAAG,CAACM,CAAd;AACA,WAAaC,aAAb;AAAA;;AAAA;;AACI,yBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB;AACA,UAAKA,MAAL,GAAcA,MAAd;;AACA,UAAKC,SAAL,GAAiB,UAACC,OAAD,EAAa;AAC1B,aAAOV,GAAG,CAACW,qBAAJ,CAA0B,MAAKC,QAAL,CAAcC,YAAxC,EAAsDb,GAAG,CAACc,SAAJ,CAAcC,QAApE,EAA8E,UAACC,CAAD,EAAO;AACxFN,QAAAA,OAAO,CAAC,IAAIP,qBAAJ,CAA0Ba,CAA1B,CAAD,CAAP;AACH,OAFM,CAAP;AAGH,KAJD;;AAKA,UAAKC,WAAL,GAAmB,UAACP,OAAD,EAAa;AAC5B,aAAOV,GAAG,CAACW,qBAAJ,CAA0B,MAAKC,QAAL,CAAcC,YAAxC,EAAsDb,GAAG,CAACc,SAAJ,CAAcI,UAApE,EAAgF,UAACF,CAAD,EAAO;AAC1FN,QAAAA,OAAO,CAAC,IAAIL,kBAAJ,CAAuBW,CAAvB,CAAD,CAAP;AACH,OAFM,CAAP;AAGH,KAJD;;AAKA,UAAKG,WAAL,GAAmB,UAACT,OAAD,EAAa;AAC5B,aAAO,MAAKE,QAAL,CAAcO,WAAd,CAA0BT,OAA1B,CAAP;AACH,KAFD;;AAGA,UAAKU,SAAL,GAAiBpB,GAAG,CAACqB,MAAJ,CAAW,MAAKb,MAAhB,EAAwBF,CAAC,CAAC,kBAAD,CAAzB,CAAjB;AACA,UAAKM,QAAL,GAAgB,MAAKU,SAAL,CAAe,IAAIrB,QAAJ,CAAa,MAAKmB,SAAlB,EAA6BG,SAA7B,CAAf,CAAhB;AAjBgB;AAkBnB;;AAnBL;AAAA;AAAA,6BA0ByB;AAAA,UAAdC,KAAc,uEAAN,IAAM;AACjB,WAAKZ,QAAL,CAAca,MAAd,CAAqBD,KAArB;AACH;AA5BL;AAAA;AAAA,uCA6BuB;AACf,aAAO,KAAKZ,QAAL,CAAcc,gBAAd,EAAP;AACH;AA/BL;AAAA;AAAA,iCAkDiBC,IAlDjB,EAkDuBC,KAlDvB,EAkD8B;AACtB,WAAKhB,QAAL,CAAcC,YAAd,CAA2BgB,YAA3B,CAAwCF,IAAxC,EAA8CC,KAA9C;AACH;AApDL;AAAA;AAAA,oCAqDoBD,IArDpB,EAqD0B;AAClB,WAAKf,QAAL,CAAcC,YAAd,CAA2BiB,eAA3B,CAA2CH,IAA3C;AACH;AAvDL;AAAA;AAAA,mCAwDmBI,UAxDnB,EAwD+B;AACvB,UAAIA,UAAU,KAAK3B,QAAQ,CAAC4B,MAA5B,EAAoC;AAChC,aAAKpB,QAAL,CAAcqB,WAAd;AACH,OAFD,MAGK;AACD,aAAKrB,QAAL,CAAcsB,WAAd,CAA0B;AAAEC,UAAAA,IAAI,EAAEJ,UAAU,KAAK3B,QAAQ,CAACgC,IAAxB,GAA+B;AAAE;AAAjC,YAA8CL,UAAU,KAAK3B,QAAQ,CAACiC,OAAxB,GAAkC;AAAE;AAApC,YAAoD;AAAE;AAA5G;AAAyHC,UAAAA,OAAO,EAAE;AAAlI,SAA1B;AACH;AACJ;AA/DL;AAAA;AAAA,kCAgEkBP,UAhElB,EAgE8B;AACtB,aAAO,KAAKnB,QAAL,CAAc2B,aAAd,CAA4BR,UAAU,KAAK3B,QAAQ,CAACgC,IAAxB,GAA+B;AAAE;AAAjC,QAA8CL,UAAU,KAAK3B,QAAQ,CAACiC,OAAxB,GAAkC;AAAE;AAApC,QAAoD;AAAE;AAAhI,OAAP;AACH;AAlEL;AAAA;AAAA,+BAmEe;AACP,WAAKzB,QAAL,CAAc4B,KAAd;AACH;AArEL;AAAA;AAAA,6BAsEa;AACL,WAAK5B,QAAL,CAAc6B,MAAd;AACH;AAxEL;AAAA;AAAA,0BAyEUC,MAzEV,EAyEkB;AACV,WAAK9B,QAAL,CAAc+B,KAAd,CAAoBD,MAApB;AACH;AA3EL;AAAA;AAAA,wBAoBgB;AACR,aAAO,KAAK9B,QAAL,CAAcgB,KAArB;AACH,KAtBL;AAAA,sBAuBcA,KAvBd,EAuBqB;AACb,WAAKhB,QAAL,CAAcgB,KAAd,GAAsBA,KAAtB;AACH;AAzBL;AAAA;AAAA,wBAgCsB;AACd,aAAO,KAAKhB,QAAL,CAAcC,YAAd,CAA2B+B,YAA3B,CAAwC,aAAxC,KAA0D,EAAjE;AACH,KAlCL;AAAA,sBAmCoBC,WAnCpB,EAmCiC;AACzB,WAAKjC,QAAL,CAAckC,cAAd,CAA6BD,WAA7B;AACH;AArCL;AAAA;AAAA,wBAsCoB;AACZ,aAAO,KAAKjC,QAAL,CAAcmC,YAAd,EAAP;AACH,KAxCL;AAAA,sBAyCkBC,SAzClB,EAyC6B;AACrB,WAAKpC,QAAL,CAAcqC,YAAd,CAA2BD,SAA3B;AACH;AA3CL;AAAA;AAAA,wBA4CmB;AACX,aAAO,KAAKpC,QAAL,CAAcC,YAAd,CAA2BsB,IAA3B,KAAoC,UAA3C;AACH,KA9CL;AAAA,sBA+CiBe,QA/CjB,EA+C2B;AACnB,WAAKtC,QAAL,CAAcC,YAAd,CAA2BsB,IAA3B,GAAkCe,QAAQ,GAAG,UAAH,GAAgB,MAA1D;AACH;AAjDL;;AAAA;AAAA,EAAmChD,UAAnC","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/quickInput.css';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport Severity from '../../../common/severity.js';\r\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\r\nconst $ = dom.$;\r\nexport class QuickInputBox extends Disposable {\r\n    constructor(parent) {\r\n        super();\r\n        this.parent = parent;\r\n        this.onKeyDown = (handler) => {\r\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => {\r\n                handler(new StandardKeyboardEvent(e));\r\n            });\r\n        };\r\n        this.onMouseDown = (handler) => {\r\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, (e) => {\r\n                handler(new StandardMouseEvent(e));\r\n            });\r\n        };\r\n        this.onDidChange = (handler) => {\r\n            return this.inputBox.onDidChange(handler);\r\n        };\r\n        this.container = dom.append(this.parent, $('.quick-input-box'));\r\n        this.inputBox = this._register(new InputBox(this.container, undefined));\r\n    }\r\n    get value() {\r\n        return this.inputBox.value;\r\n    }\r\n    set value(value) {\r\n        this.inputBox.value = value;\r\n    }\r\n    select(range = null) {\r\n        this.inputBox.select(range);\r\n    }\r\n    isSelectionAtEnd() {\r\n        return this.inputBox.isSelectionAtEnd();\r\n    }\r\n    get placeholder() {\r\n        return this.inputBox.inputElement.getAttribute('placeholder') || '';\r\n    }\r\n    set placeholder(placeholder) {\r\n        this.inputBox.setPlaceHolder(placeholder);\r\n    }\r\n    get ariaLabel() {\r\n        return this.inputBox.getAriaLabel();\r\n    }\r\n    set ariaLabel(ariaLabel) {\r\n        this.inputBox.setAriaLabel(ariaLabel);\r\n    }\r\n    get password() {\r\n        return this.inputBox.inputElement.type === 'password';\r\n    }\r\n    set password(password) {\r\n        this.inputBox.inputElement.type = password ? 'password' : 'text';\r\n    }\r\n    setAttribute(name, value) {\r\n        this.inputBox.inputElement.setAttribute(name, value);\r\n    }\r\n    removeAttribute(name) {\r\n        this.inputBox.inputElement.removeAttribute(name);\r\n    }\r\n    showDecoration(decoration) {\r\n        if (decoration === Severity.Ignore) {\r\n            this.inputBox.hideMessage();\r\n        }\r\n        else {\r\n            this.inputBox.showMessage({ type: decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */, content: '' });\r\n        }\r\n    }\r\n    stylesForType(decoration) {\r\n        return this.inputBox.stylesForType(decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */);\r\n    }\r\n    setFocus() {\r\n        this.inputBox.focus();\r\n    }\r\n    layout() {\r\n        this.inputBox.layout();\r\n    }\r\n    style(styles) {\r\n        this.inputBox.style(styles);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}