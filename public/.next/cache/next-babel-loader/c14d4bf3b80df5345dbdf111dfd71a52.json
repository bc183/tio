{"ast":null,"code":"import _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as objects from '../../../common/objects.js';\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nexport var HighlightedLabel = /*#__PURE__*/function () {\n  function HighlightedLabel(container, supportIcons) {\n    _classCallCheck(this, HighlightedLabel);\n\n    this.supportIcons = supportIcons;\n    this.text = '';\n    this.title = '';\n    this.highlights = [];\n    this.didEverRender = false;\n    this.domNode = document.createElement('span');\n    this.domNode.className = 'monaco-highlighted-label';\n    container.appendChild(this.domNode);\n  }\n\n  _createClass(HighlightedLabel, [{\n    key: \"set\",\n    value: function set(text) {\n      var highlights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var escapeNewLines = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!text) {\n        text = '';\n      }\n\n      if (escapeNewLines) {\n        // adjusts highlights inplace\n        text = HighlightedLabel.escapeNewLines(text, highlights);\n      }\n\n      if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n        return;\n      }\n\n      this.text = text;\n      this.title = title;\n      this.highlights = highlights;\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = [];\n      var pos = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.highlights),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var highlight = _step.value;\n\n          if (highlight.end === highlight.start) {\n            continue;\n          }\n\n          if (pos < highlight.start) {\n            var _substring2 = this.text.substring(pos, highlight.start);\n\n            children.push(dom.$.apply(dom, ['span', undefined].concat(_toConsumableArray(this.supportIcons ? renderLabelWithIcons(_substring2) : [_substring2]))));\n            pos = highlight.end;\n          }\n\n          var _substring = this.text.substring(highlight.start, highlight.end);\n\n          var element = dom.$.apply(dom, ['span.highlight', undefined].concat(_toConsumableArray(this.supportIcons ? renderLabelWithIcons(_substring) : [_substring])));\n\n          if (highlight.extraClasses) {\n            element.classList.add(highlight.extraClasses);\n          }\n\n          children.push(element);\n          pos = highlight.end;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (pos < this.text.length) {\n        var substring = this.text.substring(pos);\n        children.push(dom.$.apply(dom, ['span', undefined].concat(_toConsumableArray(this.supportIcons ? renderLabelWithIcons(substring) : [substring]))));\n      }\n\n      dom.reset.apply(dom, [this.domNode].concat(children));\n\n      if (this.title) {\n        this.domNode.title = this.title;\n      } else {\n        this.domNode.removeAttribute('title');\n      }\n\n      this.didEverRender = true;\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return this.domNode;\n    }\n  }], [{\n    key: \"escapeNewLines\",\n    value: function escapeNewLines(text, highlights) {\n      var total = 0;\n      var extra = 0;\n      return text.replace(/\\r\\n|\\r|\\n/g, function (match, offset) {\n        extra = match === '\\r\\n' ? -1 : 0;\n        offset += total;\n\n        var _iterator2 = _createForOfIteratorHelper(highlights),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var highlight = _step2.value;\n\n            if (highlight.end <= offset) {\n              continue;\n            }\n\n            if (highlight.start >= offset) {\n              highlight.start += extra;\n            }\n\n            if (highlight.end >= offset) {\n              highlight.end += extra;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        total += extra;\n        return \"\\u23CE\";\n      });\n    }\n  }]);\n\n  return HighlightedLabel;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js"],"names":["objects","dom","renderLabelWithIcons","HighlightedLabel","container","supportIcons","text","title","highlights","didEverRender","domNode","document","createElement","className","appendChild","escapeNewLines","equals","render","children","pos","highlight","end","start","substring","push","$","undefined","element","extraClasses","classList","add","length","reset","removeAttribute","total","extra","replace","match","offset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as objects from '../../../common/objects.js';\r\nimport * as dom from '../../dom.js';\r\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\r\nexport class HighlightedLabel {\r\n    constructor(container, supportIcons) {\r\n        this.supportIcons = supportIcons;\r\n        this.text = '';\r\n        this.title = '';\r\n        this.highlights = [];\r\n        this.didEverRender = false;\r\n        this.domNode = document.createElement('span');\r\n        this.domNode.className = 'monaco-highlighted-label';\r\n        container.appendChild(this.domNode);\r\n    }\r\n    get element() {\r\n        return this.domNode;\r\n    }\r\n    set(text, highlights = [], title = '', escapeNewLines) {\r\n        if (!text) {\r\n            text = '';\r\n        }\r\n        if (escapeNewLines) {\r\n            // adjusts highlights inplace\r\n            text = HighlightedLabel.escapeNewLines(text, highlights);\r\n        }\r\n        if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\r\n            return;\r\n        }\r\n        this.text = text;\r\n        this.title = title;\r\n        this.highlights = highlights;\r\n        this.render();\r\n    }\r\n    render() {\r\n        const children = [];\r\n        let pos = 0;\r\n        for (const highlight of this.highlights) {\r\n            if (highlight.end === highlight.start) {\r\n                continue;\r\n            }\r\n            if (pos < highlight.start) {\r\n                const substring = this.text.substring(pos, highlight.start);\r\n                children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\r\n                pos = highlight.end;\r\n            }\r\n            const substring = this.text.substring(highlight.start, highlight.end);\r\n            const element = dom.$('span.highlight', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]);\r\n            if (highlight.extraClasses) {\r\n                element.classList.add(highlight.extraClasses);\r\n            }\r\n            children.push(element);\r\n            pos = highlight.end;\r\n        }\r\n        if (pos < this.text.length) {\r\n            const substring = this.text.substring(pos);\r\n            children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\r\n        }\r\n        dom.reset(this.domNode, ...children);\r\n        if (this.title) {\r\n            this.domNode.title = this.title;\r\n        }\r\n        else {\r\n            this.domNode.removeAttribute('title');\r\n        }\r\n        this.didEverRender = true;\r\n    }\r\n    static escapeNewLines(text, highlights) {\r\n        let total = 0;\r\n        let extra = 0;\r\n        return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\r\n            extra = match === '\\r\\n' ? -1 : 0;\r\n            offset += total;\r\n            for (const highlight of highlights) {\r\n                if (highlight.end <= offset) {\r\n                    continue;\r\n                }\r\n                if (highlight.start >= offset) {\r\n                    highlight.start += extra;\r\n                }\r\n                if (highlight.end >= offset) {\r\n                    highlight.end += extra;\r\n                }\r\n            }\r\n            total += extra;\r\n            return '\\u23CE';\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}