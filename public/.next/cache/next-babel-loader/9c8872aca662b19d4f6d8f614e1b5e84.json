{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nvar TARGET_KEY = '__$__targetStorageMarker';\nexport var IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n\n(function (WillSaveStateReason) {\n  /**\r\n   * No specific reason to save state.\r\n   */\n  WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n  /**\r\n   * A hint that the workbench is about to shutdown.\r\n   */\n\n  WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\n\nexport var AbstractStorageService = /*#__PURE__*/function (_Disposable) {\n  _inherits(AbstractStorageService, _Disposable);\n\n  var _super = _createSuper(AbstractStorageService);\n\n  function AbstractStorageService() {\n    var _this;\n\n    _classCallCheck(this, AbstractStorageService);\n\n    _this = _super.apply(this, arguments);\n    _this._onDidChangeValue = _this._register(new PauseableEmitter());\n    _this._onDidChangeTarget = _this._register(new PauseableEmitter());\n    _this._onWillSaveState = _this._register(new Emitter());\n    _this.onWillSaveState = _this._onWillSaveState.event;\n    _this._workspaceKeyTargets = undefined;\n    _this._globalKeyTargets = undefined;\n    return _this;\n  }\n\n  _createClass(AbstractStorageService, [{\n    key: \"emitDidChangeValue\",\n    value: function emitDidChangeValue(scope, key) {\n      // Specially handle `TARGET_KEY`\n      if (key === TARGET_KEY) {\n        // Clear our cached version which is now out of date\n        if (scope === 0\n        /* GLOBAL */\n        ) {\n            this._globalKeyTargets = undefined;\n          } else if (scope === 1\n        /* WORKSPACE */\n        ) {\n            this._workspaceKeyTargets = undefined;\n          } // Emit as `didChangeTarget` event\n\n\n        this._onDidChangeTarget.fire({\n          scope: scope\n        });\n      } // Emit any other key to outside\n      else {\n          this._onDidChangeValue.fire({\n            scope: scope,\n            key: key,\n            target: this.getKeyTargets(scope)[key]\n          });\n        }\n    }\n  }, {\n    key: \"store\",\n    value: function store(key, value, scope, target) {\n      var _this2 = this;\n\n      // We remove the key for undefined/null values\n      if (isUndefinedOrNull(value)) {\n        this.remove(key, scope);\n        return;\n      } // Update our datastructures but send events only after\n\n\n      this.withPausedEmitters(function () {\n        // Update key-target map\n        _this2.updateKeyTarget(key, scope, target); // Store actual value\n\n\n        _this2.doStore(key, value, scope);\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key, scope) {\n      var _this3 = this;\n\n      // Update our datastructures but send events only after\n      this.withPausedEmitters(function () {\n        // Update key-target map\n        _this3.updateKeyTarget(key, scope, undefined); // Remove actual key\n\n\n        _this3.doRemove(key, scope);\n      });\n    }\n  }, {\n    key: \"withPausedEmitters\",\n    value: function withPausedEmitters(fn) {\n      // Pause emitters\n      this._onDidChangeValue.pause();\n\n      this._onDidChangeTarget.pause();\n\n      try {\n        fn();\n      } finally {\n        // Resume emitters\n        this._onDidChangeValue.resume();\n\n        this._onDidChangeTarget.resume();\n      }\n    }\n  }, {\n    key: \"updateKeyTarget\",\n    value: function updateKeyTarget(key, scope, target) {\n      // Add\n      var keyTargets = this.getKeyTargets(scope);\n\n      if (typeof target === 'number') {\n        if (keyTargets[key] !== target) {\n          keyTargets[key] = target;\n          this.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\n        }\n      } // Remove\n      else {\n          if (typeof keyTargets[key] === 'number') {\n            delete keyTargets[key];\n            this.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\n          }\n        }\n    }\n  }, {\n    key: \"getKeyTargets\",\n    value: function getKeyTargets(scope) {\n      return scope === 0\n      /* GLOBAL */\n      ? this.globalKeyTargets : this.workspaceKeyTargets;\n    }\n  }, {\n    key: \"loadKeyTargets\",\n    value: function loadKeyTargets(scope) {\n      var keysRaw = this.get(TARGET_KEY, scope);\n\n      if (keysRaw) {\n        try {\n          return JSON.parse(keysRaw);\n        } catch (error) {// Fail gracefully\n        }\n      }\n\n      return Object.create(null);\n    }\n  }, {\n    key: \"workspaceKeyTargets\",\n    get: function get() {\n      if (!this._workspaceKeyTargets) {\n        this._workspaceKeyTargets = this.loadKeyTargets(1\n        /* WORKSPACE */\n        );\n      }\n\n      return this._workspaceKeyTargets;\n    }\n  }, {\n    key: \"globalKeyTargets\",\n    get: function get() {\n      if (!this._globalKeyTargets) {\n        this._globalKeyTargets = this.loadKeyTargets(0\n        /* GLOBAL */\n        );\n      }\n\n      return this._globalKeyTargets;\n    }\n  }]);\n\n  return AbstractStorageService;\n}(Disposable);\nexport var InMemoryStorageService = /*#__PURE__*/function (_AbstractStorageServi) {\n  _inherits(InMemoryStorageService, _AbstractStorageServi);\n\n  var _super2 = _createSuper(InMemoryStorageService);\n\n  function InMemoryStorageService() {\n    var _this4;\n\n    _classCallCheck(this, InMemoryStorageService);\n\n    _this4 = _super2.apply(this, arguments);\n    _this4.globalCache = new Map();\n    _this4.workspaceCache = new Map();\n    return _this4;\n  }\n\n  _createClass(InMemoryStorageService, [{\n    key: \"getCache\",\n    value: function getCache(scope) {\n      return scope === 0\n      /* GLOBAL */\n      ? this.globalCache : this.workspaceCache;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, scope, fallbackValue) {\n      var value = this.getCache(scope).get(key);\n\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getBoolean\",\n    value: function getBoolean(key, scope, fallbackValue) {\n      var value = this.getCache(scope).get(key);\n\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n\n      return value === 'true';\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(key, scope, fallbackValue) {\n      var value = this.getCache(scope).get(key);\n\n      if (isUndefinedOrNull(value)) {\n        return fallbackValue;\n      }\n\n      return parseInt(value, 10);\n    }\n  }, {\n    key: \"doStore\",\n    value: function doStore(key, value, scope) {\n      // Otherwise, convert to String and store\n      var valueStr = String(value); // Return early if value already set\n\n      var currentValue = this.getCache(scope).get(key);\n\n      if (currentValue === valueStr) {\n        return;\n      } // Update in cache\n\n\n      this.getCache(scope).set(key, valueStr); // Events\n\n      this.emitDidChangeValue(scope, key);\n    }\n  }, {\n    key: \"doRemove\",\n    value: function doRemove(key, scope) {\n      var wasDeleted = this.getCache(scope)[\"delete\"](key);\n\n      if (!wasDeleted) {\n        return; // Return early if value already deleted\n      } // Events\n\n\n      this.emitDidChangeValue(scope, key);\n    }\n  }]);\n\n  return InMemoryStorageService;\n}(AbstractStorageService);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js"],"names":["createDecorator","Emitter","PauseableEmitter","Disposable","isUndefinedOrNull","TARGET_KEY","IStorageService","WillSaveStateReason","AbstractStorageService","arguments","_onDidChangeValue","_register","_onDidChangeTarget","_onWillSaveState","onWillSaveState","event","_workspaceKeyTargets","undefined","_globalKeyTargets","scope","key","fire","target","getKeyTargets","value","remove","withPausedEmitters","updateKeyTarget","doStore","doRemove","fn","pause","resume","keyTargets","JSON","stringify","globalKeyTargets","workspaceKeyTargets","keysRaw","get","parse","error","Object","create","loadKeyTargets","InMemoryStorageService","globalCache","Map","workspaceCache","fallbackValue","getCache","parseInt","valueStr","String","currentValue","set","emitDidChangeValue","wasDeleted"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { Emitter, PauseableEmitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\r\nconst TARGET_KEY = '__$__targetStorageMarker';\r\nexport const IStorageService = createDecorator('storageService');\r\nexport var WillSaveStateReason;\r\n(function (WillSaveStateReason) {\r\n    /**\r\n     * No specific reason to save state.\r\n     */\r\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\r\n    /**\r\n     * A hint that the workbench is about to shutdown.\r\n     */\r\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\r\n})(WillSaveStateReason || (WillSaveStateReason = {}));\r\nexport class AbstractStorageService extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._onDidChangeValue = this._register(new PauseableEmitter());\r\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\r\n        this._onWillSaveState = this._register(new Emitter());\r\n        this.onWillSaveState = this._onWillSaveState.event;\r\n        this._workspaceKeyTargets = undefined;\r\n        this._globalKeyTargets = undefined;\r\n    }\r\n    emitDidChangeValue(scope, key) {\r\n        // Specially handle `TARGET_KEY`\r\n        if (key === TARGET_KEY) {\r\n            // Clear our cached version which is now out of date\r\n            if (scope === 0 /* GLOBAL */) {\r\n                this._globalKeyTargets = undefined;\r\n            }\r\n            else if (scope === 1 /* WORKSPACE */) {\r\n                this._workspaceKeyTargets = undefined;\r\n            }\r\n            // Emit as `didChangeTarget` event\r\n            this._onDidChangeTarget.fire({ scope });\r\n        }\r\n        // Emit any other key to outside\r\n        else {\r\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\r\n        }\r\n    }\r\n    store(key, value, scope, target) {\r\n        // We remove the key for undefined/null values\r\n        if (isUndefinedOrNull(value)) {\r\n            this.remove(key, scope);\r\n            return;\r\n        }\r\n        // Update our datastructures but send events only after\r\n        this.withPausedEmitters(() => {\r\n            // Update key-target map\r\n            this.updateKeyTarget(key, scope, target);\r\n            // Store actual value\r\n            this.doStore(key, value, scope);\r\n        });\r\n    }\r\n    remove(key, scope) {\r\n        // Update our datastructures but send events only after\r\n        this.withPausedEmitters(() => {\r\n            // Update key-target map\r\n            this.updateKeyTarget(key, scope, undefined);\r\n            // Remove actual key\r\n            this.doRemove(key, scope);\r\n        });\r\n    }\r\n    withPausedEmitters(fn) {\r\n        // Pause emitters\r\n        this._onDidChangeValue.pause();\r\n        this._onDidChangeTarget.pause();\r\n        try {\r\n            fn();\r\n        }\r\n        finally {\r\n            // Resume emitters\r\n            this._onDidChangeValue.resume();\r\n            this._onDidChangeTarget.resume();\r\n        }\r\n    }\r\n    updateKeyTarget(key, scope, target) {\r\n        // Add\r\n        const keyTargets = this.getKeyTargets(scope);\r\n        if (typeof target === 'number') {\r\n            if (keyTargets[key] !== target) {\r\n                keyTargets[key] = target;\r\n                this.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\r\n            }\r\n        }\r\n        // Remove\r\n        else {\r\n            if (typeof keyTargets[key] === 'number') {\r\n                delete keyTargets[key];\r\n                this.doStore(TARGET_KEY, JSON.stringify(keyTargets), scope);\r\n            }\r\n        }\r\n    }\r\n    get workspaceKeyTargets() {\r\n        if (!this._workspaceKeyTargets) {\r\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* WORKSPACE */);\r\n        }\r\n        return this._workspaceKeyTargets;\r\n    }\r\n    get globalKeyTargets() {\r\n        if (!this._globalKeyTargets) {\r\n            this._globalKeyTargets = this.loadKeyTargets(0 /* GLOBAL */);\r\n        }\r\n        return this._globalKeyTargets;\r\n    }\r\n    getKeyTargets(scope) {\r\n        return scope === 0 /* GLOBAL */ ? this.globalKeyTargets : this.workspaceKeyTargets;\r\n    }\r\n    loadKeyTargets(scope) {\r\n        const keysRaw = this.get(TARGET_KEY, scope);\r\n        if (keysRaw) {\r\n            try {\r\n                return JSON.parse(keysRaw);\r\n            }\r\n            catch (error) {\r\n                // Fail gracefully\r\n            }\r\n        }\r\n        return Object.create(null);\r\n    }\r\n}\r\nexport class InMemoryStorageService extends AbstractStorageService {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.globalCache = new Map();\r\n        this.workspaceCache = new Map();\r\n    }\r\n    getCache(scope) {\r\n        return scope === 0 /* GLOBAL */ ? this.globalCache : this.workspaceCache;\r\n    }\r\n    get(key, scope, fallbackValue) {\r\n        const value = this.getCache(scope).get(key);\r\n        if (isUndefinedOrNull(value)) {\r\n            return fallbackValue;\r\n        }\r\n        return value;\r\n    }\r\n    getBoolean(key, scope, fallbackValue) {\r\n        const value = this.getCache(scope).get(key);\r\n        if (isUndefinedOrNull(value)) {\r\n            return fallbackValue;\r\n        }\r\n        return value === 'true';\r\n    }\r\n    getNumber(key, scope, fallbackValue) {\r\n        const value = this.getCache(scope).get(key);\r\n        if (isUndefinedOrNull(value)) {\r\n            return fallbackValue;\r\n        }\r\n        return parseInt(value, 10);\r\n    }\r\n    doStore(key, value, scope) {\r\n        // Otherwise, convert to String and store\r\n        const valueStr = String(value);\r\n        // Return early if value already set\r\n        const currentValue = this.getCache(scope).get(key);\r\n        if (currentValue === valueStr) {\r\n            return;\r\n        }\r\n        // Update in cache\r\n        this.getCache(scope).set(key, valueStr);\r\n        // Events\r\n        this.emitDidChangeValue(scope, key);\r\n    }\r\n    doRemove(key, scope) {\r\n        const wasDeleted = this.getCache(scope).delete(key);\r\n        if (!wasDeleted) {\r\n            return; // Return early if value already deleted\r\n        }\r\n        // Events\r\n        this.emitDidChangeValue(scope, key);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}