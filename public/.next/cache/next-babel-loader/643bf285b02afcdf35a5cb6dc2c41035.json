{"ast":null,"code":"import _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\nexport var ModelRawFlush = function ModelRawFlush() {\n  _classCallCheck(this, ModelRawFlush);\n\n  this.changeType = 1\n  /* Flush */\n  ;\n};\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\n\nexport var ModelRawLineChanged = function ModelRawLineChanged(lineNumber, detail) {\n  _classCallCheck(this, ModelRawLineChanged);\n\n  this.changeType = 2\n  /* LineChanged */\n  ;\n  this.lineNumber = lineNumber;\n  this.detail = detail;\n};\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\n\nexport var ModelRawLinesDeleted = function ModelRawLinesDeleted(fromLineNumber, toLineNumber) {\n  _classCallCheck(this, ModelRawLinesDeleted);\n\n  this.changeType = 3\n  /* LinesDeleted */\n  ;\n  this.fromLineNumber = fromLineNumber;\n  this.toLineNumber = toLineNumber;\n};\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\n\nexport var ModelRawLinesInserted = function ModelRawLinesInserted(fromLineNumber, toLineNumber, detail) {\n  _classCallCheck(this, ModelRawLinesInserted);\n\n  this.changeType = 4\n  /* LinesInserted */\n  ;\n  this.fromLineNumber = fromLineNumber;\n  this.toLineNumber = toLineNumber;\n  this.detail = detail;\n};\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\n\nexport var ModelRawEOLChanged = function ModelRawEOLChanged() {\n  _classCallCheck(this, ModelRawEOLChanged);\n\n  this.changeType = 5\n  /* EOLChanged */\n  ;\n};\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\n\nexport var ModelRawContentChangedEvent = /*#__PURE__*/function () {\n  function ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing) {\n    _classCallCheck(this, ModelRawContentChangedEvent);\n\n    this.changes = changes;\n    this.versionId = versionId;\n    this.isUndoing = isUndoing;\n    this.isRedoing = isRedoing;\n    this.resultingSelection = null;\n  }\n\n  _createClass(ModelRawContentChangedEvent, [{\n    key: \"containsEvent\",\n    value: function containsEvent(type) {\n      for (var i = 0, len = this.changes.length; i < len; i++) {\n        var change = this.changes[i];\n\n        if (change.changeType === type) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }], [{\n    key: \"merge\",\n    value: function merge(a, b) {\n      var changes = [].concat(a.changes).concat(b.changes);\n      var versionId = b.versionId;\n      var isUndoing = a.isUndoing || b.isUndoing;\n      var isRedoing = a.isRedoing || b.isRedoing;\n      return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n    }\n  }]);\n\n  return ModelRawContentChangedEvent;\n}();\n/**\r\n * @internal\r\n */\n\nexport var InternalModelContentChangeEvent = /*#__PURE__*/function () {\n  function InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent) {\n    _classCallCheck(this, InternalModelContentChangeEvent);\n\n    this.rawContentChangedEvent = rawContentChangedEvent;\n    this.contentChangedEvent = contentChangedEvent;\n  }\n\n  _createClass(InternalModelContentChangeEvent, [{\n    key: \"merge\",\n    value: function merge(other) {\n      var rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n\n      var contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n\n      return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n    }\n  }], [{\n    key: \"_mergeChangeEvents\",\n    value: function _mergeChangeEvents(a, b) {\n      var changes = [].concat(a.changes).concat(b.changes);\n      var eol = b.eol;\n      var versionId = b.versionId;\n      var isUndoing = a.isUndoing || b.isUndoing;\n      var isRedoing = a.isRedoing || b.isRedoing;\n      var isFlush = a.isFlush || b.isFlush;\n      return {\n        changes: changes,\n        eol: eol,\n        versionId: versionId,\n        isUndoing: isUndoing,\n        isRedoing: isRedoing,\n        isFlush: isFlush\n      };\n    }\n  }]);\n\n  return InternalModelContentChangeEvent;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/model/textModelEvents.js"],"names":["ModelRawFlush","changeType","ModelRawLineChanged","lineNumber","detail","ModelRawLinesDeleted","fromLineNumber","toLineNumber","ModelRawLinesInserted","ModelRawEOLChanged","ModelRawContentChangedEvent","changes","versionId","isUndoing","isRedoing","resultingSelection","type","i","len","length","change","a","b","concat","InternalModelContentChangeEvent","rawContentChangedEvent","contentChangedEvent","other","merge","_mergeChangeEvents","eol","isFlush"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * An event describing that a model has been reset to a new value.\r\n * @internal\r\n */\r\nexport class ModelRawFlush {\r\n    constructor() {\r\n        this.changeType = 1 /* Flush */;\r\n    }\r\n}\r\n/**\r\n * An event describing that a line has changed in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLineChanged {\r\n    constructor(lineNumber, detail) {\r\n        this.changeType = 2 /* LineChanged */;\r\n        this.lineNumber = lineNumber;\r\n        this.detail = detail;\r\n    }\r\n}\r\n/**\r\n * An event describing that line(s) have been deleted in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLinesDeleted {\r\n    constructor(fromLineNumber, toLineNumber) {\r\n        this.changeType = 3 /* LinesDeleted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n    }\r\n}\r\n/**\r\n * An event describing that line(s) have been inserted in a model.\r\n * @internal\r\n */\r\nexport class ModelRawLinesInserted {\r\n    constructor(fromLineNumber, toLineNumber, detail) {\r\n        this.changeType = 4 /* LinesInserted */;\r\n        this.fromLineNumber = fromLineNumber;\r\n        this.toLineNumber = toLineNumber;\r\n        this.detail = detail;\r\n    }\r\n}\r\n/**\r\n * An event describing that a model has had its EOL changed.\r\n * @internal\r\n */\r\nexport class ModelRawEOLChanged {\r\n    constructor() {\r\n        this.changeType = 5 /* EOLChanged */;\r\n    }\r\n}\r\n/**\r\n * An event describing a change in the text of a model.\r\n * @internal\r\n */\r\nexport class ModelRawContentChangedEvent {\r\n    constructor(changes, versionId, isUndoing, isRedoing) {\r\n        this.changes = changes;\r\n        this.versionId = versionId;\r\n        this.isUndoing = isUndoing;\r\n        this.isRedoing = isRedoing;\r\n        this.resultingSelection = null;\r\n    }\r\n    containsEvent(type) {\r\n        for (let i = 0, len = this.changes.length; i < len; i++) {\r\n            const change = this.changes[i];\r\n            if (change.changeType === type) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static merge(a, b) {\r\n        const changes = [].concat(a.changes).concat(b.changes);\r\n        const versionId = b.versionId;\r\n        const isUndoing = (a.isUndoing || b.isUndoing);\r\n        const isRedoing = (a.isRedoing || b.isRedoing);\r\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class InternalModelContentChangeEvent {\r\n    constructor(rawContentChangedEvent, contentChangedEvent) {\r\n        this.rawContentChangedEvent = rawContentChangedEvent;\r\n        this.contentChangedEvent = contentChangedEvent;\r\n    }\r\n    merge(other) {\r\n        const rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\r\n        const contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\r\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\r\n    }\r\n    static _mergeChangeEvents(a, b) {\r\n        const changes = [].concat(a.changes).concat(b.changes);\r\n        const eol = b.eol;\r\n        const versionId = b.versionId;\r\n        const isUndoing = (a.isUndoing || b.isUndoing);\r\n        const isRedoing = (a.isRedoing || b.isRedoing);\r\n        const isFlush = (a.isFlush || b.isFlush);\r\n        return {\r\n            changes: changes,\r\n            eol: eol,\r\n            versionId: versionId,\r\n            isUndoing: isUndoing,\r\n            isRedoing: isRedoing,\r\n            isFlush: isFlush\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}