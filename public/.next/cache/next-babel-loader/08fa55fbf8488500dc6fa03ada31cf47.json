{"ast":null,"code":"import _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Configuration } from '../../config/configuration.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\n\nvar ViewCursorRenderData = function ViewCursorRenderData(top, left, width, height, textContent, textContentClassName) {\n  _classCallCheck(this, ViewCursorRenderData);\n\n  this.top = top;\n  this.left = left;\n  this.width = width;\n  this.height = height;\n  this.textContent = textContent;\n  this.textContentClassName = textContentClassName;\n};\n\nexport var ViewCursor = /*#__PURE__*/function () {\n  function ViewCursor(context) {\n    _classCallCheck(this, ViewCursor);\n\n    this._context = context;\n    var options = this._context.configuration.options;\n    var fontInfo = options.get(38\n    /* fontInfo */\n    );\n    this._cursorStyle = options.get(21\n    /* cursorStyle */\n    );\n    this._lineHeight = options.get(53\n    /* lineHeight */\n    );\n    this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this._lineCursorWidth = Math.min(options.get(24\n    /* cursorWidth */\n    ), this._typicalHalfwidthCharacterWidth);\n    this._isVisible = true; // Create the dom node\n\n    this._domNode = createFastDomNode(document.createElement('div'));\n\n    this._domNode.setClassName(\"cursor \".concat(MOUSE_CURSOR_TEXT_CSS_CLASS_NAME));\n\n    this._domNode.setHeight(this._lineHeight);\n\n    this._domNode.setTop(0);\n\n    this._domNode.setLeft(0);\n\n    Configuration.applyFontInfo(this._domNode, fontInfo);\n\n    this._domNode.setDisplay('none');\n\n    this._position = new Position(1, 1);\n    this._lastRenderedContent = '';\n    this._renderData = null;\n  }\n\n  _createClass(ViewCursor, [{\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._domNode;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this._position;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this._isVisible) {\n        this._domNode.setVisibility('inherit');\n\n        this._isVisible = true;\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this._isVisible) {\n        this._domNode.setVisibility('hidden');\n\n        this._isVisible = false;\n      }\n    }\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var fontInfo = options.get(38\n      /* fontInfo */\n      );\n      this._cursorStyle = options.get(21\n      /* cursorStyle */\n      );\n      this._lineHeight = options.get(53\n      /* lineHeight */\n      );\n      this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n      this._lineCursorWidth = Math.min(options.get(24\n      /* cursorWidth */\n      ), this._typicalHalfwidthCharacterWidth);\n      Configuration.applyFontInfo(this._domNode, fontInfo);\n      return true;\n    }\n  }, {\n    key: \"onCursorPositionChanged\",\n    value: function onCursorPositionChanged(position) {\n      this._position = position;\n      return true;\n    }\n  }, {\n    key: \"_prepareRender\",\n    value: function _prepareRender(ctx) {\n      var textContent = '';\n\n      if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n        var visibleRange = ctx.visibleRangeForPosition(this._position);\n\n        if (!visibleRange || visibleRange.outsideRenderedLine) {\n          // Outside viewport\n          return null;\n        }\n\n        var _width;\n\n        if (this._cursorStyle === TextEditorCursorStyle.Line) {\n          _width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n\n          if (_width > 2) {\n            var _lineContent = this._context.model.getLineContent(this._position.lineNumber);\n\n            var _nextCharLength = strings.nextCharLength(_lineContent, this._position.column - 1);\n\n            textContent = _lineContent.substr(this._position.column - 1, _nextCharLength);\n          }\n        } else {\n          _width = dom.computeScreenAwareSize(1);\n        }\n\n        var left = visibleRange.left;\n\n        if (_width >= 2 && left >= 1) {\n          // try to center cursor\n          left -= 1;\n        }\n\n        var _top = ctx.getVerticalOffsetForLineNumber(this._position.lineNumber) - ctx.bigNumbersDelta;\n\n        return new ViewCursorRenderData(_top, left, _width, this._lineHeight, textContent, '');\n      }\n\n      var lineContent = this._context.model.getLineContent(this._position.lineNumber);\n\n      var nextCharLength = strings.nextCharLength(lineContent, this._position.column - 1);\n      var visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(this._position.lineNumber, this._position.column, this._position.lineNumber, this._position.column + nextCharLength), false);\n\n      if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n        // Outside viewport\n        return null;\n      }\n\n      var firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n\n      if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n        // Outside viewport\n        return null;\n      }\n\n      var range = firstVisibleRangeForCharacter.ranges[0];\n      var width = range.width < 1 ? this._typicalHalfwidthCharacterWidth : range.width;\n      var textContentClassName = '';\n\n      if (this._cursorStyle === TextEditorCursorStyle.Block) {\n        var lineData = this._context.model.getViewLineData(this._position.lineNumber);\n\n        textContent = lineContent.substr(this._position.column - 1, nextCharLength);\n        var tokenIndex = lineData.tokens.findTokenIndexAtOffset(this._position.column - 1);\n        textContentClassName = lineData.tokens.getClassName(tokenIndex);\n      }\n\n      var top = ctx.getVerticalOffsetForLineNumber(this._position.lineNumber) - ctx.bigNumbersDelta;\n      var height = this._lineHeight; // Underline might interfere with clicking\n\n      if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n        top += this._lineHeight - 2;\n        height = 2;\n      }\n\n      return new ViewCursorRenderData(top, range.left, width, height, textContent, textContentClassName);\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      this._renderData = this._prepareRender(ctx);\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      if (!this._renderData) {\n        this._domNode.setDisplay('none');\n\n        return null;\n      }\n\n      if (this._lastRenderedContent !== this._renderData.textContent) {\n        this._lastRenderedContent = this._renderData.textContent;\n        this._domNode.domNode.textContent = this._lastRenderedContent;\n      }\n\n      this._domNode.setClassName(\"cursor \".concat(MOUSE_CURSOR_TEXT_CSS_CLASS_NAME, \" \").concat(this._renderData.textContentClassName));\n\n      this._domNode.setDisplay('block');\n\n      this._domNode.setTop(this._renderData.top);\n\n      this._domNode.setLeft(this._renderData.left);\n\n      this._domNode.setWidth(this._renderData.width);\n\n      this._domNode.setLineHeight(this._renderData.height);\n\n      this._domNode.setHeight(this._renderData.height);\n\n      return {\n        domNode: this._domNode.domNode,\n        position: this._position,\n        contentLeft: this._renderData.left,\n        height: this._renderData.height,\n        width: 2\n      };\n    }\n  }]);\n\n  return ViewCursor;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js"],"names":["dom","createFastDomNode","strings","Configuration","TextEditorCursorStyle","Position","Range","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","ViewCursorRenderData","top","left","width","height","textContent","textContentClassName","ViewCursor","context","_context","options","configuration","fontInfo","get","_cursorStyle","_lineHeight","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_lineCursorWidth","Math","min","_isVisible","_domNode","document","createElement","setClassName","setHeight","setTop","setLeft","applyFontInfo","setDisplay","_position","_lastRenderedContent","_renderData","setVisibility","e","position","ctx","Line","LineThin","visibleRange","visibleRangeForPosition","outsideRenderedLine","computeScreenAwareSize","lineContent","model","getLineContent","lineNumber","nextCharLength","column","substr","getVerticalOffsetForLineNumber","bigNumbersDelta","visibleRangeForCharacter","linesVisibleRangesForRange","length","firstVisibleRangeForCharacter","ranges","range","Block","lineData","getViewLineData","tokenIndex","tokens","findTokenIndexAtOffset","getClassName","Underline","UnderlineThin","_prepareRender","domNode","setWidth","setLineHeight","contentLeft"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { Configuration } from '../../config/configuration.js';\r\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\r\nclass ViewCursorRenderData {\r\n    constructor(top, left, width, height, textContent, textContentClassName) {\r\n        this.top = top;\r\n        this.left = left;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.textContent = textContent;\r\n        this.textContentClassName = textContentClassName;\r\n    }\r\n}\r\nexport class ViewCursor {\r\n    constructor(context) {\r\n        this._context = context;\r\n        const options = this._context.configuration.options;\r\n        const fontInfo = options.get(38 /* fontInfo */);\r\n        this._cursorStyle = options.get(21 /* cursorStyle */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        this._lineCursorWidth = Math.min(options.get(24 /* cursorWidth */), this._typicalHalfwidthCharacterWidth);\r\n        this._isVisible = true;\r\n        // Create the dom node\r\n        this._domNode = createFastDomNode(document.createElement('div'));\r\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\r\n        this._domNode.setHeight(this._lineHeight);\r\n        this._domNode.setTop(0);\r\n        this._domNode.setLeft(0);\r\n        Configuration.applyFontInfo(this._domNode, fontInfo);\r\n        this._domNode.setDisplay('none');\r\n        this._position = new Position(1, 1);\r\n        this._lastRenderedContent = '';\r\n        this._renderData = null;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return this._position;\r\n    }\r\n    show() {\r\n        if (!this._isVisible) {\r\n            this._domNode.setVisibility('inherit');\r\n            this._isVisible = true;\r\n        }\r\n    }\r\n    hide() {\r\n        if (this._isVisible) {\r\n            this._domNode.setVisibility('hidden');\r\n            this._isVisible = false;\r\n        }\r\n    }\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        const fontInfo = options.get(38 /* fontInfo */);\r\n        this._cursorStyle = options.get(21 /* cursorStyle */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        this._lineCursorWidth = Math.min(options.get(24 /* cursorWidth */), this._typicalHalfwidthCharacterWidth);\r\n        Configuration.applyFontInfo(this._domNode, fontInfo);\r\n        return true;\r\n    }\r\n    onCursorPositionChanged(position) {\r\n        this._position = position;\r\n        return true;\r\n    }\r\n    _prepareRender(ctx) {\r\n        let textContent = '';\r\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\r\n            const visibleRange = ctx.visibleRangeForPosition(this._position);\r\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\r\n                // Outside viewport\r\n                return null;\r\n            }\r\n            let width;\r\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\r\n                width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\r\n                if (width > 2) {\r\n                    const lineContent = this._context.model.getLineContent(this._position.lineNumber);\r\n                    const nextCharLength = strings.nextCharLength(lineContent, this._position.column - 1);\r\n                    textContent = lineContent.substr(this._position.column - 1, nextCharLength);\r\n                }\r\n            }\r\n            else {\r\n                width = dom.computeScreenAwareSize(1);\r\n            }\r\n            let left = visibleRange.left;\r\n            if (width >= 2 && left >= 1) {\r\n                // try to center cursor\r\n                left -= 1;\r\n            }\r\n            const top = ctx.getVerticalOffsetForLineNumber(this._position.lineNumber) - ctx.bigNumbersDelta;\r\n            return new ViewCursorRenderData(top, left, width, this._lineHeight, textContent, '');\r\n        }\r\n        const lineContent = this._context.model.getLineContent(this._position.lineNumber);\r\n        const nextCharLength = strings.nextCharLength(lineContent, this._position.column - 1);\r\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(this._position.lineNumber, this._position.column, this._position.lineNumber, this._position.column + nextCharLength), false);\r\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\r\n            // Outside viewport\r\n            return null;\r\n        }\r\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\r\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\r\n            // Outside viewport\r\n            return null;\r\n        }\r\n        const range = firstVisibleRangeForCharacter.ranges[0];\r\n        const width = range.width < 1 ? this._typicalHalfwidthCharacterWidth : range.width;\r\n        let textContentClassName = '';\r\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\r\n            const lineData = this._context.model.getViewLineData(this._position.lineNumber);\r\n            textContent = lineContent.substr(this._position.column - 1, nextCharLength);\r\n            const tokenIndex = lineData.tokens.findTokenIndexAtOffset(this._position.column - 1);\r\n            textContentClassName = lineData.tokens.getClassName(tokenIndex);\r\n        }\r\n        let top = ctx.getVerticalOffsetForLineNumber(this._position.lineNumber) - ctx.bigNumbersDelta;\r\n        let height = this._lineHeight;\r\n        // Underline might interfere with clicking\r\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\r\n            top += this._lineHeight - 2;\r\n            height = 2;\r\n        }\r\n        return new ViewCursorRenderData(top, range.left, width, height, textContent, textContentClassName);\r\n    }\r\n    prepareRender(ctx) {\r\n        this._renderData = this._prepareRender(ctx);\r\n    }\r\n    render(ctx) {\r\n        if (!this._renderData) {\r\n            this._domNode.setDisplay('none');\r\n            return null;\r\n        }\r\n        if (this._lastRenderedContent !== this._renderData.textContent) {\r\n            this._lastRenderedContent = this._renderData.textContent;\r\n            this._domNode.domNode.textContent = this._lastRenderedContent;\r\n        }\r\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\r\n        this._domNode.setDisplay('block');\r\n        this._domNode.setTop(this._renderData.top);\r\n        this._domNode.setLeft(this._renderData.left);\r\n        this._domNode.setWidth(this._renderData.width);\r\n        this._domNode.setLineHeight(this._renderData.height);\r\n        this._domNode.setHeight(this._renderData.height);\r\n        return {\r\n            domNode: this._domNode.domNode,\r\n            position: this._position,\r\n            contentLeft: this._renderData.left,\r\n            height: this._renderData.height,\r\n            width: 2\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}