{"ast":null,"code":"import _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/modes.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground } from '../../../common/view/editorColorRegistry.js';\n\nvar Settings = /*#__PURE__*/function () {\n  function Settings(config, theme) {\n    _classCallCheck(this, Settings);\n\n    var options = config.options;\n    this.lineHeight = options.get(53\n    /* lineHeight */\n    );\n    this.pixelRatio = options.get(122\n    /* pixelRatio */\n    );\n    this.overviewRulerLanes = options.get(68\n    /* overviewRulerLanes */\n    );\n    this.renderBorder = options.get(67\n    /* overviewRulerBorder */\n    );\n    var borderColor = theme.getColor(editorOverviewRulerBorder);\n    this.borderColor = borderColor ? borderColor.toString() : null;\n    this.hideCursor = options.get(46\n    /* hideCursorInOverviewRuler */\n    );\n    var cursorColor = theme.getColor(editorCursorForeground);\n    this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\n    this.themeType = theme.type;\n    var minimapOpts = options.get(59\n    /* minimap */\n    );\n    var minimapEnabled = minimapOpts.enabled;\n    var minimapSide = minimapOpts.side;\n    var backgroundColor = minimapEnabled ? theme.getColor(editorOverviewRulerBackground) || TokenizationRegistry.getDefaultBackground() : null;\n\n    if (backgroundColor === null || minimapSide === 'left') {\n      this.backgroundColor = null;\n    } else {\n      this.backgroundColor = Color.Format.CSS.formatHex(backgroundColor);\n    }\n\n    var layoutInfo = options.get(124\n    /* layoutInfo */\n    );\n    var position = layoutInfo.overviewRuler;\n    this.top = position.top;\n    this.right = position.right;\n    this.domWidth = position.width;\n    this.domHeight = position.height;\n\n    if (this.overviewRulerLanes === 0) {\n      // overview ruler is off\n      this.canvasWidth = 0;\n      this.canvasHeight = 0;\n    } else {\n      this.canvasWidth = this.domWidth * this.pixelRatio | 0;\n      this.canvasHeight = this.domHeight * this.pixelRatio | 0;\n    }\n\n    var _this$_initLanes = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes),\n        _this$_initLanes2 = _slicedToArray(_this$_initLanes, 2),\n        x = _this$_initLanes2[0],\n        w = _this$_initLanes2[1];\n\n    this.x = x;\n    this.w = w;\n  }\n\n  _createClass(Settings, [{\n    key: \"_initLanes\",\n    value: function _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n      var remainingWidth = canvasWidth - canvasLeftOffset;\n\n      if (laneCount >= 3) {\n        var leftWidth = Math.floor(remainingWidth / 3);\n        var rightWidth = Math.floor(remainingWidth / 3);\n        var centerWidth = remainingWidth - leftWidth - rightWidth;\n        var leftOffset = canvasLeftOffset;\n        var centerOffset = leftOffset + leftWidth;\n        var rightOffset = leftOffset + leftWidth + centerWidth;\n        return [[0, leftOffset, centerOffset, leftOffset, rightOffset, leftOffset, centerOffset, leftOffset // Left | Center | Right\n        ], [0, leftWidth, centerWidth, leftWidth + centerWidth, rightWidth, leftWidth + centerWidth + rightWidth, centerWidth + rightWidth, leftWidth + centerWidth + rightWidth // Left | Center | Right\n        ]];\n      } else if (laneCount === 2) {\n        var _leftWidth = Math.floor(remainingWidth / 2);\n\n        var _rightWidth = remainingWidth - _leftWidth;\n\n        var _leftOffset = canvasLeftOffset;\n\n        var _rightOffset = _leftOffset + _leftWidth;\n\n        return [[0, _leftOffset, _leftOffset, _leftOffset, _rightOffset, _leftOffset, _leftOffset, _leftOffset // Left | Center | Right\n        ], [0, _leftWidth, _leftWidth, _leftWidth, _rightWidth, _leftWidth + _rightWidth, _leftWidth + _rightWidth, _leftWidth + _rightWidth // Left | Center | Right\n        ]];\n      } else {\n        var offset = canvasLeftOffset;\n        var width = remainingWidth;\n        return [[0, offset, offset, offset, offset, offset, offset, offset // Left | Center | Right\n        ], [0, width, width, width, width, width, width, width // Left | Center | Right\n        ]];\n      }\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.lineHeight === other.lineHeight && this.pixelRatio === other.pixelRatio && this.overviewRulerLanes === other.overviewRulerLanes && this.renderBorder === other.renderBorder && this.borderColor === other.borderColor && this.hideCursor === other.hideCursor && this.cursorColor === other.cursorColor && this.themeType === other.themeType && this.backgroundColor === other.backgroundColor && this.top === other.top && this.right === other.right && this.domWidth === other.domWidth && this.domHeight === other.domHeight && this.canvasWidth === other.canvasWidth && this.canvasHeight === other.canvasHeight;\n    }\n  }]);\n\n  return Settings;\n}();\n\nexport var DecorationsOverviewRuler = /*#__PURE__*/function (_ViewPart) {\n  _inherits(DecorationsOverviewRuler, _ViewPart);\n\n  var _super = _createSuper(DecorationsOverviewRuler);\n\n  function DecorationsOverviewRuler(context) {\n    var _this;\n\n    _classCallCheck(this, DecorationsOverviewRuler);\n\n    _this = _super.call(this, context);\n    _this._domNode = createFastDomNode(document.createElement('canvas'));\n\n    _this._domNode.setClassName('decorationsOverviewRuler');\n\n    _this._domNode.setPosition('absolute');\n\n    _this._domNode.setLayerHinting(true);\n\n    _this._domNode.setContain('strict');\n\n    _this._domNode.setAttribute('aria-hidden', 'true');\n\n    _this._updateSettings(false);\n\n    _this._tokensColorTrackerListener = TokenizationRegistry.onDidChange(function (e) {\n      if (e.changedColorMap) {\n        _this._updateSettings(true);\n      }\n    });\n    _this._cursorPositions = [];\n    return _this;\n  }\n\n  _createClass(DecorationsOverviewRuler, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(DecorationsOverviewRuler.prototype), \"dispose\", this).call(this);\n\n      this._tokensColorTrackerListener.dispose();\n    }\n  }, {\n    key: \"_updateSettings\",\n    value: function _updateSettings(renderNow) {\n      var newSettings = new Settings(this._context.configuration, this._context.theme);\n\n      if (this._settings && this._settings.equals(newSettings)) {\n        // nothing to do\n        return false;\n      }\n\n      this._settings = newSettings;\n\n      this._domNode.setTop(this._settings.top);\n\n      this._domNode.setRight(this._settings.right);\n\n      this._domNode.setWidth(this._settings.domWidth);\n\n      this._domNode.setHeight(this._settings.domHeight);\n\n      this._domNode.domNode.width = this._settings.canvasWidth;\n      this._domNode.domNode.height = this._settings.canvasHeight;\n\n      if (renderNow) {\n        this._render();\n      }\n\n      return true;\n    } // ---- begin view event handlers\n\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      return this._updateSettings(false);\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._cursorPositions = [];\n\n      for (var i = 0, len = e.selections.length; i < len; i++) {\n        this._cursorPositions[i] = e.selections[i].getPosition();\n      }\n\n      this._cursorPositions.sort(Position.compare);\n\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      if (e.affectsOverviewRuler) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollHeightChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onThemeChanged\",\n    value: function onThemeChanged(e) {\n      // invalidate color cache\n      this._context.model.invalidateOverviewRulerColorCache();\n\n      return this._updateSettings(false);\n    } // ---- end view event handlers\n\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._domNode.domNode;\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {// Nothing to read\n    }\n  }, {\n    key: \"render\",\n    value: function render(editorCtx) {\n      this._render();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      if (this._settings.overviewRulerLanes === 0) {\n        // overview ruler is off\n        this._domNode.setBackgroundColor(this._settings.backgroundColor ? this._settings.backgroundColor : '');\n\n        return;\n      }\n\n      var canvasWidth = this._settings.canvasWidth;\n      var canvasHeight = this._settings.canvasHeight;\n      var lineHeight = this._settings.lineHeight;\n      var viewLayout = this._context.viewLayout;\n\n      var outerHeight = this._context.viewLayout.getScrollHeight();\n\n      var heightRatio = canvasHeight / outerHeight;\n\n      var decorations = this._context.model.getAllOverviewRulerDecorations(this._context.theme);\n\n      var minDecorationHeight = 6\n      /* MIN_DECORATION_HEIGHT */\n      * this._settings.pixelRatio | 0;\n      var halfMinDecorationHeight = minDecorationHeight / 2 | 0;\n\n      var canvasCtx = this._domNode.domNode.getContext('2d');\n\n      if (this._settings.backgroundColor === null) {\n        canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n      } else {\n        canvasCtx.fillStyle = this._settings.backgroundColor;\n        canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n      }\n\n      var x = this._settings.x;\n      var w = this._settings.w; // Avoid flickering by always rendering the colors in the same order\n      // colors that don't use transparency will be sorted last (they start with #)\n\n      var colors = Object.keys(decorations);\n      colors.sort();\n\n      for (var cIndex = 0, cLen = colors.length; cIndex < cLen; cIndex++) {\n        var color = colors[cIndex];\n        var colorDecorations = decorations[color];\n        canvasCtx.fillStyle = color;\n        var prevLane = 0;\n        var prevY1 = 0;\n        var prevY2 = 0;\n\n        for (var i = 0, len = colorDecorations.length; i < len; i++) {\n          var lane = colorDecorations[3 * i];\n          var startLineNumber = colorDecorations[3 * i + 1];\n          var endLineNumber = colorDecorations[3 * i + 2];\n          var y1 = viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio | 0;\n          var y2 = (viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio | 0;\n          var height = y2 - y1;\n\n          if (height < minDecorationHeight) {\n            var yCenter = (y1 + y2) / 2 | 0;\n\n            if (yCenter < halfMinDecorationHeight) {\n              yCenter = halfMinDecorationHeight;\n            } else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n              yCenter = canvasHeight - halfMinDecorationHeight;\n            }\n\n            y1 = yCenter - halfMinDecorationHeight;\n            y2 = yCenter + halfMinDecorationHeight;\n          }\n\n          if (y1 > prevY2 + 1 || lane !== prevLane) {\n            // flush prev\n            if (i !== 0) {\n              canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n            }\n\n            prevLane = lane;\n            prevY1 = y1;\n            prevY2 = y2;\n          } else {\n            // merge into prev\n            if (y2 > prevY2) {\n              prevY2 = y2;\n            }\n          }\n        }\n\n        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n      } // Draw cursors\n\n\n      if (!this._settings.hideCursor && this._settings.cursorColor) {\n        var cursorHeight = 2 * this._settings.pixelRatio | 0;\n        var halfCursorHeight = cursorHeight / 2 | 0;\n        var cursorX = this._settings.x[7\n        /* Full */\n        ];\n        var cursorW = this._settings.w[7\n        /* Full */\n        ];\n        canvasCtx.fillStyle = this._settings.cursorColor;\n\n        var _prevY = -100;\n\n        var _prevY2 = -100;\n\n        for (var _i = 0, _len = this._cursorPositions.length; _i < _len; _i++) {\n          var cursor = this._cursorPositions[_i];\n\n          var _yCenter = viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio | 0;\n\n          if (_yCenter < halfCursorHeight) {\n            _yCenter = halfCursorHeight;\n          } else if (_yCenter + halfCursorHeight > canvasHeight) {\n            _yCenter = canvasHeight - halfCursorHeight;\n          }\n\n          var _y = _yCenter - halfCursorHeight;\n\n          var _y2 = _y + cursorHeight;\n\n          if (_y > _prevY2 + 1) {\n            // flush prev\n            if (_i !== 0) {\n              canvasCtx.fillRect(cursorX, _prevY, cursorW, _prevY2 - _prevY);\n            }\n\n            _prevY = _y;\n            _prevY2 = _y2;\n          } else {\n            // merge into prev\n            if (_y2 > _prevY2) {\n              _prevY2 = _y2;\n            }\n          }\n        }\n\n        canvasCtx.fillRect(cursorX, _prevY, cursorW, _prevY2 - _prevY);\n      }\n\n      if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n        canvasCtx.beginPath();\n        canvasCtx.lineWidth = 1;\n        canvasCtx.strokeStyle = this._settings.borderColor;\n        canvasCtx.moveTo(0, 0);\n        canvasCtx.lineTo(0, canvasHeight);\n        canvasCtx.stroke();\n        canvasCtx.moveTo(0, 0);\n        canvasCtx.lineTo(canvasWidth, 0);\n        canvasCtx.stroke();\n      }\n    }\n  }]);\n\n  return DecorationsOverviewRuler;\n}(ViewPart);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js"],"names":["createFastDomNode","Color","ViewPart","Position","TokenizationRegistry","editorCursorForeground","editorOverviewRulerBorder","editorOverviewRulerBackground","Settings","config","theme","options","lineHeight","get","pixelRatio","overviewRulerLanes","renderBorder","borderColor","getColor","toString","hideCursor","cursorColor","transparent","themeType","type","minimapOpts","minimapEnabled","enabled","minimapSide","side","backgroundColor","getDefaultBackground","Format","CSS","formatHex","layoutInfo","position","overviewRuler","top","right","domWidth","width","domHeight","height","canvasWidth","canvasHeight","_initLanes","x","w","canvasLeftOffset","laneCount","remainingWidth","leftWidth","Math","floor","rightWidth","centerWidth","leftOffset","centerOffset","rightOffset","offset","other","DecorationsOverviewRuler","context","_domNode","document","createElement","setClassName","setPosition","setLayerHinting","setContain","setAttribute","_updateSettings","_tokensColorTrackerListener","onDidChange","e","changedColorMap","_cursorPositions","dispose","renderNow","newSettings","_context","configuration","_settings","equals","setTop","setRight","setWidth","setHeight","domNode","_render","i","len","selections","length","getPosition","sort","compare","affectsOverviewRuler","scrollHeightChanged","model","invalidateOverviewRulerColorCache","ctx","editorCtx","setBackgroundColor","viewLayout","outerHeight","getScrollHeight","heightRatio","decorations","getAllOverviewRulerDecorations","minDecorationHeight","halfMinDecorationHeight","canvasCtx","getContext","clearRect","fillStyle","fillRect","colors","Object","keys","cIndex","cLen","color","colorDecorations","prevLane","prevY1","prevY2","lane","startLineNumber","endLineNumber","y1","getVerticalOffsetForLineNumber","y2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","cursor","lineNumber","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { ViewPart } from '../../view/viewPart.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { TokenizationRegistry } from '../../../common/modes.js';\r\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground } from '../../../common/view/editorColorRegistry.js';\r\nclass Settings {\r\n    constructor(config, theme) {\r\n        const options = config.options;\r\n        this.lineHeight = options.get(53 /* lineHeight */);\r\n        this.pixelRatio = options.get(122 /* pixelRatio */);\r\n        this.overviewRulerLanes = options.get(68 /* overviewRulerLanes */);\r\n        this.renderBorder = options.get(67 /* overviewRulerBorder */);\r\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\r\n        this.borderColor = borderColor ? borderColor.toString() : null;\r\n        this.hideCursor = options.get(46 /* hideCursorInOverviewRuler */);\r\n        const cursorColor = theme.getColor(editorCursorForeground);\r\n        this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\r\n        this.themeType = theme.type;\r\n        const minimapOpts = options.get(59 /* minimap */);\r\n        const minimapEnabled = minimapOpts.enabled;\r\n        const minimapSide = minimapOpts.side;\r\n        const backgroundColor = minimapEnabled\r\n            ? theme.getColor(editorOverviewRulerBackground) || TokenizationRegistry.getDefaultBackground()\r\n            : null;\r\n        if (backgroundColor === null || minimapSide === 'left') {\r\n            this.backgroundColor = null;\r\n        }\r\n        else {\r\n            this.backgroundColor = Color.Format.CSS.formatHex(backgroundColor);\r\n        }\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        const position = layoutInfo.overviewRuler;\r\n        this.top = position.top;\r\n        this.right = position.right;\r\n        this.domWidth = position.width;\r\n        this.domHeight = position.height;\r\n        if (this.overviewRulerLanes === 0) {\r\n            // overview ruler is off\r\n            this.canvasWidth = 0;\r\n            this.canvasHeight = 0;\r\n        }\r\n        else {\r\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\r\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\r\n        }\r\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\r\n        this.x = x;\r\n        this.w = w;\r\n    }\r\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\r\n        const remainingWidth = canvasWidth - canvasLeftOffset;\r\n        if (laneCount >= 3) {\r\n            const leftWidth = Math.floor(remainingWidth / 3);\r\n            const rightWidth = Math.floor(remainingWidth / 3);\r\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\r\n            const leftOffset = canvasLeftOffset;\r\n            const centerOffset = leftOffset + leftWidth;\r\n            const rightOffset = leftOffset + leftWidth + centerWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    leftOffset,\r\n                    centerOffset,\r\n                    leftOffset,\r\n                    rightOffset,\r\n                    leftOffset,\r\n                    centerOffset,\r\n                    leftOffset, // Left | Center | Right\r\n                ], [\r\n                    0,\r\n                    leftWidth,\r\n                    centerWidth,\r\n                    leftWidth + centerWidth,\r\n                    rightWidth,\r\n                    leftWidth + centerWidth + rightWidth,\r\n                    centerWidth + rightWidth,\r\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\r\n                ]\r\n            ];\r\n        }\r\n        else if (laneCount === 2) {\r\n            const leftWidth = Math.floor(remainingWidth / 2);\r\n            const rightWidth = remainingWidth - leftWidth;\r\n            const leftOffset = canvasLeftOffset;\r\n            const rightOffset = leftOffset + leftWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    rightOffset,\r\n                    leftOffset,\r\n                    leftOffset,\r\n                    leftOffset, // Left | Center | Right\r\n                ], [\r\n                    0,\r\n                    leftWidth,\r\n                    leftWidth,\r\n                    leftWidth,\r\n                    rightWidth,\r\n                    leftWidth + rightWidth,\r\n                    leftWidth + rightWidth,\r\n                    leftWidth + rightWidth, // Left | Center | Right\r\n                ]\r\n            ];\r\n        }\r\n        else {\r\n            const offset = canvasLeftOffset;\r\n            const width = remainingWidth;\r\n            return [\r\n                [\r\n                    0,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset,\r\n                    offset, // Left | Center | Right\r\n                ], [\r\n                    0,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width,\r\n                    width, // Left | Center | Right\r\n                ]\r\n            ];\r\n        }\r\n    }\r\n    equals(other) {\r\n        return (this.lineHeight === other.lineHeight\r\n            && this.pixelRatio === other.pixelRatio\r\n            && this.overviewRulerLanes === other.overviewRulerLanes\r\n            && this.renderBorder === other.renderBorder\r\n            && this.borderColor === other.borderColor\r\n            && this.hideCursor === other.hideCursor\r\n            && this.cursorColor === other.cursorColor\r\n            && this.themeType === other.themeType\r\n            && this.backgroundColor === other.backgroundColor\r\n            && this.top === other.top\r\n            && this.right === other.right\r\n            && this.domWidth === other.domWidth\r\n            && this.domHeight === other.domHeight\r\n            && this.canvasWidth === other.canvasWidth\r\n            && this.canvasHeight === other.canvasHeight);\r\n    }\r\n}\r\nexport class DecorationsOverviewRuler extends ViewPart {\r\n    constructor(context) {\r\n        super(context);\r\n        this._domNode = createFastDomNode(document.createElement('canvas'));\r\n        this._domNode.setClassName('decorationsOverviewRuler');\r\n        this._domNode.setPosition('absolute');\r\n        this._domNode.setLayerHinting(true);\r\n        this._domNode.setContain('strict');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._updateSettings(false);\r\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\r\n            if (e.changedColorMap) {\r\n                this._updateSettings(true);\r\n            }\r\n        });\r\n        this._cursorPositions = [];\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._tokensColorTrackerListener.dispose();\r\n    }\r\n    _updateSettings(renderNow) {\r\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\r\n        if (this._settings && this._settings.equals(newSettings)) {\r\n            // nothing to do\r\n            return false;\r\n        }\r\n        this._settings = newSettings;\r\n        this._domNode.setTop(this._settings.top);\r\n        this._domNode.setRight(this._settings.right);\r\n        this._domNode.setWidth(this._settings.domWidth);\r\n        this._domNode.setHeight(this._settings.domHeight);\r\n        this._domNode.domNode.width = this._settings.canvasWidth;\r\n        this._domNode.domNode.height = this._settings.canvasHeight;\r\n        if (renderNow) {\r\n            this._render();\r\n        }\r\n        return true;\r\n    }\r\n    // ---- begin view event handlers\r\n    onConfigurationChanged(e) {\r\n        return this._updateSettings(false);\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._cursorPositions = [];\r\n        for (let i = 0, len = e.selections.length; i < len; i++) {\r\n            this._cursorPositions[i] = e.selections[i].getPosition();\r\n        }\r\n        this._cursorPositions.sort(Position.compare);\r\n        return true;\r\n    }\r\n    onDecorationsChanged(e) {\r\n        if (e.affectsOverviewRuler) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollHeightChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    onThemeChanged(e) {\r\n        // invalidate color cache\r\n        this._context.model.invalidateOverviewRulerColorCache();\r\n        return this._updateSettings(false);\r\n    }\r\n    // ---- end view event handlers\r\n    getDomNode() {\r\n        return this._domNode.domNode;\r\n    }\r\n    prepareRender(ctx) {\r\n        // Nothing to read\r\n    }\r\n    render(editorCtx) {\r\n        this._render();\r\n    }\r\n    _render() {\r\n        if (this._settings.overviewRulerLanes === 0) {\r\n            // overview ruler is off\r\n            this._domNode.setBackgroundColor(this._settings.backgroundColor ? this._settings.backgroundColor : '');\r\n            return;\r\n        }\r\n        const canvasWidth = this._settings.canvasWidth;\r\n        const canvasHeight = this._settings.canvasHeight;\r\n        const lineHeight = this._settings.lineHeight;\r\n        const viewLayout = this._context.viewLayout;\r\n        const outerHeight = this._context.viewLayout.getScrollHeight();\r\n        const heightRatio = canvasHeight / outerHeight;\r\n        const decorations = this._context.model.getAllOverviewRulerDecorations(this._context.theme);\r\n        const minDecorationHeight = (6 /* MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\r\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\r\n        const canvasCtx = this._domNode.domNode.getContext('2d');\r\n        if (this._settings.backgroundColor === null) {\r\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        }\r\n        else {\r\n            canvasCtx.fillStyle = this._settings.backgroundColor;\r\n            canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n        }\r\n        const x = this._settings.x;\r\n        const w = this._settings.w;\r\n        // Avoid flickering by always rendering the colors in the same order\r\n        // colors that don't use transparency will be sorted last (they start with #)\r\n        const colors = Object.keys(decorations);\r\n        colors.sort();\r\n        for (let cIndex = 0, cLen = colors.length; cIndex < cLen; cIndex++) {\r\n            const color = colors[cIndex];\r\n            const colorDecorations = decorations[color];\r\n            canvasCtx.fillStyle = color;\r\n            let prevLane = 0;\r\n            let prevY1 = 0;\r\n            let prevY2 = 0;\r\n            for (let i = 0, len = colorDecorations.length; i < len; i++) {\r\n                const lane = colorDecorations[3 * i];\r\n                const startLineNumber = colorDecorations[3 * i + 1];\r\n                const endLineNumber = colorDecorations[3 * i + 2];\r\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\r\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\r\n                const height = y2 - y1;\r\n                if (height < minDecorationHeight) {\r\n                    let yCenter = ((y1 + y2) / 2) | 0;\r\n                    if (yCenter < halfMinDecorationHeight) {\r\n                        yCenter = halfMinDecorationHeight;\r\n                    }\r\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\r\n                        yCenter = canvasHeight - halfMinDecorationHeight;\r\n                    }\r\n                    y1 = yCenter - halfMinDecorationHeight;\r\n                    y2 = yCenter + halfMinDecorationHeight;\r\n                }\r\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\r\n                    // flush prev\r\n                    if (i !== 0) {\r\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\r\n                    }\r\n                    prevLane = lane;\r\n                    prevY1 = y1;\r\n                    prevY2 = y2;\r\n                }\r\n                else {\r\n                    // merge into prev\r\n                    if (y2 > prevY2) {\r\n                        prevY2 = y2;\r\n                    }\r\n                }\r\n            }\r\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\r\n        }\r\n        // Draw cursors\r\n        if (!this._settings.hideCursor && this._settings.cursorColor) {\r\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\r\n            const halfCursorHeight = (cursorHeight / 2) | 0;\r\n            const cursorX = this._settings.x[7 /* Full */];\r\n            const cursorW = this._settings.w[7 /* Full */];\r\n            canvasCtx.fillStyle = this._settings.cursorColor;\r\n            let prevY1 = -100;\r\n            let prevY2 = -100;\r\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\r\n                const cursor = this._cursorPositions[i];\r\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\r\n                if (yCenter < halfCursorHeight) {\r\n                    yCenter = halfCursorHeight;\r\n                }\r\n                else if (yCenter + halfCursorHeight > canvasHeight) {\r\n                    yCenter = canvasHeight - halfCursorHeight;\r\n                }\r\n                const y1 = yCenter - halfCursorHeight;\r\n                const y2 = y1 + cursorHeight;\r\n                if (y1 > prevY2 + 1) {\r\n                    // flush prev\r\n                    if (i !== 0) {\r\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\r\n                    }\r\n                    prevY1 = y1;\r\n                    prevY2 = y2;\r\n                }\r\n                else {\r\n                    // merge into prev\r\n                    if (y2 > prevY2) {\r\n                        prevY2 = y2;\r\n                    }\r\n                }\r\n            }\r\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\r\n        }\r\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\r\n            canvasCtx.beginPath();\r\n            canvasCtx.lineWidth = 1;\r\n            canvasCtx.strokeStyle = this._settings.borderColor;\r\n            canvasCtx.moveTo(0, 0);\r\n            canvasCtx.lineTo(0, canvasHeight);\r\n            canvasCtx.stroke();\r\n            canvasCtx.moveTo(0, 0);\r\n            canvasCtx.lineTo(canvasWidth, 0);\r\n            canvasCtx.stroke();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}