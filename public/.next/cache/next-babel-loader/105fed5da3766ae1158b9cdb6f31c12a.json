{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n  var handle = setTimeout(callback.bind(context), 0);\n  return {\n    dispose: function dispose() {\n      clearTimeout(handle);\n    }\n  };\n});\nexport var CancellationToken;\n\n(function (CancellationToken) {\n  function isCancellationToken(thing) {\n    if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n      return true;\n    }\n\n    if (thing instanceof MutableToken) {\n      return true;\n    }\n\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n\n    return typeof thing.isCancellationRequested === 'boolean' && typeof thing.onCancellationRequested === 'function';\n  }\n\n  CancellationToken.isCancellationToken = isCancellationToken;\n  CancellationToken.None = Object.freeze({\n    isCancellationRequested: false,\n    onCancellationRequested: Event.None\n  });\n  CancellationToken.Cancelled = Object.freeze({\n    isCancellationRequested: true,\n    onCancellationRequested: shortcutEvent\n  });\n})(CancellationToken || (CancellationToken = {}));\n\nvar MutableToken = /*#__PURE__*/function () {\n  function MutableToken() {\n    _classCallCheck(this, MutableToken);\n\n    this._isCancelled = false;\n    this._emitter = null;\n  }\n\n  _createClass(MutableToken, [{\n    key: \"cancel\",\n    value: function cancel() {\n      if (!this._isCancelled) {\n        this._isCancelled = true;\n\n        if (this._emitter) {\n          this._emitter.fire(undefined);\n\n          this.dispose();\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._emitter) {\n        this._emitter.dispose();\n\n        this._emitter = null;\n      }\n    }\n  }, {\n    key: \"isCancellationRequested\",\n    get: function get() {\n      return this._isCancelled;\n    }\n  }, {\n    key: \"onCancellationRequested\",\n    get: function get() {\n      if (this._isCancelled) {\n        return shortcutEvent;\n      }\n\n      if (!this._emitter) {\n        this._emitter = new Emitter();\n      }\n\n      return this._emitter.event;\n    }\n  }]);\n\n  return MutableToken;\n}();\n\nexport var CancellationTokenSource = /*#__PURE__*/function () {\n  function CancellationTokenSource(parent) {\n    _classCallCheck(this, CancellationTokenSource);\n\n    this._token = undefined;\n    this._parentListener = undefined;\n    this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n  }\n\n  _createClass(CancellationTokenSource, [{\n    key: \"cancel\",\n    value: function cancel() {\n      if (!this._token) {\n        // save an object by returning the default\n        // cancelled token when cancellation happens\n        // before someone asks for the token\n        this._token = CancellationToken.Cancelled;\n      } else if (this._token instanceof MutableToken) {\n        // actually cancel\n        this._token.cancel();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var cancel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (cancel) {\n        this.cancel();\n      }\n\n      if (this._parentListener) {\n        this._parentListener.dispose();\n      }\n\n      if (!this._token) {\n        // ensure to initialize with an empty token if we had none\n        this._token = CancellationToken.None;\n      } else if (this._token instanceof MutableToken) {\n        // actually dispose\n        this._token.dispose();\n      }\n    }\n  }, {\n    key: \"token\",\n    get: function get() {\n      if (!this._token) {\n        // be lazy and create the token only when\n        // actually needed\n        this._token = new MutableToken();\n      }\n\n      return this._token;\n    }\n  }]);\n\n  return CancellationTokenSource;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/cancellation.js"],"names":["Emitter","Event","shortcutEvent","Object","freeze","callback","context","handle","setTimeout","bind","dispose","clearTimeout","CancellationToken","isCancellationToken","thing","None","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","fire","undefined","event","CancellationTokenSource","parent","_token","_parentListener","cancel"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter, Event } from './event.js';\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    const handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nexport var CancellationToken;\r\n(function (CancellationToken) {\r\n    function isCancellationToken(thing) {\r\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\r\n            return true;\r\n        }\r\n        if (thing instanceof MutableToken) {\r\n            return true;\r\n        }\r\n        if (!thing || typeof thing !== 'object') {\r\n            return false;\r\n        }\r\n        return typeof thing.isCancellationRequested === 'boolean'\r\n            && typeof thing.onCancellationRequested === 'function';\r\n    }\r\n    CancellationToken.isCancellationToken = isCancellationToken;\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: shortcutEvent\r\n    });\r\n})(CancellationToken || (CancellationToken = {}));\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n        this._emitter = null;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = null;\r\n        }\r\n    }\r\n}\r\nexport class CancellationTokenSource {\r\n    constructor(parent) {\r\n        this._token = undefined;\r\n        this._parentListener = undefined;\r\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\r\n    }\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually cancel\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose(cancel = false) {\r\n        if (cancel) {\r\n            this.cancel();\r\n        }\r\n        if (this._parentListener) {\r\n            this._parentListener.dispose();\r\n        }\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}