{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { EditorWorkerClient } from './editorWorkerServiceImpl.js';\nimport * as types from '../../../base/common/types.js';\n/**\r\n * Create a new web worker that has model syncing capabilities built in.\r\n * Specify an AMD module to load that will `create` an object that will be proxied.\r\n */\n\nexport function createWebWorker(modelService, opts) {\n  return new MonacoWebWorkerImpl(modelService, opts);\n}\n\nvar MonacoWebWorkerImpl = /*#__PURE__*/function (_EditorWorkerClient) {\n  _inherits(MonacoWebWorkerImpl, _EditorWorkerClient);\n\n  var _super = _createSuper(MonacoWebWorkerImpl);\n\n  function MonacoWebWorkerImpl(modelService, opts) {\n    var _this;\n\n    _classCallCheck(this, MonacoWebWorkerImpl);\n\n    _this = _super.call(this, modelService, opts.keepIdleModels || false, opts.label);\n    _this._foreignModuleId = opts.moduleId;\n    _this._foreignModuleCreateData = opts.createData || null;\n    _this._foreignModuleHost = opts.host || null;\n    _this._foreignProxy = null;\n    return _this;\n  } // foreign host request\n\n\n  _createClass(MonacoWebWorkerImpl, [{\n    key: \"fhr\",\n    value: function fhr(method, args) {\n      if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n        return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n      }\n\n      try {\n        return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }, {\n    key: \"_getForeignProxy\",\n    value: function _getForeignProxy() {\n      var _this2 = this;\n\n      if (!this._foreignProxy) {\n        this._foreignProxy = this._getProxy().then(function (proxy) {\n          var foreignHostMethods = _this2._foreignModuleHost ? types.getAllMethodNames(_this2._foreignModuleHost) : [];\n          return proxy.loadForeignModule(_this2._foreignModuleId, _this2._foreignModuleCreateData, foreignHostMethods).then(function (foreignMethods) {\n            _this2._foreignModuleCreateData = null;\n\n            var proxyMethodRequest = function proxyMethodRequest(method, args) {\n              return proxy.fmr(method, args);\n            };\n\n            var createProxyMethod = function createProxyMethod(method, proxyMethodRequest) {\n              return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n              };\n            };\n\n            var foreignProxy = {};\n\n            var _iterator = _createForOfIteratorHelper(foreignMethods),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var foreignMethod = _step.value;\n                foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return foreignProxy;\n          });\n        });\n      }\n\n      return this._foreignProxy;\n    }\n  }, {\n    key: \"getProxy\",\n    value: function getProxy() {\n      return this._getForeignProxy();\n    }\n  }, {\n    key: \"withSyncedResources\",\n    value: function withSyncedResources(resources) {\n      var _this3 = this;\n\n      return this._withSyncedResources(resources).then(function (_) {\n        return _this3.getProxy();\n      });\n    }\n  }]);\n\n  return MonacoWebWorkerImpl;\n}(EditorWorkerClient);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/services/webWorker.js"],"names":["EditorWorkerClient","types","createWebWorker","modelService","opts","MonacoWebWorkerImpl","keepIdleModels","label","_foreignModuleId","moduleId","_foreignModuleCreateData","createData","_foreignModuleHost","host","_foreignProxy","method","args","Promise","reject","Error","resolve","apply","e","_getProxy","then","proxy","foreignHostMethods","getAllMethodNames","loadForeignModule","foreignMethods","proxyMethodRequest","fmr","createProxyMethod","Array","prototype","slice","call","arguments","foreignProxy","foreignMethod","_getForeignProxy","resources","_withSyncedResources","_","getProxy"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditorWorkerClient } from './editorWorkerServiceImpl.js';\r\nimport * as types from '../../../base/common/types.js';\r\n/**\r\n * Create a new web worker that has model syncing capabilities built in.\r\n * Specify an AMD module to load that will `create` an object that will be proxied.\r\n */\r\nexport function createWebWorker(modelService, opts) {\r\n    return new MonacoWebWorkerImpl(modelService, opts);\r\n}\r\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\r\n    constructor(modelService, opts) {\r\n        super(modelService, opts.keepIdleModels || false, opts.label);\r\n        this._foreignModuleId = opts.moduleId;\r\n        this._foreignModuleCreateData = opts.createData || null;\r\n        this._foreignModuleHost = opts.host || null;\r\n        this._foreignProxy = null;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    _getForeignProxy() {\r\n        if (!this._foreignProxy) {\r\n            this._foreignProxy = this._getProxy().then((proxy) => {\r\n                const foreignHostMethods = this._foreignModuleHost ? types.getAllMethodNames(this._foreignModuleHost) : [];\r\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\r\n                    this._foreignModuleCreateData = null;\r\n                    const proxyMethodRequest = (method, args) => {\r\n                        return proxy.fmr(method, args);\r\n                    };\r\n                    const createProxyMethod = (method, proxyMethodRequest) => {\r\n                        return function () {\r\n                            const args = Array.prototype.slice.call(arguments, 0);\r\n                            return proxyMethodRequest(method, args);\r\n                        };\r\n                    };\r\n                    let foreignProxy = {};\r\n                    for (const foreignMethod of foreignMethods) {\r\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\r\n                    }\r\n                    return foreignProxy;\r\n                });\r\n            });\r\n        }\r\n        return this._foreignProxy;\r\n    }\r\n    getProxy() {\r\n        return this._getForeignProxy();\r\n    }\r\n    withSyncedResources(resources) {\r\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}