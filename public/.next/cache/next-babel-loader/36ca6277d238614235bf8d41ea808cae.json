{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from '../../registry/common/platform.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport var Extensions = {\n  JSONContribution: 'base.contributions.json'\n};\n\nfunction normalizeId(id) {\n  if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n    return id.substring(0, id.length - 1);\n  }\n\n  return id;\n}\n\nvar JSONContributionRegistry = /*#__PURE__*/function () {\n  function JSONContributionRegistry() {\n    _classCallCheck(this, JSONContributionRegistry);\n\n    this._onDidChangeSchema = new Emitter();\n    this.schemasById = {};\n  }\n\n  _createClass(JSONContributionRegistry, [{\n    key: \"registerSchema\",\n    value: function registerSchema(uri, unresolvedSchemaContent) {\n      this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\n      this._onDidChangeSchema.fire(uri);\n    }\n  }, {\n    key: \"notifySchemaChanged\",\n    value: function notifySchemaChanged(uri) {\n      this._onDidChangeSchema.fire(uri);\n    }\n  }]);\n\n  return JSONContributionRegistry;\n}();\n\nvar jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js"],"names":["platform","Emitter","Extensions","JSONContribution","normalizeId","id","length","charAt","substring","JSONContributionRegistry","_onDidChangeSchema","schemasById","uri","unresolvedSchemaContent","fire","jsonContributionRegistry","Registry","add"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,QAAZ,MAA0B,mCAA1B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,gBAAgB,EAAE;AADI,CAAnB;;AAGP,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACrB,MAAIA,EAAE,CAACC,MAAH,GAAY,CAAZ,IAAiBD,EAAE,CAACE,MAAH,CAAUF,EAAE,CAACC,MAAH,GAAY,CAAtB,MAA6B,GAAlD,EAAuD;AACnD,WAAOD,EAAE,CAACG,SAAH,CAAa,CAAb,EAAgBH,EAAE,CAACC,MAAH,GAAY,CAA5B,CAAP;AACH;;AACD,SAAOD,EAAP;AACH;;IACKI,wB;AACF,sCAAc;AAAA;;AACV,SAAKC,kBAAL,GAA0B,IAAIT,OAAJ,EAA1B;AACA,SAAKU,WAAL,GAAmB,EAAnB;AACH;;;;mCACcC,G,EAAKC,uB,EAAyB;AACzC,WAAKF,WAAL,CAAiBP,WAAW,CAACQ,GAAD,CAA5B,IAAqCC,uBAArC;;AACA,WAAKH,kBAAL,CAAwBI,IAAxB,CAA6BF,GAA7B;AACH;;;wCACmBA,G,EAAK;AACrB,WAAKF,kBAAL,CAAwBI,IAAxB,CAA6BF,GAA7B;AACH;;;;;;AAEL,IAAMG,wBAAwB,GAAG,IAAIN,wBAAJ,EAAjC;AACAT,QAAQ,CAACgB,QAAT,CAAkBC,GAAlB,CAAsBf,UAAU,CAACC,gBAAjC,EAAmDY,wBAAnD","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as platform from '../../registry/common/platform.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport const Extensions = {\r\n    JSONContribution: 'base.contributions.json'\r\n};\r\nfunction normalizeId(id) {\r\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\r\n        return id.substring(0, id.length - 1);\r\n    }\r\n    return id;\r\n}\r\nclass JSONContributionRegistry {\r\n    constructor() {\r\n        this._onDidChangeSchema = new Emitter();\r\n        this.schemasById = {};\r\n    }\r\n    registerSchema(uri, unresolvedSchemaContent) {\r\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\r\n        this._onDidChangeSchema.fire(uri);\r\n    }\r\n    notifySchemaChanged(uri) {\r\n        this._onDidChangeSchema.fire(uri);\r\n    }\r\n}\r\nconst jsonContributionRegistry = new JSONContributionRegistry();\r\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\r\n"]},"metadata":{},"sourceType":"module"}