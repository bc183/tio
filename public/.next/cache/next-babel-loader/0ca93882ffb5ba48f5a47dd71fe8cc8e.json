{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isObject, isUndefinedOrNull, isArray } from './types.js';\nexport function deepClone(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof RegExp) {\n    // See https://github.com/microsoft/TypeScript/issues/10990\n    return obj;\n  }\n\n  var result = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] && typeof obj[key] === 'object') {\n      result[key] = deepClone(obj[key]);\n    } else {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\nexport function deepFreeze(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n\n  var stack = [obj];\n\n  while (stack.length > 0) {\n    var _obj = stack.shift();\n\n    Object.freeze(_obj);\n\n    for (var key in _obj) {\n      if (_hasOwnProperty.call(_obj, key)) {\n        var prop = _obj[key];\n\n        if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n          stack.push(prop);\n        }\n      }\n    }\n  }\n\n  return obj;\n}\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n  return _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj, changer, seen) {\n  if (isUndefinedOrNull(obj)) {\n    return obj;\n  }\n\n  var changed = changer(obj);\n\n  if (typeof changed !== 'undefined') {\n    return changed;\n  }\n\n  if (isArray(obj)) {\n    var r1 = [];\n\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var e = _step.value;\n        r1.push(_cloneAndChange(e, changer, seen));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return r1;\n  }\n\n  if (isObject(obj)) {\n    if (seen.has(obj)) {\n      throw new Error('Cannot clone recursive data-structure');\n    }\n\n    seen.add(obj);\n    var r2 = {};\n\n    for (var i2 in obj) {\n      if (_hasOwnProperty.call(obj, i2)) {\n        r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n      }\n    }\n\n    seen[\"delete\"](obj);\n    return r2;\n  }\n\n  return obj;\n}\n/**\r\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\r\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\r\n */\n\n\nexport function mixin(destination, source) {\n  var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!isObject(destination)) {\n    return source;\n  }\n\n  if (isObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      if (key in destination) {\n        if (overwrite) {\n          if (isObject(destination[key]) && isObject(source[key])) {\n            mixin(destination[key], source[key], overwrite);\n          } else {\n            destination[key] = source[key];\n          }\n        }\n      } else {\n        destination[key] = source[key];\n      }\n    });\n  }\n\n  return destination;\n}\nexport function equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n\n  if (one === null || one === undefined || other === null || other === undefined) {\n    return false;\n  }\n\n  if (typeof one !== typeof other) {\n    return false;\n  }\n\n  if (typeof one !== 'object') {\n    return false;\n  }\n\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n\n  var i;\n  var key;\n\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    var oneKeys = [];\n\n    for (key in one) {\n      oneKeys.push(key);\n    }\n\n    oneKeys.sort();\n    var otherKeys = [];\n\n    for (key in other) {\n      otherKeys.push(key);\n    }\n\n    otherKeys.sort();\n\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n  var result = fn(obj);\n  return typeof result === 'undefined' ? defaultValue : result;\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/objects.js"],"names":["isObject","isUndefinedOrNull","isArray","deepClone","obj","RegExp","result","Array","Object","keys","forEach","key","deepFreeze","stack","length","shift","freeze","_hasOwnProperty","call","prop","isFrozen","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","changed","r1","e","has","Error","add","r2","i2","mixin","destination","source","overwrite","equals","one","other","undefined","i","oneKeys","sort","otherKeys","getOrDefault","fn","defaultValue"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isObject, isUndefinedOrNull, isArray } from './types.js';\r\nexport function deepClone(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n    if (obj instanceof RegExp) {\r\n        // See https://github.com/microsoft/TypeScript/issues/10990\r\n        return obj;\r\n    }\r\n    const result = Array.isArray(obj) ? [] : {};\r\n    Object.keys(obj).forEach((key) => {\r\n        if (obj[key] && typeof obj[key] === 'object') {\r\n            result[key] = deepClone(obj[key]);\r\n        }\r\n        else {\r\n            result[key] = obj[key];\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexport function deepFreeze(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n    const stack = [obj];\r\n    while (stack.length > 0) {\r\n        const obj = stack.shift();\r\n        Object.freeze(obj);\r\n        for (const key in obj) {\r\n            if (_hasOwnProperty.call(obj, key)) {\r\n                const prop = obj[key];\r\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\r\n                    stack.push(prop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function cloneAndChange(obj, changer) {\r\n    return _cloneAndChange(obj, changer, new Set());\r\n}\r\nfunction _cloneAndChange(obj, changer, seen) {\r\n    if (isUndefinedOrNull(obj)) {\r\n        return obj;\r\n    }\r\n    const changed = changer(obj);\r\n    if (typeof changed !== 'undefined') {\r\n        return changed;\r\n    }\r\n    if (isArray(obj)) {\r\n        const r1 = [];\r\n        for (const e of obj) {\r\n            r1.push(_cloneAndChange(e, changer, seen));\r\n        }\r\n        return r1;\r\n    }\r\n    if (isObject(obj)) {\r\n        if (seen.has(obj)) {\r\n            throw new Error('Cannot clone recursive data-structure');\r\n        }\r\n        seen.add(obj);\r\n        const r2 = {};\r\n        for (let i2 in obj) {\r\n            if (_hasOwnProperty.call(obj, i2)) {\r\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\r\n            }\r\n        }\r\n        seen.delete(obj);\r\n        return r2;\r\n    }\r\n    return obj;\r\n}\r\n/**\r\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\r\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\r\n */\r\nexport function mixin(destination, source, overwrite = true) {\r\n    if (!isObject(destination)) {\r\n        return source;\r\n    }\r\n    if (isObject(source)) {\r\n        Object.keys(source).forEach(key => {\r\n            if (key in destination) {\r\n                if (overwrite) {\r\n                    if (isObject(destination[key]) && isObject(source[key])) {\r\n                        mixin(destination[key], source[key], overwrite);\r\n                    }\r\n                    else {\r\n                        destination[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                destination[key] = source[key];\r\n            }\r\n        });\r\n    }\r\n    return destination;\r\n}\r\nexport function equals(one, other) {\r\n    if (one === other) {\r\n        return true;\r\n    }\r\n    if (one === null || one === undefined || other === null || other === undefined) {\r\n        return false;\r\n    }\r\n    if (typeof one !== typeof other) {\r\n        return false;\r\n    }\r\n    if (typeof one !== 'object') {\r\n        return false;\r\n    }\r\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\r\n        return false;\r\n    }\r\n    let i;\r\n    let key;\r\n    if (Array.isArray(one)) {\r\n        if (one.length !== other.length) {\r\n            return false;\r\n        }\r\n        for (i = 0; i < one.length; i++) {\r\n            if (!equals(one[i], other[i])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const oneKeys = [];\r\n        for (key in one) {\r\n            oneKeys.push(key);\r\n        }\r\n        oneKeys.sort();\r\n        const otherKeys = [];\r\n        for (key in other) {\r\n            otherKeys.push(key);\r\n        }\r\n        otherKeys.sort();\r\n        if (!equals(oneKeys, otherKeys)) {\r\n            return false;\r\n        }\r\n        for (i = 0; i < oneKeys.length; i++) {\r\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function getOrDefault(obj, fn, defaultValue) {\r\n    const result = fn(obj);\r\n    return typeof result === 'undefined' ? defaultValue : result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}