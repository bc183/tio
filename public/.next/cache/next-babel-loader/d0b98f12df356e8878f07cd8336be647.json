{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\n\nvar invalidFunc = function invalidFunc() {\n  throw new Error(\"Invalid change accessor\");\n};\n\nexport var ViewZones = /*#__PURE__*/function (_ViewPart) {\n  _inherits(ViewZones, _ViewPart);\n\n  var _super = _createSuper(ViewZones);\n\n  function ViewZones(context) {\n    var _this;\n\n    _classCallCheck(this, ViewZones);\n\n    _this = _super.call(this, context);\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(124\n    /* layoutInfo */\n    );\n    _this._lineHeight = options.get(53\n    /* lineHeight */\n    );\n    _this._contentWidth = layoutInfo.contentWidth;\n    _this._contentLeft = layoutInfo.contentLeft;\n    _this.domNode = createFastDomNode(document.createElement('div'));\n\n    _this.domNode.setClassName('view-zones');\n\n    _this.domNode.setPosition('absolute');\n\n    _this.domNode.setAttribute('role', 'presentation');\n\n    _this.domNode.setAttribute('aria-hidden', 'true');\n\n    _this.marginDomNode = createFastDomNode(document.createElement('div'));\n\n    _this.marginDomNode.setClassName('margin-view-zones');\n\n    _this.marginDomNode.setPosition('absolute');\n\n    _this.marginDomNode.setAttribute('role', 'presentation');\n\n    _this.marginDomNode.setAttribute('aria-hidden', 'true');\n\n    _this._zones = {};\n    return _this;\n  }\n\n  _createClass(ViewZones, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ViewZones.prototype), \"dispose\", this).call(this);\n\n      this._zones = {};\n    } // ---- begin view event handlers\n\n  }, {\n    key: \"_recomputeWhitespacesProps\",\n    value: function _recomputeWhitespacesProps() {\n      var _this2 = this;\n\n      var whitespaces = this._context.viewLayout.getWhitespaces();\n\n      var oldWhitespaces = new Map();\n\n      var _iterator = _createForOfIteratorHelper(whitespaces),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var whitespace = _step.value;\n          oldWhitespaces.set(whitespace.id, whitespace);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var hadAChange = false;\n\n      this._context.model.changeWhitespace(function (whitespaceAccessor) {\n        var keys = Object.keys(_this2._zones);\n\n        for (var i = 0, len = keys.length; i < len; i++) {\n          var id = keys[i];\n          var zone = _this2._zones[id];\n\n          var props = _this2._computeWhitespaceProps(zone.delegate);\n\n          var oldWhitespace = oldWhitespaces.get(id);\n\n          if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n            whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n\n            _this2._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\n            hadAChange = true;\n          }\n        }\n      });\n\n      return hadAChange;\n    }\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(124\n      /* layoutInfo */\n      );\n      this._lineHeight = options.get(53\n      /* lineHeight */\n      );\n      this._contentWidth = layoutInfo.contentWidth;\n      this._contentLeft = layoutInfo.contentLeft;\n\n      if (e.hasChanged(53\n      /* lineHeight */\n      )) {\n        this._recomputeWhitespacesProps();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged(e) {\n      return this._recomputeWhitespacesProps();\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    } // ---- end view event handlers\n\n  }, {\n    key: \"_getZoneOrdinal\",\n    value: function _getZoneOrdinal(zone) {\n      if (typeof zone.afterColumn !== 'undefined') {\n        return zone.afterColumn;\n      }\n\n      return 10000;\n    }\n  }, {\n    key: \"_computeWhitespaceProps\",\n    value: function _computeWhitespaceProps(zone) {\n      if (zone.afterLineNumber === 0) {\n        return {\n          afterViewLineNumber: 0,\n          heightInPx: this._heightInPixels(zone),\n          minWidthInPx: this._minWidthInPixels(zone)\n        };\n      }\n\n      var zoneAfterModelPosition;\n\n      if (typeof zone.afterColumn !== 'undefined') {\n        zoneAfterModelPosition = this._context.model.validateModelPosition({\n          lineNumber: zone.afterLineNumber,\n          column: zone.afterColumn\n        });\n      } else {\n        var validAfterLineNumber = this._context.model.validateModelPosition({\n          lineNumber: zone.afterLineNumber,\n          column: 1\n        }).lineNumber;\n\n        zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\n      }\n\n      var zoneBeforeModelPosition;\n\n      if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n        zoneBeforeModelPosition = this._context.model.validateModelPosition({\n          lineNumber: zoneAfterModelPosition.lineNumber + 1,\n          column: 1\n        });\n      } else {\n        zoneBeforeModelPosition = this._context.model.validateModelPosition({\n          lineNumber: zoneAfterModelPosition.lineNumber,\n          column: zoneAfterModelPosition.column + 1\n        });\n      }\n\n      var viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition);\n\n      var isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n\n      return {\n        afterViewLineNumber: viewPosition.lineNumber,\n        heightInPx: isVisible ? this._heightInPixels(zone) : 0,\n        minWidthInPx: this._minWidthInPixels(zone)\n      };\n    }\n  }, {\n    key: \"changeViewZones\",\n    value: function changeViewZones(callback) {\n      var _this3 = this;\n\n      var zonesHaveChanged = false;\n\n      this._context.model.changeWhitespace(function (whitespaceAccessor) {\n        var changeAccessor = {\n          addZone: function addZone(zone) {\n            zonesHaveChanged = true;\n            return _this3._addZone(whitespaceAccessor, zone);\n          },\n          removeZone: function removeZone(id) {\n            if (!id) {\n              return;\n            }\n\n            zonesHaveChanged = _this3._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n          },\n          layoutZone: function layoutZone(id) {\n            if (!id) {\n              return;\n            }\n\n            zonesHaveChanged = _this3._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n          }\n        };\n        safeInvoke1Arg(callback, changeAccessor); // Invalidate changeAccessor\n\n        changeAccessor.addZone = invalidFunc;\n        changeAccessor.removeZone = invalidFunc;\n        changeAccessor.layoutZone = invalidFunc;\n      });\n\n      return zonesHaveChanged;\n    }\n  }, {\n    key: \"_addZone\",\n    value: function _addZone(whitespaceAccessor, zone) {\n      var props = this._computeWhitespaceProps(zone);\n\n      var whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n      var myZone = {\n        whitespaceId: whitespaceId,\n        delegate: zone,\n        isVisible: false,\n        domNode: createFastDomNode(zone.domNode),\n        marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n      };\n\n      this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n\n      myZone.domNode.setPosition('absolute');\n      myZone.domNode.domNode.style.width = '100%';\n      myZone.domNode.setDisplay('none');\n      myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n      this.domNode.appendChild(myZone.domNode);\n\n      if (myZone.marginDomNode) {\n        myZone.marginDomNode.setPosition('absolute');\n        myZone.marginDomNode.domNode.style.width = '100%';\n        myZone.marginDomNode.setDisplay('none');\n        myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.marginDomNode.appendChild(myZone.marginDomNode);\n      }\n\n      this._zones[myZone.whitespaceId] = myZone;\n      this.setShouldRender();\n      return myZone.whitespaceId;\n    }\n  }, {\n    key: \"_removeZone\",\n    value: function _removeZone(whitespaceAccessor, id) {\n      if (this._zones.hasOwnProperty(id)) {\n        var zone = this._zones[id];\n        delete this._zones[id];\n        whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n        zone.domNode.removeAttribute('monaco-visible-view-zone');\n        zone.domNode.removeAttribute('monaco-view-zone');\n        zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n\n        if (zone.marginDomNode) {\n          zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n          zone.marginDomNode.removeAttribute('monaco-view-zone');\n          zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n        }\n\n        this.setShouldRender();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_layoutZone\",\n    value: function _layoutZone(whitespaceAccessor, id) {\n      if (this._zones.hasOwnProperty(id)) {\n        var zone = this._zones[id];\n\n        var props = this._computeWhitespaceProps(zone.delegate); // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n\n\n        whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx); // TODO@Alex: change `newOrdinal` too\n\n        this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\n        this.setShouldRender();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"shouldSuppressMouseDownOnViewZone\",\n    value: function shouldSuppressMouseDownOnViewZone(id) {\n      if (this._zones.hasOwnProperty(id)) {\n        var zone = this._zones[id];\n        return Boolean(zone.delegate.suppressMouseDown);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_heightInPixels\",\n    value: function _heightInPixels(zone) {\n      if (typeof zone.heightInPx === 'number') {\n        return zone.heightInPx;\n      }\n\n      if (typeof zone.heightInLines === 'number') {\n        return this._lineHeight * zone.heightInLines;\n      }\n\n      return this._lineHeight;\n    }\n  }, {\n    key: \"_minWidthInPixels\",\n    value: function _minWidthInPixels(zone) {\n      if (typeof zone.minWidthInPx === 'number') {\n        return zone.minWidthInPx;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_safeCallOnComputedHeight\",\n    value: function _safeCallOnComputedHeight(zone, height) {\n      if (typeof zone.onComputedHeight === 'function') {\n        try {\n          zone.onComputedHeight(height);\n        } catch (e) {\n          onUnexpectedError(e);\n        }\n      }\n    }\n  }, {\n    key: \"_safeCallOnDomNodeTop\",\n    value: function _safeCallOnDomNodeTop(zone, top) {\n      if (typeof zone.onDomNodeTop === 'function') {\n        try {\n          zone.onDomNodeTop(top);\n        } catch (e) {\n          onUnexpectedError(e);\n        }\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {// Nothing to read\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      var visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n      var visibleZones = {};\n      var hasVisibleZone = false;\n\n      for (var i = 0, len = visibleWhitespaces.length; i < len; i++) {\n        visibleZones[visibleWhitespaces[i].id] = visibleWhitespaces[i];\n        hasVisibleZone = true;\n      }\n\n      var keys = Object.keys(this._zones);\n\n      for (var _i = 0, _len = keys.length; _i < _len; _i++) {\n        var id = keys[_i];\n        var zone = this._zones[id];\n        var newTop = 0;\n        var newHeight = 0;\n        var newDisplay = 'none';\n\n        if (visibleZones.hasOwnProperty(id)) {\n          newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n          newHeight = visibleZones[id].height;\n          newDisplay = 'block'; // zone is visible\n\n          if (!zone.isVisible) {\n            zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n            zone.isVisible = true;\n          }\n\n          this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n        } else {\n          if (zone.isVisible) {\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.isVisible = false;\n          }\n\n          this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n        }\n\n        zone.domNode.setTop(newTop);\n        zone.domNode.setHeight(newHeight);\n        zone.domNode.setDisplay(newDisplay);\n\n        if (zone.marginDomNode) {\n          zone.marginDomNode.setTop(newTop);\n          zone.marginDomNode.setHeight(newHeight);\n          zone.marginDomNode.setDisplay(newDisplay);\n        }\n      }\n\n      if (hasVisibleZone) {\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n        this.marginDomNode.setWidth(this._contentLeft);\n      }\n    }\n  }]);\n\n  return ViewZones;\n}(ViewPart);\n\nfunction safeInvoke1Arg(func, arg1) {\n  try {\n    return func(arg1);\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js"],"names":["createFastDomNode","onUnexpectedError","ViewPart","Position","invalidFunc","Error","ViewZones","context","options","_context","configuration","layoutInfo","get","_lineHeight","_contentWidth","contentWidth","_contentLeft","contentLeft","domNode","document","createElement","setClassName","setPosition","setAttribute","marginDomNode","_zones","whitespaces","viewLayout","getWhitespaces","oldWhitespaces","Map","whitespace","set","id","hadAChange","model","changeWhitespace","whitespaceAccessor","keys","Object","i","len","length","zone","props","_computeWhitespaceProps","delegate","oldWhitespace","afterLineNumber","afterViewLineNumber","height","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","e","hasChanged","_recomputeWhitespacesProps","scrollTopChanged","scrollWidthChanged","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","validateModelPosition","lineNumber","column","validAfterLineNumber","getModelLineMaxColumn","zoneBeforeModelPosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","isVisible","modelPositionIsVisible","callback","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","safeInvoke1Arg","whitespaceId","insertWhitespace","_getZoneOrdinal","myZone","style","width","setDisplay","appendChild","setShouldRender","hasOwnProperty","removeWhitespace","removeAttribute","parentNode","removeChild","Boolean","suppressMouseDown","heightInLines","onComputedHeight","top","onDomNodeTop","ctx","visibleWhitespaces","viewportData","whitespaceViewportData","visibleZones","hasVisibleZone","newTop","newHeight","newDisplay","verticalOffset","bigNumbersDelta","_safeCallOnDomNodeTop","getScrolledTopFromAbsoluteTop","setTop","setHeight","setWidth","Math","max","scrollWidth","func","arg1"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { ViewPart } from '../../view/viewPart.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\r\nexport class ViewZones extends ViewPart {\r\n    constructor(context) {\r\n        super(context);\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setClassName('view-zones');\r\n        this.domNode.setPosition('absolute');\r\n        this.domNode.setAttribute('role', 'presentation');\r\n        this.domNode.setAttribute('aria-hidden', 'true');\r\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\r\n        this.marginDomNode.setClassName('margin-view-zones');\r\n        this.marginDomNode.setPosition('absolute');\r\n        this.marginDomNode.setAttribute('role', 'presentation');\r\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\r\n        this._zones = {};\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._zones = {};\r\n    }\r\n    // ---- begin view event handlers\r\n    _recomputeWhitespacesProps() {\r\n        const whitespaces = this._context.viewLayout.getWhitespaces();\r\n        const oldWhitespaces = new Map();\r\n        for (const whitespace of whitespaces) {\r\n            oldWhitespaces.set(whitespace.id, whitespace);\r\n        }\r\n        let hadAChange = false;\r\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\r\n            const keys = Object.keys(this._zones);\r\n            for (let i = 0, len = keys.length; i < len; i++) {\r\n                const id = keys[i];\r\n                const zone = this._zones[id];\r\n                const props = this._computeWhitespaceProps(zone.delegate);\r\n                const oldWhitespace = oldWhitespaces.get(id);\r\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\r\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\r\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\r\n                    hadAChange = true;\r\n                }\r\n            }\r\n        });\r\n        return hadAChange;\r\n    }\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        if (e.hasChanged(53 /* lineHeight */)) {\r\n            this._recomputeWhitespacesProps();\r\n        }\r\n        return true;\r\n    }\r\n    onLineMappingChanged(e) {\r\n        return this._recomputeWhitespacesProps();\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged || e.scrollWidthChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    // ---- end view event handlers\r\n    _getZoneOrdinal(zone) {\r\n        if (typeof zone.afterColumn !== 'undefined') {\r\n            return zone.afterColumn;\r\n        }\r\n        return 10000;\r\n    }\r\n    _computeWhitespaceProps(zone) {\r\n        if (zone.afterLineNumber === 0) {\r\n            return {\r\n                afterViewLineNumber: 0,\r\n                heightInPx: this._heightInPixels(zone),\r\n                minWidthInPx: this._minWidthInPixels(zone)\r\n            };\r\n        }\r\n        let zoneAfterModelPosition;\r\n        if (typeof zone.afterColumn !== 'undefined') {\r\n            zoneAfterModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zone.afterLineNumber,\r\n                column: zone.afterColumn\r\n            });\r\n        }\r\n        else {\r\n            const validAfterLineNumber = this._context.model.validateModelPosition({\r\n                lineNumber: zone.afterLineNumber,\r\n                column: 1\r\n            }).lineNumber;\r\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.model.getModelLineMaxColumn(validAfterLineNumber));\r\n        }\r\n        let zoneBeforeModelPosition;\r\n        if (zoneAfterModelPosition.column === this._context.model.getModelLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\r\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\r\n                column: 1\r\n            });\r\n        }\r\n        else {\r\n            zoneBeforeModelPosition = this._context.model.validateModelPosition({\r\n                lineNumber: zoneAfterModelPosition.lineNumber,\r\n                column: zoneAfterModelPosition.column + 1\r\n            });\r\n        }\r\n        const viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition);\r\n        const isVisible = this._context.model.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\r\n        return {\r\n            afterViewLineNumber: viewPosition.lineNumber,\r\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\r\n            minWidthInPx: this._minWidthInPixels(zone)\r\n        };\r\n    }\r\n    changeViewZones(callback) {\r\n        let zonesHaveChanged = false;\r\n        this._context.model.changeWhitespace((whitespaceAccessor) => {\r\n            const changeAccessor = {\r\n                addZone: (zone) => {\r\n                    zonesHaveChanged = true;\r\n                    return this._addZone(whitespaceAccessor, zone);\r\n                },\r\n                removeZone: (id) => {\r\n                    if (!id) {\r\n                        return;\r\n                    }\r\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\r\n                },\r\n                layoutZone: (id) => {\r\n                    if (!id) {\r\n                        return;\r\n                    }\r\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\r\n                }\r\n            };\r\n            safeInvoke1Arg(callback, changeAccessor);\r\n            // Invalidate changeAccessor\r\n            changeAccessor.addZone = invalidFunc;\r\n            changeAccessor.removeZone = invalidFunc;\r\n            changeAccessor.layoutZone = invalidFunc;\r\n        });\r\n        return zonesHaveChanged;\r\n    }\r\n    _addZone(whitespaceAccessor, zone) {\r\n        const props = this._computeWhitespaceProps(zone);\r\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\r\n        const myZone = {\r\n            whitespaceId: whitespaceId,\r\n            delegate: zone,\r\n            isVisible: false,\r\n            domNode: createFastDomNode(zone.domNode),\r\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\r\n        };\r\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\r\n        myZone.domNode.setPosition('absolute');\r\n        myZone.domNode.domNode.style.width = '100%';\r\n        myZone.domNode.setDisplay('none');\r\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\r\n        this.domNode.appendChild(myZone.domNode);\r\n        if (myZone.marginDomNode) {\r\n            myZone.marginDomNode.setPosition('absolute');\r\n            myZone.marginDomNode.domNode.style.width = '100%';\r\n            myZone.marginDomNode.setDisplay('none');\r\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\r\n            this.marginDomNode.appendChild(myZone.marginDomNode);\r\n        }\r\n        this._zones[myZone.whitespaceId] = myZone;\r\n        this.setShouldRender();\r\n        return myZone.whitespaceId;\r\n    }\r\n    _removeZone(whitespaceAccessor, id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            delete this._zones[id];\r\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\r\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\r\n            zone.domNode.removeAttribute('monaco-view-zone');\r\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\r\n            if (zone.marginDomNode) {\r\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\r\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\r\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\r\n            }\r\n            this.setShouldRender();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _layoutZone(whitespaceAccessor, id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            const props = this._computeWhitespaceProps(zone.delegate);\r\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\r\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\r\n            // TODO@Alex: change `newOrdinal` too\r\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\r\n            this.setShouldRender();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    shouldSuppressMouseDownOnViewZone(id) {\r\n        if (this._zones.hasOwnProperty(id)) {\r\n            const zone = this._zones[id];\r\n            return Boolean(zone.delegate.suppressMouseDown);\r\n        }\r\n        return false;\r\n    }\r\n    _heightInPixels(zone) {\r\n        if (typeof zone.heightInPx === 'number') {\r\n            return zone.heightInPx;\r\n        }\r\n        if (typeof zone.heightInLines === 'number') {\r\n            return this._lineHeight * zone.heightInLines;\r\n        }\r\n        return this._lineHeight;\r\n    }\r\n    _minWidthInPixels(zone) {\r\n        if (typeof zone.minWidthInPx === 'number') {\r\n            return zone.minWidthInPx;\r\n        }\r\n        return 0;\r\n    }\r\n    _safeCallOnComputedHeight(zone, height) {\r\n        if (typeof zone.onComputedHeight === 'function') {\r\n            try {\r\n                zone.onComputedHeight(height);\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n            }\r\n        }\r\n    }\r\n    _safeCallOnDomNodeTop(zone, top) {\r\n        if (typeof zone.onDomNodeTop === 'function') {\r\n            try {\r\n                zone.onDomNodeTop(top);\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n            }\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        // Nothing to read\r\n    }\r\n    render(ctx) {\r\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\r\n        const visibleZones = {};\r\n        let hasVisibleZone = false;\r\n        for (let i = 0, len = visibleWhitespaces.length; i < len; i++) {\r\n            visibleZones[visibleWhitespaces[i].id] = visibleWhitespaces[i];\r\n            hasVisibleZone = true;\r\n        }\r\n        const keys = Object.keys(this._zones);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const id = keys[i];\r\n            const zone = this._zones[id];\r\n            let newTop = 0;\r\n            let newHeight = 0;\r\n            let newDisplay = 'none';\r\n            if (visibleZones.hasOwnProperty(id)) {\r\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\r\n                newHeight = visibleZones[id].height;\r\n                newDisplay = 'block';\r\n                // zone is visible\r\n                if (!zone.isVisible) {\r\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\r\n                    zone.isVisible = true;\r\n                }\r\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\r\n            }\r\n            else {\r\n                if (zone.isVisible) {\r\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\r\n                    zone.isVisible = false;\r\n                }\r\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\r\n            }\r\n            zone.domNode.setTop(newTop);\r\n            zone.domNode.setHeight(newHeight);\r\n            zone.domNode.setDisplay(newDisplay);\r\n            if (zone.marginDomNode) {\r\n                zone.marginDomNode.setTop(newTop);\r\n                zone.marginDomNode.setHeight(newHeight);\r\n                zone.marginDomNode.setDisplay(newDisplay);\r\n            }\r\n        }\r\n        if (hasVisibleZone) {\r\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\r\n            this.marginDomNode.setWidth(this._contentLeft);\r\n        }\r\n    }\r\n}\r\nfunction safeInvoke1Arg(func, arg1) {\r\n    try {\r\n        return func(arg1);\r\n    }\r\n    catch (e) {\r\n        onUnexpectedError(e);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}