{"ast":null,"code":"import _regeneratorRuntime from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose as _dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/worker/defaultWorkerFactory.js';\nimport { Range } from '../core/range.js';\nimport * as modes from '../modes.js';\nimport { LanguageConfigurationRegistry } from '../modes/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\nimport { IModelService } from './modelService.js';\nimport { ITextResourceConfigurationService } from './textResourceConfigurationService.js';\nimport { regExpFlags } from '../../../base/common/strings.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\n/**\r\n * Stop syncing a model to the worker if it was not needed for 1 min.\r\n */\n\nvar STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\r\n * Stop the worker if it was not needed for 5 min.\r\n */\n\nvar STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\n\nfunction canSyncModel(modelService, resource) {\n  var model = modelService.getModel(resource);\n\n  if (!model) {\n    return false;\n  }\n\n  if (model.isTooLargeForSyncing()) {\n    return false;\n  }\n\n  return true;\n}\n\nvar EditorWorkerServiceImpl = /*#__PURE__*/function (_Disposable) {\n  _inherits(EditorWorkerServiceImpl, _Disposable);\n\n  var _super = _createSuper(EditorWorkerServiceImpl);\n\n  function EditorWorkerServiceImpl(modelService, configurationService, logService) {\n    var _this;\n\n    _classCallCheck(this, EditorWorkerServiceImpl);\n\n    _this = _super.call(this);\n    _this._modelService = modelService;\n    _this._workerManager = _this._register(new WorkerManager(_this._modelService));\n    _this._logService = logService; // register default link-provider and default completions-provider\n\n    _this._register(modes.LinkProviderRegistry.register('*', {\n      provideLinks: function provideLinks(model, token) {\n        if (!canSyncModel(_this._modelService, model.uri)) {\n          return Promise.resolve({\n            links: []\n          }); // File too large\n        }\n\n        return _this._workerManager.withWorker().then(function (client) {\n          return client.computeLinks(model.uri);\n        }).then(function (links) {\n          return links && {\n            links: links\n          };\n        });\n      }\n    }));\n\n    _this._register(modes.CompletionProviderRegistry.register('*', new WordBasedCompletionItemProvider(_this._workerManager, configurationService, _this._modelService)));\n\n    return _this;\n  }\n\n  _createClass(EditorWorkerServiceImpl, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(EditorWorkerServiceImpl.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"canComputeDiff\",\n    value: function canComputeDiff(original, modified) {\n      return canSyncModel(this._modelService, original) && canSyncModel(this._modelService, modified);\n    }\n  }, {\n    key: \"computeDiff\",\n    value: function computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n      return this._workerManager.withWorker().then(function (client) {\n        return client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime);\n      });\n    }\n  }, {\n    key: \"computeMoreMinimalEdits\",\n    value: function computeMoreMinimalEdits(resource, edits) {\n      var _this2 = this;\n\n      if (isNonEmptyArray(edits)) {\n        if (!canSyncModel(this._modelService, resource)) {\n          return Promise.resolve(edits); // File too large\n        }\n\n        var sw = StopWatch.create(true);\n\n        var result = this._workerManager.withWorker().then(function (client) {\n          return client.computeMoreMinimalEdits(resource, edits);\n        });\n\n        result[\"finally\"](function () {\n          return _this2._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed());\n        });\n        return Promise.race([result, timeout(1000).then(function () {\n          return edits;\n        })]);\n      } else {\n        return Promise.resolve(undefined);\n      }\n    }\n  }, {\n    key: \"canNavigateValueSet\",\n    value: function canNavigateValueSet(resource) {\n      return canSyncModel(this._modelService, resource);\n    }\n  }, {\n    key: \"navigateValueSet\",\n    value: function navigateValueSet(resource, range, up) {\n      return this._workerManager.withWorker().then(function (client) {\n        return client.navigateValueSet(resource, range, up);\n      });\n    }\n  }, {\n    key: \"canComputeWordRanges\",\n    value: function canComputeWordRanges(resource) {\n      return canSyncModel(this._modelService, resource);\n    }\n  }, {\n    key: \"computeWordRanges\",\n    value: function computeWordRanges(resource, range) {\n      return this._workerManager.withWorker().then(function (client) {\n        return client.computeWordRanges(resource, range);\n      });\n    }\n  }]);\n\n  return EditorWorkerServiceImpl;\n}(Disposable);\n\nEditorWorkerServiceImpl = __decorate([__param(0, IModelService), __param(1, ITextResourceConfigurationService), __param(2, ILogService)], EditorWorkerServiceImpl);\nexport { EditorWorkerServiceImpl };\n\nvar WordBasedCompletionItemProvider = /*#__PURE__*/function () {\n  function WordBasedCompletionItemProvider(workerManager, configurationService, modelService) {\n    _classCallCheck(this, WordBasedCompletionItemProvider);\n\n    this._debugDisplayName = 'wordbasedCompletions';\n    this._workerManager = workerManager;\n    this._configurationService = configurationService;\n    this._modelService = modelService;\n  }\n\n  _createClass(WordBasedCompletionItemProvider, [{\n    key: \"provideCompletionItems\",\n    value: function provideCompletionItems(model, position) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var config, models, _iterator, _step, candidate, wordDefRegExp, word, replace, insert, client, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                config = this._configurationService.getValue(model.uri, position, 'editor');\n\n                if (config.wordBasedSuggestions) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", undefined);\n\n              case 3:\n                models = [];\n\n                if (!(config.wordBasedSuggestionsMode === 'currentDocument')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                // only current file and only if not too large\n                if (canSyncModel(this._modelService, model.uri)) {\n                  models.push(model.uri);\n                }\n\n                _context.next = 26;\n                break;\n\n              case 8:\n                // either all files or files of same language\n                _iterator = _createForOfIteratorHelper(this._modelService.getModels());\n                _context.prev = 9;\n\n                _iterator.s();\n\n              case 11:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 18;\n                  break;\n                }\n\n                candidate = _step.value;\n\n                if (canSyncModel(this._modelService, candidate.uri)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 16);\n\n              case 15:\n                if (candidate === model) {\n                  models.unshift(candidate.uri);\n                } else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageIdentifier().id === model.getLanguageIdentifier().id) {\n                  models.push(candidate.uri);\n                }\n\n              case 16:\n                _context.next = 11;\n                break;\n\n              case 18:\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](9);\n\n                _iterator.e(_context.t0);\n\n              case 23:\n                _context.prev = 23;\n\n                _iterator.f();\n\n                return _context.finish(23);\n\n              case 26:\n                if (!(models.length === 0)) {\n                  _context.next = 28;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", undefined);\n\n              case 28:\n                wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n                word = model.getWordAtPosition(position);\n                replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n                insert = replace.setEndPosition(position.lineNumber, position.column);\n                _context.next = 34;\n                return this._workerManager.withWorker();\n\n              case 34:\n                client = _context.sent;\n                _context.next = 37;\n                return client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n\n              case 37:\n                data = _context.sent;\n\n                if (data) {\n                  _context.next = 40;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", undefined);\n\n              case 40:\n                return _context.abrupt(\"return\", {\n                  duration: data.duration,\n                  suggestions: data.words.map(function (word) {\n                    return {\n                      kind: 18\n                      /* Text */\n                      ,\n                      label: word,\n                      insertText: word,\n                      range: {\n                        insert: insert,\n                        replace: replace\n                      }\n                    };\n                  })\n                });\n\n              case 41:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 20, 23, 26]]);\n      }));\n    }\n  }]);\n\n  return WordBasedCompletionItemProvider;\n}();\n\nvar WorkerManager = /*#__PURE__*/function (_Disposable2) {\n  _inherits(WorkerManager, _Disposable2);\n\n  var _super2 = _createSuper(WorkerManager);\n\n  function WorkerManager(modelService) {\n    var _this3;\n\n    _classCallCheck(this, WorkerManager);\n\n    _this3 = _super2.call(this);\n    _this3._modelService = modelService;\n    _this3._editorWorkerClient = null;\n    _this3._lastWorkerUsedTime = new Date().getTime();\n\n    var stopWorkerInterval = _this3._register(new IntervalTimer());\n\n    stopWorkerInterval.cancelAndSet(function () {\n      return _this3._checkStopIdleWorker();\n    }, Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n\n    _this3._register(_this3._modelService.onModelRemoved(function (_) {\n      return _this3._checkStopEmptyWorker();\n    }));\n\n    return _this3;\n  }\n\n  _createClass(WorkerManager, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._editorWorkerClient) {\n        this._editorWorkerClient.dispose();\n\n        this._editorWorkerClient = null;\n      }\n\n      _get(_getPrototypeOf(WorkerManager.prototype), \"dispose\", this).call(this);\n    }\n    /**\r\n     * Check if the model service has no more models and stop the worker if that is the case.\r\n     */\n\n  }, {\n    key: \"_checkStopEmptyWorker\",\n    value: function _checkStopEmptyWorker() {\n      if (!this._editorWorkerClient) {\n        return;\n      }\n\n      var models = this._modelService.getModels();\n\n      if (models.length === 0) {\n        // There are no more models => nothing possible for me to do\n        this._editorWorkerClient.dispose();\n\n        this._editorWorkerClient = null;\n      }\n    }\n    /**\r\n     * Check if the worker has been idle for a while and then stop it.\r\n     */\n\n  }, {\n    key: \"_checkStopIdleWorker\",\n    value: function _checkStopIdleWorker() {\n      if (!this._editorWorkerClient) {\n        return;\n      }\n\n      var timeSinceLastWorkerUsedTime = new Date().getTime() - this._lastWorkerUsedTime;\n\n      if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n        this._editorWorkerClient.dispose();\n\n        this._editorWorkerClient = null;\n      }\n    }\n  }, {\n    key: \"withWorker\",\n    value: function withWorker() {\n      this._lastWorkerUsedTime = new Date().getTime();\n\n      if (!this._editorWorkerClient) {\n        this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService');\n      }\n\n      return Promise.resolve(this._editorWorkerClient);\n    }\n  }]);\n\n  return WorkerManager;\n}(Disposable);\n\nvar EditorModelManager = /*#__PURE__*/function (_Disposable3) {\n  _inherits(EditorModelManager, _Disposable3);\n\n  var _super3 = _createSuper(EditorModelManager);\n\n  function EditorModelManager(proxy, modelService, keepIdleModels) {\n    var _this4;\n\n    _classCallCheck(this, EditorModelManager);\n\n    _this4 = _super3.call(this);\n    _this4._syncedModels = Object.create(null);\n    _this4._syncedModelsLastUsedTime = Object.create(null);\n    _this4._proxy = proxy;\n    _this4._modelService = modelService;\n\n    if (!keepIdleModels) {\n      var timer = new IntervalTimer();\n      timer.cancelAndSet(function () {\n        return _this4._checkStopModelSync();\n      }, Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n\n      _this4._register(timer);\n    }\n\n    return _this4;\n  }\n\n  _createClass(EditorModelManager, [{\n    key: \"dispose\",\n    value: function dispose() {\n      for (var modelUrl in this._syncedModels) {\n        _dispose(this._syncedModels[modelUrl]);\n      }\n\n      this._syncedModels = Object.create(null);\n      this._syncedModelsLastUsedTime = Object.create(null);\n\n      _get(_getPrototypeOf(EditorModelManager.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"ensureSyncedResources\",\n    value: function ensureSyncedResources(resources) {\n      var _iterator2 = _createForOfIteratorHelper(resources),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var resource = _step2.value;\n          var resourceStr = resource.toString();\n\n          if (!this._syncedModels[resourceStr]) {\n            this._beginModelSync(resource);\n          }\n\n          if (this._syncedModels[resourceStr]) {\n            this._syncedModelsLastUsedTime[resourceStr] = new Date().getTime();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"_checkStopModelSync\",\n    value: function _checkStopModelSync() {\n      var currentTime = new Date().getTime();\n      var toRemove = [];\n\n      for (var modelUrl in this._syncedModelsLastUsedTime) {\n        var elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n\n        if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n          toRemove.push(modelUrl);\n        }\n      }\n\n      for (var _i = 0, _toRemove = toRemove; _i < _toRemove.length; _i++) {\n        var e = _toRemove[_i];\n\n        this._stopModelSync(e);\n      }\n    }\n  }, {\n    key: \"_beginModelSync\",\n    value: function _beginModelSync(resource) {\n      var _this5 = this;\n\n      var model = this._modelService.getModel(resource);\n\n      if (!model) {\n        return;\n      }\n\n      if (model.isTooLargeForSyncing()) {\n        return;\n      }\n\n      var modelUrl = resource.toString();\n\n      this._proxy.acceptNewModel({\n        url: model.uri.toString(),\n        lines: model.getLinesContent(),\n        EOL: model.getEOL(),\n        versionId: model.getVersionId()\n      });\n\n      var toDispose = new DisposableStore();\n      toDispose.add(model.onDidChangeContent(function (e) {\n        _this5._proxy.acceptModelChanged(modelUrl.toString(), e);\n      }));\n      toDispose.add(model.onWillDispose(function () {\n        _this5._stopModelSync(modelUrl);\n      }));\n      toDispose.add(toDisposable(function () {\n        _this5._proxy.acceptRemovedModel(modelUrl);\n      }));\n      this._syncedModels[modelUrl] = toDispose;\n    }\n  }, {\n    key: \"_stopModelSync\",\n    value: function _stopModelSync(modelUrl) {\n      var toDispose = this._syncedModels[modelUrl];\n      delete this._syncedModels[modelUrl];\n      delete this._syncedModelsLastUsedTime[modelUrl];\n\n      _dispose(toDispose);\n    }\n  }]);\n\n  return EditorModelManager;\n}(Disposable);\n\nvar SynchronousWorkerClient = /*#__PURE__*/function () {\n  function SynchronousWorkerClient(instance) {\n    _classCallCheck(this, SynchronousWorkerClient);\n\n    this._instance = instance;\n    this._proxyObj = Promise.resolve(this._instance);\n  }\n\n  _createClass(SynchronousWorkerClient, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._instance.dispose();\n    }\n  }, {\n    key: \"getProxyObject\",\n    value: function getProxyObject() {\n      return this._proxyObj;\n    }\n  }]);\n\n  return SynchronousWorkerClient;\n}();\n\nexport var EditorWorkerHost = /*#__PURE__*/function () {\n  function EditorWorkerHost(workerClient) {\n    _classCallCheck(this, EditorWorkerHost);\n\n    this._workerClient = workerClient;\n  } // foreign host request\n\n\n  _createClass(EditorWorkerHost, [{\n    key: \"fhr\",\n    value: function fhr(method, args) {\n      return this._workerClient.fhr(method, args);\n    }\n  }]);\n\n  return EditorWorkerHost;\n}();\nexport var EditorWorkerClient = /*#__PURE__*/function (_Disposable4) {\n  _inherits(EditorWorkerClient, _Disposable4);\n\n  var _super4 = _createSuper(EditorWorkerClient);\n\n  function EditorWorkerClient(modelService, keepIdleModels, label) {\n    var _this6;\n\n    _classCallCheck(this, EditorWorkerClient);\n\n    _this6 = _super4.call(this);\n    _this6._disposed = false;\n    _this6._modelService = modelService;\n    _this6._keepIdleModels = keepIdleModels;\n    _this6._workerFactory = new DefaultWorkerFactory(label);\n    _this6._worker = null;\n    _this6._modelManager = null;\n    return _this6;\n  } // foreign host request\n\n\n  _createClass(EditorWorkerClient, [{\n    key: \"fhr\",\n    value: function fhr(method, args) {\n      throw new Error(\"Not implemented!\");\n    }\n  }, {\n    key: \"_getOrCreateWorker\",\n    value: function _getOrCreateWorker() {\n      if (!this._worker) {\n        try {\n          this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n        } catch (err) {\n          logOnceWebWorkerWarning(err);\n          this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n        }\n      }\n\n      return this._worker;\n    }\n  }, {\n    key: \"_getProxy\",\n    value: function _getProxy() {\n      var _this7 = this;\n\n      return this._getOrCreateWorker().getProxyObject().then(undefined, function (err) {\n        logOnceWebWorkerWarning(err);\n        _this7._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(_this7), null));\n        return _this7._getOrCreateWorker().getProxyObject();\n      });\n    }\n  }, {\n    key: \"_getOrCreateModelManager\",\n    value: function _getOrCreateModelManager(proxy) {\n      if (!this._modelManager) {\n        this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n      }\n\n      return this._modelManager;\n    }\n  }, {\n    key: \"_withSyncedResources\",\n    value: function _withSyncedResources(resources) {\n      var _this8 = this;\n\n      if (this._disposed) {\n        return Promise.reject(canceled());\n      }\n\n      return this._getProxy().then(function (proxy) {\n        _this8._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\n\n        return proxy;\n      });\n    }\n  }, {\n    key: \"computeDiff\",\n    value: function computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\n      return this._withSyncedResources([original, modified]).then(function (proxy) {\n        return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\n      });\n    }\n  }, {\n    key: \"computeMoreMinimalEdits\",\n    value: function computeMoreMinimalEdits(resource, edits) {\n      return this._withSyncedResources([resource]).then(function (proxy) {\n        return proxy.computeMoreMinimalEdits(resource.toString(), edits);\n      });\n    }\n  }, {\n    key: \"computeLinks\",\n    value: function computeLinks(resource) {\n      return this._withSyncedResources([resource]).then(function (proxy) {\n        return proxy.computeLinks(resource.toString());\n      });\n    }\n  }, {\n    key: \"textualSuggest\",\n    value: function textualSuggest(resources, leadingWord, wordDefRegExp) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var proxy, wordDef, wordDefFlags;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._withSyncedResources(resources);\n\n              case 2:\n                proxy = _context2.sent;\n                wordDef = wordDefRegExp.source;\n                wordDefFlags = regExpFlags(wordDefRegExp);\n                return _context2.abrupt(\"return\", proxy.textualSuggest(resources.map(function (r) {\n                  return r.toString();\n                }), leadingWord, wordDef, wordDefFlags));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"computeWordRanges\",\n    value: function computeWordRanges(resource, range) {\n      var _this9 = this;\n\n      return this._withSyncedResources([resource]).then(function (proxy) {\n        var model = _this9._modelService.getModel(resource);\n\n        if (!model) {\n          return Promise.resolve(null);\n        }\n\n        var wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n        var wordDef = wordDefRegExp.source;\n        var wordDefFlags = regExpFlags(wordDefRegExp);\n        return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n      });\n    }\n  }, {\n    key: \"navigateValueSet\",\n    value: function navigateValueSet(resource, range, up) {\n      var _this10 = this;\n\n      return this._withSyncedResources([resource]).then(function (proxy) {\n        var model = _this10._modelService.getModel(resource);\n\n        if (!model) {\n          return null;\n        }\n\n        var wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\n        var wordDef = wordDefRegExp.source;\n        var wordDefFlags = regExpFlags(wordDefRegExp);\n        return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(EditorWorkerClient.prototype), \"dispose\", this).call(this);\n\n      this._disposed = true;\n    }\n  }]);\n\n  return EditorWorkerClient;\n}(Disposable);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerServiceImpl.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","IntervalTimer","timeout","Disposable","dispose","toDisposable","DisposableStore","SimpleWorkerClient","logOnceWebWorkerWarning","DefaultWorkerFactory","Range","modes","LanguageConfigurationRegistry","EditorSimpleWorker","IModelService","ITextResourceConfigurationService","regExpFlags","isNonEmptyArray","ILogService","StopWatch","canceled","STOP_SYNC_MODEL_DELTA_TIME_MS","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","resource","model","getModel","isTooLargeForSyncing","EditorWorkerServiceImpl","configurationService","logService","_modelService","_workerManager","_register","WorkerManager","_logService","LinkProviderRegistry","register","provideLinks","token","uri","links","withWorker","client","computeLinks","CompletionProviderRegistry","WordBasedCompletionItemProvider","original","modified","ignoreTrimWhitespace","maxComputationTime","computeDiff","edits","sw","create","computeMoreMinimalEdits","trace","toString","elapsed","race","undefined","range","up","navigateValueSet","computeWordRanges","workerManager","_debugDisplayName","_configurationService","position","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","push","getModels","candidate","unshift","getLanguageIdentifier","id","wordDefRegExp","getWordDefinition","word","getWordAtPosition","replace","fromPositions","lineNumber","startColumn","endColumn","insert","setEndPosition","column","textualSuggest","data","duration","suggestions","words","map","kind","label","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","stopWorkerInterval","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","timeSinceLastWorkerUsedTime","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","modelUrl","resources","resourceStr","_beginModelSync","currentTime","toRemove","elapsedTime","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","versionId","getVersionId","toDispose","add","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","EditorWorkerHost","workerClient","_workerClient","method","args","fhr","_disposed","_keepIdleModels","_workerFactory","_worker","_modelManager","Error","err","_getOrCreateWorker","getProxyObject","_getProxy","_getOrCreateModelManager","ensureSyncedResources","_withSyncedResources","leadingWord","wordDef","source","wordDefFlags"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\r\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\r\nimport { DefaultWorkerFactory } from '../../../base/worker/defaultWorkerFactory.js';\r\nimport { Range } from '../core/range.js';\r\nimport * as modes from '../modes.js';\r\nimport { LanguageConfigurationRegistry } from '../modes/languageConfigurationRegistry.js';\r\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { ITextResourceConfigurationService } from './textResourceConfigurationService.js';\r\nimport { regExpFlags } from '../../../base/common/strings.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\n/**\r\n * Stop syncing a model to the worker if it was not needed for 1 min.\r\n */\r\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\r\n/**\r\n * Stop the worker if it was not needed for 5 min.\r\n */\r\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\r\nfunction canSyncModel(modelService, resource) {\r\n    let model = modelService.getModel(resource);\r\n    if (!model) {\r\n        return false;\r\n    }\r\n    if (model.isTooLargeForSyncing()) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nlet EditorWorkerServiceImpl = class EditorWorkerServiceImpl extends Disposable {\r\n    constructor(modelService, configurationService, logService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._workerManager = this._register(new WorkerManager(this._modelService));\r\n        this._logService = logService;\r\n        // register default link-provider and default completions-provider\r\n        this._register(modes.LinkProviderRegistry.register('*', {\r\n            provideLinks: (model, token) => {\r\n                if (!canSyncModel(this._modelService, model.uri)) {\r\n                    return Promise.resolve({ links: [] }); // File too large\r\n                }\r\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\r\n                    return links && { links };\r\n                });\r\n            }\r\n        }));\r\n        this._register(modes.CompletionProviderRegistry.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    canComputeDiff(original, modified) {\r\n        return (canSyncModel(this._modelService, original) && canSyncModel(this._modelService, modified));\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._workerManager.withWorker().then(client => client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime));\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        if (isNonEmptyArray(edits)) {\r\n            if (!canSyncModel(this._modelService, resource)) {\r\n                return Promise.resolve(edits); // File too large\r\n            }\r\n            const sw = StopWatch.create(true);\r\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits));\r\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\r\n            return Promise.race([result, timeout(1000).then(() => edits)]);\r\n        }\r\n        else {\r\n            return Promise.resolve(undefined);\r\n        }\r\n    }\r\n    canNavigateValueSet(resource) {\r\n        return (canSyncModel(this._modelService, resource));\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\r\n    }\r\n    canComputeWordRanges(resource) {\r\n        return canSyncModel(this._modelService, resource);\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\r\n    }\r\n};\r\nEditorWorkerServiceImpl = __decorate([\r\n    __param(0, IModelService),\r\n    __param(1, ITextResourceConfigurationService),\r\n    __param(2, ILogService)\r\n], EditorWorkerServiceImpl);\r\nexport { EditorWorkerServiceImpl };\r\nclass WordBasedCompletionItemProvider {\r\n    constructor(workerManager, configurationService, modelService) {\r\n        this._debugDisplayName = 'wordbasedCompletions';\r\n        this._workerManager = workerManager;\r\n        this._configurationService = configurationService;\r\n        this._modelService = modelService;\r\n    }\r\n    provideCompletionItems(model, position) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\r\n            if (!config.wordBasedSuggestions) {\r\n                return undefined;\r\n            }\r\n            const models = [];\r\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\r\n                // only current file and only if not too large\r\n                if (canSyncModel(this._modelService, model.uri)) {\r\n                    models.push(model.uri);\r\n                }\r\n            }\r\n            else {\r\n                // either all files or files of same language\r\n                for (const candidate of this._modelService.getModels()) {\r\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\r\n                        continue;\r\n                    }\r\n                    if (candidate === model) {\r\n                        models.unshift(candidate.uri);\r\n                    }\r\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageIdentifier().id === model.getLanguageIdentifier().id) {\r\n                        models.push(candidate.uri);\r\n                    }\r\n                }\r\n            }\r\n            if (models.length === 0) {\r\n                return undefined; // File too large, no other files\r\n            }\r\n            const wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            const word = model.getWordAtPosition(position);\r\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\r\n            const client = yield this._workerManager.withWorker();\r\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\r\n            if (!data) {\r\n                return undefined;\r\n            }\r\n            return {\r\n                duration: data.duration,\r\n                suggestions: data.words.map((word) => {\r\n                    return {\r\n                        kind: 18 /* Text */,\r\n                        label: word,\r\n                        insertText: word,\r\n                        range: { insert, replace }\r\n                    };\r\n                }),\r\n            };\r\n        });\r\n    }\r\n}\r\nclass WorkerManager extends Disposable {\r\n    constructor(modelService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._editorWorkerClient = null;\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        let stopWorkerInterval = this._register(new IntervalTimer());\r\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\r\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\r\n    }\r\n    dispose() {\r\n        if (this._editorWorkerClient) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n    /**\r\n     * Check if the model service has no more models and stop the worker if that is the case.\r\n     */\r\n    _checkStopEmptyWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let models = this._modelService.getModels();\r\n        if (models.length === 0) {\r\n            // There are no more models => nothing possible for me to do\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    /**\r\n     * Check if the worker has been idle for a while and then stop it.\r\n     */\r\n    _checkStopIdleWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\r\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    withWorker() {\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        if (!this._editorWorkerClient) {\r\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService');\r\n        }\r\n        return Promise.resolve(this._editorWorkerClient);\r\n    }\r\n}\r\nclass EditorModelManager extends Disposable {\r\n    constructor(proxy, modelService, keepIdleModels) {\r\n        super();\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        this._proxy = proxy;\r\n        this._modelService = modelService;\r\n        if (!keepIdleModels) {\r\n            let timer = new IntervalTimer();\r\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\r\n            this._register(timer);\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let modelUrl in this._syncedModels) {\r\n            dispose(this._syncedModels[modelUrl]);\r\n        }\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        super.dispose();\r\n    }\r\n    ensureSyncedResources(resources) {\r\n        for (const resource of resources) {\r\n            let resourceStr = resource.toString();\r\n            if (!this._syncedModels[resourceStr]) {\r\n                this._beginModelSync(resource);\r\n            }\r\n            if (this._syncedModels[resourceStr]) {\r\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\r\n            }\r\n        }\r\n    }\r\n    _checkStopModelSync() {\r\n        let currentTime = (new Date()).getTime();\r\n        let toRemove = [];\r\n        for (let modelUrl in this._syncedModelsLastUsedTime) {\r\n            let elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\r\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\r\n                toRemove.push(modelUrl);\r\n            }\r\n        }\r\n        for (const e of toRemove) {\r\n            this._stopModelSync(e);\r\n        }\r\n    }\r\n    _beginModelSync(resource) {\r\n        let model = this._modelService.getModel(resource);\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (model.isTooLargeForSyncing()) {\r\n            return;\r\n        }\r\n        let modelUrl = resource.toString();\r\n        this._proxy.acceptNewModel({\r\n            url: model.uri.toString(),\r\n            lines: model.getLinesContent(),\r\n            EOL: model.getEOL(),\r\n            versionId: model.getVersionId()\r\n        });\r\n        const toDispose = new DisposableStore();\r\n        toDispose.add(model.onDidChangeContent((e) => {\r\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\r\n        }));\r\n        toDispose.add(model.onWillDispose(() => {\r\n            this._stopModelSync(modelUrl);\r\n        }));\r\n        toDispose.add(toDisposable(() => {\r\n            this._proxy.acceptRemovedModel(modelUrl);\r\n        }));\r\n        this._syncedModels[modelUrl] = toDispose;\r\n    }\r\n    _stopModelSync(modelUrl) {\r\n        let toDispose = this._syncedModels[modelUrl];\r\n        delete this._syncedModels[modelUrl];\r\n        delete this._syncedModelsLastUsedTime[modelUrl];\r\n        dispose(toDispose);\r\n    }\r\n}\r\nclass SynchronousWorkerClient {\r\n    constructor(instance) {\r\n        this._instance = instance;\r\n        this._proxyObj = Promise.resolve(this._instance);\r\n    }\r\n    dispose() {\r\n        this._instance.dispose();\r\n    }\r\n    getProxyObject() {\r\n        return this._proxyObj;\r\n    }\r\n}\r\nexport class EditorWorkerHost {\r\n    constructor(workerClient) {\r\n        this._workerClient = workerClient;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        return this._workerClient.fhr(method, args);\r\n    }\r\n}\r\nexport class EditorWorkerClient extends Disposable {\r\n    constructor(modelService, keepIdleModels, label) {\r\n        super();\r\n        this._disposed = false;\r\n        this._modelService = modelService;\r\n        this._keepIdleModels = keepIdleModels;\r\n        this._workerFactory = new DefaultWorkerFactory(label);\r\n        this._worker = null;\r\n        this._modelManager = null;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        throw new Error(`Not implemented!`);\r\n    }\r\n    _getOrCreateWorker() {\r\n        if (!this._worker) {\r\n            try {\r\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\r\n            }\r\n            catch (err) {\r\n                logOnceWebWorkerWarning(err);\r\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            }\r\n        }\r\n        return this._worker;\r\n    }\r\n    _getProxy() {\r\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\r\n            logOnceWebWorkerWarning(err);\r\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            return this._getOrCreateWorker().getProxyObject();\r\n        });\r\n    }\r\n    _getOrCreateModelManager(proxy) {\r\n        if (!this._modelManager) {\r\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\r\n        }\r\n        return this._modelManager;\r\n    }\r\n    _withSyncedResources(resources) {\r\n        if (this._disposed) {\r\n            return Promise.reject(canceled());\r\n        }\r\n        return this._getProxy().then((proxy) => {\r\n            this._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\r\n            return proxy;\r\n        });\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._withSyncedResources([original, modified]).then(proxy => {\r\n            return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\r\n        });\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits);\r\n        });\r\n    }\r\n    computeLinks(resource) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeLinks(resource.toString());\r\n        });\r\n    }\r\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const proxy = yield this._withSyncedResources(resources);\r\n            const wordDef = wordDefRegExp.source;\r\n            const wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return Promise.resolve(null);\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._disposed = true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}