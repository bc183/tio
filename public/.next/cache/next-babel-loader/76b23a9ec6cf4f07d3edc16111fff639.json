{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, TokenizationResult2 } from '../core/token.js';\nimport { LanguageIdentifier } from '../modes.js';\n\nvar NullStateImpl = /*#__PURE__*/function () {\n  function NullStateImpl() {\n    _classCallCheck(this, NullStateImpl);\n  }\n\n  _createClass(NullStateImpl, [{\n    key: \"clone\",\n    value: function clone() {\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this === other;\n    }\n  }]);\n\n  return NullStateImpl;\n}();\n\nexport var NULL_STATE = new NullStateImpl();\nexport var NULL_MODE_ID = 'vs.editor.nullMode';\nexport var NULL_LANGUAGE_IDENTIFIER = new LanguageIdentifier(NULL_MODE_ID, 0\n/* Null */\n);\nexport function nullTokenize(modeId, buffer, state, deltaOffset) {\n  return new TokenizationResult([new Token(deltaOffset, '', modeId)], state);\n}\nexport function nullTokenize2(languageId, buffer, state, deltaOffset) {\n  var tokens = new Uint32Array(2);\n  tokens[0] = deltaOffset;\n  tokens[1] = (languageId << 0\n  /* LANGUAGEID_OFFSET */\n  | 0\n  /* Other */\n  << 8\n  /* TOKEN_TYPE_OFFSET */\n  | 0\n  /* None */\n  << 11\n  /* FONT_STYLE_OFFSET */\n  | 1\n  /* DefaultForeground */\n  << 14\n  /* FOREGROUND_OFFSET */\n  | 2\n  /* DefaultBackground */\n  << 23\n  /* BACKGROUND_OFFSET */\n  ) >>> 0;\n  return new TokenizationResult2(tokens, state === null ? NULL_STATE : state);\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/modes/nullMode.js"],"names":["Token","TokenizationResult","TokenizationResult2","LanguageIdentifier","NullStateImpl","other","NULL_STATE","NULL_MODE_ID","NULL_LANGUAGE_IDENTIFIER","nullTokenize","modeId","buffer","state","deltaOffset","nullTokenize2","languageId","tokens","Uint32Array"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,kBAAhB,EAAoCC,mBAApC,QAA+D,kBAA/D;AACA,SAASC,kBAAT,QAAmC,aAAnC;;IACMC,a;;;;;;;4BACM;AACJ,aAAO,IAAP;AACH;;;2BACMC,K,EAAO;AACV,aAAQ,SAASA,KAAjB;AACH;;;;;;AAEL,OAAO,IAAMC,UAAU,GAAG,IAAIF,aAAJ,EAAnB;AACP,OAAO,IAAMG,YAAY,GAAG,oBAArB;AACP,OAAO,IAAMC,wBAAwB,GAAG,IAAIL,kBAAJ,CAAuBI,YAAvB,EAAqC;AAAE;AAAvC,CAAjC;AACP,OAAO,SAASE,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,WAA7C,EAA0D;AAC7D,SAAO,IAAIZ,kBAAJ,CAAuB,CAAC,IAAID,KAAJ,CAAUa,WAAV,EAAuB,EAAvB,EAA2BH,MAA3B,CAAD,CAAvB,EAA6DE,KAA7D,CAAP;AACH;AACD,OAAO,SAASE,aAAT,CAAuBC,UAAvB,EAAmCJ,MAAnC,EAA2CC,KAA3C,EAAkDC,WAAlD,EAA+D;AAClE,MAAIG,MAAM,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAb;AACAD,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYH,WAAZ;AACAG,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAED,UAAU,IAAI;AAAE;AAAjB,IACN;AAAE;AAAF,KAAiB;AAAE;AADb,IAEN;AAAE;AAAF,KAAgB;AAAG;AAFb,IAGN;AAAE;AAAF,KAA6B;AAAG;AAH1B,IAIN;AAAE;AAAF,KAA6B;AAAG;AAJ3B,QAIyD,CAJrE;AAKA,SAAO,IAAIb,mBAAJ,CAAwBc,MAAxB,EAAgCJ,KAAK,KAAK,IAAV,GAAiBN,UAAjB,GAA8BM,KAA9D,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Token, TokenizationResult, TokenizationResult2 } from '../core/token.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nclass NullStateImpl {\r\n    clone() {\r\n        return this;\r\n    }\r\n    equals(other) {\r\n        return (this === other);\r\n    }\r\n}\r\nexport const NULL_STATE = new NullStateImpl();\r\nexport const NULL_MODE_ID = 'vs.editor.nullMode';\r\nexport const NULL_LANGUAGE_IDENTIFIER = new LanguageIdentifier(NULL_MODE_ID, 0 /* Null */);\r\nexport function nullTokenize(modeId, buffer, state, deltaOffset) {\r\n    return new TokenizationResult([new Token(deltaOffset, '', modeId)], state);\r\n}\r\nexport function nullTokenize2(languageId, buffer, state, deltaOffset) {\r\n    let tokens = new Uint32Array(2);\r\n    tokens[0] = deltaOffset;\r\n    tokens[1] = ((languageId << 0 /* LANGUAGEID_OFFSET */)\r\n        | (0 /* Other */ << 8 /* TOKEN_TYPE_OFFSET */)\r\n        | (0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\r\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\r\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    return new TokenizationResult2(tokens, state === null ? NULL_STATE : state);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}