{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport var MarginViewLineDecorationsOverlay = /*#__PURE__*/function (_DedupOverlay) {\n  _inherits(MarginViewLineDecorationsOverlay, _DedupOverlay);\n\n  var _super = _createSuper(MarginViewLineDecorationsOverlay);\n\n  function MarginViewLineDecorationsOverlay(context) {\n    var _this;\n\n    _classCallCheck(this, MarginViewLineDecorationsOverlay);\n\n    _this = _super.call(this);\n    _this._context = context;\n    _this._renderResult = null;\n\n    _this._context.addEventHandler(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(MarginViewLineDecorationsOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n\n      this._renderResult = null;\n\n      _get(_getPrototypeOf(MarginViewLineDecorationsOverlay.prototype), \"dispose\", this).call(this);\n    } // --- begin event handlers\n\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    } // --- end event handlers\n\n  }, {\n    key: \"_getDecorations\",\n    value: function _getDecorations(ctx) {\n      var decorations = ctx.getDecorationsInViewport();\n      var r = [],\n          rLen = 0;\n\n      for (var i = 0, len = decorations.length; i < len; i++) {\n        var d = decorations[i];\n        var marginClassName = d.options.marginClassName;\n\n        if (marginClassName) {\n          r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName);\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n      var toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n      var output = [];\n\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var classNames = toRender[lineIndex];\n        var lineOutput = '';\n\n        for (var i = 0, len = classNames.length; i < len; i++) {\n          lineOutput += '<div class=\"cmdr ' + classNames[i] + '\" style=\"\"></div>';\n        }\n\n        output[lineIndex] = lineOutput;\n      }\n\n      this._renderResult = output;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n\n      return this._renderResult[lineNumber - startLineNumber];\n    }\n  }]);\n\n  return MarginViewLineDecorationsOverlay;\n}(DedupOverlay);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js"],"names":["DecorationToRender","DedupOverlay","MarginViewLineDecorationsOverlay","context","_context","_renderResult","addEventHandler","removeEventHandler","e","scrollTopChanged","ctx","decorations","getDecorationsInViewport","r","rLen","i","len","length","d","marginClassName","options","range","startLineNumber","endLineNumber","visibleStartLineNumber","visibleRange","visibleEndLineNumber","toRender","_render","_getDecorations","output","lineNumber","lineIndex","classNames","lineOutput"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './marginDecorations.css';\r\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\r\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\r\n    constructor(context) {\r\n        super();\r\n        this._context = context;\r\n        this._renderResult = null;\r\n        this._context.addEventHandler(this);\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        super.dispose();\r\n    }\r\n    // --- begin event handlers\r\n    onConfigurationChanged(e) {\r\n        return true;\r\n    }\r\n    onDecorationsChanged(e) {\r\n        return true;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLinesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    // --- end event handlers\r\n    _getDecorations(ctx) {\r\n        const decorations = ctx.getDecorationsInViewport();\r\n        let r = [], rLen = 0;\r\n        for (let i = 0, len = decorations.length; i < len; i++) {\r\n            const d = decorations[i];\r\n            const marginClassName = d.options.marginClassName;\r\n            if (marginClassName) {\r\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    prepareRender(ctx) {\r\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\r\n        const output = [];\r\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            const classNames = toRender[lineIndex];\r\n            let lineOutput = '';\r\n            for (let i = 0, len = classNames.length; i < len; i++) {\r\n                lineOutput += '<div class=\"cmdr ' + classNames[i] + '\" style=\"\"></div>';\r\n            }\r\n            output[lineIndex] = lineOutput;\r\n        }\r\n        this._renderResult = output;\r\n    }\r\n    render(startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineNumber - startLineNumber];\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}