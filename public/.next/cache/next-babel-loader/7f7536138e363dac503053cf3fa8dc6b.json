{"ast":null,"code":"import _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Iterable } from '../../../common/iterator.js';\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nexport var ObjectTree = /*#__PURE__*/function (_AbstractTree) {\n  _inherits(ObjectTree, _AbstractTree);\n\n  var _super = _createSuper(ObjectTree);\n\n  function ObjectTree(user, container, delegate, renderers) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    _classCallCheck(this, ObjectTree);\n\n    return _super.call(this, user, container, delegate, renderers, options);\n  }\n\n  _createClass(ObjectTree, [{\n    key: \"setChildren\",\n    value: function setChildren(element) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      this.model.setChildren(element, children, options);\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender(element) {\n      if (element === undefined) {\n        this.view.rerender();\n        return;\n      }\n\n      this.model.rerender(element);\n    }\n  }, {\n    key: \"hasElement\",\n    value: function hasElement(element) {\n      return this.model.has(element);\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(user, view, options) {\n      return new ObjectTreeModel(user, view, options);\n    }\n  }, {\n    key: \"onDidChangeCollapseState\",\n    get: function get() {\n      return this.model.onDidChangeCollapseState;\n    }\n  }]);\n\n  return ObjectTree;\n}(AbstractTree);\n\nvar CompressibleRenderer = /*#__PURE__*/function () {\n  function CompressibleRenderer(_compressedTreeNodeProvider, renderer) {\n    _classCallCheck(this, CompressibleRenderer);\n\n    this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n    this.renderer = renderer;\n    this.templateId = renderer.templateId;\n\n    if (renderer.onDidChangeTwistieState) {\n      this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n    }\n  }\n\n  _createClass(CompressibleRenderer, [{\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var data = this.renderer.renderTemplate(container);\n      return {\n        compressedTreeNode: undefined,\n        data: data\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      var compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n\n      if (compressedTreeNode.element.elements.length === 1) {\n        templateData.compressedTreeNode = undefined;\n        this.renderer.renderElement(node, index, templateData.data, height);\n      } else {\n        templateData.compressedTreeNode = compressedTreeNode;\n        this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n      }\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      if (templateData.compressedTreeNode) {\n        if (this.renderer.disposeCompressedElements) {\n          this.renderer.disposeCompressedElements(templateData.compressedTreeNode, index, templateData.data, height);\n        }\n      } else {\n        if (this.renderer.disposeElement) {\n          this.renderer.disposeElement(node, index, templateData.data, height);\n        }\n      }\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.data);\n    }\n  }, {\n    key: \"renderTwistie\",\n    value: function renderTwistie(element, twistieElement) {\n      if (this.renderer.renderTwistie) {\n        return this.renderer.renderTwistie(element, twistieElement);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"compressedTreeNodeProvider\",\n    get: function get() {\n      return this._compressedTreeNodeProvider();\n    }\n  }]);\n\n  return CompressibleRenderer;\n}();\n\n__decorate([memoize], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\n\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n  return options && Object.assign(Object.assign({}, options), {\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n      getKeyboardNavigationLabel: function getKeyboardNavigationLabel(e) {\n        var compressedTreeNode;\n\n        try {\n          compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n        } catch (_a) {\n          return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n        }\n\n        if (compressedTreeNode.element.elements.length === 1) {\n          return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n        } else {\n          return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n        }\n      }\n    }\n  });\n}\n\nexport var CompressibleObjectTree = /*#__PURE__*/function (_ObjectTree) {\n  _inherits(CompressibleObjectTree, _ObjectTree);\n\n  var _super2 = _createSuper(CompressibleObjectTree);\n\n  function CompressibleObjectTree(user, container, delegate, renderers) {\n    var _this;\n\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    _classCallCheck(this, CompressibleObjectTree);\n\n    var compressedTreeNodeProvider = function compressedTreeNodeProvider() {\n      return _assertThisInitialized(_this);\n    };\n\n    var compressibleRenderers = renderers.map(function (r) {\n      return new CompressibleRenderer(compressedTreeNodeProvider, r);\n    });\n    return _this = _super2.call(this, user, container, delegate, compressibleRenderers, asObjectTreeOptions(compressedTreeNodeProvider, options));\n  }\n\n  _createClass(CompressibleObjectTree, [{\n    key: \"setChildren\",\n    value: function setChildren(element) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      this.model.setChildren(element, children, options);\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(user, view, options) {\n      return new CompressibleObjectTreeModel(user, view, options);\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _get(_getPrototypeOf(CompressibleObjectTree.prototype), \"updateOptions\", this).call(this, optionsUpdate);\n\n      if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n        this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n      }\n    }\n  }, {\n    key: \"getCompressedTreeNode\",\n    value: function getCompressedTreeNode() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return this.model.getCompressedTreeNode(element);\n    }\n  }]);\n\n  return CompressibleObjectTree;\n}(ObjectTree);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Iterable","AbstractTree","ObjectTreeModel","CompressibleObjectTreeModel","memoize","ObjectTree","user","container","delegate","renderers","options","element","children","empty","model","setChildren","undefined","view","rerender","has","onDidChangeCollapseState","CompressibleRenderer","_compressedTreeNodeProvider","renderer","templateId","onDidChangeTwistieState","data","renderTemplate","compressedTreeNode","node","index","templateData","height","compressedTreeNodeProvider","getCompressedTreeNode","elements","renderElement","renderCompressedElements","disposeCompressedElements","disposeElement","disposeTemplate","twistieElement","renderTwistie","prototype","asObjectTreeOptions","assign","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","e","_a","getCompressedNodeKeyboardNavigationLabel","CompressibleObjectTree","compressibleRenderers","map","optionsUpdate","compressionEnabled","setCompressionEnabled"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Iterable } from '../../../common/iterator.js';\r\nimport { AbstractTree } from './abstractTree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\r\nimport { memoize } from '../../../common/decorators.js';\r\nexport class ObjectTree extends AbstractTree {\r\n    constructor(user, container, delegate, renderers, options = {}) {\r\n        super(user, container, delegate, renderers, options);\r\n    }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    setChildren(element, children = Iterable.empty(), options) {\r\n        this.model.setChildren(element, children, options);\r\n    }\r\n    rerender(element) {\r\n        if (element === undefined) {\r\n            this.view.rerender();\r\n            return;\r\n        }\r\n        this.model.rerender(element);\r\n    }\r\n    hasElement(element) {\r\n        return this.model.has(element);\r\n    }\r\n    createModel(user, view, options) {\r\n        return new ObjectTreeModel(user, view, options);\r\n    }\r\n}\r\nclass CompressibleRenderer {\r\n    constructor(_compressedTreeNodeProvider, renderer) {\r\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\r\n        this.renderer = renderer;\r\n        this.templateId = renderer.templateId;\r\n        if (renderer.onDidChangeTwistieState) {\r\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\r\n        }\r\n    }\r\n    get compressedTreeNodeProvider() {\r\n        return this._compressedTreeNodeProvider();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = this.renderer.renderTemplate(container);\r\n        return { compressedTreeNode: undefined, data };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        const compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\r\n        if (compressedTreeNode.element.elements.length === 1) {\r\n            templateData.compressedTreeNode = undefined;\r\n            this.renderer.renderElement(node, index, templateData.data, height);\r\n        }\r\n        else {\r\n            templateData.compressedTreeNode = compressedTreeNode;\r\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\r\n        }\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        if (templateData.compressedTreeNode) {\r\n            if (this.renderer.disposeCompressedElements) {\r\n                this.renderer.disposeCompressedElements(templateData.compressedTreeNode, index, templateData.data, height);\r\n            }\r\n        }\r\n        else {\r\n            if (this.renderer.disposeElement) {\r\n                this.renderer.disposeElement(node, index, templateData.data, height);\r\n            }\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.data);\r\n    }\r\n    renderTwistie(element, twistieElement) {\r\n        if (this.renderer.renderTwistie) {\r\n            return this.renderer.renderTwistie(element, twistieElement);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    memoize\r\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\r\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\r\n    return options && Object.assign(Object.assign({}, options), { keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\r\n            getKeyboardNavigationLabel(e) {\r\n                let compressedTreeNode;\r\n                try {\r\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\r\n                }\r\n                catch (_a) {\r\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\r\n                }\r\n                if (compressedTreeNode.element.elements.length === 1) {\r\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\r\n                }\r\n                else {\r\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\r\n                }\r\n            }\r\n        } });\r\n}\r\nexport class CompressibleObjectTree extends ObjectTree {\r\n    constructor(user, container, delegate, renderers, options = {}) {\r\n        const compressedTreeNodeProvider = () => this;\r\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, r));\r\n        super(user, container, delegate, compressibleRenderers, asObjectTreeOptions(compressedTreeNodeProvider, options));\r\n    }\r\n    setChildren(element, children = Iterable.empty(), options) {\r\n        this.model.setChildren(element, children, options);\r\n    }\r\n    createModel(user, view, options) {\r\n        return new CompressibleObjectTreeModel(user, view, options);\r\n    }\r\n    updateOptions(optionsUpdate = {}) {\r\n        super.updateOptions(optionsUpdate);\r\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\r\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\r\n        }\r\n    }\r\n    getCompressedTreeNode(element = null) {\r\n        return this.model.getCompressedTreeNode(element);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}