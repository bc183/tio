{"ast":null,"code":"import _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nexport var Viewport = function Viewport(top, left, width, height) {\n  _classCallCheck(this, Viewport);\n\n  this.top = top | 0;\n  this.left = left | 0;\n  this.width = width | 0;\n  this.height = height | 0;\n};\nexport var OutputPosition = function OutputPosition(outputLineIndex, outputOffset) {\n  _classCallCheck(this, OutputPosition);\n\n  this.outputLineIndex = outputLineIndex;\n  this.outputOffset = outputOffset;\n};\nexport var LineBreakData = /*#__PURE__*/function () {\n  function LineBreakData(breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength) {\n    _classCallCheck(this, LineBreakData);\n\n    this.breakOffsets = breakOffsets;\n    this.breakOffsetsVisibleColumn = breakOffsetsVisibleColumn;\n    this.wrappedTextIndentLength = wrappedTextIndentLength;\n  }\n\n  _createClass(LineBreakData, null, [{\n    key: \"getInputOffsetOfOutputPosition\",\n    value: function getInputOffsetOfOutputPosition(breakOffsets, outputLineIndex, outputOffset) {\n      if (outputLineIndex === 0) {\n        return outputOffset;\n      } else {\n        return breakOffsets[outputLineIndex - 1] + outputOffset;\n      }\n    }\n  }, {\n    key: \"getOutputPositionOfInputOffset\",\n    value: function getOutputPositionOfInputOffset(breakOffsets, inputOffset) {\n      var low = 0;\n      var high = breakOffsets.length - 1;\n      var mid = 0;\n      var midStart = 0;\n\n      while (low <= high) {\n        mid = low + (high - low) / 2 | 0;\n        var midStop = breakOffsets[mid];\n        midStart = mid > 0 ? breakOffsets[mid - 1] : 0;\n\n        if (inputOffset < midStart) {\n          high = mid - 1;\n        } else if (inputOffset >= midStop) {\n          low = mid + 1;\n        } else {\n          break;\n        }\n      }\n\n      return new OutputPosition(mid, inputOffset - midStart);\n    }\n  }]);\n\n  return LineBreakData;\n}();\nexport var MinimapLinesRenderingData = function MinimapLinesRenderingData(tabSize, data) {\n  _classCallCheck(this, MinimapLinesRenderingData);\n\n  this.tabSize = tabSize;\n  this.data = data;\n};\nexport var ViewLineData = function ViewLineData(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens) {\n  _classCallCheck(this, ViewLineData);\n\n  this.content = content;\n  this.continuesWithWrappedLine = continuesWithWrappedLine;\n  this.minColumn = minColumn;\n  this.maxColumn = maxColumn;\n  this.startVisibleColumn = startVisibleColumn;\n  this.tokens = tokens;\n};\nexport var ViewLineRenderingData = /*#__PURE__*/function () {\n  function ViewLineRenderingData(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\n    _classCallCheck(this, ViewLineRenderingData);\n\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n    this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n    this.tabSize = tabSize;\n    this.startVisibleColumn = startVisibleColumn;\n  }\n\n  _createClass(ViewLineRenderingData, null, [{\n    key: \"isBasicASCII\",\n    value: function isBasicASCII(lineContent, mightContainNonBasicASCII) {\n      if (mightContainNonBasicASCII) {\n        return strings.isBasicASCII(lineContent);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"containsRTL\",\n    value: function containsRTL(lineContent, isBasicASCII, mightContainRTL) {\n      if (!isBasicASCII && mightContainRTL) {\n        return strings.containsRTL(lineContent);\n      }\n\n      return false;\n    }\n  }]);\n\n  return ViewLineRenderingData;\n}();\nexport var InlineDecoration = function InlineDecoration(range, inlineClassName, type) {\n  _classCallCheck(this, InlineDecoration);\n\n  this.range = range;\n  this.inlineClassName = inlineClassName;\n  this.type = type;\n};\nexport var ViewModelDecoration = function ViewModelDecoration(range, options) {\n  _classCallCheck(this, ViewModelDecoration);\n\n  this.range = range;\n  this.options = options;\n};","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewModel.js"],"names":["strings","Viewport","top","left","width","height","OutputPosition","outputLineIndex","outputOffset","LineBreakData","breakOffsets","breakOffsetsVisibleColumn","wrappedTextIndentLength","inputOffset","low","high","length","mid","midStart","midStop","MinimapLinesRenderingData","tabSize","data","ViewLineData","content","continuesWithWrappedLine","minColumn","maxColumn","startVisibleColumn","tokens","ViewLineRenderingData","mightContainRTL","mightContainNonBasicASCII","inlineDecorations","isBasicASCII","containsRTL","lineContent","InlineDecoration","range","inlineClassName","type","ViewModelDecoration","options"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nexport class Viewport {\r\n    constructor(top, left, width, height) {\r\n        this.top = top | 0;\r\n        this.left = left | 0;\r\n        this.width = width | 0;\r\n        this.height = height | 0;\r\n    }\r\n}\r\nexport class OutputPosition {\r\n    constructor(outputLineIndex, outputOffset) {\r\n        this.outputLineIndex = outputLineIndex;\r\n        this.outputOffset = outputOffset;\r\n    }\r\n}\r\nexport class LineBreakData {\r\n    constructor(breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength) {\r\n        this.breakOffsets = breakOffsets;\r\n        this.breakOffsetsVisibleColumn = breakOffsetsVisibleColumn;\r\n        this.wrappedTextIndentLength = wrappedTextIndentLength;\r\n    }\r\n    static getInputOffsetOfOutputPosition(breakOffsets, outputLineIndex, outputOffset) {\r\n        if (outputLineIndex === 0) {\r\n            return outputOffset;\r\n        }\r\n        else {\r\n            return breakOffsets[outputLineIndex - 1] + outputOffset;\r\n        }\r\n    }\r\n    static getOutputPositionOfInputOffset(breakOffsets, inputOffset) {\r\n        let low = 0;\r\n        let high = breakOffsets.length - 1;\r\n        let mid = 0;\r\n        let midStart = 0;\r\n        while (low <= high) {\r\n            mid = low + ((high - low) / 2) | 0;\r\n            const midStop = breakOffsets[mid];\r\n            midStart = mid > 0 ? breakOffsets[mid - 1] : 0;\r\n            if (inputOffset < midStart) {\r\n                high = mid - 1;\r\n            }\r\n            else if (inputOffset >= midStop) {\r\n                low = mid + 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return new OutputPosition(mid, inputOffset - midStart);\r\n    }\r\n}\r\nexport class MinimapLinesRenderingData {\r\n    constructor(tabSize, data) {\r\n        this.tabSize = tabSize;\r\n        this.data = data;\r\n    }\r\n}\r\nexport class ViewLineData {\r\n    constructor(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens) {\r\n        this.content = content;\r\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\r\n        this.minColumn = minColumn;\r\n        this.maxColumn = maxColumn;\r\n        this.startVisibleColumn = startVisibleColumn;\r\n        this.tokens = tokens;\r\n    }\r\n}\r\nexport class ViewLineRenderingData {\r\n    constructor(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\r\n        this.minColumn = minColumn;\r\n        this.maxColumn = maxColumn;\r\n        this.content = content;\r\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\r\n        this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\r\n        this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\r\n        this.tokens = tokens;\r\n        this.inlineDecorations = inlineDecorations;\r\n        this.tabSize = tabSize;\r\n        this.startVisibleColumn = startVisibleColumn;\r\n    }\r\n    static isBasicASCII(lineContent, mightContainNonBasicASCII) {\r\n        if (mightContainNonBasicASCII) {\r\n            return strings.isBasicASCII(lineContent);\r\n        }\r\n        return true;\r\n    }\r\n    static containsRTL(lineContent, isBasicASCII, mightContainRTL) {\r\n        if (!isBasicASCII && mightContainRTL) {\r\n            return strings.containsRTL(lineContent);\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class InlineDecoration {\r\n    constructor(range, inlineClassName, type) {\r\n        this.range = range;\r\n        this.inlineClassName = inlineClassName;\r\n        this.type = type;\r\n    }\r\n}\r\nexport class ViewModelDecoration {\r\n    constructor(range, options) {\r\n        this.range = range;\r\n        this.options = options;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}