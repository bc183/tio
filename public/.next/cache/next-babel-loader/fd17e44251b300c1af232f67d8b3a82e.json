{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from './dom.js';\nexport function renderText(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = createElement(options);\n  element.textContent = text;\n  return element;\n}\nexport function renderFormattedText(formattedText) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = createElement(options);\n\n  _renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\n\n  return element;\n}\nexport function createElement(options) {\n  var tagName = options.inline ? 'span' : 'div';\n  var element = document.createElement(tagName);\n\n  if (options.className) {\n    element.className = options.className;\n  }\n\n  return element;\n}\n\nvar StringStream = /*#__PURE__*/function () {\n  function StringStream(source) {\n    _classCallCheck(this, StringStream);\n\n    this.source = source;\n    this.index = 0;\n  }\n\n  _createClass(StringStream, [{\n    key: \"eos\",\n    value: function eos() {\n      return this.index >= this.source.length;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var next = this.peek();\n      this.advance();\n      return next;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this.source[this.index];\n    }\n  }, {\n    key: \"advance\",\n    value: function advance() {\n      this.index++;\n    }\n  }]);\n\n  return StringStream;\n}();\n\nfunction _renderFormattedText(element, treeNode, actionHandler) {\n  var child;\n\n  if (treeNode.type === 2\n  /* Text */\n  ) {\n      child = document.createTextNode(treeNode.content || '');\n    } else if (treeNode.type === 3\n  /* Bold */\n  ) {\n      child = document.createElement('b');\n    } else if (treeNode.type === 4\n  /* Italics */\n  ) {\n      child = document.createElement('i');\n    } else if (treeNode.type === 5\n  /* Action */\n  && actionHandler) {\n    var a = document.createElement('a');\n    a.href = '#';\n    actionHandler.disposeables.add(DOM.addStandardDisposableListener(a, 'click', function (event) {\n      actionHandler.callback(String(treeNode.index), event);\n    }));\n    child = a;\n  } else if (treeNode.type === 7\n  /* NewLine */\n  ) {\n      child = document.createElement('br');\n    } else if (treeNode.type === 1\n  /* Root */\n  ) {\n      child = element;\n    }\n\n  if (child && element !== child) {\n    element.appendChild(child);\n  }\n\n  if (child && Array.isArray(treeNode.children)) {\n    treeNode.children.forEach(function (nodeChild) {\n      _renderFormattedText(child, nodeChild, actionHandler);\n    });\n  }\n}\n\nfunction parseFormattedText(content) {\n  var root = {\n    type: 1\n    /* Root */\n    ,\n    children: []\n  };\n  var actionViewItemIndex = 0;\n  var current = root;\n  var stack = [];\n  var stream = new StringStream(content);\n\n  while (!stream.eos()) {\n    var next = stream.next();\n    var isEscapedFormatType = next === '\\\\' && formatTagType(stream.peek()) !== 0\n    /* Invalid */\n    ;\n\n    if (isEscapedFormatType) {\n      next = stream.next(); // unread the backslash if it escapes a format tag type\n    }\n\n    if (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\n      stream.advance();\n\n      if (current.type === 2\n      /* Text */\n      ) {\n          current = stack.pop();\n        }\n\n      var type = formatTagType(next);\n\n      if (current.type === type || current.type === 5\n      /* Action */\n      && type === 6\n      /* ActionClose */\n      ) {\n        current = stack.pop();\n      } else {\n        var newCurrent = {\n          type: type,\n          children: []\n        };\n\n        if (type === 5\n        /* Action */\n        ) {\n            newCurrent.index = actionViewItemIndex;\n            actionViewItemIndex++;\n          }\n\n        current.children.push(newCurrent);\n        stack.push(current);\n        current = newCurrent;\n      }\n    } else if (next === '\\n') {\n      if (current.type === 2\n      /* Text */\n      ) {\n          current = stack.pop();\n        }\n\n      current.children.push({\n        type: 7\n        /* NewLine */\n\n      });\n    } else {\n      if (current.type !== 2\n      /* Text */\n      ) {\n          var textCurrent = {\n            type: 2\n            /* Text */\n            ,\n            content: next\n          };\n          current.children.push(textCurrent);\n          stack.push(current);\n          current = textCurrent;\n        } else {\n        current.content += next;\n      }\n    }\n  }\n\n  if (current.type === 2\n  /* Text */\n  ) {\n      current = stack.pop();\n    }\n\n  if (stack.length) {// incorrectly formatted string literal\n  }\n\n  return root;\n}\n\nfunction isFormatTag(_char) {\n  return formatTagType(_char) !== 0\n  /* Invalid */\n  ;\n}\n\nfunction formatTagType(_char2) {\n  switch (_char2) {\n    case '*':\n      return 3\n      /* Bold */\n      ;\n\n    case '_':\n      return 4\n      /* Italics */\n      ;\n\n    case '[':\n      return 5\n      /* Action */\n      ;\n\n    case ']':\n      return 6\n      /* ActionClose */\n      ;\n\n    default:\n      return 0\n      /* Invalid */\n      ;\n  }\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/formattedTextRenderer.js"],"names":["DOM","renderText","text","options","element","createElement","textContent","renderFormattedText","formattedText","_renderFormattedText","parseFormattedText","actionHandler","tagName","inline","document","className","StringStream","source","index","length","next","peek","advance","treeNode","child","type","createTextNode","content","a","href","disposeables","add","addStandardDisposableListener","event","callback","String","appendChild","Array","isArray","children","forEach","nodeChild","root","actionViewItemIndex","current","stack","stream","eos","isEscapedFormatType","formatTagType","isFormatTag","pop","newCurrent","push","textCurrent","char"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAZ,MAAqB,UAArB;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAwC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC3C,MAAMC,OAAO,GAAGC,aAAa,CAACF,OAAD,CAA7B;AACAC,EAAAA,OAAO,CAACE,WAAR,GAAsBJ,IAAtB;AACA,SAAOE,OAAP;AACH;AACD,OAAO,SAASG,mBAAT,CAA6BC,aAA7B,EAA0D;AAAA,MAAdL,OAAc,uEAAJ,EAAI;AAC7D,MAAMC,OAAO,GAAGC,aAAa,CAACF,OAAD,CAA7B;;AACAM,EAAAA,oBAAoB,CAACL,OAAD,EAAUM,kBAAkB,CAACF,aAAD,CAA5B,EAA6CL,OAAO,CAACQ,aAArD,CAApB;;AACA,SAAOP,OAAP;AACH;AACD,OAAO,SAASC,aAAT,CAAuBF,OAAvB,EAAgC;AACnC,MAAMS,OAAO,GAAGT,OAAO,CAACU,MAAR,GAAiB,MAAjB,GAA0B,KAA1C;AACA,MAAMT,OAAO,GAAGU,QAAQ,CAACT,aAAT,CAAuBO,OAAvB,CAAhB;;AACA,MAAIT,OAAO,CAACY,SAAZ,EAAuB;AACnBX,IAAAA,OAAO,CAACW,SAAR,GAAoBZ,OAAO,CAACY,SAA5B;AACH;;AACD,SAAOX,OAAP;AACH;;IACKY,Y;AACF,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,CAAb;AACH;;;;0BACK;AACF,aAAO,KAAKA,KAAL,IAAc,KAAKD,MAAL,CAAYE,MAAjC;AACH;;;2BACM;AACH,UAAMC,IAAI,GAAG,KAAKC,IAAL,EAAb;AACA,WAAKC,OAAL;AACA,aAAOF,IAAP;AACH;;;2BACM;AACH,aAAO,KAAKH,MAAL,CAAY,KAAKC,KAAjB,CAAP;AACH;;;8BACS;AACN,WAAKA,KAAL;AACH;;;;;;AAEL,SAAST,oBAAT,CAA8BL,OAA9B,EAAuCmB,QAAvC,EAAiDZ,aAAjD,EAAgE;AAC5D,MAAIa,KAAJ;;AACA,MAAID,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAAxB,IAAoC;AAChCD,MAAAA,KAAK,GAAGV,QAAQ,CAACY,cAAT,CAAwBH,QAAQ,CAACI,OAAT,IAAoB,EAA5C,CAAR;AACH,KAFD,MAGK,IAAIJ,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAAxB,IAAoC;AACrCD,MAAAA,KAAK,GAAGV,QAAQ,CAACT,aAAT,CAAuB,GAAvB,CAAR;AACH,KAFI,MAGA,IAAIkB,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAAxB,IAAuC;AACxCD,MAAAA,KAAK,GAAGV,QAAQ,CAACT,aAAT,CAAuB,GAAvB,CAAR;AACH,KAFI,MAGA,IAAIkB,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAApB,KAAoCd,aAAxC,EAAuD;AACxD,QAAMiB,CAAC,GAAGd,QAAQ,CAACT,aAAT,CAAuB,GAAvB,CAAV;AACAuB,IAAAA,CAAC,CAACC,IAAF,GAAS,GAAT;AACAlB,IAAAA,aAAa,CAACmB,YAAd,CAA2BC,GAA3B,CAA+B/B,GAAG,CAACgC,6BAAJ,CAAkCJ,CAAlC,EAAqC,OAArC,EAA8C,UAACK,KAAD,EAAW;AACpFtB,MAAAA,aAAa,CAACuB,QAAd,CAAuBC,MAAM,CAACZ,QAAQ,CAACL,KAAV,CAA7B,EAA+Ce,KAA/C;AACH,KAF8B,CAA/B;AAGAT,IAAAA,KAAK,GAAGI,CAAR;AACH,GAPI,MAQA,IAAIL,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAAxB,IAAuC;AACxCD,MAAAA,KAAK,GAAGV,QAAQ,CAACT,aAAT,CAAuB,IAAvB,CAAR;AACH,KAFI,MAGA,IAAIkB,QAAQ,CAACE,IAAT,KAAkB;AAAE;AAAxB,IAAoC;AACrCD,MAAAA,KAAK,GAAGpB,OAAR;AACH;;AACD,MAAIoB,KAAK,IAAIpB,OAAO,KAAKoB,KAAzB,EAAgC;AAC5BpB,IAAAA,OAAO,CAACgC,WAAR,CAAoBZ,KAApB;AACH;;AACD,MAAIA,KAAK,IAAIa,KAAK,CAACC,OAAN,CAAcf,QAAQ,CAACgB,QAAvB,CAAb,EAA+C;AAC3ChB,IAAAA,QAAQ,CAACgB,QAAT,CAAkBC,OAAlB,CAA0B,UAACC,SAAD,EAAe;AACrChC,MAAAA,oBAAoB,CAACe,KAAD,EAAQiB,SAAR,EAAmB9B,aAAnB,CAApB;AACH,KAFD;AAGH;AACJ;;AACD,SAASD,kBAAT,CAA4BiB,OAA5B,EAAqC;AACjC,MAAMe,IAAI,GAAG;AACTjB,IAAAA,IAAI,EAAE;AAAE;AADC;AAETc,IAAAA,QAAQ,EAAE;AAFD,GAAb;AAIA,MAAII,mBAAmB,GAAG,CAA1B;AACA,MAAIC,OAAO,GAAGF,IAAd;AACA,MAAMG,KAAK,GAAG,EAAd;AACA,MAAMC,MAAM,GAAG,IAAI9B,YAAJ,CAAiBW,OAAjB,CAAf;;AACA,SAAO,CAACmB,MAAM,CAACC,GAAP,EAAR,EAAsB;AAClB,QAAI3B,IAAI,GAAG0B,MAAM,CAAC1B,IAAP,EAAX;AACA,QAAM4B,mBAAmB,GAAI5B,IAAI,KAAK,IAAT,IAAiB6B,aAAa,CAACH,MAAM,CAACzB,IAAP,EAAD,CAAb,KAAiC;AAAE;AAAjF;;AACA,QAAI2B,mBAAJ,EAAyB;AACrB5B,MAAAA,IAAI,GAAG0B,MAAM,CAAC1B,IAAP,EAAP,CADqB,CACC;AACzB;;AACD,QAAI,CAAC4B,mBAAD,IAAwBE,WAAW,CAAC9B,IAAD,CAAnC,IAA6CA,IAAI,KAAK0B,MAAM,CAACzB,IAAP,EAA1D,EAAyE;AACrEyB,MAAAA,MAAM,CAACxB,OAAP;;AACA,UAAIsB,OAAO,CAACnB,IAAR,KAAiB;AAAE;AAAvB,QAAmC;AAC/BmB,UAAAA,OAAO,GAAGC,KAAK,CAACM,GAAN,EAAV;AACH;;AACD,UAAM1B,IAAI,GAAGwB,aAAa,CAAC7B,IAAD,CAA1B;;AACA,UAAIwB,OAAO,CAACnB,IAAR,KAAiBA,IAAjB,IAA0BmB,OAAO,CAACnB,IAAR,KAAiB;AAAE;AAAnB,SAAmCA,IAAI,KAAK;AAAE;AAA5E,QAAgG;AAC5FmB,QAAAA,OAAO,GAAGC,KAAK,CAACM,GAAN,EAAV;AACH,OAFD,MAGK;AACD,YAAMC,UAAU,GAAG;AACf3B,UAAAA,IAAI,EAAEA,IADS;AAEfc,UAAAA,QAAQ,EAAE;AAFK,SAAnB;;AAIA,YAAId,IAAI,KAAK;AAAE;AAAf,UAA6B;AACzB2B,YAAAA,UAAU,CAAClC,KAAX,GAAmByB,mBAAnB;AACAA,YAAAA,mBAAmB;AACtB;;AACDC,QAAAA,OAAO,CAACL,QAAR,CAAiBc,IAAjB,CAAsBD,UAAtB;AACAP,QAAAA,KAAK,CAACQ,IAAN,CAAWT,OAAX;AACAA,QAAAA,OAAO,GAAGQ,UAAV;AACH;AACJ,KAtBD,MAuBK,IAAIhC,IAAI,KAAK,IAAb,EAAmB;AACpB,UAAIwB,OAAO,CAACnB,IAAR,KAAiB;AAAE;AAAvB,QAAmC;AAC/BmB,UAAAA,OAAO,GAAGC,KAAK,CAACM,GAAN,EAAV;AACH;;AACDP,MAAAA,OAAO,CAACL,QAAR,CAAiBc,IAAjB,CAAsB;AAClB5B,QAAAA,IAAI,EAAE;AAAE;;AADU,OAAtB;AAGH,KAPI,MAQA;AACD,UAAImB,OAAO,CAACnB,IAAR,KAAiB;AAAE;AAAvB,QAAmC;AAC/B,cAAM6B,WAAW,GAAG;AAChB7B,YAAAA,IAAI,EAAE;AAAE;AADQ;AAEhBE,YAAAA,OAAO,EAAEP;AAFO,WAApB;AAIAwB,UAAAA,OAAO,CAACL,QAAR,CAAiBc,IAAjB,CAAsBC,WAAtB;AACAT,UAAAA,KAAK,CAACQ,IAAN,CAAWT,OAAX;AACAA,UAAAA,OAAO,GAAGU,WAAV;AACH,SARD,MASK;AACDV,QAAAA,OAAO,CAACjB,OAAR,IAAmBP,IAAnB;AACH;AACJ;AACJ;;AACD,MAAIwB,OAAO,CAACnB,IAAR,KAAiB;AAAE;AAAvB,IAAmC;AAC/BmB,MAAAA,OAAO,GAAGC,KAAK,CAACM,GAAN,EAAV;AACH;;AACD,MAAIN,KAAK,CAAC1B,MAAV,EAAkB,CACd;AACH;;AACD,SAAOuB,IAAP;AACH;;AACD,SAASQ,WAAT,CAAqBK,KAArB,EAA2B;AACvB,SAAON,aAAa,CAACM,KAAD,CAAb,KAAwB;AAAE;AAAjC;AACH;;AACD,SAASN,aAAT,CAAuBM,MAAvB,EAA6B;AACzB,UAAQA,MAAR;AACI,SAAK,GAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,GAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,GAAL;AACI,aAAO;AAAE;AAAT;;AACJ,SAAK,GAAL;AACI,aAAO;AAAE;AAAT;;AACJ;AACI,aAAO;AAAE;AAAT;AAVR;AAYH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as DOM from './dom.js';\r\nexport function renderText(text, options = {}) {\r\n    const element = createElement(options);\r\n    element.textContent = text;\r\n    return element;\r\n}\r\nexport function renderFormattedText(formattedText, options = {}) {\r\n    const element = createElement(options);\r\n    _renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\r\n    return element;\r\n}\r\nexport function createElement(options) {\r\n    const tagName = options.inline ? 'span' : 'div';\r\n    const element = document.createElement(tagName);\r\n    if (options.className) {\r\n        element.className = options.className;\r\n    }\r\n    return element;\r\n}\r\nclass StringStream {\r\n    constructor(source) {\r\n        this.source = source;\r\n        this.index = 0;\r\n    }\r\n    eos() {\r\n        return this.index >= this.source.length;\r\n    }\r\n    next() {\r\n        const next = this.peek();\r\n        this.advance();\r\n        return next;\r\n    }\r\n    peek() {\r\n        return this.source[this.index];\r\n    }\r\n    advance() {\r\n        this.index++;\r\n    }\r\n}\r\nfunction _renderFormattedText(element, treeNode, actionHandler) {\r\n    let child;\r\n    if (treeNode.type === 2 /* Text */) {\r\n        child = document.createTextNode(treeNode.content || '');\r\n    }\r\n    else if (treeNode.type === 3 /* Bold */) {\r\n        child = document.createElement('b');\r\n    }\r\n    else if (treeNode.type === 4 /* Italics */) {\r\n        child = document.createElement('i');\r\n    }\r\n    else if (treeNode.type === 5 /* Action */ && actionHandler) {\r\n        const a = document.createElement('a');\r\n        a.href = '#';\r\n        actionHandler.disposeables.add(DOM.addStandardDisposableListener(a, 'click', (event) => {\r\n            actionHandler.callback(String(treeNode.index), event);\r\n        }));\r\n        child = a;\r\n    }\r\n    else if (treeNode.type === 7 /* NewLine */) {\r\n        child = document.createElement('br');\r\n    }\r\n    else if (treeNode.type === 1 /* Root */) {\r\n        child = element;\r\n    }\r\n    if (child && element !== child) {\r\n        element.appendChild(child);\r\n    }\r\n    if (child && Array.isArray(treeNode.children)) {\r\n        treeNode.children.forEach((nodeChild) => {\r\n            _renderFormattedText(child, nodeChild, actionHandler);\r\n        });\r\n    }\r\n}\r\nfunction parseFormattedText(content) {\r\n    const root = {\r\n        type: 1 /* Root */,\r\n        children: []\r\n    };\r\n    let actionViewItemIndex = 0;\r\n    let current = root;\r\n    const stack = [];\r\n    const stream = new StringStream(content);\r\n    while (!stream.eos()) {\r\n        let next = stream.next();\r\n        const isEscapedFormatType = (next === '\\\\' && formatTagType(stream.peek()) !== 0 /* Invalid */);\r\n        if (isEscapedFormatType) {\r\n            next = stream.next(); // unread the backslash if it escapes a format tag type\r\n        }\r\n        if (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\r\n            stream.advance();\r\n            if (current.type === 2 /* Text */) {\r\n                current = stack.pop();\r\n            }\r\n            const type = formatTagType(next);\r\n            if (current.type === type || (current.type === 5 /* Action */ && type === 6 /* ActionClose */)) {\r\n                current = stack.pop();\r\n            }\r\n            else {\r\n                const newCurrent = {\r\n                    type: type,\r\n                    children: []\r\n                };\r\n                if (type === 5 /* Action */) {\r\n                    newCurrent.index = actionViewItemIndex;\r\n                    actionViewItemIndex++;\r\n                }\r\n                current.children.push(newCurrent);\r\n                stack.push(current);\r\n                current = newCurrent;\r\n            }\r\n        }\r\n        else if (next === '\\n') {\r\n            if (current.type === 2 /* Text */) {\r\n                current = stack.pop();\r\n            }\r\n            current.children.push({\r\n                type: 7 /* NewLine */\r\n            });\r\n        }\r\n        else {\r\n            if (current.type !== 2 /* Text */) {\r\n                const textCurrent = {\r\n                    type: 2 /* Text */,\r\n                    content: next\r\n                };\r\n                current.children.push(textCurrent);\r\n                stack.push(current);\r\n                current = textCurrent;\r\n            }\r\n            else {\r\n                current.content += next;\r\n            }\r\n        }\r\n    }\r\n    if (current.type === 2 /* Text */) {\r\n        current = stack.pop();\r\n    }\r\n    if (stack.length) {\r\n        // incorrectly formatted string literal\r\n    }\r\n    return root;\r\n}\r\nfunction isFormatTag(char) {\r\n    return formatTagType(char) !== 0 /* Invalid */;\r\n}\r\nfunction formatTagType(char) {\r\n    switch (char) {\r\n        case '*':\r\n            return 3 /* Bold */;\r\n        case '_':\r\n            return 4 /* Italics */;\r\n        case '[':\r\n            return 5 /* Action */;\r\n        case ']':\r\n            return 6 /* ActionClose */;\r\n        default:\r\n            return 0 /* Invalid */;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}