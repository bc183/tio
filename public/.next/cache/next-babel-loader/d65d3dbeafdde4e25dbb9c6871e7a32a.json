{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\n\nvar Coordinate = function Coordinate(top, left) {\n  _classCallCheck(this, Coordinate);\n\n  this.top = top;\n  this.left = left;\n};\n\nexport var ViewContentWidgets = /*#__PURE__*/function (_ViewPart) {\n  _inherits(ViewContentWidgets, _ViewPart);\n\n  var _super = _createSuper(ViewContentWidgets);\n\n  function ViewContentWidgets(context, viewDomNode) {\n    var _this;\n\n    _classCallCheck(this, ViewContentWidgets);\n\n    _this = _super.call(this, context);\n    _this._viewDomNode = viewDomNode;\n    _this._widgets = {};\n    _this.domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this.domNode, 1\n    /* ContentWidgets */\n    );\n\n    _this.domNode.setClassName('contentWidgets');\n\n    _this.domNode.setPosition('absolute');\n\n    _this.domNode.setTop(0);\n\n    _this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this.overflowingContentWidgetsDomNode, 2\n    /* OverflowingContentWidgets */\n    );\n\n    _this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n\n    return _this;\n  }\n\n  _createClass(ViewContentWidgets, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ViewContentWidgets.prototype), \"dispose\", this).call(this);\n\n      this._widgets = {};\n    } // --- begin event handlers\n\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var keys = Object.keys(this._widgets);\n\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var widgetId = _keys[_i];\n\n        this._widgets[widgetId].onConfigurationChanged(e);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      // true for inline decorations that can end up relayouting text\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged(e) {\n      var keys = Object.keys(this._widgets);\n\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var widgetId = _keys2[_i2];\n\n        this._widgets[widgetId].onLineMappingChanged(e);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    } // ---- end view event handlers\n\n  }, {\n    key: \"addWidget\",\n    value: function addWidget(_widget) {\n      var myWidget = new Widget(this._context, this._viewDomNode, _widget);\n      this._widgets[myWidget.id] = myWidget;\n\n      if (myWidget.allowEditorOverflow) {\n        this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n      } else {\n        this.domNode.appendChild(myWidget.domNode);\n      }\n\n      this.setShouldRender();\n    }\n  }, {\n    key: \"setWidgetPosition\",\n    value: function setWidgetPosition(widget, range, preference) {\n      var myWidget = this._widgets[widget.getId()];\n\n      myWidget.setPosition(range, preference);\n      this.setShouldRender();\n    }\n  }, {\n    key: \"removeWidget\",\n    value: function removeWidget(widget) {\n      var widgetId = widget.getId();\n\n      if (this._widgets.hasOwnProperty(widgetId)) {\n        var myWidget = this._widgets[widgetId];\n        delete this._widgets[widgetId];\n        var domNode = myWidget.domNode.domNode;\n        domNode.parentNode.removeChild(domNode);\n        domNode.removeAttribute('monaco-visible-content-widget');\n        this.setShouldRender();\n      }\n    }\n  }, {\n    key: \"shouldSuppressMouseDownOnWidget\",\n    value: function shouldSuppressMouseDownOnWidget(widgetId) {\n      if (this._widgets.hasOwnProperty(widgetId)) {\n        return this._widgets[widgetId].suppressMouseDown;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender(viewportData) {\n      var keys = Object.keys(this._widgets);\n\n      for (var _i3 = 0, _keys3 = keys; _i3 < _keys3.length; _i3++) {\n        var widgetId = _keys3[_i3];\n\n        this._widgets[widgetId].onBeforeRender(viewportData);\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var keys = Object.keys(this._widgets);\n\n      for (var _i4 = 0, _keys4 = keys; _i4 < _keys4.length; _i4++) {\n        var widgetId = _keys4[_i4];\n\n        this._widgets[widgetId].prepareRender(ctx);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      var keys = Object.keys(this._widgets);\n\n      for (var _i5 = 0, _keys5 = keys; _i5 < _keys5.length; _i5++) {\n        var widgetId = _keys5[_i5];\n\n        this._widgets[widgetId].render(ctx);\n      }\n    }\n  }]);\n\n  return ViewContentWidgets;\n}(ViewPart);\n\nvar Widget = /*#__PURE__*/function () {\n  function Widget(context, viewDomNode, actual) {\n    _classCallCheck(this, Widget);\n\n    this._context = context;\n    this._viewDomNode = viewDomNode;\n    this._actual = actual;\n    this.domNode = createFastDomNode(this._actual.getDomNode());\n    this.id = this._actual.getId();\n    this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n    this.suppressMouseDown = this._actual.suppressMouseDown || false;\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(124\n    /* layoutInfo */\n    );\n    this._fixedOverflowWidgets = options.get(32\n    /* fixedOverflowWidgets */\n    );\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    this._lineHeight = options.get(53\n    /* lineHeight */\n    );\n    this._range = null;\n    this._viewRange = null;\n    this._preference = [];\n    this._cachedDomNodeClientWidth = -1;\n    this._cachedDomNodeClientHeight = -1;\n    this._maxWidth = this._getMaxWidth();\n    this._isVisible = false;\n    this._renderData = null;\n    this.domNode.setPosition(this._fixedOverflowWidgets && this.allowEditorOverflow ? 'fixed' : 'absolute');\n    this.domNode.setVisibility('hidden');\n    this.domNode.setAttribute('widgetId', this.id);\n    this.domNode.setMaxWidth(this._maxWidth);\n  }\n\n  _createClass(Widget, [{\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      this._lineHeight = options.get(53\n      /* lineHeight */\n      );\n\n      if (e.hasChanged(124\n      /* layoutInfo */\n      )) {\n        var layoutInfo = options.get(124\n        /* layoutInfo */\n        );\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._maxWidth = this._getMaxWidth();\n      }\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged(e) {\n      this._setPosition(this._range);\n    }\n  }, {\n    key: \"_setPosition\",\n    value: function _setPosition(range) {\n      this._range = range;\n      this._viewRange = null;\n\n      if (this._range) {\n        // Do not trust that widgets give a valid position\n        var validModelRange = this._context.model.validateModelRange(this._range);\n\n        if (this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getStartPosition()) || this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getEndPosition())) {\n          this._viewRange = this._context.model.coordinatesConverter.convertModelRangeToViewRange(validModelRange);\n        }\n      }\n    }\n  }, {\n    key: \"_getMaxWidth\",\n    value: function _getMaxWidth() {\n      return this.allowEditorOverflow ? window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth : this._contentWidth;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(range, preference) {\n      this._setPosition(range);\n\n      this._preference = preference;\n      this._cachedDomNodeClientWidth = -1;\n      this._cachedDomNodeClientHeight = -1;\n    }\n  }, {\n    key: \"_layoutBoxInViewport\",\n    value: function _layoutBoxInViewport(topLeft, bottomLeft, width, height, ctx) {\n      // Our visible box is split horizontally by the current line => 2 boxes\n      // a) the box above the line\n      var aboveLineTop = topLeft.top;\n      var heightAboveLine = aboveLineTop; // b) the box under the line\n\n      var underLineTop = bottomLeft.top + this._lineHeight;\n      var heightUnderLine = ctx.viewportHeight - underLineTop;\n      var aboveTop = aboveLineTop - height;\n      var fitsAbove = heightAboveLine >= height;\n      var belowTop = underLineTop;\n      var fitsBelow = heightUnderLine >= height; // And its left\n\n      var actualAboveLeft = topLeft.left;\n      var actualBelowLeft = bottomLeft.left;\n\n      if (actualAboveLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n        actualAboveLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n      }\n\n      if (actualBelowLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n        actualBelowLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n      }\n\n      if (actualAboveLeft < ctx.scrollLeft) {\n        actualAboveLeft = ctx.scrollLeft;\n      }\n\n      if (actualBelowLeft < ctx.scrollLeft) {\n        actualBelowLeft = ctx.scrollLeft;\n      }\n\n      return {\n        fitsAbove: fitsAbove,\n        aboveTop: aboveTop,\n        aboveLeft: actualAboveLeft,\n        fitsBelow: fitsBelow,\n        belowTop: belowTop,\n        belowLeft: actualBelowLeft\n      };\n    }\n  }, {\n    key: \"_layoutHorizontalSegmentInPage\",\n    value: function _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n      // Initially, the limits are defined as the dom node limits\n      var MIN_LIMIT = Math.max(0, domNodePosition.left - width);\n      var MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width);\n      var absoluteLeft = domNodePosition.left + left - dom.StandardWindow.scrollX;\n\n      if (absoluteLeft + width > MAX_LIMIT) {\n        var delta = absoluteLeft - (MAX_LIMIT - width);\n        absoluteLeft -= delta;\n        left -= delta;\n      }\n\n      if (absoluteLeft < MIN_LIMIT) {\n        var _delta = absoluteLeft - MIN_LIMIT;\n\n        absoluteLeft -= _delta;\n        left -= _delta;\n      }\n\n      return [left, absoluteLeft];\n    }\n  }, {\n    key: \"_layoutBoxInPage\",\n    value: function _layoutBoxInPage(topLeft, bottomLeft, width, height, ctx) {\n      var aboveTop = topLeft.top - height;\n      var belowTop = bottomLeft.top + this._lineHeight;\n      var domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n      var absoluteAboveTop = domNodePosition.top + aboveTop - dom.StandardWindow.scrollY;\n      var absoluteBelowTop = domNodePosition.top + belowTop - dom.StandardWindow.scrollY;\n      var windowSize = dom.getClientArea(document.body);\n\n      var _this$_layoutHorizont = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, topLeft.left - ctx.scrollLeft + this._contentLeft, width),\n          _this$_layoutHorizont2 = _slicedToArray(_this$_layoutHorizont, 2),\n          aboveLeft = _this$_layoutHorizont2[0],\n          absoluteAboveLeft = _this$_layoutHorizont2[1];\n\n      var _this$_layoutHorizont3 = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, bottomLeft.left - ctx.scrollLeft + this._contentLeft, width),\n          _this$_layoutHorizont4 = _slicedToArray(_this$_layoutHorizont3, 2),\n          belowLeft = _this$_layoutHorizont4[0],\n          absoluteBelowLeft = _this$_layoutHorizont4[1]; // Leave some clearance to the top/bottom\n\n\n      var TOP_PADDING = 22;\n      var BOTTOM_PADDING = 22;\n      var fitsAbove = absoluteAboveTop >= TOP_PADDING;\n      var fitsBelow = absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING;\n\n      if (this._fixedOverflowWidgets) {\n        return {\n          fitsAbove: fitsAbove,\n          aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n          aboveLeft: absoluteAboveLeft,\n          fitsBelow: fitsBelow,\n          belowTop: absoluteBelowTop,\n          belowLeft: absoluteBelowLeft\n        };\n      }\n\n      return {\n        fitsAbove: fitsAbove,\n        aboveTop: aboveTop,\n        aboveLeft: aboveLeft,\n        fitsBelow: fitsBelow,\n        belowTop: belowTop,\n        belowLeft: belowLeft\n      };\n    }\n  }, {\n    key: \"_prepareRenderWidgetAtExactPositionOverflowing\",\n    value: function _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n      return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\r\n     * Compute `this._topLeft`\r\n     */\n\n  }, {\n    key: \"_getTopAndBottomLeft\",\n    value: function _getTopAndBottomLeft(ctx) {\n      if (!this._viewRange) {\n        return [null, null];\n      }\n\n      var visibleRangesForRange = ctx.linesVisibleRangesForRange(this._viewRange, false);\n\n      if (!visibleRangesForRange || visibleRangesForRange.length === 0) {\n        return [null, null];\n      }\n\n      var firstLine = visibleRangesForRange[0];\n      var lastLine = visibleRangesForRange[0];\n\n      var _iterator = _createForOfIteratorHelper(visibleRangesForRange),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var visibleRangesForLine = _step.value;\n\n          if (visibleRangesForLine.lineNumber < firstLine.lineNumber) {\n            firstLine = visibleRangesForLine;\n          }\n\n          if (visibleRangesForLine.lineNumber > lastLine.lineNumber) {\n            lastLine = visibleRangesForLine;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var firstLineMinLeft = 1073741824\n      /* MAX_SAFE_SMALL_INTEGER */\n      ; //firstLine.Constants.MAX_SAFE_SMALL_INTEGER;\n\n      var _iterator2 = _createForOfIteratorHelper(firstLine.ranges),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var visibleRange = _step2.value;\n\n          if (visibleRange.left < firstLineMinLeft) {\n            firstLineMinLeft = visibleRange.left;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var lastLineMinLeft = 1073741824\n      /* MAX_SAFE_SMALL_INTEGER */\n      ; //lastLine.Constants.MAX_SAFE_SMALL_INTEGER;\n\n      var _iterator3 = _createForOfIteratorHelper(lastLine.ranges),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _visibleRange = _step3.value;\n\n          if (_visibleRange.left < lastLineMinLeft) {\n            lastLineMinLeft = _visibleRange.left;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      var topForPosition = ctx.getVerticalOffsetForLineNumber(firstLine.lineNumber) - ctx.scrollTop;\n      var topLeft = new Coordinate(topForPosition, firstLineMinLeft);\n      var topForBottomLine = ctx.getVerticalOffsetForLineNumber(lastLine.lineNumber) - ctx.scrollTop;\n      var bottomLeft = new Coordinate(topForBottomLine, lastLineMinLeft);\n      return [topLeft, bottomLeft];\n    }\n  }, {\n    key: \"_prepareRenderWidget\",\n    value: function _prepareRenderWidget(ctx) {\n      var _this$_getTopAndBotto = this._getTopAndBottomLeft(ctx),\n          _this$_getTopAndBotto2 = _slicedToArray(_this$_getTopAndBotto, 2),\n          topLeft = _this$_getTopAndBotto2[0],\n          bottomLeft = _this$_getTopAndBotto2[1];\n\n      if (!topLeft || !bottomLeft) {\n        return null;\n      }\n\n      if (this._cachedDomNodeClientWidth === -1 || this._cachedDomNodeClientHeight === -1) {\n        var preferredDimensions = null;\n\n        if (typeof this._actual.beforeRender === 'function') {\n          preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n        }\n\n        if (preferredDimensions) {\n          this._cachedDomNodeClientWidth = preferredDimensions.width;\n          this._cachedDomNodeClientHeight = preferredDimensions.height;\n        } else {\n          var domNode = this.domNode.domNode;\n          this._cachedDomNodeClientWidth = domNode.clientWidth;\n          this._cachedDomNodeClientHeight = domNode.clientHeight;\n        }\n      }\n\n      var placement;\n\n      if (this.allowEditorOverflow) {\n        placement = this._layoutBoxInPage(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n      } else {\n        placement = this._layoutBoxInViewport(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n      } // Do two passes, first for perfect fit, second picks first option\n\n\n      if (this._preference) {\n        for (var pass = 1; pass <= 2; pass++) {\n          var _iterator4 = _createForOfIteratorHelper(this._preference),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var pref = _step4.value;\n\n              // placement\n              if (pref === 1\n              /* ABOVE */\n              ) {\n                  if (!placement) {\n                    // Widget outside of viewport\n                    return null;\n                  }\n\n                  if (pass === 2 || placement.fitsAbove) {\n                    return {\n                      coordinate: new Coordinate(placement.aboveTop, placement.aboveLeft),\n                      position: 1\n                      /* ABOVE */\n\n                    };\n                  }\n                } else if (pref === 2\n              /* BELOW */\n              ) {\n                  if (!placement) {\n                    // Widget outside of viewport\n                    return null;\n                  }\n\n                  if (pass === 2 || placement.fitsBelow) {\n                    return {\n                      coordinate: new Coordinate(placement.belowTop, placement.belowLeft),\n                      position: 2\n                      /* BELOW */\n\n                    };\n                  }\n                } else {\n                if (this.allowEditorOverflow) {\n                  return {\n                    coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(topLeft),\n                    position: 0\n                    /* EXACT */\n\n                  };\n                } else {\n                  return {\n                    coordinate: topLeft,\n                    position: 0\n                    /* EXACT */\n\n                  };\n                }\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\r\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\r\n     */\n\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender(viewportData) {\n      if (!this._viewRange || !this._preference) {\n        return;\n      }\n\n      if (this._viewRange.endLineNumber < viewportData.startLineNumber || this._viewRange.startLineNumber > viewportData.endLineNumber) {\n        // Outside of viewport\n        return;\n      }\n\n      this.domNode.setMaxWidth(this._maxWidth);\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      this._renderData = this._prepareRenderWidget(ctx);\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      if (!this._renderData) {\n        // This widget should be invisible\n        if (this._isVisible) {\n          this.domNode.removeAttribute('monaco-visible-content-widget');\n          this._isVisible = false;\n          this.domNode.setVisibility('hidden');\n        }\n\n        if (typeof this._actual.afterRender === 'function') {\n          safeInvoke(this._actual.afterRender, this._actual, null);\n        }\n\n        return;\n      } // This widget should be visible\n\n\n      if (this.allowEditorOverflow) {\n        this.domNode.setTop(this._renderData.coordinate.top);\n        this.domNode.setLeft(this._renderData.coordinate.left);\n      } else {\n        this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n        this.domNode.setLeft(this._renderData.coordinate.left);\n      }\n\n      if (!this._isVisible) {\n        this.domNode.setVisibility('inherit');\n        this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n        this._isVisible = true;\n      }\n\n      if (typeof this._actual.afterRender === 'function') {\n        safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n      }\n    }\n  }]);\n\n  return Widget;\n}();\n\nfunction safeInvoke(fn, thisArg) {\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return fn.call.apply(fn, [thisArg].concat(args));\n  } catch (_a) {\n    // ignore\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js"],"names":["dom","createFastDomNode","PartFingerprints","ViewPart","Coordinate","top","left","ViewContentWidgets","context","viewDomNode","_viewDomNode","_widgets","domNode","document","createElement","write","setClassName","setPosition","setTop","overflowingContentWidgetsDomNode","e","keys","Object","widgetId","onConfigurationChanged","onLineMappingChanged","_widget","myWidget","Widget","_context","id","allowEditorOverflow","appendChild","setShouldRender","widget","range","preference","getId","hasOwnProperty","parentNode","removeChild","removeAttribute","suppressMouseDown","viewportData","onBeforeRender","ctx","prepareRender","render","actual","_actual","getDomNode","options","configuration","layoutInfo","get","_fixedOverflowWidgets","_contentWidth","contentWidth","_contentLeft","contentLeft","_lineHeight","_range","_viewRange","_preference","_cachedDomNodeClientWidth","_cachedDomNodeClientHeight","_maxWidth","_getMaxWidth","_isVisible","_renderData","setVisibility","setAttribute","setMaxWidth","hasChanged","_setPosition","validModelRange","model","validateModelRange","coordinatesConverter","modelPositionIsVisible","getStartPosition","getEndPosition","convertModelRangeToViewRange","window","innerWidth","documentElement","clientWidth","body","topLeft","bottomLeft","width","height","aboveLineTop","heightAboveLine","underLineTop","heightUnderLine","viewportHeight","aboveTop","fitsAbove","belowTop","fitsBelow","actualAboveLeft","actualBelowLeft","scrollLeft","viewportWidth","aboveLeft","belowLeft","windowSize","domNodePosition","MIN_LIMIT","Math","max","MAX_LIMIT","min","absoluteLeft","StandardWindow","scrollX","delta","getDomNodePagePosition","absoluteAboveTop","scrollY","absoluteBelowTop","getClientArea","_layoutHorizontalSegmentInPage","absoluteAboveLeft","absoluteBelowLeft","TOP_PADDING","BOTTOM_PADDING","visibleRangesForRange","linesVisibleRangesForRange","length","firstLine","lastLine","visibleRangesForLine","lineNumber","firstLineMinLeft","ranges","visibleRange","lastLineMinLeft","topForPosition","getVerticalOffsetForLineNumber","scrollTop","topForBottomLine","_getTopAndBottomLeft","preferredDimensions","beforeRender","safeInvoke","clientHeight","placement","_layoutBoxInPage","_layoutBoxInViewport","pass","pref","coordinate","position","_prepareRenderWidgetAtExactPositionOverflowing","endLineNumber","startLineNumber","_prepareRenderWidget","afterRender","setLeft","bigNumbersDelta","fn","thisArg","args","call","_a"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\r\nclass Coordinate {\r\n    constructor(top, left) {\r\n        this.top = top;\r\n        this.left = left;\r\n    }\r\n}\r\nexport class ViewContentWidgets extends ViewPart {\r\n    constructor(context, viewDomNode) {\r\n        super(context);\r\n        this._viewDomNode = viewDomNode;\r\n        this._widgets = {};\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(this.domNode, 1 /* ContentWidgets */);\r\n        this.domNode.setClassName('contentWidgets');\r\n        this.domNode.setPosition('absolute');\r\n        this.domNode.setTop(0);\r\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\r\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* OverflowingContentWidgets */);\r\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._widgets = {};\r\n    }\r\n    // --- begin event handlers\r\n    onConfigurationChanged(e) {\r\n        const keys = Object.keys(this._widgets);\r\n        for (const widgetId of keys) {\r\n            this._widgets[widgetId].onConfigurationChanged(e);\r\n        }\r\n        return true;\r\n    }\r\n    onDecorationsChanged(e) {\r\n        // true for inline decorations that can end up relayouting text\r\n        return true;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLineMappingChanged(e) {\r\n        const keys = Object.keys(this._widgets);\r\n        for (const widgetId of keys) {\r\n            this._widgets[widgetId].onLineMappingChanged(e);\r\n        }\r\n        return true;\r\n    }\r\n    onLinesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return true;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    // ---- end view event handlers\r\n    addWidget(_widget) {\r\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\r\n        this._widgets[myWidget.id] = myWidget;\r\n        if (myWidget.allowEditorOverflow) {\r\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\r\n        }\r\n        else {\r\n            this.domNode.appendChild(myWidget.domNode);\r\n        }\r\n        this.setShouldRender();\r\n    }\r\n    setWidgetPosition(widget, range, preference) {\r\n        const myWidget = this._widgets[widget.getId()];\r\n        myWidget.setPosition(range, preference);\r\n        this.setShouldRender();\r\n    }\r\n    removeWidget(widget) {\r\n        const widgetId = widget.getId();\r\n        if (this._widgets.hasOwnProperty(widgetId)) {\r\n            const myWidget = this._widgets[widgetId];\r\n            delete this._widgets[widgetId];\r\n            const domNode = myWidget.domNode.domNode;\r\n            domNode.parentNode.removeChild(domNode);\r\n            domNode.removeAttribute('monaco-visible-content-widget');\r\n            this.setShouldRender();\r\n        }\r\n    }\r\n    shouldSuppressMouseDownOnWidget(widgetId) {\r\n        if (this._widgets.hasOwnProperty(widgetId)) {\r\n            return this._widgets[widgetId].suppressMouseDown;\r\n        }\r\n        return false;\r\n    }\r\n    onBeforeRender(viewportData) {\r\n        const keys = Object.keys(this._widgets);\r\n        for (const widgetId of keys) {\r\n            this._widgets[widgetId].onBeforeRender(viewportData);\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        const keys = Object.keys(this._widgets);\r\n        for (const widgetId of keys) {\r\n            this._widgets[widgetId].prepareRender(ctx);\r\n        }\r\n    }\r\n    render(ctx) {\r\n        const keys = Object.keys(this._widgets);\r\n        for (const widgetId of keys) {\r\n            this._widgets[widgetId].render(ctx);\r\n        }\r\n    }\r\n}\r\nclass Widget {\r\n    constructor(context, viewDomNode, actual) {\r\n        this._context = context;\r\n        this._viewDomNode = viewDomNode;\r\n        this._actual = actual;\r\n        this.domNode = createFastDomNode(this._actual.getDomNode());\r\n        this.id = this._actual.getId();\r\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\r\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\r\n        const options = this._context.configuration.options;\r\n        const layoutInfo = options.get(124 /* layoutInfo */);\r\n        this._fixedOverflowWidgets = options.get(32 /* fixedOverflowWidgets */);\r\n        this._contentWidth = layoutInfo.contentWidth;\r\n        this._contentLeft = layoutInfo.contentLeft;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._range = null;\r\n        this._viewRange = null;\r\n        this._preference = [];\r\n        this._cachedDomNodeClientWidth = -1;\r\n        this._cachedDomNodeClientHeight = -1;\r\n        this._maxWidth = this._getMaxWidth();\r\n        this._isVisible = false;\r\n        this._renderData = null;\r\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\r\n        this.domNode.setVisibility('hidden');\r\n        this.domNode.setAttribute('widgetId', this.id);\r\n        this.domNode.setMaxWidth(this._maxWidth);\r\n    }\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        if (e.hasChanged(124 /* layoutInfo */)) {\r\n            const layoutInfo = options.get(124 /* layoutInfo */);\r\n            this._contentLeft = layoutInfo.contentLeft;\r\n            this._contentWidth = layoutInfo.contentWidth;\r\n            this._maxWidth = this._getMaxWidth();\r\n        }\r\n    }\r\n    onLineMappingChanged(e) {\r\n        this._setPosition(this._range);\r\n    }\r\n    _setPosition(range) {\r\n        this._range = range;\r\n        this._viewRange = null;\r\n        if (this._range) {\r\n            // Do not trust that widgets give a valid position\r\n            const validModelRange = this._context.model.validateModelRange(this._range);\r\n            if (this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getStartPosition()) || this._context.model.coordinatesConverter.modelPositionIsVisible(validModelRange.getEndPosition())) {\r\n                this._viewRange = this._context.model.coordinatesConverter.convertModelRangeToViewRange(validModelRange);\r\n            }\r\n        }\r\n    }\r\n    _getMaxWidth() {\r\n        return (this.allowEditorOverflow\r\n            ? window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n            : this._contentWidth);\r\n    }\r\n    setPosition(range, preference) {\r\n        this._setPosition(range);\r\n        this._preference = preference;\r\n        this._cachedDomNodeClientWidth = -1;\r\n        this._cachedDomNodeClientHeight = -1;\r\n    }\r\n    _layoutBoxInViewport(topLeft, bottomLeft, width, height, ctx) {\r\n        // Our visible box is split horizontally by the current line => 2 boxes\r\n        // a) the box above the line\r\n        const aboveLineTop = topLeft.top;\r\n        const heightAboveLine = aboveLineTop;\r\n        // b) the box under the line\r\n        const underLineTop = bottomLeft.top + this._lineHeight;\r\n        const heightUnderLine = ctx.viewportHeight - underLineTop;\r\n        const aboveTop = aboveLineTop - height;\r\n        const fitsAbove = (heightAboveLine >= height);\r\n        const belowTop = underLineTop;\r\n        const fitsBelow = (heightUnderLine >= height);\r\n        // And its left\r\n        let actualAboveLeft = topLeft.left;\r\n        let actualBelowLeft = bottomLeft.left;\r\n        if (actualAboveLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\r\n            actualAboveLeft = ctx.scrollLeft + ctx.viewportWidth - width;\r\n        }\r\n        if (actualBelowLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\r\n            actualBelowLeft = ctx.scrollLeft + ctx.viewportWidth - width;\r\n        }\r\n        if (actualAboveLeft < ctx.scrollLeft) {\r\n            actualAboveLeft = ctx.scrollLeft;\r\n        }\r\n        if (actualBelowLeft < ctx.scrollLeft) {\r\n            actualBelowLeft = ctx.scrollLeft;\r\n        }\r\n        return {\r\n            fitsAbove: fitsAbove,\r\n            aboveTop: aboveTop,\r\n            aboveLeft: actualAboveLeft,\r\n            fitsBelow: fitsBelow,\r\n            belowTop: belowTop,\r\n            belowLeft: actualBelowLeft,\r\n        };\r\n    }\r\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\r\n        // Initially, the limits are defined as the dom node limits\r\n        const MIN_LIMIT = Math.max(0, domNodePosition.left - width);\r\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width);\r\n        let absoluteLeft = domNodePosition.left + left - dom.StandardWindow.scrollX;\r\n        if (absoluteLeft + width > MAX_LIMIT) {\r\n            const delta = absoluteLeft - (MAX_LIMIT - width);\r\n            absoluteLeft -= delta;\r\n            left -= delta;\r\n        }\r\n        if (absoluteLeft < MIN_LIMIT) {\r\n            const delta = absoluteLeft - MIN_LIMIT;\r\n            absoluteLeft -= delta;\r\n            left -= delta;\r\n        }\r\n        return [left, absoluteLeft];\r\n    }\r\n    _layoutBoxInPage(topLeft, bottomLeft, width, height, ctx) {\r\n        const aboveTop = topLeft.top - height;\r\n        const belowTop = bottomLeft.top + this._lineHeight;\r\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\r\n        const absoluteAboveTop = domNodePosition.top + aboveTop - dom.StandardWindow.scrollY;\r\n        const absoluteBelowTop = domNodePosition.top + belowTop - dom.StandardWindow.scrollY;\r\n        const windowSize = dom.getClientArea(document.body);\r\n        const [aboveLeft, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, topLeft.left - ctx.scrollLeft + this._contentLeft, width);\r\n        const [belowLeft, absoluteBelowLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, bottomLeft.left - ctx.scrollLeft + this._contentLeft, width);\r\n        // Leave some clearance to the top/bottom\r\n        const TOP_PADDING = 22;\r\n        const BOTTOM_PADDING = 22;\r\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\r\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\r\n        if (this._fixedOverflowWidgets) {\r\n            return {\r\n                fitsAbove,\r\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\r\n                aboveLeft: absoluteAboveLeft,\r\n                fitsBelow,\r\n                belowTop: absoluteBelowTop,\r\n                belowLeft: absoluteBelowLeft\r\n            };\r\n        }\r\n        return {\r\n            fitsAbove,\r\n            aboveTop: aboveTop,\r\n            aboveLeft,\r\n            fitsBelow,\r\n            belowTop,\r\n            belowLeft\r\n        };\r\n    }\r\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\r\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\r\n    }\r\n    /**\r\n     * Compute `this._topLeft`\r\n     */\r\n    _getTopAndBottomLeft(ctx) {\r\n        if (!this._viewRange) {\r\n            return [null, null];\r\n        }\r\n        const visibleRangesForRange = ctx.linesVisibleRangesForRange(this._viewRange, false);\r\n        if (!visibleRangesForRange || visibleRangesForRange.length === 0) {\r\n            return [null, null];\r\n        }\r\n        let firstLine = visibleRangesForRange[0];\r\n        let lastLine = visibleRangesForRange[0];\r\n        for (const visibleRangesForLine of visibleRangesForRange) {\r\n            if (visibleRangesForLine.lineNumber < firstLine.lineNumber) {\r\n                firstLine = visibleRangesForLine;\r\n            }\r\n            if (visibleRangesForLine.lineNumber > lastLine.lineNumber) {\r\n                lastLine = visibleRangesForLine;\r\n            }\r\n        }\r\n        let firstLineMinLeft = 1073741824 /* MAX_SAFE_SMALL_INTEGER */; //firstLine.Constants.MAX_SAFE_SMALL_INTEGER;\r\n        for (const visibleRange of firstLine.ranges) {\r\n            if (visibleRange.left < firstLineMinLeft) {\r\n                firstLineMinLeft = visibleRange.left;\r\n            }\r\n        }\r\n        let lastLineMinLeft = 1073741824 /* MAX_SAFE_SMALL_INTEGER */; //lastLine.Constants.MAX_SAFE_SMALL_INTEGER;\r\n        for (const visibleRange of lastLine.ranges) {\r\n            if (visibleRange.left < lastLineMinLeft) {\r\n                lastLineMinLeft = visibleRange.left;\r\n            }\r\n        }\r\n        const topForPosition = ctx.getVerticalOffsetForLineNumber(firstLine.lineNumber) - ctx.scrollTop;\r\n        const topLeft = new Coordinate(topForPosition, firstLineMinLeft);\r\n        const topForBottomLine = ctx.getVerticalOffsetForLineNumber(lastLine.lineNumber) - ctx.scrollTop;\r\n        const bottomLeft = new Coordinate(topForBottomLine, lastLineMinLeft);\r\n        return [topLeft, bottomLeft];\r\n    }\r\n    _prepareRenderWidget(ctx) {\r\n        const [topLeft, bottomLeft] = this._getTopAndBottomLeft(ctx);\r\n        if (!topLeft || !bottomLeft) {\r\n            return null;\r\n        }\r\n        if (this._cachedDomNodeClientWidth === -1 || this._cachedDomNodeClientHeight === -1) {\r\n            let preferredDimensions = null;\r\n            if (typeof this._actual.beforeRender === 'function') {\r\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\r\n            }\r\n            if (preferredDimensions) {\r\n                this._cachedDomNodeClientWidth = preferredDimensions.width;\r\n                this._cachedDomNodeClientHeight = preferredDimensions.height;\r\n            }\r\n            else {\r\n                const domNode = this.domNode.domNode;\r\n                this._cachedDomNodeClientWidth = domNode.clientWidth;\r\n                this._cachedDomNodeClientHeight = domNode.clientHeight;\r\n            }\r\n        }\r\n        let placement;\r\n        if (this.allowEditorOverflow) {\r\n            placement = this._layoutBoxInPage(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\r\n        }\r\n        else {\r\n            placement = this._layoutBoxInViewport(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\r\n        }\r\n        // Do two passes, first for perfect fit, second picks first option\r\n        if (this._preference) {\r\n            for (let pass = 1; pass <= 2; pass++) {\r\n                for (const pref of this._preference) {\r\n                    // placement\r\n                    if (pref === 1 /* ABOVE */) {\r\n                        if (!placement) {\r\n                            // Widget outside of viewport\r\n                            return null;\r\n                        }\r\n                        if (pass === 2 || placement.fitsAbove) {\r\n                            return { coordinate: new Coordinate(placement.aboveTop, placement.aboveLeft), position: 1 /* ABOVE */ };\r\n                        }\r\n                    }\r\n                    else if (pref === 2 /* BELOW */) {\r\n                        if (!placement) {\r\n                            // Widget outside of viewport\r\n                            return null;\r\n                        }\r\n                        if (pass === 2 || placement.fitsBelow) {\r\n                            return { coordinate: new Coordinate(placement.belowTop, placement.belowLeft), position: 2 /* BELOW */ };\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.allowEditorOverflow) {\r\n                            return { coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(topLeft), position: 0 /* EXACT */ };\r\n                        }\r\n                        else {\r\n                            return { coordinate: topLeft, position: 0 /* EXACT */ };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\r\n     */\r\n    onBeforeRender(viewportData) {\r\n        if (!this._viewRange || !this._preference) {\r\n            return;\r\n        }\r\n        if (this._viewRange.endLineNumber < viewportData.startLineNumber || this._viewRange.startLineNumber > viewportData.endLineNumber) {\r\n            // Outside of viewport\r\n            return;\r\n        }\r\n        this.domNode.setMaxWidth(this._maxWidth);\r\n    }\r\n    prepareRender(ctx) {\r\n        this._renderData = this._prepareRenderWidget(ctx);\r\n    }\r\n    render(ctx) {\r\n        if (!this._renderData) {\r\n            // This widget should be invisible\r\n            if (this._isVisible) {\r\n                this.domNode.removeAttribute('monaco-visible-content-widget');\r\n                this._isVisible = false;\r\n                this.domNode.setVisibility('hidden');\r\n            }\r\n            if (typeof this._actual.afterRender === 'function') {\r\n                safeInvoke(this._actual.afterRender, this._actual, null);\r\n            }\r\n            return;\r\n        }\r\n        // This widget should be visible\r\n        if (this.allowEditorOverflow) {\r\n            this.domNode.setTop(this._renderData.coordinate.top);\r\n            this.domNode.setLeft(this._renderData.coordinate.left);\r\n        }\r\n        else {\r\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\r\n            this.domNode.setLeft(this._renderData.coordinate.left);\r\n        }\r\n        if (!this._isVisible) {\r\n            this.domNode.setVisibility('inherit');\r\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\r\n            this._isVisible = true;\r\n        }\r\n        if (typeof this._actual.afterRender === 'function') {\r\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\r\n        }\r\n    }\r\n}\r\nfunction safeInvoke(fn, thisArg, ...args) {\r\n    try {\r\n        return fn.call(thisArg, ...args);\r\n    }\r\n    catch (_a) {\r\n        // ignore\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}