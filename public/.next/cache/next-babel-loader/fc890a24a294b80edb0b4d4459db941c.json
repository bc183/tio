{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\n\nvar MOUSE_DRAG_RESET_DISTANCE = 140;\nexport var AbstractScrollbar = /*#__PURE__*/function (_Widget) {\n  _inherits(AbstractScrollbar, _Widget);\n\n  var _super = _createSuper(AbstractScrollbar);\n\n  function AbstractScrollbar(opts) {\n    var _this;\n\n    _classCallCheck(this, AbstractScrollbar);\n\n    _this = _super.call(this);\n    _this._lazyRender = opts.lazyRender;\n    _this._host = opts.host;\n    _this._scrollable = opts.scrollable;\n    _this._scrollByPage = opts.scrollByPage;\n    _this._scrollbarState = opts.scrollbarState;\n    _this._visibilityController = _this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n\n    _this._visibilityController.setIsNeeded(_this._scrollbarState.isNeeded());\n\n    _this._mouseMoveMonitor = _this._register(new GlobalMouseMoveMonitor());\n    _this._shouldRender = true;\n    _this.domNode = createFastDomNode(document.createElement('div'));\n\n    _this.domNode.setAttribute('role', 'presentation');\n\n    _this.domNode.setAttribute('aria-hidden', 'true');\n\n    _this._visibilityController.setDomNode(_this.domNode);\n\n    _this.domNode.setPosition('absolute');\n\n    _this.onmousedown(_this.domNode.domNode, function (e) {\n      return _this._domNodeMouseDown(e);\n    });\n\n    return _this;\n  } // ----------------- creation\n\n  /**\r\n   * Creates the dom node for an arrow & adds it to the container\r\n   */\n\n\n  _createClass(AbstractScrollbar, [{\n    key: \"_createArrow\",\n    value: function _createArrow(opts) {\n      var arrow = this._register(new ScrollbarArrow(opts));\n\n      this.domNode.domNode.appendChild(arrow.bgDomNode);\n      this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\r\n     * Creates the slider dom node, adds it to the container & hooks up the events\r\n     */\n\n  }, {\n    key: \"_createSlider\",\n    value: function _createSlider(top, left, width, height) {\n      var _this2 = this;\n\n      this.slider = createFastDomNode(document.createElement('div'));\n      this.slider.setClassName('slider');\n      this.slider.setPosition('absolute');\n      this.slider.setTop(top);\n      this.slider.setLeft(left);\n\n      if (typeof width === 'number') {\n        this.slider.setWidth(width);\n      }\n\n      if (typeof height === 'number') {\n        this.slider.setHeight(height);\n      }\n\n      this.slider.setLayerHinting(true);\n      this.slider.setContain('strict');\n      this.domNode.domNode.appendChild(this.slider.domNode);\n      this.onmousedown(this.slider.domNode, function (e) {\n        if (e.leftButton) {\n          e.preventDefault();\n\n          _this2._sliderMouseDown(e, function () {});\n        }\n      });\n      this.onclick(this.slider.domNode, function (e) {\n        if (e.leftButton) {\n          e.stopPropagation();\n        }\n      });\n    } // ----------------- Update state\n\n  }, {\n    key: \"_onElementSize\",\n    value: function _onElementSize(visibleSize) {\n      if (this._scrollbarState.setVisibleSize(visibleSize)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\n        this._shouldRender = true;\n\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n\n      return this._shouldRender;\n    }\n  }, {\n    key: \"_onElementScrollSize\",\n    value: function _onElementScrollSize(elementScrollSize) {\n      if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\n        this._shouldRender = true;\n\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n\n      return this._shouldRender;\n    }\n  }, {\n    key: \"_onElementScrollPosition\",\n    value: function _onElementScrollPosition(elementScrollPosition) {\n      if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\n        this._shouldRender = true;\n\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n\n      return this._shouldRender;\n    } // ----------------- rendering\n\n  }, {\n    key: \"beginReveal\",\n    value: function beginReveal() {\n      this._visibilityController.setShouldBeVisible(true);\n    }\n  }, {\n    key: \"beginHide\",\n    value: function beginHide() {\n      this._visibilityController.setShouldBeVisible(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this._shouldRender) {\n        return;\n      }\n\n      this._shouldRender = false;\n\n      this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n\n      this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    } // ----------------- DOM events\n\n  }, {\n    key: \"_domNodeMouseDown\",\n    value: function _domNodeMouseDown(e) {\n      if (e.target !== this.domNode.domNode) {\n        return;\n      }\n\n      this._onMouseDown(e);\n    }\n  }, {\n    key: \"delegateMouseDown\",\n    value: function delegateMouseDown(e) {\n      var domTop = this.domNode.domNode.getClientRects()[0].top;\n\n      var sliderStart = domTop + this._scrollbarState.getSliderPosition();\n\n      var sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n\n      var mousePos = this._sliderMousePosition(e);\n\n      if (sliderStart <= mousePos && mousePos <= sliderStop) {\n        // Act as if it was a mouse down on the slider\n        if (e.leftButton) {\n          e.preventDefault();\n\n          this._sliderMouseDown(e, function () {});\n        }\n      } else {\n        // Act as if it was a mouse down on the scrollbar\n        this._onMouseDown(e);\n      }\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(e) {\n      var offsetX;\n      var offsetY;\n\n      if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\n        offsetX = e.browserEvent.offsetX;\n        offsetY = e.browserEvent.offsetY;\n      } else {\n        var domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n        offsetX = e.posx - domNodePosition.left;\n        offsetY = e.posy - domNodePosition.top;\n      }\n\n      var offset = this._mouseDownRelativePosition(offsetX, offsetY);\n\n      this._setDesiredScrollPositionNow(this._scrollByPage ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset) : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n\n      if (e.leftButton) {\n        e.preventDefault();\n\n        this._sliderMouseDown(e, function () {});\n      }\n    }\n  }, {\n    key: \"_sliderMouseDown\",\n    value: function _sliderMouseDown(e, onDragFinished) {\n      var _this3 = this;\n\n      var initialMousePosition = this._sliderMousePosition(e);\n\n      var initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\n\n      var initialScrollbarState = this._scrollbarState.clone();\n\n      this.slider.toggleClassName('active', true);\n\n      this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, function (mouseMoveData) {\n        var mouseOrthogonalPosition = _this3._sliderOrthogonalMousePosition(mouseMoveData);\n\n        var mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\n\n        if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n          // The mouse has wondered away from the scrollbar => reset dragging\n          _this3._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n\n          return;\n        }\n\n        var mousePosition = _this3._sliderMousePosition(mouseMoveData);\n\n        var mouseDelta = mousePosition - initialMousePosition;\n\n        _this3._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\n      }, function () {\n        _this3.slider.toggleClassName('active', false);\n\n        _this3._host.onDragEnd();\n\n        onDragFinished();\n      });\n\n      this._host.onDragStart();\n    }\n  }, {\n    key: \"_setDesiredScrollPositionNow\",\n    value: function _setDesiredScrollPositionNow(_desiredScrollPosition) {\n      var desiredScrollPosition = {};\n      this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n\n      this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n  }, {\n    key: \"updateScrollbarSize\",\n    value: function updateScrollbarSize(scrollbarSize) {\n      this._updateScrollbarSize(scrollbarSize);\n\n      this._scrollbarState.setScrollbarSize(scrollbarSize);\n\n      this._shouldRender = true;\n\n      if (!this._lazyRender) {\n        this.render();\n      }\n    }\n  }, {\n    key: \"isNeeded\",\n    value: function isNeeded() {\n      return this._scrollbarState.isNeeded();\n    }\n  }]);\n\n  return AbstractScrollbar;\n}(Widget);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js"],"names":["dom","createFastDomNode","GlobalMouseMoveMonitor","standardMouseMoveMerger","ScrollbarArrow","ScrollbarVisibilityController","Widget","platform","MOUSE_DRAG_RESET_DISTANCE","AbstractScrollbar","opts","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","_register","visibility","extraScrollbarClassName","setIsNeeded","isNeeded","_mouseMoveMonitor","_shouldRender","domNode","document","createElement","setAttribute","setDomNode","setPosition","onmousedown","e","_domNodeMouseDown","arrow","appendChild","bgDomNode","top","left","width","height","slider","setClassName","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","leftButton","preventDefault","_sliderMouseDown","onclick","stopPropagation","visibleSize","setVisibleSize","render","elementScrollSize","setScrollSize","elementScrollPosition","setScrollPosition","setShouldBeVisible","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","target","_onMouseDown","domTop","getClientRects","sliderStart","sliderStop","mousePos","_sliderMousePosition","offsetX","offsetY","browserEvent","domNodePosition","getDomNodePagePosition","posx","posy","offset","_mouseDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","onDragFinished","initialMousePosition","initialMouseOrthogonalPosition","_sliderOrthogonalMousePosition","initialScrollbarState","clone","toggleClassName","startMonitoring","buttons","mouseMoveData","mouseOrthogonalPosition","mouseOrthogonalDelta","Math","abs","isWindows","getScrollPosition","mousePosition","mouseDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","scrollbarSize","_updateScrollbarSize","setScrollbarSize"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { createFastDomNode } from '../../fastDomNode.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\r\nimport { ScrollbarArrow } from './scrollbarArrow.js';\r\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\r\nimport { Widget } from '../widget.js';\r\nimport * as platform from '../../../common/platform.js';\r\n/**\r\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\r\n */\r\nconst MOUSE_DRAG_RESET_DISTANCE = 140;\r\nexport class AbstractScrollbar extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._lazyRender = opts.lazyRender;\r\n        this._host = opts.host;\r\n        this._scrollable = opts.scrollable;\r\n        this._scrollByPage = opts.scrollByPage;\r\n        this._scrollbarState = opts.scrollbarState;\r\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\r\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\r\n        this._shouldRender = true;\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setAttribute('role', 'presentation');\r\n        this.domNode.setAttribute('aria-hidden', 'true');\r\n        this._visibilityController.setDomNode(this.domNode);\r\n        this.domNode.setPosition('absolute');\r\n        this.onmousedown(this.domNode.domNode, (e) => this._domNodeMouseDown(e));\r\n    }\r\n    // ----------------- creation\r\n    /**\r\n     * Creates the dom node for an arrow & adds it to the container\r\n     */\r\n    _createArrow(opts) {\r\n        const arrow = this._register(new ScrollbarArrow(opts));\r\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\r\n        this.domNode.domNode.appendChild(arrow.domNode);\r\n    }\r\n    /**\r\n     * Creates the slider dom node, adds it to the container & hooks up the events\r\n     */\r\n    _createSlider(top, left, width, height) {\r\n        this.slider = createFastDomNode(document.createElement('div'));\r\n        this.slider.setClassName('slider');\r\n        this.slider.setPosition('absolute');\r\n        this.slider.setTop(top);\r\n        this.slider.setLeft(left);\r\n        if (typeof width === 'number') {\r\n            this.slider.setWidth(width);\r\n        }\r\n        if (typeof height === 'number') {\r\n            this.slider.setHeight(height);\r\n        }\r\n        this.slider.setLayerHinting(true);\r\n        this.slider.setContain('strict');\r\n        this.domNode.domNode.appendChild(this.slider.domNode);\r\n        this.onmousedown(this.slider.domNode, (e) => {\r\n            if (e.leftButton) {\r\n                e.preventDefault();\r\n                this._sliderMouseDown(e, () => { });\r\n            }\r\n        });\r\n        this.onclick(this.slider.domNode, e => {\r\n            if (e.leftButton) {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n    // ----------------- Update state\r\n    _onElementSize(visibleSize) {\r\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    _onElementScrollSize(elementScrollSize) {\r\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    _onElementScrollPosition(elementScrollPosition) {\r\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\r\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\r\n            this._shouldRender = true;\r\n            if (!this._lazyRender) {\r\n                this.render();\r\n            }\r\n        }\r\n        return this._shouldRender;\r\n    }\r\n    // ----------------- rendering\r\n    beginReveal() {\r\n        this._visibilityController.setShouldBeVisible(true);\r\n    }\r\n    beginHide() {\r\n        this._visibilityController.setShouldBeVisible(false);\r\n    }\r\n    render() {\r\n        if (!this._shouldRender) {\r\n            return;\r\n        }\r\n        this._shouldRender = false;\r\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\r\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\r\n    }\r\n    // ----------------- DOM events\r\n    _domNodeMouseDown(e) {\r\n        if (e.target !== this.domNode.domNode) {\r\n            return;\r\n        }\r\n        this._onMouseDown(e);\r\n    }\r\n    delegateMouseDown(e) {\r\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\r\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\r\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\r\n        const mousePos = this._sliderMousePosition(e);\r\n        if (sliderStart <= mousePos && mousePos <= sliderStop) {\r\n            // Act as if it was a mouse down on the slider\r\n            if (e.leftButton) {\r\n                e.preventDefault();\r\n                this._sliderMouseDown(e, () => { });\r\n            }\r\n        }\r\n        else {\r\n            // Act as if it was a mouse down on the scrollbar\r\n            this._onMouseDown(e);\r\n        }\r\n    }\r\n    _onMouseDown(e) {\r\n        let offsetX;\r\n        let offsetY;\r\n        if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\r\n            offsetX = e.browserEvent.offsetX;\r\n            offsetY = e.browserEvent.offsetY;\r\n        }\r\n        else {\r\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\r\n            offsetX = e.posx - domNodePosition.left;\r\n            offsetY = e.posy - domNodePosition.top;\r\n        }\r\n        const offset = this._mouseDownRelativePosition(offsetX, offsetY);\r\n        this._setDesiredScrollPositionNow(this._scrollByPage\r\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\r\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\r\n        if (e.leftButton) {\r\n            e.preventDefault();\r\n            this._sliderMouseDown(e, () => { });\r\n        }\r\n    }\r\n    _sliderMouseDown(e, onDragFinished) {\r\n        const initialMousePosition = this._sliderMousePosition(e);\r\n        const initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\r\n        const initialScrollbarState = this._scrollbarState.clone();\r\n        this.slider.toggleClassName('active', true);\r\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\r\n            const mouseOrthogonalPosition = this._sliderOrthogonalMousePosition(mouseMoveData);\r\n            const mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\r\n            if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\r\n                // The mouse has wondered away from the scrollbar => reset dragging\r\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\r\n                return;\r\n            }\r\n            const mousePosition = this._sliderMousePosition(mouseMoveData);\r\n            const mouseDelta = mousePosition - initialMousePosition;\r\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\r\n        }, () => {\r\n            this.slider.toggleClassName('active', false);\r\n            this._host.onDragEnd();\r\n            onDragFinished();\r\n        });\r\n        this._host.onDragStart();\r\n    }\r\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\r\n        const desiredScrollPosition = {};\r\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\r\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\r\n    }\r\n    updateScrollbarSize(scrollbarSize) {\r\n        this._updateScrollbarSize(scrollbarSize);\r\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\r\n        this._shouldRender = true;\r\n        if (!this._lazyRender) {\r\n            this.render();\r\n        }\r\n    }\r\n    isNeeded() {\r\n        return this._scrollbarState.isNeeded();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}