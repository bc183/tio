{"ast":null,"code":"import _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from '../../../base/common/platform.js';\nimport { EditorZoom } from './editorZoom.js';\n/**\r\n * Determined from empirical observations.\r\n * @internal\r\n */\n\nvar GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\n/**\r\n * @internal\r\n */\n\nvar MINIMUM_LINE_HEIGHT = 8;\nexport var BareFontInfo = /*#__PURE__*/function () {\n  /**\r\n   * @internal\r\n   */\n  function BareFontInfo(opts) {\n    _classCallCheck(this, BareFontInfo);\n\n    this.zoomLevel = opts.zoomLevel;\n    this.pixelRatio = opts.pixelRatio;\n    this.fontFamily = String(opts.fontFamily);\n    this.fontWeight = String(opts.fontWeight);\n    this.fontSize = opts.fontSize;\n    this.fontFeatureSettings = opts.fontFeatureSettings;\n    this.lineHeight = opts.lineHeight | 0;\n    this.letterSpacing = opts.letterSpacing;\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  _createClass(BareFontInfo, [{\n    key: \"getId\",\n\n    /**\r\n     * @internal\r\n     */\n    value: function getId() {\n      return this.zoomLevel + '-' + this.pixelRatio + '-' + this.fontFamily + '-' + this.fontWeight + '-' + this.fontSize + '-' + this.fontFeatureSettings + '-' + this.lineHeight + '-' + this.letterSpacing;\n    }\n    /**\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"getMassagedFontFamily\",\n    value: function getMassagedFontFamily() {\n      if (/[,\"']/.test(this.fontFamily)) {\n        // Looks like the font family might be already escaped\n        return this.fontFamily;\n      }\n\n      if (/[+ ]/.test(this.fontFamily)) {\n        // Wrap a font family using + or <space> with quotes\n        return \"\\\"\".concat(this.fontFamily, \"\\\"\");\n      }\n\n      return this.fontFamily;\n    }\n  }], [{\n    key: \"createFromValidatedSettings\",\n    value: function createFromValidatedSettings(options, zoomLevel, pixelRatio, ignoreEditorZoom) {\n      var fontFamily = options.get(37\n      /* fontFamily */\n      );\n      var fontWeight = options.get(41\n      /* fontWeight */\n      );\n      var fontSize = options.get(40\n      /* fontSize */\n      );\n      var fontFeatureSettings = options.get(39\n      /* fontLigatures */\n      );\n      var lineHeight = options.get(53\n      /* lineHeight */\n      );\n      var letterSpacing = options.get(50\n      /* letterSpacing */\n      );\n      return BareFontInfo._create(fontFamily, fontWeight, fontSize, fontFeatureSettings, lineHeight, letterSpacing, zoomLevel, pixelRatio, ignoreEditorZoom);\n    }\n    /**\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"_create\",\n    value: function _create(fontFamily, fontWeight, fontSize, fontFeatureSettings, lineHeight, letterSpacing, zoomLevel, pixelRatio, ignoreEditorZoom) {\n      if (lineHeight === 0) {\n        lineHeight = Math.round(GOLDEN_LINE_HEIGHT_RATIO * fontSize);\n      } else if (lineHeight < MINIMUM_LINE_HEIGHT) {\n        lineHeight = MINIMUM_LINE_HEIGHT;\n      }\n\n      var editorZoomLevelMultiplier = 1 + (ignoreEditorZoom ? 0 : EditorZoom.getZoomLevel() * 0.1);\n      fontSize *= editorZoomLevelMultiplier;\n      lineHeight *= editorZoomLevelMultiplier;\n      return new BareFontInfo({\n        zoomLevel: zoomLevel,\n        pixelRatio: pixelRatio,\n        fontFamily: fontFamily,\n        fontWeight: fontWeight,\n        fontSize: fontSize,\n        fontFeatureSettings: fontFeatureSettings,\n        lineHeight: lineHeight,\n        letterSpacing: letterSpacing\n      });\n    }\n  }]);\n\n  return BareFontInfo;\n}(); // change this whenever `FontInfo` members are changed\n\nexport var SERIALIZED_FONT_INFO_VERSION = 1;\nexport var FontInfo = /*#__PURE__*/function (_BareFontInfo) {\n  _inherits(FontInfo, _BareFontInfo);\n\n  var _super = _createSuper(FontInfo);\n\n  /**\r\n   * @internal\r\n   */\n  function FontInfo(opts, isTrusted) {\n    var _this;\n\n    _classCallCheck(this, FontInfo);\n\n    _this = _super.call(this, opts);\n    _this.version = SERIALIZED_FONT_INFO_VERSION;\n    _this.isTrusted = isTrusted;\n    _this.isMonospace = opts.isMonospace;\n    _this.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n    _this.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n    _this.canUseHalfwidthRightwardsArrow = opts.canUseHalfwidthRightwardsArrow;\n    _this.spaceWidth = opts.spaceWidth;\n    _this.middotWidth = opts.middotWidth;\n    _this.wsmiddotWidth = opts.wsmiddotWidth;\n    _this.maxDigitWidth = opts.maxDigitWidth;\n    return _this;\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  _createClass(FontInfo, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.fontFamily === other.fontFamily && this.fontWeight === other.fontWeight && this.fontSize === other.fontSize && this.fontFeatureSettings === other.fontFeatureSettings && this.lineHeight === other.lineHeight && this.letterSpacing === other.letterSpacing && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth && this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow && this.spaceWidth === other.spaceWidth && this.middotWidth === other.middotWidth && this.wsmiddotWidth === other.wsmiddotWidth && this.maxDigitWidth === other.maxDigitWidth;\n    }\n  }]);\n\n  return FontInfo;\n}(BareFontInfo);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/config/fontInfo.js"],"names":["platform","EditorZoom","GOLDEN_LINE_HEIGHT_RATIO","isMacintosh","MINIMUM_LINE_HEIGHT","BareFontInfo","opts","zoomLevel","pixelRatio","fontFamily","String","fontWeight","fontSize","fontFeatureSettings","lineHeight","letterSpacing","test","options","ignoreEditorZoom","get","_create","Math","round","editorZoomLevelMultiplier","getZoomLevel","SERIALIZED_FONT_INFO_VERSION","FontInfo","isTrusted","version","isMonospace","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","maxDigitWidth","other"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EditorZoom } from './editorZoom.js';\r\n/**\r\n * Determined from empirical observations.\r\n * @internal\r\n */\r\nconst GOLDEN_LINE_HEIGHT_RATIO = platform.isMacintosh ? 1.5 : 1.35;\r\n/**\r\n * @internal\r\n */\r\nconst MINIMUM_LINE_HEIGHT = 8;\r\nexport class BareFontInfo {\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(opts) {\r\n        this.zoomLevel = opts.zoomLevel;\r\n        this.pixelRatio = opts.pixelRatio;\r\n        this.fontFamily = String(opts.fontFamily);\r\n        this.fontWeight = String(opts.fontWeight);\r\n        this.fontSize = opts.fontSize;\r\n        this.fontFeatureSettings = opts.fontFeatureSettings;\r\n        this.lineHeight = opts.lineHeight | 0;\r\n        this.letterSpacing = opts.letterSpacing;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static createFromValidatedSettings(options, zoomLevel, pixelRatio, ignoreEditorZoom) {\r\n        const fontFamily = options.get(37 /* fontFamily */);\r\n        const fontWeight = options.get(41 /* fontWeight */);\r\n        const fontSize = options.get(40 /* fontSize */);\r\n        const fontFeatureSettings = options.get(39 /* fontLigatures */);\r\n        const lineHeight = options.get(53 /* lineHeight */);\r\n        const letterSpacing = options.get(50 /* letterSpacing */);\r\n        return BareFontInfo._create(fontFamily, fontWeight, fontSize, fontFeatureSettings, lineHeight, letterSpacing, zoomLevel, pixelRatio, ignoreEditorZoom);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static _create(fontFamily, fontWeight, fontSize, fontFeatureSettings, lineHeight, letterSpacing, zoomLevel, pixelRatio, ignoreEditorZoom) {\r\n        if (lineHeight === 0) {\r\n            lineHeight = Math.round(GOLDEN_LINE_HEIGHT_RATIO * fontSize);\r\n        }\r\n        else if (lineHeight < MINIMUM_LINE_HEIGHT) {\r\n            lineHeight = MINIMUM_LINE_HEIGHT;\r\n        }\r\n        const editorZoomLevelMultiplier = 1 + (ignoreEditorZoom ? 0 : EditorZoom.getZoomLevel() * 0.1);\r\n        fontSize *= editorZoomLevelMultiplier;\r\n        lineHeight *= editorZoomLevelMultiplier;\r\n        return new BareFontInfo({\r\n            zoomLevel: zoomLevel,\r\n            pixelRatio: pixelRatio,\r\n            fontFamily: fontFamily,\r\n            fontWeight: fontWeight,\r\n            fontSize: fontSize,\r\n            fontFeatureSettings: fontFeatureSettings,\r\n            lineHeight: lineHeight,\r\n            letterSpacing: letterSpacing\r\n        });\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    getId() {\r\n        return this.zoomLevel + '-' + this.pixelRatio + '-' + this.fontFamily + '-' + this.fontWeight + '-' + this.fontSize + '-' + this.fontFeatureSettings + '-' + this.lineHeight + '-' + this.letterSpacing;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    getMassagedFontFamily() {\r\n        if (/[,\"']/.test(this.fontFamily)) {\r\n            // Looks like the font family might be already escaped\r\n            return this.fontFamily;\r\n        }\r\n        if (/[+ ]/.test(this.fontFamily)) {\r\n            // Wrap a font family using + or <space> with quotes\r\n            return `\"${this.fontFamily}\"`;\r\n        }\r\n        return this.fontFamily;\r\n    }\r\n}\r\n// change this whenever `FontInfo` members are changed\r\nexport const SERIALIZED_FONT_INFO_VERSION = 1;\r\nexport class FontInfo extends BareFontInfo {\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(opts, isTrusted) {\r\n        super(opts);\r\n        this.version = SERIALIZED_FONT_INFO_VERSION;\r\n        this.isTrusted = isTrusted;\r\n        this.isMonospace = opts.isMonospace;\r\n        this.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\r\n        this.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\r\n        this.canUseHalfwidthRightwardsArrow = opts.canUseHalfwidthRightwardsArrow;\r\n        this.spaceWidth = opts.spaceWidth;\r\n        this.middotWidth = opts.middotWidth;\r\n        this.wsmiddotWidth = opts.wsmiddotWidth;\r\n        this.maxDigitWidth = opts.maxDigitWidth;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    equals(other) {\r\n        return (this.fontFamily === other.fontFamily\r\n            && this.fontWeight === other.fontWeight\r\n            && this.fontSize === other.fontSize\r\n            && this.fontFeatureSettings === other.fontFeatureSettings\r\n            && this.lineHeight === other.lineHeight\r\n            && this.letterSpacing === other.letterSpacing\r\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\r\n            && this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\r\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\r\n            && this.spaceWidth === other.spaceWidth\r\n            && this.middotWidth === other.middotWidth\r\n            && this.wsmiddotWidth === other.wsmiddotWidth\r\n            && this.maxDigitWidth === other.maxDigitWidth);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}