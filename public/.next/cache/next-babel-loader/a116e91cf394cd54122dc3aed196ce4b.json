{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { Extensions, DefaultQuickAccessFilterValue } from '../common/quickAccess.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { once } from '../../../base/common/functional.js';\n\nvar QuickAccessController = /*#__PURE__*/function (_Disposable) {\n  _inherits(QuickAccessController, _Disposable);\n\n  var _super = _createSuper(QuickAccessController);\n\n  function QuickAccessController(quickInputService, instantiationService) {\n    var _this;\n\n    _classCallCheck(this, QuickAccessController);\n\n    _this = _super.call(this);\n    _this.quickInputService = quickInputService;\n    _this.instantiationService = instantiationService;\n    _this.registry = Registry.as(Extensions.Quickaccess);\n    _this.mapProviderToDescriptor = new Map();\n    _this.lastAcceptedPickerValues = new Map();\n    _this.visibleQuickAccess = undefined;\n    return _this;\n  }\n\n  _createClass(QuickAccessController, [{\n    key: \"show\",\n    value: function show() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var options = arguments.length > 1 ? arguments[1] : undefined;\n\n      var _a; // Find provider for the value to show\n\n\n      var _this$getOrInstantiat = this.getOrInstantiateProvider(value),\n          _this$getOrInstantiat2 = _slicedToArray(_this$getOrInstantiat, 2),\n          provider = _this$getOrInstantiat2[0],\n          descriptor = _this$getOrInstantiat2[1]; // Return early if quick access is already showing on that same prefix\n\n\n      var visibleQuickAccess = this.visibleQuickAccess;\n      var visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\n\n      if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n        // Apply value only if it is more specific than the prefix\n        // from the provider and we are not instructed to preserve\n        if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n          visibleQuickAccess.picker.value = value;\n        } // Always adjust selection\n\n\n        this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n        return;\n      } // Rewrite the filter value based on certain rules unless disabled\n\n\n      if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n        var newValue = undefined; // If we have a visible provider with a value, take it's filter value but\n        // rewrite to new provider prefix in case they differ\n\n        if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n          var newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n\n          if (newValueCandidateWithoutPrefix) {\n            newValue = \"\".concat(descriptor.prefix).concat(newValueCandidateWithoutPrefix);\n          }\n        } // Otherwise, take a default value as instructed\n\n\n        if (!newValue) {\n          var defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\n\n          if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n            newValue = this.lastAcceptedPickerValues.get(descriptor);\n          } else if (typeof defaultFilterValue === 'string') {\n            newValue = \"\".concat(descriptor.prefix).concat(defaultFilterValue);\n          }\n        }\n\n        if (typeof newValue === 'string') {\n          value = newValue;\n        }\n      } // Create a picker for the provider to use with the initial value\n      // and adjust the filtering to exclude the prefix from filtering\n\n\n      var disposables = new DisposableStore();\n      var picker = disposables.add(this.quickInputService.createQuickPick());\n      picker.value = value;\n      this.adjustValueSelection(picker, descriptor, options);\n      picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n      picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\n      picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n\n      if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\n        picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND\n        /* quick nav is always second */\n        ;\n      }\n\n      picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\n\n      picker.filterValue = function (value) {\n        return value.substring(descriptor ? descriptor.prefix.length : 0);\n      };\n\n      if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\n        picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n      } // Register listeners\n\n\n      var cancellationToken = this.registerPickerListeners(picker, provider, descriptor, value, disposables); // Ask provider to fill the picker as needed if we have one\n\n      if (provider) {\n        disposables.add(provider.provide(picker, cancellationToken));\n      } // Finally, show the picker. This is important because a provider\n      // may not call this and then our disposables would leak that rely\n      // on the onDidHide event.\n\n\n      picker.show();\n    }\n  }, {\n    key: \"adjustValueSelection\",\n    value: function adjustValueSelection(picker, descriptor, options) {\n      var _a;\n\n      var valueSelection; // Preserve: just always put the cursor at the end\n\n      if (options === null || options === void 0 ? void 0 : options.preserveValue) {\n        valueSelection = [picker.value.length, picker.value.length];\n      } // Otherwise: select the value up until the prefix\n      else {\n          valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\n        }\n\n      picker.valueSelection = valueSelection;\n    }\n  }, {\n    key: \"registerPickerListeners\",\n    value: function registerPickerListeners(picker, provider, descriptor, value, disposables) {\n      var _this2 = this;\n\n      // Remember as last visible picker and clean up once picker get's disposed\n      var visibleQuickAccess = this.visibleQuickAccess = {\n        picker: picker,\n        descriptor: descriptor,\n        value: value\n      };\n      disposables.add(toDisposable(function () {\n        if (visibleQuickAccess === _this2.visibleQuickAccess) {\n          _this2.visibleQuickAccess = undefined;\n        }\n      })); // Whenever the value changes, check if the provider has\n      // changed and if so - re-create the picker from the beginning\n\n      disposables.add(picker.onDidChangeValue(function (value) {\n        var _this2$getOrInstantia = _this2.getOrInstantiateProvider(value),\n            _this2$getOrInstantia2 = _slicedToArray(_this2$getOrInstantia, 1),\n            providerForValue = _this2$getOrInstantia2[0];\n\n        if (providerForValue !== provider) {\n          _this2.show(value, {\n            preserveValue: true\n          }\n          /* do not rewrite value from user typing! */\n          );\n        } else {\n          visibleQuickAccess.value = value; // remember the value in our visible one\n        }\n      })); // Remember picker input for future use when accepting\n\n      if (descriptor) {\n        disposables.add(picker.onDidAccept(function () {\n          _this2.lastAcceptedPickerValues.set(descriptor, picker.value);\n        }));\n      } // Create a cancellation token source that is valid as long as the\n      // picker has not been closed without picking an item\n\n\n      var cts = disposables.add(new CancellationTokenSource());\n      once(picker.onDidHide)(function () {\n        if (picker.selectedItems.length === 0) {\n          cts.cancel();\n        } // Start to dispose once picker hides\n\n\n        disposables.dispose();\n      });\n      return cts.token;\n    }\n  }, {\n    key: \"getOrInstantiateProvider\",\n    value: function getOrInstantiateProvider(value) {\n      var providerDescriptor = this.registry.getQuickAccessProvider(value);\n\n      if (!providerDescriptor) {\n        return [undefined, undefined];\n      }\n\n      var provider = this.mapProviderToDescriptor.get(providerDescriptor);\n\n      if (!provider) {\n        provider = this.instantiationService.createInstance(providerDescriptor.ctor);\n        this.mapProviderToDescriptor.set(providerDescriptor, provider);\n      }\n\n      return [provider, providerDescriptor];\n    }\n  }]);\n\n  return QuickAccessController;\n}(Disposable);\n\nQuickAccessController = __decorate([__param(0, IQuickInputService), __param(1, IInstantiationService)], QuickAccessController);\nexport { QuickAccessController };","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","IQuickInputService","ItemActivation","Disposable","DisposableStore","toDisposable","Extensions","DefaultQuickAccessFilterValue","Registry","CancellationTokenSource","IInstantiationService","once","QuickAccessController","quickInputService","instantiationService","registry","as","Quickaccess","mapProviderToDescriptor","Map","lastAcceptedPickerValues","visibleQuickAccess","undefined","value","options","_a","getOrInstantiateProvider","provider","descriptor","visibleDescriptor","prefix","preserveValue","picker","adjustValueSelection","newValue","newValueCandidateWithoutPrefix","substr","defaultFilterValue","LAST","get","disposables","add","createQuickPick","placeholder","quickNavigate","quickNavigateConfiguration","hideInput","itemActivation","SECOND","contextKey","filterValue","substring","ariaLabel","cancellationToken","registerPickerListeners","provide","show","valueSelection","onDidChangeValue","providerForValue","onDidAccept","set","cts","onDidHide","selectedItems","cancel","dispose","token","providerDescriptor","getQuickAccessProvider","createInstance","ctor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Extensions, DefaultQuickAccessFilterValue } from '../common/quickAccess.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nlet QuickAccessController = class QuickAccessController extends Disposable {\r\n    constructor(quickInputService, instantiationService) {\r\n        super();\r\n        this.quickInputService = quickInputService;\r\n        this.instantiationService = instantiationService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n        this.mapProviderToDescriptor = new Map();\r\n        this.lastAcceptedPickerValues = new Map();\r\n        this.visibleQuickAccess = undefined;\r\n    }\r\n    show(value = '', options) {\r\n        var _a;\r\n        // Find provider for the value to show\r\n        const [provider, descriptor] = this.getOrInstantiateProvider(value);\r\n        // Return early if quick access is already showing on that same prefix\r\n        const visibleQuickAccess = this.visibleQuickAccess;\r\n        const visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\r\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\r\n            // Apply value only if it is more specific than the prefix\r\n            // from the provider and we are not instructed to preserve\r\n            if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\r\n                visibleQuickAccess.picker.value = value;\r\n            }\r\n            // Always adjust selection\r\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\r\n            return;\r\n        }\r\n        // Rewrite the filter value based on certain rules unless disabled\r\n        if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\r\n            let newValue = undefined;\r\n            // If we have a visible provider with a value, take it's filter value but\r\n            // rewrite to new provider prefix in case they differ\r\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\r\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\r\n                if (newValueCandidateWithoutPrefix) {\r\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\r\n                }\r\n            }\r\n            // Otherwise, take a default value as instructed\r\n            if (!newValue) {\r\n                const defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\r\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\r\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\r\n                }\r\n                else if (typeof defaultFilterValue === 'string') {\r\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\r\n                }\r\n            }\r\n            if (typeof newValue === 'string') {\r\n                value = newValue;\r\n            }\r\n        }\r\n        // Create a picker for the provider to use with the initial value\r\n        // and adjust the filtering to exclude the prefix from filtering\r\n        const disposables = new DisposableStore();\r\n        const picker = disposables.add(this.quickInputService.createQuickPick());\r\n        picker.value = value;\r\n        this.adjustValueSelection(picker, descriptor, options);\r\n        picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\r\n        picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\r\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\r\n            picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND /* quick nav is always second */;\r\n        }\r\n        picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\r\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\r\n        if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\r\n            picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\r\n        }\r\n        // Register listeners\r\n        const cancellationToken = this.registerPickerListeners(picker, provider, descriptor, value, disposables);\r\n        // Ask provider to fill the picker as needed if we have one\r\n        if (provider) {\r\n            disposables.add(provider.provide(picker, cancellationToken));\r\n        }\r\n        // Finally, show the picker. This is important because a provider\r\n        // may not call this and then our disposables would leak that rely\r\n        // on the onDidHide event.\r\n        picker.show();\r\n    }\r\n    adjustValueSelection(picker, descriptor, options) {\r\n        var _a;\r\n        let valueSelection;\r\n        // Preserve: just always put the cursor at the end\r\n        if (options === null || options === void 0 ? void 0 : options.preserveValue) {\r\n            valueSelection = [picker.value.length, picker.value.length];\r\n        }\r\n        // Otherwise: select the value up until the prefix\r\n        else {\r\n            valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\r\n        }\r\n        picker.valueSelection = valueSelection;\r\n    }\r\n    registerPickerListeners(picker, provider, descriptor, value, disposables) {\r\n        // Remember as last visible picker and clean up once picker get's disposed\r\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\r\n        disposables.add(toDisposable(() => {\r\n            if (visibleQuickAccess === this.visibleQuickAccess) {\r\n                this.visibleQuickAccess = undefined;\r\n            }\r\n        }));\r\n        // Whenever the value changes, check if the provider has\r\n        // changed and if so - re-create the picker from the beginning\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const [providerForValue] = this.getOrInstantiateProvider(value);\r\n            if (providerForValue !== provider) {\r\n                this.show(value, { preserveValue: true } /* do not rewrite value from user typing! */);\r\n            }\r\n            else {\r\n                visibleQuickAccess.value = value; // remember the value in our visible one\r\n            }\r\n        }));\r\n        // Remember picker input for future use when accepting\r\n        if (descriptor) {\r\n            disposables.add(picker.onDidAccept(() => {\r\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\r\n            }));\r\n        }\r\n        // Create a cancellation token source that is valid as long as the\r\n        // picker has not been closed without picking an item\r\n        const cts = disposables.add(new CancellationTokenSource());\r\n        once(picker.onDidHide)(() => {\r\n            if (picker.selectedItems.length === 0) {\r\n                cts.cancel();\r\n            }\r\n            // Start to dispose once picker hides\r\n            disposables.dispose();\r\n        });\r\n        return cts.token;\r\n    }\r\n    getOrInstantiateProvider(value) {\r\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\r\n        if (!providerDescriptor) {\r\n            return [undefined, undefined];\r\n        }\r\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\r\n        if (!provider) {\r\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\r\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\r\n        }\r\n        return [provider, providerDescriptor];\r\n    }\r\n};\r\nQuickAccessController = __decorate([\r\n    __param(0, IQuickInputService),\r\n    __param(1, IInstantiationService)\r\n], QuickAccessController);\r\nexport { QuickAccessController };\r\n"]},"metadata":{},"sourceType":"module"}