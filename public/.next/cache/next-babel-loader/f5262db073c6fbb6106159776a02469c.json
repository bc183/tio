{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './keybindingLabel.css';\nimport { equals } from '../../../common/objects.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport * as dom from '../../dom.js';\nimport { localize } from '../../../../nls.js';\nvar $ = dom.$;\nexport var KeybindingLabel = /*#__PURE__*/function () {\n  function KeybindingLabel(container, os, options) {\n    _classCallCheck(this, KeybindingLabel);\n\n    this.os = os;\n    this.options = options;\n    this.domNode = dom.append(container, $('.monaco-keybinding'));\n    this.didEverRender = false;\n    container.appendChild(this.domNode);\n  }\n\n  _createClass(KeybindingLabel, [{\n    key: \"set\",\n    value: function set(keybinding, matches) {\n      if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n        return;\n      }\n\n      this.keybinding = keybinding;\n      this.matches = matches;\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      dom.clearNode(this.domNode);\n\n      if (this.keybinding) {\n        var _this$keybinding$getP = this.keybinding.getParts(),\n            _this$keybinding$getP2 = _slicedToArray(_this$keybinding$getP, 2),\n            firstPart = _this$keybinding$getP2[0],\n            chordPart = _this$keybinding$getP2[1];\n\n        if (firstPart) {\n          this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n        }\n\n        if (chordPart) {\n          dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n          this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n        }\n\n        this.domNode.title = this.keybinding.getAriaLabel() || '';\n      } else if (this.options && this.options.renderUnboundKeybindings) {\n        this.renderUnbound(this.domNode);\n      }\n\n      this.didEverRender = true;\n    }\n  }, {\n    key: \"renderPart\",\n    value: function renderPart(parent, part, match) {\n      var modifierLabels = UILabelProvider.modifierLabels[this.os];\n\n      if (part.ctrlKey) {\n        this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n      }\n\n      if (part.shiftKey) {\n        this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n      }\n\n      if (part.altKey) {\n        this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n      }\n\n      if (part.metaKey) {\n        this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n      }\n\n      var keyLabel = part.keyLabel;\n\n      if (keyLabel) {\n        this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n      }\n    }\n  }, {\n    key: \"renderKey\",\n    value: function renderKey(parent, label, highlight, separator) {\n      dom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\n\n      if (separator) {\n        dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n      }\n    }\n  }, {\n    key: \"renderUnbound\",\n    value: function renderUnbound(parent) {\n      dom.append(parent, $('span.monaco-keybinding-key', undefined, localize('unbound', \"Unbound\")));\n    }\n  }], [{\n    key: \"areSame\",\n    value: function areSame(a, b) {\n      if (a === b || !a && !b) {\n        return true;\n      }\n\n      return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n    }\n  }]);\n\n  return KeybindingLabel;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/keybindingLabel/keybindingLabel.js"],"names":["equals","UILabelProvider","dom","localize","$","KeybindingLabel","container","os","options","domNode","append","didEverRender","appendChild","keybinding","matches","areSame","render","clearNode","getParts","firstPart","chordPart","renderPart","undefined","title","getAriaLabel","renderUnboundKeybindings","renderUnbound","parent","part","match","modifierLabels","ctrlKey","renderKey","Boolean","separator","shiftKey","altKey","metaKey","keyLabel","keyCode","label","highlight","a","b"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './keybindingLabel.css';\r\nimport { equals } from '../../../common/objects.js';\r\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\r\nimport * as dom from '../../dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nconst $ = dom.$;\r\nexport class KeybindingLabel {\r\n    constructor(container, os, options) {\r\n        this.os = os;\r\n        this.options = options;\r\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\r\n        this.didEverRender = false;\r\n        container.appendChild(this.domNode);\r\n    }\r\n    set(keybinding, matches) {\r\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\r\n            return;\r\n        }\r\n        this.keybinding = keybinding;\r\n        this.matches = matches;\r\n        this.render();\r\n    }\r\n    render() {\r\n        dom.clearNode(this.domNode);\r\n        if (this.keybinding) {\r\n            let [firstPart, chordPart] = this.keybinding.getParts();\r\n            if (firstPart) {\r\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\r\n            }\r\n            if (chordPart) {\r\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\r\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\r\n            }\r\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\r\n        }\r\n        else if (this.options && this.options.renderUnboundKeybindings) {\r\n            this.renderUnbound(this.domNode);\r\n        }\r\n        this.didEverRender = true;\r\n    }\r\n    renderPart(parent, part, match) {\r\n        const modifierLabels = UILabelProvider.modifierLabels[this.os];\r\n        if (part.ctrlKey) {\r\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\r\n        }\r\n        if (part.shiftKey) {\r\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\r\n        }\r\n        if (part.altKey) {\r\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\r\n        }\r\n        if (part.metaKey) {\r\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\r\n        }\r\n        const keyLabel = part.keyLabel;\r\n        if (keyLabel) {\r\n            this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\r\n        }\r\n    }\r\n    renderKey(parent, label, highlight, separator) {\r\n        dom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\r\n        if (separator) {\r\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\r\n        }\r\n    }\r\n    renderUnbound(parent) {\r\n        dom.append(parent, $('span.monaco-keybinding-key', undefined, localize('unbound', \"Unbound\")));\r\n    }\r\n    static areSame(a, b) {\r\n        if (a === b || (!a && !b)) {\r\n            return true;\r\n        }\r\n        return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}