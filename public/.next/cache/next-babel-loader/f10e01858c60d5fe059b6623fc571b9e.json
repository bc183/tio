{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\nexport var BaseResolvedKeybinding = /*#__PURE__*/function (_ResolvedKeybinding) {\n  _inherits(BaseResolvedKeybinding, _ResolvedKeybinding);\n\n  var _super = _createSuper(BaseResolvedKeybinding);\n\n  function BaseResolvedKeybinding(os, parts) {\n    var _this;\n\n    _classCallCheck(this, BaseResolvedKeybinding);\n\n    _this = _super.call(this);\n\n    if (parts.length === 0) {\n      throw illegalArgument(\"parts\");\n    }\n\n    _this._os = os;\n    _this._parts = parts;\n    return _this;\n  }\n\n  _createClass(BaseResolvedKeybinding, [{\n    key: \"getLabel\",\n    value: function getLabel() {\n      var _this2 = this;\n\n      return UILabelProvider.toLabel(this._os, this._parts, function (keybinding) {\n        return _this2._getLabel(keybinding);\n      });\n    }\n  }, {\n    key: \"getAriaLabel\",\n    value: function getAriaLabel() {\n      var _this3 = this;\n\n      return AriaLabelProvider.toLabel(this._os, this._parts, function (keybinding) {\n        return _this3._getAriaLabel(keybinding);\n      });\n    }\n  }, {\n    key: \"isChord\",\n    value: function isChord() {\n      return this._parts.length > 1;\n    }\n  }, {\n    key: \"getParts\",\n    value: function getParts() {\n      var _this4 = this;\n\n      return this._parts.map(function (keybinding) {\n        return _this4._getPart(keybinding);\n      });\n    }\n  }, {\n    key: \"_getPart\",\n    value: function _getPart(keybinding) {\n      return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\n    }\n  }, {\n    key: \"getDispatchParts\",\n    value: function getDispatchParts() {\n      var _this5 = this;\n\n      return this._parts.map(function (keybinding) {\n        return _this5._getDispatchPart(keybinding);\n      });\n    }\n  }]);\n\n  return BaseResolvedKeybinding;\n}(ResolvedKeybinding);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/keybinding/common/baseResolvedKeybinding.js"],"names":["illegalArgument","UILabelProvider","AriaLabelProvider","ResolvedKeybinding","ResolvedKeybindingPart","BaseResolvedKeybinding","os","parts","length","_os","_parts","toLabel","keybinding","_getLabel","_getAriaLabel","map","_getPart","ctrlKey","shiftKey","altKey","metaKey","_getDispatchPart"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,0CAAnD;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA2D,kCAA3D;AACA,WAAaC,sBAAb;AAAA;;AAAA;;AACI,kCAAYC,EAAZ,EAAgBC,KAAhB,EAAuB;AAAA;;AAAA;;AACnB;;AACA,QAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAMR,eAAe,SAArB;AACH;;AACD,UAAKS,GAAL,GAAWH,EAAX;AACA,UAAKI,MAAL,GAAcH,KAAd;AANmB;AAOtB;;AARL;AAAA;AAAA,+BASe;AAAA;;AACP,aAAON,eAAe,CAACU,OAAhB,CAAwB,KAAKF,GAA7B,EAAkC,KAAKC,MAAvC,EAA+C,UAACE,UAAD;AAAA,eAAgB,MAAI,CAACC,SAAL,CAAeD,UAAf,CAAhB;AAAA,OAA/C,CAAP;AACH;AAXL;AAAA;AAAA,mCAYmB;AAAA;;AACX,aAAOV,iBAAiB,CAACS,OAAlB,CAA0B,KAAKF,GAA/B,EAAoC,KAAKC,MAAzC,EAAiD,UAACE,UAAD;AAAA,eAAgB,MAAI,CAACE,aAAL,CAAmBF,UAAnB,CAAhB;AAAA,OAAjD,CAAP;AACH;AAdL;AAAA;AAAA,8BAec;AACN,aAAQ,KAAKF,MAAL,CAAYF,MAAZ,GAAqB,CAA7B;AACH;AAjBL;AAAA;AAAA,+BAkBe;AAAA;;AACP,aAAO,KAAKE,MAAL,CAAYK,GAAZ,CAAgB,UAACH,UAAD;AAAA,eAAgB,MAAI,CAACI,QAAL,CAAcJ,UAAd,CAAhB;AAAA,OAAhB,CAAP;AACH;AApBL;AAAA;AAAA,6BAqBaA,UArBb,EAqByB;AACjB,aAAO,IAAIR,sBAAJ,CAA2BQ,UAAU,CAACK,OAAtC,EAA+CL,UAAU,CAACM,QAA1D,EAAoEN,UAAU,CAACO,MAA/E,EAAuFP,UAAU,CAACQ,OAAlG,EAA2G,KAAKP,SAAL,CAAeD,UAAf,CAA3G,EAAuI,KAAKE,aAAL,CAAmBF,UAAnB,CAAvI,CAAP;AACH;AAvBL;AAAA;AAAA,uCAwBuB;AAAA;;AACf,aAAO,KAAKF,MAAL,CAAYK,GAAZ,CAAgB,UAACH,UAAD;AAAA,eAAgB,MAAI,CAACS,gBAAL,CAAsBT,UAAtB,CAAhB;AAAA,OAAhB,CAAP;AACH;AA1BL;;AAAA;AAAA,EAA4CT,kBAA5C","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\r\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\r\n    constructor(os, parts) {\r\n        super();\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(`parts`);\r\n        }\r\n        this._os = os;\r\n        this._parts = parts;\r\n    }\r\n    getLabel() {\r\n        return UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\r\n    }\r\n    getAriaLabel() {\r\n        return AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\r\n    }\r\n    isChord() {\r\n        return (this._parts.length > 1);\r\n    }\r\n    getParts() {\r\n        return this._parts.map((keybinding) => this._getPart(keybinding));\r\n    }\r\n    _getPart(keybinding) {\r\n        return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\r\n    }\r\n    getDispatchParts() {\r\n        return this._parts.map((keybinding) => this._getDispatchPart(keybinding));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}