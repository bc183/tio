{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../platform/contextkey/common/contextkey.js';\nexport var EditorContextKeys;\n\n(function (EditorContextKeys) {\n  EditorContextKeys.editorSimpleInput = new RawContextKey('editorSimpleInput', false);\n  /**\r\n   * A context key that is set when the editor's text has focus (cursor is blinking).\r\n   * Is false when focus is in simple editor widgets (repl input, scm commit input).\r\n   */\n\n  EditorContextKeys.editorTextFocus = new RawContextKey('editorTextFocus', false);\n  /**\r\n   * A context key that is set when the editor's text or an editor's widget has focus.\r\n   */\n\n  EditorContextKeys.focus = new RawContextKey('editorFocus', false);\n  /**\r\n   * A context key that is set when any editor input has focus (regular editor, repl input...).\r\n   */\n\n  EditorContextKeys.textInputFocus = new RawContextKey('textInputFocus', false);\n  EditorContextKeys.readOnly = new RawContextKey('editorReadonly', false);\n  EditorContextKeys.inDiffEditor = new RawContextKey('inDiffEditor', false);\n  EditorContextKeys.columnSelection = new RawContextKey('editorColumnSelection', false);\n  EditorContextKeys.writable = EditorContextKeys.readOnly.toNegated();\n  EditorContextKeys.hasNonEmptySelection = new RawContextKey('editorHasSelection', false);\n  EditorContextKeys.hasOnlyEmptySelection = EditorContextKeys.hasNonEmptySelection.toNegated();\n  EditorContextKeys.hasMultipleSelections = new RawContextKey('editorHasMultipleSelections', false);\n  EditorContextKeys.hasSingleSelection = EditorContextKeys.hasMultipleSelections.toNegated();\n  EditorContextKeys.tabMovesFocus = new RawContextKey('editorTabMovesFocus', false);\n  EditorContextKeys.tabDoesNotMoveFocus = EditorContextKeys.tabMovesFocus.toNegated();\n  EditorContextKeys.isInWalkThroughSnippet = new RawContextKey('isInEmbeddedEditor', false);\n  EditorContextKeys.canUndo = new RawContextKey('canUndo', false);\n  EditorContextKeys.canRedo = new RawContextKey('canRedo', false);\n  EditorContextKeys.hoverVisible = new RawContextKey('editorHoverVisible', false);\n  /**\r\n   * A context key that is set when an editor is part of a larger editor, like notebooks or\r\n   * (future) a diff editor\r\n   */\n\n  EditorContextKeys.inCompositeEditor = new RawContextKey('inCompositeEditor', undefined);\n  EditorContextKeys.notInCompositeEditor = EditorContextKeys.inCompositeEditor.toNegated(); // -- mode context keys\n\n  EditorContextKeys.languageId = new RawContextKey('editorLangId', '');\n  EditorContextKeys.hasCompletionItemProvider = new RawContextKey('editorHasCompletionItemProvider', false);\n  EditorContextKeys.hasCodeActionsProvider = new RawContextKey('editorHasCodeActionsProvider', false);\n  EditorContextKeys.hasCodeLensProvider = new RawContextKey('editorHasCodeLensProvider', false);\n  EditorContextKeys.hasDefinitionProvider = new RawContextKey('editorHasDefinitionProvider', false);\n  EditorContextKeys.hasDeclarationProvider = new RawContextKey('editorHasDeclarationProvider', false);\n  EditorContextKeys.hasImplementationProvider = new RawContextKey('editorHasImplementationProvider', false);\n  EditorContextKeys.hasTypeDefinitionProvider = new RawContextKey('editorHasTypeDefinitionProvider', false);\n  EditorContextKeys.hasHoverProvider = new RawContextKey('editorHasHoverProvider', false);\n  EditorContextKeys.hasDocumentHighlightProvider = new RawContextKey('editorHasDocumentHighlightProvider', false);\n  EditorContextKeys.hasDocumentSymbolProvider = new RawContextKey('editorHasDocumentSymbolProvider', false);\n  EditorContextKeys.hasReferenceProvider = new RawContextKey('editorHasReferenceProvider', false);\n  EditorContextKeys.hasRenameProvider = new RawContextKey('editorHasRenameProvider', false);\n  EditorContextKeys.hasSignatureHelpProvider = new RawContextKey('editorHasSignatureHelpProvider', false);\n  EditorContextKeys.hasInlineHintsProvider = new RawContextKey('editorHasInlineHintsProvider', false); // -- mode context keys: formatting\n\n  EditorContextKeys.hasDocumentFormattingProvider = new RawContextKey('editorHasDocumentFormattingProvider', false);\n  EditorContextKeys.hasDocumentSelectionFormattingProvider = new RawContextKey('editorHasDocumentSelectionFormattingProvider', false);\n  EditorContextKeys.hasMultipleDocumentFormattingProvider = new RawContextKey('editorHasMultipleDocumentFormattingProvider', false);\n  EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider = new RawContextKey('editorHasMultipleDocumentSelectionFormattingProvider', false);\n})(EditorContextKeys || (EditorContextKeys = {}));","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/editorContextKeys.js"],"names":["RawContextKey","EditorContextKeys","editorSimpleInput","editorTextFocus","focus","textInputFocus","readOnly","inDiffEditor","columnSelection","writable","toNegated","hasNonEmptySelection","hasOnlyEmptySelection","hasMultipleSelections","hasSingleSelection","tabMovesFocus","tabDoesNotMoveFocus","isInWalkThroughSnippet","canUndo","canRedo","hoverVisible","inCompositeEditor","undefined","notInCompositeEditor","languageId","hasCompletionItemProvider","hasCodeActionsProvider","hasCodeLensProvider","hasDefinitionProvider","hasDeclarationProvider","hasImplementationProvider","hasTypeDefinitionProvider","hasHoverProvider","hasDocumentHighlightProvider","hasDocumentSymbolProvider","hasReferenceProvider","hasRenameProvider","hasSignatureHelpProvider","hasInlineHintsProvider","hasDocumentFormattingProvider","hasDocumentSelectionFormattingProvider","hasMultipleDocumentFormattingProvider","hasMultipleDocumentSelectionFormattingProvider"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RawContextKey } from '../../platform/contextkey/common/contextkey.js';\r\nexport var EditorContextKeys;\r\n(function (EditorContextKeys) {\r\n    EditorContextKeys.editorSimpleInput = new RawContextKey('editorSimpleInput', false);\r\n    /**\r\n     * A context key that is set when the editor's text has focus (cursor is blinking).\r\n     * Is false when focus is in simple editor widgets (repl input, scm commit input).\r\n     */\r\n    EditorContextKeys.editorTextFocus = new RawContextKey('editorTextFocus', false);\r\n    /**\r\n     * A context key that is set when the editor's text or an editor's widget has focus.\r\n     */\r\n    EditorContextKeys.focus = new RawContextKey('editorFocus', false);\r\n    /**\r\n     * A context key that is set when any editor input has focus (regular editor, repl input...).\r\n     */\r\n    EditorContextKeys.textInputFocus = new RawContextKey('textInputFocus', false);\r\n    EditorContextKeys.readOnly = new RawContextKey('editorReadonly', false);\r\n    EditorContextKeys.inDiffEditor = new RawContextKey('inDiffEditor', false);\r\n    EditorContextKeys.columnSelection = new RawContextKey('editorColumnSelection', false);\r\n    EditorContextKeys.writable = EditorContextKeys.readOnly.toNegated();\r\n    EditorContextKeys.hasNonEmptySelection = new RawContextKey('editorHasSelection', false);\r\n    EditorContextKeys.hasOnlyEmptySelection = EditorContextKeys.hasNonEmptySelection.toNegated();\r\n    EditorContextKeys.hasMultipleSelections = new RawContextKey('editorHasMultipleSelections', false);\r\n    EditorContextKeys.hasSingleSelection = EditorContextKeys.hasMultipleSelections.toNegated();\r\n    EditorContextKeys.tabMovesFocus = new RawContextKey('editorTabMovesFocus', false);\r\n    EditorContextKeys.tabDoesNotMoveFocus = EditorContextKeys.tabMovesFocus.toNegated();\r\n    EditorContextKeys.isInWalkThroughSnippet = new RawContextKey('isInEmbeddedEditor', false);\r\n    EditorContextKeys.canUndo = new RawContextKey('canUndo', false);\r\n    EditorContextKeys.canRedo = new RawContextKey('canRedo', false);\r\n    EditorContextKeys.hoverVisible = new RawContextKey('editorHoverVisible', false);\r\n    /**\r\n     * A context key that is set when an editor is part of a larger editor, like notebooks or\r\n     * (future) a diff editor\r\n     */\r\n    EditorContextKeys.inCompositeEditor = new RawContextKey('inCompositeEditor', undefined);\r\n    EditorContextKeys.notInCompositeEditor = EditorContextKeys.inCompositeEditor.toNegated();\r\n    // -- mode context keys\r\n    EditorContextKeys.languageId = new RawContextKey('editorLangId', '');\r\n    EditorContextKeys.hasCompletionItemProvider = new RawContextKey('editorHasCompletionItemProvider', false);\r\n    EditorContextKeys.hasCodeActionsProvider = new RawContextKey('editorHasCodeActionsProvider', false);\r\n    EditorContextKeys.hasCodeLensProvider = new RawContextKey('editorHasCodeLensProvider', false);\r\n    EditorContextKeys.hasDefinitionProvider = new RawContextKey('editorHasDefinitionProvider', false);\r\n    EditorContextKeys.hasDeclarationProvider = new RawContextKey('editorHasDeclarationProvider', false);\r\n    EditorContextKeys.hasImplementationProvider = new RawContextKey('editorHasImplementationProvider', false);\r\n    EditorContextKeys.hasTypeDefinitionProvider = new RawContextKey('editorHasTypeDefinitionProvider', false);\r\n    EditorContextKeys.hasHoverProvider = new RawContextKey('editorHasHoverProvider', false);\r\n    EditorContextKeys.hasDocumentHighlightProvider = new RawContextKey('editorHasDocumentHighlightProvider', false);\r\n    EditorContextKeys.hasDocumentSymbolProvider = new RawContextKey('editorHasDocumentSymbolProvider', false);\r\n    EditorContextKeys.hasReferenceProvider = new RawContextKey('editorHasReferenceProvider', false);\r\n    EditorContextKeys.hasRenameProvider = new RawContextKey('editorHasRenameProvider', false);\r\n    EditorContextKeys.hasSignatureHelpProvider = new RawContextKey('editorHasSignatureHelpProvider', false);\r\n    EditorContextKeys.hasInlineHintsProvider = new RawContextKey('editorHasInlineHintsProvider', false);\r\n    // -- mode context keys: formatting\r\n    EditorContextKeys.hasDocumentFormattingProvider = new RawContextKey('editorHasDocumentFormattingProvider', false);\r\n    EditorContextKeys.hasDocumentSelectionFormattingProvider = new RawContextKey('editorHasDocumentSelectionFormattingProvider', false);\r\n    EditorContextKeys.hasMultipleDocumentFormattingProvider = new RawContextKey('editorHasMultipleDocumentFormattingProvider', false);\r\n    EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider = new RawContextKey('editorHasMultipleDocumentSelectionFormattingProvider', false);\r\n})(EditorContextKeys || (EditorContextKeys = {}));\r\n"]},"metadata":{},"sourceType":"module"}