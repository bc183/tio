{"ast":null,"code":"import _regeneratorRuntime from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { $ } from '../../../base/browser/dom.js';\nexport var BrowserClipboardService = /*#__PURE__*/function () {\n  function BrowserClipboardService() {\n    _classCallCheck(this, BrowserClipboardService);\n\n    this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n\n    this.findText = ''; // unsupported in web (only in-memory)\n  }\n\n  _createClass(BrowserClipboardService, [{\n    key: \"writeText\",\n    value: function writeText(text, type) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var activeElement, textArea;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!type) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.mapTextToType.set(type, text);\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return navigator.clipboard.writeText(text);\n\n              case 6:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](3);\n                console.error(_context.t0);\n\n              case 12:\n                // Fallback to textarea and execCommand solution\n                activeElement = document.activeElement;\n                textArea = document.body.appendChild($('textarea', {\n                  'aria-hidden': true\n                }));\n                textArea.style.height = '1px';\n                textArea.style.width = '1px';\n                textArea.style.position = 'absolute';\n                textArea.value = text;\n                textArea.focus();\n                textArea.select();\n                document.execCommand('copy');\n\n                if (activeElement instanceof HTMLElement) {\n                  activeElement.focus();\n                }\n\n                document.body.removeChild(textArea);\n                return _context.abrupt(\"return\");\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9]]);\n      }));\n    }\n  }, {\n    key: \"readText\",\n    value: function readText(type) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!type) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.mapTextToType.get(type) || '');\n\n              case 2:\n                _context2.prev = 2;\n                _context2.next = 5;\n                return navigator.clipboard.readText();\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                return _context2.abrupt(\"return\", '');\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n    }\n  }, {\n    key: \"readFindText\",\n    value: function readFindText() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.findText);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"writeFindText\",\n    value: function writeFindText(text) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.findText = text;\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }]);\n\n  return BrowserClipboardService;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","$","BrowserClipboardService","mapTextToType","Map","findText","text","type","set","navigator","clipboard","writeText","console","error","activeElement","document","textArea","body","appendChild","style","height","width","position","focus","select","execCommand","HTMLElement","removeChild","get","readText"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { $ } from '../../../base/browser/dom.js';\r\nexport class BrowserClipboardService {\r\n    constructor() {\r\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\r\n        this.findText = ''; // unsupported in web (only in-memory)\r\n    }\r\n    writeText(text, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // With type: only in-memory is supported\r\n            if (type) {\r\n                this.mapTextToType.set(type, text);\r\n                return;\r\n            }\r\n            // Guard access to navigator.clipboard with try/catch\r\n            // as we have seen DOMExceptions in certain browsers\r\n            // due to security policies.\r\n            try {\r\n                return yield navigator.clipboard.writeText(text);\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n            // Fallback to textarea and execCommand solution\r\n            const activeElement = document.activeElement;\r\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\r\n            textArea.style.height = '1px';\r\n            textArea.style.width = '1px';\r\n            textArea.style.position = 'absolute';\r\n            textArea.value = text;\r\n            textArea.focus();\r\n            textArea.select();\r\n            document.execCommand('copy');\r\n            if (activeElement instanceof HTMLElement) {\r\n                activeElement.focus();\r\n            }\r\n            document.body.removeChild(textArea);\r\n            return;\r\n        });\r\n    }\r\n    readText(type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // With type: only in-memory is supported\r\n            if (type) {\r\n                return this.mapTextToType.get(type) || '';\r\n            }\r\n            // Guard access to navigator.clipboard with try/catch\r\n            // as we have seen DOMExceptions in certain browsers\r\n            // due to security policies.\r\n            try {\r\n                return yield navigator.clipboard.readText();\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                return '';\r\n            }\r\n        });\r\n    }\r\n    readFindText() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.findText;\r\n        });\r\n    }\r\n    writeFindText(text) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.findText = text;\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}