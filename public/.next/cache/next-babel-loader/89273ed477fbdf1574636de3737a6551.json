{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport var ReplaceCommand = /*#__PURE__*/function () {\n  function ReplaceCommand(range, text) {\n    var insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ReplaceCommand);\n\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  _createClass(ReplaceCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\n    }\n  }]);\n\n  return ReplaceCommand;\n}();\nexport var ReplaceCommandThatSelectsText = /*#__PURE__*/function () {\n  function ReplaceCommandThatSelectsText(range, text) {\n    _classCallCheck(this, ReplaceCommandThatSelectsText);\n\n    this._range = range;\n    this._text = text;\n  }\n\n  _createClass(ReplaceCommandThatSelectsText, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\n    }\n  }]);\n\n  return ReplaceCommandThatSelectsText;\n}();\nexport var ReplaceCommandWithoutChangingPosition = /*#__PURE__*/function () {\n  function ReplaceCommandWithoutChangingPosition(range, text) {\n    var insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ReplaceCommandWithoutChangingPosition);\n\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  _createClass(ReplaceCommandWithoutChangingPosition, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\n    }\n  }]);\n\n  return ReplaceCommandWithoutChangingPosition;\n}();\nexport var ReplaceCommandWithOffsetCursorState = /*#__PURE__*/function () {\n  function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset) {\n    var insertsAutoWhitespace = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    _classCallCheck(this, ReplaceCommandWithOffsetCursorState);\n\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n\n  _createClass(ReplaceCommandWithOffsetCursorState, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\n    }\n  }]);\n\n  return ReplaceCommandWithOffsetCursorState;\n}();\nexport var ReplaceCommandThatPreservesSelection = /*#__PURE__*/function () {\n  function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection) {\n    var forceMoveMarkers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    _classCallCheck(this, ReplaceCommandThatPreservesSelection);\n\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n\n  _createClass(ReplaceCommandThatPreservesSelection, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n      this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      return helper.getTrackedSelection(this._selectionId);\n    }\n  }]);\n\n  return ReplaceCommandThatPreservesSelection;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"names":["Selection","ReplaceCommand","range","text","insertsAutoWhitespace","_range","_text","model","builder","addTrackedEditOperation","helper","inverseEditOperations","getInverseEditOperations","srcRange","endLineNumber","endColumn","ReplaceCommandThatSelectsText","startLineNumber","startColumn","ReplaceCommandWithoutChangingPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../core/selection.js';\r\nexport class ReplaceCommand {\r\n    constructor(range, text, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandThatSelectsText {\r\n    constructor(range, text) {\r\n        this._range = range;\r\n        this._text = text;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        const srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandWithoutChangingPosition {\r\n    constructor(range, text, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.startLineNumber, srcRange.startColumn, srcRange.startLineNumber, srcRange.startColumn);\r\n    }\r\n}\r\nexport class ReplaceCommandWithOffsetCursorState {\r\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\r\n        this._range = range;\r\n        this._text = text;\r\n        this._columnDeltaOffset = columnDeltaOffset;\r\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\r\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let inverseEditOperations = helper.getInverseEditOperations();\r\n        let srcRange = inverseEditOperations[0].range;\r\n        return new Selection(srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset, srcRange.endLineNumber + this._lineNumberDeltaOffset, srcRange.endColumn + this._columnDeltaOffset);\r\n    }\r\n}\r\nexport class ReplaceCommandThatPreservesSelection {\r\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\r\n        this._range = editRange;\r\n        this._text = text;\r\n        this._initialSelection = initialSelection;\r\n        this._forceMoveMarkers = forceMoveMarkers;\r\n        this._selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\r\n        this._selectionId = builder.trackSelection(this._initialSelection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}