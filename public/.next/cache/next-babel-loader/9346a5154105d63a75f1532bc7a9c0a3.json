{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './media/tree.css';\nimport { dispose as _dispose, Disposable, toDisposable, DisposableStore } from '../../../common/lifecycle.js';\nimport { List, MouseController, DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor } from '../list/listWidget.js';\nimport { append, $, getDomNodePagePosition, hasParentWithClass, createStyleSheet, clearNode } from '../../dom.js';\nimport { Event, Relay, Emitter, EventBufferer } from '../../../common/event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { StaticDND, DragAndDropData } from '../../dnd.js';\nimport { range, equals, distinctES6 } from '../../../common/arrays.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { domEvent } from '../../event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { localize } from '../../../../nls.js';\nimport { disposableTimeout } from '../../../common/async.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { treeItemExpandedIcon, treeFilterOnTypeOnIcon, treeFilterOnTypeOffIcon, treeFilterClearIcon } from './treeIcons.js';\n\nvar TreeElementsDragAndDropData = /*#__PURE__*/function (_ElementsDragAndDropD) {\n  _inherits(TreeElementsDragAndDropData, _ElementsDragAndDropD);\n\n  var _super = _createSuper(TreeElementsDragAndDropData);\n\n  function TreeElementsDragAndDropData(data) {\n    var _this;\n\n    _classCallCheck(this, TreeElementsDragAndDropData);\n\n    _this = _super.call(this, data.elements.map(function (node) {\n      return node.element;\n    }));\n    _this.data = data;\n    return _this;\n  }\n\n  return TreeElementsDragAndDropData;\n}(ElementsDragAndDropData);\n\nfunction asTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new TreeElementsDragAndDropData(data);\n  }\n\n  return data;\n}\n\nvar TreeNodeListDragAndDrop = /*#__PURE__*/function () {\n  function TreeNodeListDragAndDrop(modelProvider, dnd) {\n    _classCallCheck(this, TreeNodeListDragAndDrop);\n\n    this.modelProvider = modelProvider;\n    this.dnd = dnd;\n    this.autoExpandDisposable = Disposable.None;\n  }\n\n  _createClass(TreeNodeListDragAndDrop, [{\n    key: \"getDragURI\",\n    value: function getDragURI(node) {\n      return this.dnd.getDragURI(node.element);\n    }\n  }, {\n    key: \"getDragLabel\",\n    value: function getDragLabel(nodes, originalEvent) {\n      if (this.dnd.getDragLabel) {\n        return this.dnd.getDragLabel(nodes.map(function (node) {\n          return node.element;\n        }), originalEvent);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(data, originalEvent) {\n      if (this.dnd.onDragStart) {\n        this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\n      }\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(data, targetNode, targetIndex, originalEvent) {\n      var _this2 = this;\n\n      var raw = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      var result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n      var didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n\n      if (didChangeAutoExpandNode) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = targetNode;\n      }\n\n      if (typeof targetNode === 'undefined') {\n        return result;\n      }\n\n      if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n        this.autoExpandDisposable = disposableTimeout(function () {\n          var model = _this2.modelProvider();\n\n          var ref = model.getNodeLocation(targetNode);\n\n          if (model.isCollapsed(ref)) {\n            model.setCollapsed(ref, false);\n          }\n\n          _this2.autoExpandNode = undefined;\n        }, 500);\n      }\n\n      if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n        if (!raw) {\n          var accept = typeof result === 'boolean' ? result : result.accept;\n          var effect = typeof result === 'boolean' ? undefined : result.effect;\n          return {\n            accept: accept,\n            effect: effect,\n            feedback: [targetIndex]\n          };\n        }\n\n        return result;\n      }\n\n      if (result.bubble === 1\n      /* Up */\n      ) {\n          var _model = this.modelProvider();\n\n          var _ref = _model.getNodeLocation(targetNode);\n\n          var parentRef = _model.getParentNodeLocation(_ref);\n\n          var parentNode = _model.getNode(parentRef);\n\n          var parentIndex = parentRef && _model.getListIndex(parentRef);\n\n          return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n\n      var model = this.modelProvider();\n      var ref = model.getNodeLocation(targetNode);\n      var start = model.getListIndex(ref);\n      var length = model.getListRenderCount(ref);\n      return Object.assign(Object.assign({}, result), {\n        feedback: range(start, start + length)\n      });\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(data, targetNode, targetIndex, originalEvent) {\n      this.autoExpandDisposable.dispose();\n      this.autoExpandNode = undefined;\n      this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(originalEvent) {\n      if (this.dnd.onDragEnd) {\n        this.dnd.onDragEnd(originalEvent);\n      }\n    }\n  }]);\n\n  return TreeNodeListDragAndDrop;\n}();\n\nfunction asListOptions(modelProvider, options) {\n  return options && Object.assign(Object.assign({}, options), {\n    identityProvider: options.identityProvider && {\n      getId: function getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent: function isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent: function isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), {\n      getSetSize: function getSetSize(node) {\n        var model = modelProvider();\n        var ref = model.getNodeLocation(node);\n        var parentRef = model.getParentNodeLocation(ref);\n        var parentNode = model.getNode(parentRef);\n        return parentNode.visibleChildrenCount;\n      },\n      getPosInSet: function getPosInSet(node) {\n        return node.visibleChildIndex + 1;\n      },\n      isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? function (node) {\n        return options.accessibilityProvider.isChecked(node.element);\n      } : undefined,\n      getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? function (node) {\n        return options.accessibilityProvider.getRole(node.element);\n      } : function () {\n        return 'treeitem';\n      },\n      getAriaLabel: function getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel: function getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? function () {\n        return options.accessibilityProvider.getWidgetRole();\n      } : function () {\n        return 'tree';\n      },\n      getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? function (node) {\n        return options.accessibilityProvider.getAriaLevel(node.element);\n      } : function (node) {\n        return node.depth;\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && function (node) {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      }\n    }),\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), {\n      getKeyboardNavigationLabel: function getKeyboardNavigationLabel(node) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n      }\n    }),\n    enableKeyboardNavigation: options.simpleKeyboardNavigation\n  });\n}\n\nexport var ComposedTreeDelegate = /*#__PURE__*/function () {\n  function ComposedTreeDelegate(delegate) {\n    _classCallCheck(this, ComposedTreeDelegate);\n\n    this.delegate = delegate;\n  }\n\n  _createClass(ComposedTreeDelegate, [{\n    key: \"getHeight\",\n    value: function getHeight(element) {\n      return this.delegate.getHeight(element.element);\n    }\n  }, {\n    key: \"getTemplateId\",\n    value: function getTemplateId(element) {\n      return this.delegate.getTemplateId(element.element);\n    }\n  }, {\n    key: \"hasDynamicHeight\",\n    value: function hasDynamicHeight(element) {\n      return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n  }, {\n    key: \"setDynamicHeight\",\n    value: function setDynamicHeight(element, height) {\n      if (this.delegate.setDynamicHeight) {\n        this.delegate.setDynamicHeight(element.element, height);\n      }\n    }\n  }]);\n\n  return ComposedTreeDelegate;\n}();\nexport var RenderIndentGuides;\n\n(function (RenderIndentGuides) {\n  RenderIndentGuides[\"None\"] = \"none\";\n  RenderIndentGuides[\"OnHover\"] = \"onHover\";\n  RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\n\nvar EventCollection = /*#__PURE__*/function () {\n  function EventCollection(onDidChange) {\n    var _this3 = this;\n\n    var _elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, EventCollection);\n\n    this._elements = _elements;\n    this.onDidChange = Event.forEach(onDidChange, function (elements) {\n      return _this3._elements = elements;\n    });\n  }\n\n  _createClass(EventCollection, [{\n    key: \"elements\",\n    get: function get() {\n      return this._elements;\n    }\n  }]);\n\n  return EventCollection;\n}();\n\nvar TreeRenderer = /*#__PURE__*/function () {\n  function TreeRenderer(renderer, modelProvider, onDidChangeCollapseState, activeNodes) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    _classCallCheck(this, TreeRenderer);\n\n    this.renderer = renderer;\n    this.modelProvider = modelProvider;\n    this.activeNodes = activeNodes;\n    this.renderedElements = new Map();\n    this.renderedNodes = new Map();\n    this.indent = TreeRenderer.DefaultIndent;\n    this.hideTwistiesOfChildlessElements = false;\n    this.shouldRenderIndentGuides = false;\n    this.renderedIndentGuides = new SetMap();\n    this.activeIndentNodes = new Set();\n    this.indentGuidesDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n    this.templateId = renderer.templateId;\n    this.updateOptions(options);\n    Event.map(onDidChangeCollapseState, function (e) {\n      return e.node;\n    })(this.onDidChangeNodeTwistieState, this, this.disposables);\n\n    if (renderer.onDidChangeTwistieState) {\n      renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\n    }\n  }\n\n  _createClass(TreeRenderer, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (typeof options.indent !== 'undefined') {\n        this.indent = clamp(options.indent, 0, 40);\n      }\n\n      if (typeof options.renderIndentGuides !== 'undefined') {\n        var shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n\n        if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n          this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n          this.indentGuidesDisposable.dispose();\n\n          if (shouldRenderIndentGuides) {\n            var disposables = new DisposableStore();\n            this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n            this.indentGuidesDisposable = disposables;\n\n            this._onDidChangeActiveNodes(this.activeNodes.elements);\n          }\n        }\n      }\n\n      if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n        this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n      }\n    }\n  }, {\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var el = append(container, $('.monaco-tl-row'));\n      var indent = append(el, $('.monaco-tl-indent'));\n      var twistie = append(el, $('.monaco-tl-twistie'));\n      var contents = append(el, $('.monaco-tl-contents'));\n      var templateData = this.renderer.renderTemplate(contents);\n      return {\n        container: container,\n        indent: indent,\n        twistie: twistie,\n        indentGuidesDisposable: Disposable.None,\n        templateData: templateData\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      if (typeof height === 'number') {\n        this.renderedNodes.set(node, {\n          templateData: templateData,\n          height: height\n        });\n        this.renderedElements.set(node.element, node);\n      }\n\n      var indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n      templateData.twistie.style.paddingLeft = \"\".concat(indent, \"px\");\n      templateData.indent.style.width = \"\".concat(indent + this.indent - 16, \"px\");\n      this.renderTwistie(node, templateData);\n\n      if (typeof height === 'number') {\n        this.renderIndentGuides(node, templateData);\n      }\n\n      this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      templateData.indentGuidesDisposable.dispose();\n\n      if (this.renderer.disposeElement) {\n        this.renderer.disposeElement(node, index, templateData.templateData, height);\n      }\n\n      if (typeof height === 'number') {\n        this.renderedNodes[\"delete\"](node);\n        this.renderedElements[\"delete\"](node.element);\n      }\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.templateData);\n    }\n  }, {\n    key: \"onDidChangeTwistieState\",\n    value: function onDidChangeTwistieState(element) {\n      var node = this.renderedElements.get(element);\n\n      if (!node) {\n        return;\n      }\n\n      this.onDidChangeNodeTwistieState(node);\n    }\n  }, {\n    key: \"onDidChangeNodeTwistieState\",\n    value: function onDidChangeNodeTwistieState(node) {\n      var data = this.renderedNodes.get(node);\n\n      if (!data) {\n        return;\n      }\n\n      this.renderTwistie(node, data.templateData);\n\n      this._onDidChangeActiveNodes(this.activeNodes.elements);\n\n      this.renderIndentGuides(node, data.templateData);\n    }\n  }, {\n    key: \"renderTwistie\",\n    value: function renderTwistie(node, templateData) {\n      var _templateData$twistie;\n\n      (_templateData$twistie = templateData.twistie.classList).remove.apply(_templateData$twistie, _toConsumableArray(treeItemExpandedIcon.classNamesArray));\n\n      var twistieRendered = false;\n\n      if (this.renderer.renderTwistie) {\n        twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n      }\n\n      if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n        if (!twistieRendered) {\n          var _templateData$twistie2;\n\n          (_templateData$twistie2 = templateData.twistie.classList).add.apply(_templateData$twistie2, _toConsumableArray(treeItemExpandedIcon.classNamesArray));\n        }\n\n        templateData.twistie.classList.add('collapsible');\n        templateData.twistie.classList.toggle('collapsed', node.collapsed);\n      } else {\n        templateData.twistie.classList.remove('collapsible', 'collapsed');\n      }\n\n      if (node.collapsible) {\n        templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n      } else {\n        templateData.container.removeAttribute('aria-expanded');\n      }\n    }\n  }, {\n    key: \"renderIndentGuides\",\n    value: function renderIndentGuides(target, templateData) {\n      var _this4 = this;\n\n      clearNode(templateData.indent);\n      templateData.indentGuidesDisposable.dispose();\n\n      if (!this.shouldRenderIndentGuides) {\n        return;\n      }\n\n      var disposableStore = new DisposableStore();\n      var model = this.modelProvider();\n      var node = target;\n\n      var _loop = function _loop() {\n        var ref = model.getNodeLocation(node);\n        var parentRef = model.getParentNodeLocation(ref);\n\n        if (!parentRef) {\n          return \"break\";\n        }\n\n        var parent = model.getNode(parentRef);\n        var guide = $('.indent-guide', {\n          style: \"width: \".concat(_this4.indent, \"px\")\n        });\n\n        if (_this4.activeIndentNodes.has(parent)) {\n          guide.classList.add('active');\n        }\n\n        if (templateData.indent.childElementCount === 0) {\n          templateData.indent.appendChild(guide);\n        } else {\n          templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n        }\n\n        _this4.renderedIndentGuides.add(parent, guide);\n\n        disposableStore.add(toDisposable(function () {\n          return _this4.renderedIndentGuides[\"delete\"](parent, guide);\n        }));\n        node = parent;\n      };\n\n      while (true) {\n        var _ret = _loop();\n\n        if (_ret === \"break\") break;\n      }\n\n      templateData.indentGuidesDisposable = disposableStore;\n    }\n  }, {\n    key: \"_onDidChangeActiveNodes\",\n    value: function _onDidChangeActiveNodes(nodes) {\n      var _this5 = this;\n\n      if (!this.shouldRenderIndentGuides) {\n        return;\n      }\n\n      var set = new Set();\n      var model = this.modelProvider();\n      nodes.forEach(function (node) {\n        var ref = model.getNodeLocation(node);\n\n        try {\n          var parentRef = model.getParentNodeLocation(ref);\n\n          if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n            set.add(node);\n          } else if (parentRef) {\n            set.add(model.getNode(parentRef));\n          }\n        } catch (_a) {// noop\n        }\n      });\n      this.activeIndentNodes.forEach(function (node) {\n        if (!set.has(node)) {\n          _this5.renderedIndentGuides.forEach(node, function (line) {\n            return line.classList.remove('active');\n          });\n        }\n      });\n      set.forEach(function (node) {\n        if (!_this5.activeIndentNodes.has(node)) {\n          _this5.renderedIndentGuides.forEach(node, function (line) {\n            return line.classList.add('active');\n          });\n        }\n      });\n      this.activeIndentNodes = set;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderedNodes.clear();\n      this.renderedElements.clear();\n      this.indentGuidesDisposable.dispose();\n\n      _dispose(this.disposables);\n    }\n  }]);\n\n  return TreeRenderer;\n}();\n\nTreeRenderer.DefaultIndent = 8;\n\nvar TypeFilter = /*#__PURE__*/function () {\n  function TypeFilter(tree, keyboardNavigationLabelProvider, _filter) {\n    _classCallCheck(this, TypeFilter);\n\n    this.tree = tree;\n    this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n    this._filter = _filter;\n    this._totalCount = 0;\n    this._matchCount = 0;\n    this._pattern = '';\n    this._lowercasePattern = '';\n    this.disposables = new DisposableStore();\n    tree.onWillRefilter(this.reset, this, this.disposables);\n  }\n\n  _createClass(TypeFilter, [{\n    key: \"filter\",\n    value: function filter(element, parentVisibility) {\n      if (this._filter) {\n        var result = this._filter.filter(element, parentVisibility);\n\n        if (this.tree.options.simpleKeyboardNavigation) {\n          return result;\n        }\n\n        var visibility;\n\n        if (typeof result === 'boolean') {\n          visibility = result ? 1\n          /* Visible */\n          : 0\n          /* Hidden */\n          ;\n        } else if (isFilterResult(result)) {\n          visibility = getVisibleState(result.visibility);\n        } else {\n          visibility = result;\n        }\n\n        if (visibility === 0\n        /* Hidden */\n        ) {\n            return false;\n          }\n      }\n\n      this._totalCount++;\n\n      if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\n        this._matchCount++;\n        return {\n          data: FuzzyScore.Default,\n          visibility: true\n        };\n      }\n\n      var label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n      var labels = Array.isArray(label) ? label : [label];\n\n      var _iterator = _createForOfIteratorHelper(labels),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var l = _step.value;\n          var labelStr = l && l.toString();\n\n          if (typeof labelStr === 'undefined') {\n            return {\n              data: FuzzyScore.Default,\n              visibility: true\n            };\n          }\n\n          var score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\n\n          if (score) {\n            this._matchCount++;\n            return labels.length === 1 ? {\n              data: score,\n              visibility: true\n            } : {\n              data: {\n                label: labelStr,\n                score: score\n              },\n              visibility: true\n            };\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (this.tree.options.filterOnType) {\n        return 2\n        /* Recurse */\n        ;\n      } else {\n        return {\n          data: FuzzyScore.Default,\n          visibility: true\n        };\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._totalCount = 0;\n      this._matchCount = 0;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _dispose(this.disposables);\n    }\n  }, {\n    key: \"totalCount\",\n    get: function get() {\n      return this._totalCount;\n    }\n  }, {\n    key: \"matchCount\",\n    get: function get() {\n      return this._matchCount;\n    }\n  }, {\n    key: \"pattern\",\n    set: function set(pattern) {\n      this._pattern = pattern;\n      this._lowercasePattern = pattern.toLowerCase();\n    }\n  }]);\n\n  return TypeFilter;\n}();\n\nvar TypeFilterController = /*#__PURE__*/function () {\n  function TypeFilterController(tree, model, view, filter, keyboardNavigationDelegate) {\n    _classCallCheck(this, TypeFilterController);\n\n    this.tree = tree;\n    this.view = view;\n    this.filter = filter;\n    this.keyboardNavigationDelegate = keyboardNavigationDelegate;\n    this._enabled = false;\n    this._pattern = '';\n    this._empty = false;\n    this._onDidChangeEmptyState = new Emitter();\n    this.positionClassName = 'ne';\n    this.automaticKeyboardNavigation = true;\n    this.triggered = false;\n    this._onDidChangePattern = new Emitter();\n    this.enabledDisposables = new DisposableStore();\n    this.disposables = new DisposableStore();\n    this.domNode = $(\".monaco-list-type-filter.\".concat(this.positionClassName));\n    this.domNode.draggable = true;\n    domEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\n    this.messageDomNode = append(view.getHTMLElement(), $(\".monaco-list-type-filter-message\"));\n    this.labelDomNode = append(this.domNode, $('span.label'));\n    var controls = append(this.domNode, $('.controls'));\n    this._filterOnType = !!tree.options.filterOnType;\n    this.filterOnTypeDomNode = append(controls, $('input.filter'));\n    this.filterOnTypeDomNode.type = 'checkbox';\n    this.filterOnTypeDomNode.checked = this._filterOnType;\n    this.filterOnTypeDomNode.tabIndex = -1;\n    this.updateFilterOnTypeTitleAndIcon();\n    domEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\n    this.clearDomNode = append(controls, $('button.clear' + treeFilterClearIcon.cssSelector));\n    this.clearDomNode.tabIndex = -1;\n    this.clearDomNode.title = localize('clear', \"Clear\");\n    this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\n    model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    this.updateOptions(tree.options);\n  }\n\n  _createClass(TypeFilterController, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      if (options.simpleKeyboardNavigation) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n\n      if (typeof options.filterOnType !== 'undefined') {\n        this._filterOnType = !!options.filterOnType;\n        this.filterOnTypeDomNode.checked = this._filterOnType;\n      }\n\n      if (typeof options.automaticKeyboardNavigation !== 'undefined') {\n        this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\n      }\n\n      this.tree.refilter();\n      this.render();\n\n      if (!this.automaticKeyboardNavigation) {\n        this.onEventOrInput('');\n      }\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      var _this6 = this;\n\n      if (this._enabled) {\n        return;\n      }\n\n      var onKeyDown = Event.chain(domEvent(this.view.getHTMLElement(), 'keydown')).filter(function (e) {\n        return !isInputElement(e.target) || e.target === _this6.filterOnTypeDomNode;\n      }).filter(function (e) {\n        return e.key !== 'Dead' && !/^Media/.test(e.key);\n      }).map(function (e) {\n        return new StandardKeyboardEvent(e);\n      }).filter(this.keyboardNavigationEventFilter || function () {\n        return true;\n      }).filter(function () {\n        return _this6.automaticKeyboardNavigation || _this6.triggered;\n      }).filter(function (e) {\n        return _this6.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18\n        /* DownArrow */\n        || e.keyCode === 16\n        /* UpArrow */\n        || e.keyCode === 15\n        /* LeftArrow */\n        || e.keyCode === 17\n        /* RightArrow */\n        ) || (_this6.pattern.length > 0 || _this6.triggered) && (e.keyCode === 9\n        /* Escape */\n        || e.keyCode === 1\n        /* Backspace */\n        ) && !e.altKey && !e.ctrlKey && !e.metaKey || e.keyCode === 1\n        /* Backspace */\n        && (isMacintosh ? e.altKey && !e.metaKey : e.ctrlKey) && !e.shiftKey;\n      }).forEach(function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      }).event;\n      var onClear = domEvent(this.clearDomNode, 'click');\n      Event.chain(Event.any(onKeyDown, onClear)).event(this.onEventOrInput, this, this.enabledDisposables);\n      this.filter.pattern = '';\n      this.tree.refilter();\n      this.render();\n      this._enabled = true;\n      this.triggered = false;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this._enabled) {\n        return;\n      }\n\n      this.domNode.remove();\n      this.enabledDisposables.clear();\n      this.tree.refilter();\n      this.render();\n      this._enabled = false;\n      this.triggered = false;\n    }\n  }, {\n    key: \"onEventOrInput\",\n    value: function onEventOrInput(e) {\n      if (typeof e === 'string') {\n        this.onInput(e);\n      } else if (e instanceof MouseEvent || e.keyCode === 9\n      /* Escape */\n      || e.keyCode === 1\n      /* Backspace */\n      && (isMacintosh ? e.altKey : e.ctrlKey)) {\n        this.onInput('');\n      } else if (e.keyCode === 1\n      /* Backspace */\n      ) {\n          this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\n        } else {\n        this.onInput(this.pattern + e.browserEvent.key);\n      }\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(pattern) {\n      var container = this.view.getHTMLElement();\n\n      if (pattern && !this.domNode.parentElement) {\n        container.append(this.domNode);\n      } else if (!pattern && this.domNode.parentElement) {\n        this.domNode.remove();\n        this.tree.domFocus();\n      }\n\n      this._pattern = pattern;\n\n      this._onDidChangePattern.fire(pattern);\n\n      this.filter.pattern = pattern;\n      this.tree.refilter();\n\n      if (pattern) {\n        this.tree.focusNext(0, true, undefined, function (node) {\n          return !FuzzyScore.isDefault(node.filterData);\n        });\n      }\n\n      var focus = this.tree.getFocus();\n\n      if (focus.length > 0) {\n        var element = focus[0];\n\n        if (this.tree.getRelativeTop(element) === null) {\n          this.tree.reveal(element, 0.5);\n        }\n      }\n\n      this.render();\n\n      if (!pattern) {\n        this.triggered = false;\n      }\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart() {\n      var _this7 = this;\n\n      var container = this.view.getHTMLElement();\n\n      var _getDomNodePagePositi = getDomNodePagePosition(container),\n          left = _getDomNodePagePositi.left;\n\n      var containerWidth = container.clientWidth;\n      var midContainerWidth = containerWidth / 2;\n      var width = this.domNode.clientWidth;\n      var disposables = new DisposableStore();\n      var positionClassName = this.positionClassName;\n\n      var updatePosition = function updatePosition() {\n        switch (positionClassName) {\n          case 'nw':\n            _this7.domNode.style.top = \"4px\";\n            _this7.domNode.style.left = \"4px\";\n            break;\n\n          case 'ne':\n            _this7.domNode.style.top = \"4px\";\n            _this7.domNode.style.left = \"\".concat(containerWidth - width - 6, \"px\");\n            break;\n        }\n      };\n\n      var onDragOver = function onDragOver(event) {\n        event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n        var x = event.clientX - left;\n\n        if (event.dataTransfer) {\n          event.dataTransfer.dropEffect = 'none';\n        }\n\n        if (x < midContainerWidth) {\n          positionClassName = 'nw';\n        } else {\n          positionClassName = 'ne';\n        }\n\n        updatePosition();\n      };\n\n      var onDragEnd = function onDragEnd() {\n        _this7.positionClassName = positionClassName;\n        _this7.domNode.className = \"monaco-list-type-filter \".concat(_this7.positionClassName);\n        _this7.domNode.style.top = '';\n        _this7.domNode.style.left = '';\n\n        _dispose(disposables);\n      };\n\n      updatePosition();\n      this.domNode.classList.remove(positionClassName);\n      this.domNode.classList.add('dragging');\n      disposables.add(toDisposable(function () {\n        return _this7.domNode.classList.remove('dragging');\n      }));\n      domEvent(document, 'dragover')(onDragOver, null, disposables);\n      domEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\n      StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\n      disposables.add(toDisposable(function () {\n        return StaticDND.CurrentDragAndDropData = undefined;\n      }));\n    }\n  }, {\n    key: \"onDidSpliceModel\",\n    value: function onDidSpliceModel() {\n      if (!this._enabled || this.pattern.length === 0) {\n        return;\n      }\n\n      this.tree.refilter();\n      this.render();\n    }\n  }, {\n    key: \"onDidChangeFilterOnType\",\n    value: function onDidChangeFilterOnType() {\n      this.tree.updateOptions({\n        filterOnType: this.filterOnTypeDomNode.checked\n      });\n      this.tree.refilter();\n      this.tree.domFocus();\n      this.render();\n      this.updateFilterOnTypeTitleAndIcon();\n    }\n  }, {\n    key: \"updateFilterOnTypeTitleAndIcon\",\n    value: function updateFilterOnTypeTitleAndIcon() {\n      if (this.filterOnType) {\n        var _this$filterOnTypeDom, _this$filterOnTypeDom2;\n\n        (_this$filterOnTypeDom = this.filterOnTypeDomNode.classList).remove.apply(_this$filterOnTypeDom, _toConsumableArray(treeFilterOnTypeOffIcon.classNamesArray));\n\n        (_this$filterOnTypeDom2 = this.filterOnTypeDomNode.classList).add.apply(_this$filterOnTypeDom2, _toConsumableArray(treeFilterOnTypeOnIcon.classNamesArray));\n\n        this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\n      } else {\n        var _this$filterOnTypeDom3, _this$filterOnTypeDom4;\n\n        (_this$filterOnTypeDom3 = this.filterOnTypeDomNode.classList).remove.apply(_this$filterOnTypeDom3, _toConsumableArray(treeFilterOnTypeOnIcon.classNamesArray));\n\n        (_this$filterOnTypeDom4 = this.filterOnTypeDomNode.classList).add.apply(_this$filterOnTypeDom4, _toConsumableArray(treeFilterOnTypeOffIcon.classNamesArray));\n\n        this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n\n      if (this.pattern && this.tree.options.filterOnType && noMatches) {\n        this.messageDomNode.textContent = localize('empty', \"No elements found\");\n        this._empty = true;\n      } else {\n        this.messageDomNode.innerText = '';\n        this._empty = false;\n      }\n\n      this.domNode.classList.toggle('no-matches', noMatches);\n      this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\n      this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\n\n      this._onDidChangeEmptyState.fire(this._empty);\n    }\n  }, {\n    key: \"shouldAllowFocus\",\n    value: function shouldAllowFocus(node) {\n      if (!this.enabled || !this.pattern || this.filterOnType) {\n        return true;\n      }\n\n      if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n        return true;\n      }\n\n      return !FuzzyScore.isDefault(node.filterData);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._enabled) {\n        this.domNode.remove();\n        this.enabledDisposables.dispose();\n        this._enabled = false;\n        this.triggered = false;\n      }\n\n      this._onDidChangePattern.dispose();\n\n      _dispose(this.disposables);\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this._enabled;\n    }\n  }, {\n    key: \"pattern\",\n    get: function get() {\n      return this._pattern;\n    }\n  }, {\n    key: \"filterOnType\",\n    get: function get() {\n      return this._filterOnType;\n    }\n  }]);\n\n  return TypeFilterController;\n}();\n\nfunction asTreeMouseEvent(event) {\n  var target = TreeMouseEventTarget.Unknown;\n\n  if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Twistie;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Element;\n  }\n\n  return {\n    browserEvent: event.browserEvent,\n    element: event.element ? event.element.element : null,\n    target: target\n  };\n}\n\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(function (child) {\n    return dfs(child, fn);\n  });\n}\n/**\r\n * The trait concept needs to exist at the tree level, because collapsed\r\n * tree nodes will not be known by the list.\r\n */\n\n\nvar Trait = /*#__PURE__*/function () {\n  function Trait(identityProvider) {\n    _classCallCheck(this, Trait);\n\n    this.identityProvider = identityProvider;\n    this.nodes = [];\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n  }\n\n  _createClass(Trait, [{\n    key: \"set\",\n    value: function set(nodes, browserEvent) {\n      var _a;\n\n      if (!((_a = browserEvent) === null || _a === void 0 ? void 0 : _a.__forceEvent) && equals(this.nodes, nodes)) {\n        return;\n      }\n\n      this._set(nodes, false, browserEvent);\n    }\n  }, {\n    key: \"_set\",\n    value: function _set(nodes, silent, browserEvent) {\n      this.nodes = _toConsumableArray(nodes);\n      this.elements = undefined;\n      this._nodeSet = undefined;\n\n      if (!silent) {\n        var that = this;\n\n        this._onDidChange.fire({\n          get elements() {\n            return that.get();\n          },\n\n          browserEvent: browserEvent\n        });\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      if (!this.elements) {\n        this.elements = this.nodes.map(function (node) {\n          return node.element;\n        });\n      }\n\n      return _toConsumableArray(this.elements);\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return this.nodes;\n    }\n  }, {\n    key: \"has\",\n    value: function has(node) {\n      return this.nodeSet.has(node);\n    }\n  }, {\n    key: \"onDidModelSplice\",\n    value: function onDidModelSplice(_ref2) {\n      var _this8 = this;\n\n      var insertedNodes = _ref2.insertedNodes,\n          deletedNodes = _ref2.deletedNodes;\n\n      if (!this.identityProvider) {\n        var set = this.createNodeSet();\n\n        var visit = function visit(node) {\n          return set[\"delete\"](node);\n        };\n\n        deletedNodes.forEach(function (node) {\n          return dfs(node, visit);\n        });\n        this.set(_toConsumableArray(set.values()));\n        return;\n      }\n\n      var deletedNodesIdSet = new Set();\n\n      var deletedNodesVisitor = function deletedNodesVisitor(node) {\n        return deletedNodesIdSet.add(_this8.identityProvider.getId(node.element).toString());\n      };\n\n      deletedNodes.forEach(function (node) {\n        return dfs(node, deletedNodesVisitor);\n      });\n      var insertedNodesMap = new Map();\n\n      var insertedNodesVisitor = function insertedNodesVisitor(node) {\n        return insertedNodesMap.set(_this8.identityProvider.getId(node.element).toString(), node);\n      };\n\n      insertedNodes.forEach(function (node) {\n        return dfs(node, insertedNodesVisitor);\n      });\n      var nodes = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.nodes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var node = _step2.value;\n          var id = this.identityProvider.getId(node.element).toString();\n          var wasDeleted = deletedNodesIdSet.has(id);\n\n          if (!wasDeleted) {\n            nodes.push(node);\n          } else {\n            var insertedNode = insertedNodesMap.get(id);\n\n            if (insertedNode) {\n              nodes.push(insertedNode);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._set(nodes, true);\n    }\n  }, {\n    key: \"createNodeSet\",\n    value: function createNodeSet() {\n      var set = new Set();\n\n      var _iterator3 = _createForOfIteratorHelper(this.nodes),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var node = _step3.value;\n          set.add(node);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return set;\n    }\n  }, {\n    key: \"nodeSet\",\n    get: function get() {\n      if (!this._nodeSet) {\n        this._nodeSet = this.createNodeSet();\n      }\n\n      return this._nodeSet;\n    }\n  }]);\n\n  return Trait;\n}();\n\nvar TreeNodeListMouseController = /*#__PURE__*/function (_MouseController) {\n  _inherits(TreeNodeListMouseController, _MouseController);\n\n  var _super2 = _createSuper(TreeNodeListMouseController);\n\n  function TreeNodeListMouseController(list, tree) {\n    var _this9;\n\n    _classCallCheck(this, TreeNodeListMouseController);\n\n    _this9 = _super2.call(this, list);\n    _this9.tree = tree;\n    return _this9;\n  }\n\n  _createClass(TreeNodeListMouseController, [{\n    key: \"onViewPointer\",\n    value: function onViewPointer(e) {\n      if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n        return;\n      }\n\n      var node = e.element;\n\n      if (!node) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n\n      if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n\n      var target = e.browserEvent.target;\n      var onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16;\n      var expandOnlyOnTwistieClick = false;\n\n      if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n        expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n      } else {\n        expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n      }\n\n      if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n\n      if (this.tree.expandOnlyOnDoubleClick && e.browserEvent.detail !== 2 && !onTwistie) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n\n      if (node.collapsible) {\n        var model = this.tree.model; // internal\n\n        var location = model.getNodeLocation(node);\n        var recursive = e.browserEvent.altKey;\n        model.setCollapsed(location, undefined, recursive);\n\n        if (expandOnlyOnTwistieClick && onTwistie) {\n          return;\n        }\n      }\n\n      _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n    }\n  }, {\n    key: \"onDoubleClick\",\n    value: function onDoubleClick(e) {\n      var onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n\n      if (onTwistie) {\n        return;\n      }\n\n      _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onDoubleClick\", this).call(this, e);\n    }\n  }]);\n\n  return TreeNodeListMouseController;\n}(MouseController);\n/**\r\n * We use this List subclass to restore selection and focus as nodes\r\n * get rendered in the list, possibly due to a node expand() call.\r\n */\n\n\nvar TreeNodeList = /*#__PURE__*/function (_List) {\n  _inherits(TreeNodeList, _List);\n\n  var _super3 = _createSuper(TreeNodeList);\n\n  function TreeNodeList(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {\n    var _this10;\n\n    _classCallCheck(this, TreeNodeList);\n\n    _this10 = _super3.call(this, user, container, virtualDelegate, renderers, options);\n    _this10.focusTrait = focusTrait;\n    _this10.selectionTrait = selectionTrait;\n    return _this10;\n  }\n\n  _createClass(TreeNodeList, [{\n    key: \"createMouseController\",\n    value: function createMouseController(options) {\n      return new TreeNodeListMouseController(this, options.tree);\n    }\n  }, {\n    key: \"splice\",\n    value: function splice(start, deleteCount) {\n      var _this11 = this;\n\n      var elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"splice\", this).call(this, start, deleteCount, elements);\n\n      if (elements.length === 0) {\n        return;\n      }\n\n      var additionalFocus = [];\n      var additionalSelection = [];\n      elements.forEach(function (node, index) {\n        if (_this11.focusTrait.has(node)) {\n          additionalFocus.push(start + index);\n        }\n\n        if (_this11.selectionTrait.has(node)) {\n          additionalSelection.push(start + index);\n        }\n      });\n\n      if (additionalFocus.length > 0) {\n        _get(_getPrototypeOf(TreeNodeList.prototype), \"setFocus\", this).call(this, distinctES6([].concat(_toConsumableArray(_get(_getPrototypeOf(TreeNodeList.prototype), \"getFocus\", this).call(this)), additionalFocus)));\n      }\n\n      if (additionalSelection.length > 0) {\n        _get(_getPrototypeOf(TreeNodeList.prototype), \"setSelection\", this).call(this, distinctES6([].concat(_toConsumableArray(_get(_getPrototypeOf(TreeNodeList.prototype), \"getSelection\", this).call(this)), additionalSelection)));\n      }\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(indexes, browserEvent) {\n      var _this12 = this;\n\n      var fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"setFocus\", this).call(this, indexes, browserEvent);\n\n      if (!fromAPI) {\n        this.focusTrait.set(indexes.map(function (i) {\n          return _this12.element(i);\n        }), browserEvent);\n      }\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(indexes, browserEvent) {\n      var _this13 = this;\n\n      var fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"setSelection\", this).call(this, indexes, browserEvent);\n\n      if (!fromAPI) {\n        this.selectionTrait.set(indexes.map(function (i) {\n          return _this13.element(i);\n        }), browserEvent);\n      }\n    }\n  }]);\n\n  return TreeNodeList;\n}(List);\n\nexport var AbstractTree = /*#__PURE__*/function () {\n  function AbstractTree(user, container, delegate, renderers) {\n    var _this14 = this;\n\n    var _options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    _classCallCheck(this, AbstractTree);\n\n    this._options = _options;\n    this.eventBufferer = new EventBufferer();\n    this.disposables = new DisposableStore();\n    this._onWillRefilter = new Emitter();\n    this.onWillRefilter = this._onWillRefilter.event;\n    this._onDidUpdateOptions = new Emitter();\n    var treeDelegate = new ComposedTreeDelegate(delegate);\n    var onDidChangeCollapseStateRelay = new Relay();\n    var onDidChangeActiveNodes = new Relay();\n    var activeNodes = new EventCollection(onDidChangeActiveNodes.event);\n    this.renderers = renderers.map(function (r) {\n      return new TreeRenderer(r, function () {\n        return _this14.model;\n      }, onDidChangeCollapseStateRelay.event, activeNodes, _options);\n    });\n\n    var _iterator4 = _createForOfIteratorHelper(this.renderers),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var r = _step4.value;\n        this.disposables.add(r);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var filter;\n\n    if (_options.keyboardNavigationLabelProvider) {\n      filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n      _options = Object.assign(Object.assign({}, _options), {\n        filter: filter\n      }); // TODO need typescript help here\n\n      this.disposables.add(filter);\n    }\n\n    this.focus = new Trait(_options.identityProvider);\n    this.selection = new Trait(_options.identityProvider);\n    this.view = new TreeNodeList(user, container, treeDelegate, this.renderers, this.focus, this.selection, Object.assign(Object.assign({}, asListOptions(function () {\n      return _this14.model;\n    }, _options)), {\n      tree: this\n    }));\n    this.model = this.createModel(user, this.view, _options);\n    onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n    var onDidModelSplice = Event.forEach(this.model.onDidSplice, function (e) {\n      _this14.eventBufferer.bufferEvents(function () {\n        _this14.focus.onDidModelSplice(e);\n\n        _this14.selection.onDidModelSplice(e);\n      });\n    }); // Make sure the `forEach` always runs\n\n    onDidModelSplice(function () {\n      return null;\n    }, null, this.disposables); // Active nodes can change when the model changes or when focus or selection change.\n    // We debounce it with 0 delay since these events may fire in the same stack and we only\n    // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n    // a nice to have UI feature.\n\n    onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)).debounce(function () {\n      return null;\n    }, 0).map(function () {\n      var set = new Set();\n\n      var _iterator5 = _createForOfIteratorHelper(_this14.focus.getNodes()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var node = _step5.value;\n          set.add(node);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var _iterator6 = _createForOfIteratorHelper(_this14.selection.getNodes()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _node = _step6.value;\n          set.add(_node);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return _toConsumableArray(set.values());\n    }).event;\n\n    if (_options.keyboardSupport !== false) {\n      var onKeyDown = Event.chain(this.view.onKeyDown).filter(function (e) {\n        return !isInputElement(e.target);\n      }).map(function (e) {\n        return new StandardKeyboardEvent(e);\n      });\n      onKeyDown.filter(function (e) {\n        return e.keyCode === 15;\n      }\n      /* LeftArrow */\n      ).on(this.onLeftArrow, this, this.disposables);\n      onKeyDown.filter(function (e) {\n        return e.keyCode === 17;\n      }\n      /* RightArrow */\n      ).on(this.onRightArrow, this, this.disposables);\n      onKeyDown.filter(function (e) {\n        return e.keyCode === 10;\n      }\n      /* Space */\n      ).on(this.onSpace, this, this.disposables);\n    }\n\n    if (_options.keyboardNavigationLabelProvider) {\n      var _delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\n\n      this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, _delegate);\n\n      this.focusNavigationFilter = function (node) {\n        return _this14.typeFilterController.shouldAllowFocus(node);\n      };\n\n      this.disposables.add(this.typeFilterController);\n    }\n\n    this.styleElement = createStyleSheet(this.view.getHTMLElement());\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n\n  _createClass(AbstractTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n\n      var _iterator7 = _createForOfIteratorHelper(this.renderers),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var renderer = _step7.value;\n          renderer.updateOptions(optionsUpdate);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      this.view.updateOptions({\n        enableKeyboardNavigation: this._options.simpleKeyboardNavigation,\n        automaticKeyboardNavigation: this._options.automaticKeyboardNavigation,\n        smoothScrolling: this._options.smoothScrolling,\n        horizontalScrolling: this._options.horizontalScrolling\n      });\n\n      if (this.typeFilterController) {\n        this.typeFilterController.updateOptions(this._options);\n      }\n\n      this._onDidUpdateOptions.fire(this._options);\n\n      this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n  }, {\n    key: \"getHTMLElement\",\n    // Widget\n    value: function getHTMLElement() {\n      return this.view.getHTMLElement();\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      this.view.domFocus();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(height, width) {\n      this.view.layout(height, width);\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      var suffix = \".\".concat(this.view.domId);\n      var content = [];\n\n      if (styles.treeIndentGuidesStroke) {\n        content.push(\".monaco-list\".concat(suffix, \":hover .monaco-tl-indent > .indent-guide, .monaco-list\").concat(suffix, \".always .monaco-tl-indent > .indent-guide  { border-color: \").concat(styles.treeIndentGuidesStroke.transparent(0.4), \"; }\"));\n        content.push(\".monaco-list\".concat(suffix, \" .monaco-tl-indent > .indent-guide.active { border-color: \").concat(styles.treeIndentGuidesStroke, \"; }\"));\n      }\n\n      this.styleElement.textContent = content.join('\\n');\n      this.view.style(styles);\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(location) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.model.setCollapsed(location, true, recursive);\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(location) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.model.setCollapsed(location, false, recursive);\n    }\n  }, {\n    key: \"isCollapsible\",\n    value: function isCollapsible(location) {\n      return this.model.isCollapsible(location);\n    }\n  }, {\n    key: \"setCollapsible\",\n    value: function setCollapsible(location, collapsible) {\n      return this.model.setCollapsible(location, collapsible);\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed(location) {\n      return this.model.isCollapsed(location);\n    }\n  }, {\n    key: \"refilter\",\n    value: function refilter() {\n      this._onWillRefilter.fire(undefined);\n\n      this.model.refilter();\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(elements, browserEvent) {\n      var _this15 = this;\n\n      var nodes = elements.map(function (e) {\n        return _this15.model.getNode(e);\n      });\n      this.selection.set(nodes, browserEvent);\n      var indexes = elements.map(function (e) {\n        return _this15.model.getListIndex(e);\n      }).filter(function (i) {\n        return i > -1;\n      });\n      this.view.setSelection(indexes, browserEvent, true);\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this.selection.get();\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(elements, browserEvent) {\n      var _this16 = this;\n\n      var nodes = elements.map(function (e) {\n        return _this16.model.getNode(e);\n      });\n      this.focus.set(nodes, browserEvent);\n      var indexes = elements.map(function (e) {\n        return _this16.model.getListIndex(e);\n      }).filter(function (i) {\n        return i > -1;\n      });\n      this.view.setFocus(indexes, browserEvent, true);\n    }\n  }, {\n    key: \"focusNext\",\n    value: function focusNext() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var browserEvent = arguments.length > 2 ? arguments[2] : undefined;\n      var filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.focusNavigationFilter;\n      this.view.focusNext(n, loop, browserEvent, filter);\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      return this.focus.get();\n    }\n  }, {\n    key: \"reveal\",\n    value: function reveal(location, relativeTop) {\n      this.model.expandTo(location);\n      var index = this.model.getListIndex(location);\n\n      if (index === -1) {\n        return;\n      }\n\n      this.view.reveal(index, relativeTop);\n    }\n    /**\r\n     * Returns the relative position of an element rendered in the list.\r\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\r\n     */\n\n  }, {\n    key: \"getRelativeTop\",\n    value: function getRelativeTop(location) {\n      var index = this.model.getListIndex(location);\n\n      if (index === -1) {\n        return null;\n      }\n\n      return this.view.getRelativeTop(index);\n    } // List\n\n  }, {\n    key: \"onLeftArrow\",\n    value: function onLeftArrow(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n\n      if (nodes.length === 0) {\n        return;\n      }\n\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var didChange = this.model.setCollapsed(location, true);\n\n      if (!didChange) {\n        var parentLocation = this.model.getParentNodeLocation(location);\n\n        if (!parentLocation) {\n          return;\n        }\n\n        var parentListIndex = this.model.getListIndex(parentLocation);\n        this.view.reveal(parentListIndex);\n        this.view.setFocus([parentListIndex]);\n      }\n    }\n  }, {\n    key: \"onRightArrow\",\n    value: function onRightArrow(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n\n      if (nodes.length === 0) {\n        return;\n      }\n\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var didChange = this.model.setCollapsed(location, false);\n\n      if (!didChange) {\n        if (!node.children.some(function (child) {\n          return child.visible;\n        })) {\n          return;\n        }\n\n        var _this$view$getFocus = this.view.getFocus(),\n            _this$view$getFocus2 = _slicedToArray(_this$view$getFocus, 1),\n            focusedIndex = _this$view$getFocus2[0];\n\n        var firstChildIndex = focusedIndex + 1;\n        this.view.reveal(firstChildIndex);\n        this.view.setFocus([firstChildIndex]);\n      }\n    }\n  }, {\n    key: \"onSpace\",\n    value: function onSpace(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n\n      if (nodes.length === 0) {\n        return;\n      }\n\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var recursive = e.browserEvent.altKey;\n      this.model.setCollapsed(location, undefined, recursive);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _dispose(this.disposables);\n\n      this.view.dispose();\n    }\n  }, {\n    key: \"onDidChangeFocus\",\n    get: function get() {\n      return this.eventBufferer.wrapEvent(this.focus.onDidChange);\n    }\n  }, {\n    key: \"onDidChangeSelection\",\n    get: function get() {\n      return this.eventBufferer.wrapEvent(this.selection.onDidChange);\n    }\n  }, {\n    key: \"onMouseDblClick\",\n    get: function get() {\n      return Event.map(this.view.onMouseDblClick, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onPointer\",\n    get: function get() {\n      return Event.map(this.view.onPointer, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onDidFocus\",\n    get: function get() {\n      return this.view.onDidFocus;\n    }\n  }, {\n    key: \"onDidChangeCollapseState\",\n    get: function get() {\n      return this.model.onDidChangeCollapseState;\n    }\n  }, {\n    key: \"expandOnlyOnDoubleClick\",\n    get: function get() {\n      var _a;\n\n      return (_a = this._options.expandOnlyOnDoubleClick) !== null && _a !== void 0 ? _a : false;\n    }\n  }, {\n    key: \"expandOnlyOnTwistieClick\",\n    get: function get() {\n      return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick;\n    }\n  }, {\n    key: \"onDidDispose\",\n    get: function get() {\n      return this.view.onDidDispose;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    }\n  }, {\n    key: \"scrollTop\",\n    get: function get() {\n      return this.view.scrollTop;\n    },\n    set: function set(scrollTop) {\n      this.view.scrollTop = scrollTop;\n    }\n  }]);\n\n  return AbstractTree;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"names":["dispose","Disposable","toDisposable","DisposableStore","List","MouseController","DefaultKeyboardNavigationDelegate","isInputElement","isMonacoEditor","append","$","getDomNodePagePosition","hasParentWithClass","createStyleSheet","clearNode","Event","Relay","Emitter","EventBufferer","StandardKeyboardEvent","TreeMouseEventTarget","StaticDND","DragAndDropData","range","equals","distinctES6","ElementsDragAndDropData","domEvent","fuzzyScore","FuzzyScore","getVisibleState","isFilterResult","localize","disposableTimeout","isMacintosh","clamp","SetMap","treeItemExpandedIcon","treeFilterOnTypeOnIcon","treeFilterOnTypeOffIcon","treeFilterClearIcon","TreeElementsDragAndDropData","data","elements","map","node","element","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","getDragURI","nodes","originalEvent","getDragLabel","undefined","onDragStart","targetNode","targetIndex","raw","result","onDragOver","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","length","getListRenderCount","Object","assign","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","e","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","enableKeyboardNavigation","simpleKeyboardNavigation","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","height","setDynamicHeight","RenderIndentGuides","EventCollection","onDidChange","_elements","forEach","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","disposables","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","_onDidChangeActiveNodes","container","twistie","contents","templateData","renderTemplate","index","set","style","paddingLeft","width","renderTwistie","renderElement","disposeElement","disposeTemplate","get","classList","remove","classNamesArray","twistieRendered","collapsible","add","toggle","collapsed","setAttribute","String","removeAttribute","target","disposableStore","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","children","_a","line","clear","TypeFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","parentVisibility","filter","visibility","Default","label","labels","Array","isArray","l","labelStr","toString","score","toLowerCase","filterOnType","pattern","TypeFilterController","view","keyboardNavigationDelegate","_enabled","_empty","_onDidChangeEmptyState","positionClassName","automaticKeyboardNavigation","triggered","_onDidChangePattern","enabledDisposables","domNode","draggable","messageDomNode","getHTMLElement","labelDomNode","controls","_filterOnType","filterOnTypeDomNode","type","checked","tabIndex","updateFilterOnTypeTitleAndIcon","onDidChangeFilterOnType","clearDomNode","cssSelector","title","keyboardNavigationEventFilter","onDidSplice","onDidSpliceModel","disable","enable","refilter","render","onEventOrInput","onKeyDown","chain","key","test","mightProducePrintableCharacter","keyCode","altKey","ctrlKey","metaKey","shiftKey","stopPropagation","preventDefault","event","onClear","any","onInput","MouseEvent","substr","browserEvent","parentElement","domFocus","fire","focusNext","isDefault","filterData","focus","getFocus","getRelativeTop","reveal","left","containerWidth","clientWidth","midContainerWidth","updatePosition","top","x","clientX","dataTransfer","dropEffect","className","document","CurrentDragAndDropData","noMatches","totalCount","matchCount","textContent","innerText","enabled","asTreeMouseEvent","Unknown","Twistie","Element","dfs","fn","child","Trait","_onDidChange","__forceEvent","_set","silent","_nodeSet","that","nodeSet","insertedNodes","deletedNodes","createNodeSet","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","wasDeleted","push","insertedNode","TreeNodeListMouseController","list","onTwistie","contains","offsetX","expandOnlyOnTwistieClick","detail","expandOnlyOnDoubleClick","location","recursive","TreeNodeList","user","virtualDelegate","renderers","focusTrait","selectionTrait","deleteCount","additionalFocus","additionalSelection","indexes","fromAPI","i","AbstractTree","_options","eventBufferer","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","selection","createModel","input","onDidModelSplice","bufferEvents","debounce","getNodes","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","typeFilterController","focusNavigationFilter","shouldAllowFocus","styleElement","Always","optionsUpdate","smoothScrolling","horizontalScrolling","layout","styles","suffix","domId","content","treeIndentGuidesStroke","transparent","join","isCollapsible","setCollapsible","setSelection","setFocus","n","loop","relativeTop","expandTo","getFocusedElements","didChange","parentLocation","parentListIndex","some","visible","focusedIndex","firstChildIndex","wrapEvent","onMouseDblClick","onPointer","onDidFocus","onDidDispose","scrollTop"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/tree.css';\r\nimport { dispose, Disposable, toDisposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport { List, MouseController, DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor } from '../list/listWidget.js';\r\nimport { append, $, getDomNodePagePosition, hasParentWithClass, createStyleSheet, clearNode } from '../../dom.js';\r\nimport { Event, Relay, Emitter, EventBufferer } from '../../../common/event.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { TreeMouseEventTarget } from './tree.js';\r\nimport { StaticDND, DragAndDropData } from '../../dnd.js';\r\nimport { range, equals, distinctES6 } from '../../../common/arrays.js';\r\nimport { ElementsDragAndDropData } from '../list/listView.js';\r\nimport { domEvent } from '../../event.js';\r\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\r\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { disposableTimeout } from '../../../common/async.js';\r\nimport { isMacintosh } from '../../../common/platform.js';\r\nimport { clamp } from '../../../common/numbers.js';\r\nimport { SetMap } from '../../../common/collections.js';\r\nimport { treeItemExpandedIcon, treeFilterOnTypeOnIcon, treeFilterOnTypeOffIcon, treeFilterClearIcon } from './treeIcons.js';\r\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\r\n    constructor(data) {\r\n        super(data.elements.map(node => node.element));\r\n        this.data = data;\r\n    }\r\n}\r\nfunction asTreeDragAndDropData(data) {\r\n    if (data instanceof ElementsDragAndDropData) {\r\n        return new TreeElementsDragAndDropData(data);\r\n    }\r\n    return data;\r\n}\r\nclass TreeNodeListDragAndDrop {\r\n    constructor(modelProvider, dnd) {\r\n        this.modelProvider = modelProvider;\r\n        this.dnd = dnd;\r\n        this.autoExpandDisposable = Disposable.None;\r\n    }\r\n    getDragURI(node) {\r\n        return this.dnd.getDragURI(node.element);\r\n    }\r\n    getDragLabel(nodes, originalEvent) {\r\n        if (this.dnd.getDragLabel) {\r\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\r\n        }\r\n        return undefined;\r\n    }\r\n    onDragStart(data, originalEvent) {\r\n        if (this.dnd.onDragStart) {\r\n            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\r\n        }\r\n    }\r\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\r\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\r\n        if (didChangeAutoExpandNode) {\r\n            this.autoExpandDisposable.dispose();\r\n            this.autoExpandNode = targetNode;\r\n        }\r\n        if (typeof targetNode === 'undefined') {\r\n            return result;\r\n        }\r\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\r\n            this.autoExpandDisposable = disposableTimeout(() => {\r\n                const model = this.modelProvider();\r\n                const ref = model.getNodeLocation(targetNode);\r\n                if (model.isCollapsed(ref)) {\r\n                    model.setCollapsed(ref, false);\r\n                }\r\n                this.autoExpandNode = undefined;\r\n            }, 500);\r\n        }\r\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\r\n            if (!raw) {\r\n                const accept = typeof result === 'boolean' ? result : result.accept;\r\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\r\n                return { accept, effect, feedback: [targetIndex] };\r\n            }\r\n            return result;\r\n        }\r\n        if (result.bubble === 1 /* Up */) {\r\n            const model = this.modelProvider();\r\n            const ref = model.getNodeLocation(targetNode);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            const parentNode = model.getNode(parentRef);\r\n            const parentIndex = parentRef && model.getListIndex(parentRef);\r\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\r\n        }\r\n        const model = this.modelProvider();\r\n        const ref = model.getNodeLocation(targetNode);\r\n        const start = model.getListIndex(ref);\r\n        const length = model.getListRenderCount(ref);\r\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\r\n    }\r\n    drop(data, targetNode, targetIndex, originalEvent) {\r\n        this.autoExpandDisposable.dispose();\r\n        this.autoExpandNode = undefined;\r\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n    }\r\n    onDragEnd(originalEvent) {\r\n        if (this.dnd.onDragEnd) {\r\n            this.dnd.onDragEnd(originalEvent);\r\n        }\r\n    }\r\n}\r\nfunction asListOptions(modelProvider, options) {\r\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\r\n            getId(el) {\r\n                return options.identityProvider.getId(el.element);\r\n            }\r\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\r\n            isSelectionSingleChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            },\r\n            isSelectionRangeChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            }\r\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\r\n                const model = modelProvider();\r\n                const ref = model.getNodeLocation(node);\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                const parentNode = model.getNode(parentRef);\r\n                return parentNode.visibleChildrenCount;\r\n            },\r\n            getPosInSet(node) {\r\n                return node.visibleChildIndex + 1;\r\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\r\n                return options.accessibilityProvider.isChecked(node.element);\r\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\r\n                return options.accessibilityProvider.getRole(node.element);\r\n            } : () => 'treeitem', getAriaLabel(e) {\r\n                return options.accessibilityProvider.getAriaLabel(e.element);\r\n            },\r\n            getWidgetAriaLabel() {\r\n                return options.accessibilityProvider.getWidgetAriaLabel();\r\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\r\n                return node.depth;\r\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\r\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\r\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\r\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\r\n            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation });\r\n}\r\nexport class ComposedTreeDelegate {\r\n    constructor(delegate) {\r\n        this.delegate = delegate;\r\n    }\r\n    getHeight(element) {\r\n        return this.delegate.getHeight(element.element);\r\n    }\r\n    getTemplateId(element) {\r\n        return this.delegate.getTemplateId(element.element);\r\n    }\r\n    hasDynamicHeight(element) {\r\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\r\n    }\r\n    setDynamicHeight(element, height) {\r\n        if (this.delegate.setDynamicHeight) {\r\n            this.delegate.setDynamicHeight(element.element, height);\r\n        }\r\n    }\r\n}\r\nexport var RenderIndentGuides;\r\n(function (RenderIndentGuides) {\r\n    RenderIndentGuides[\"None\"] = \"none\";\r\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\r\n    RenderIndentGuides[\"Always\"] = \"always\";\r\n})(RenderIndentGuides || (RenderIndentGuides = {}));\r\nclass EventCollection {\r\n    constructor(onDidChange, _elements = []) {\r\n        this._elements = _elements;\r\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements);\r\n    }\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n}\r\nclass TreeRenderer {\r\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\r\n        this.renderer = renderer;\r\n        this.modelProvider = modelProvider;\r\n        this.activeNodes = activeNodes;\r\n        this.renderedElements = new Map();\r\n        this.renderedNodes = new Map();\r\n        this.indent = TreeRenderer.DefaultIndent;\r\n        this.hideTwistiesOfChildlessElements = false;\r\n        this.shouldRenderIndentGuides = false;\r\n        this.renderedIndentGuides = new SetMap();\r\n        this.activeIndentNodes = new Set();\r\n        this.indentGuidesDisposable = Disposable.None;\r\n        this.disposables = new DisposableStore();\r\n        this.templateId = renderer.templateId;\r\n        this.updateOptions(options);\r\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\r\n        if (renderer.onDidChangeTwistieState) {\r\n            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\r\n        }\r\n    }\r\n    updateOptions(options = {}) {\r\n        if (typeof options.indent !== 'undefined') {\r\n            this.indent = clamp(options.indent, 0, 40);\r\n        }\r\n        if (typeof options.renderIndentGuides !== 'undefined') {\r\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\r\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\r\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\r\n                this.indentGuidesDisposable.dispose();\r\n                if (shouldRenderIndentGuides) {\r\n                    const disposables = new DisposableStore();\r\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\r\n                    this.indentGuidesDisposable = disposables;\r\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n                }\r\n            }\r\n        }\r\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\r\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\r\n        }\r\n    }\r\n    renderTemplate(container) {\r\n        const el = append(container, $('.monaco-tl-row'));\r\n        const indent = append(el, $('.monaco-tl-indent'));\r\n        const twistie = append(el, $('.monaco-tl-twistie'));\r\n        const contents = append(el, $('.monaco-tl-contents'));\r\n        const templateData = this.renderer.renderTemplate(contents);\r\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.set(node, { templateData, height });\r\n            this.renderedElements.set(node.element, node);\r\n        }\r\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\r\n        templateData.twistie.style.paddingLeft = `${indent}px`;\r\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\r\n        this.renderTwistie(node, templateData);\r\n        if (typeof height === 'number') {\r\n            this.renderIndentGuides(node, templateData);\r\n        }\r\n        this.renderer.renderElement(node, index, templateData.templateData, height);\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (this.renderer.disposeElement) {\r\n            this.renderer.disposeElement(node, index, templateData.templateData, height);\r\n        }\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.delete(node);\r\n            this.renderedElements.delete(node.element);\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.templateData);\r\n    }\r\n    onDidChangeTwistieState(element) {\r\n        const node = this.renderedElements.get(element);\r\n        if (!node) {\r\n            return;\r\n        }\r\n        this.onDidChangeNodeTwistieState(node);\r\n    }\r\n    onDidChangeNodeTwistieState(node) {\r\n        const data = this.renderedNodes.get(node);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.renderTwistie(node, data.templateData);\r\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n        this.renderIndentGuides(node, data.templateData);\r\n    }\r\n    renderTwistie(node, templateData) {\r\n        templateData.twistie.classList.remove(...treeItemExpandedIcon.classNamesArray);\r\n        let twistieRendered = false;\r\n        if (this.renderer.renderTwistie) {\r\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\r\n        }\r\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\r\n            if (!twistieRendered) {\r\n                templateData.twistie.classList.add(...treeItemExpandedIcon.classNamesArray);\r\n            }\r\n            templateData.twistie.classList.add('collapsible');\r\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\r\n        }\r\n        else {\r\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\r\n        }\r\n        if (node.collapsible) {\r\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\r\n        }\r\n        else {\r\n            templateData.container.removeAttribute('aria-expanded');\r\n        }\r\n    }\r\n    renderIndentGuides(target, templateData) {\r\n        clearNode(templateData.indent);\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const disposableStore = new DisposableStore();\r\n        const model = this.modelProvider();\r\n        let node = target;\r\n        while (true) {\r\n            const ref = model.getNodeLocation(node);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            if (!parentRef) {\r\n                break;\r\n            }\r\n            const parent = model.getNode(parentRef);\r\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\r\n            if (this.activeIndentNodes.has(parent)) {\r\n                guide.classList.add('active');\r\n            }\r\n            if (templateData.indent.childElementCount === 0) {\r\n                templateData.indent.appendChild(guide);\r\n            }\r\n            else {\r\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\r\n            }\r\n            this.renderedIndentGuides.add(parent, guide);\r\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\r\n            node = parent;\r\n        }\r\n        templateData.indentGuidesDisposable = disposableStore;\r\n    }\r\n    _onDidChangeActiveNodes(nodes) {\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const set = new Set();\r\n        const model = this.modelProvider();\r\n        nodes.forEach(node => {\r\n            const ref = model.getNodeLocation(node);\r\n            try {\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\r\n                    set.add(node);\r\n                }\r\n                else if (parentRef) {\r\n                    set.add(model.getNode(parentRef));\r\n                }\r\n            }\r\n            catch (_a) {\r\n                // noop\r\n            }\r\n        });\r\n        this.activeIndentNodes.forEach(node => {\r\n            if (!set.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\r\n            }\r\n        });\r\n        set.forEach(node => {\r\n            if (!this.activeIndentNodes.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\r\n            }\r\n        });\r\n        this.activeIndentNodes = set;\r\n    }\r\n    dispose() {\r\n        this.renderedNodes.clear();\r\n        this.renderedElements.clear();\r\n        this.indentGuidesDisposable.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nTreeRenderer.DefaultIndent = 8;\r\nclass TypeFilter {\r\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\r\n        this.tree = tree;\r\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\r\n        this._filter = _filter;\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n        this._pattern = '';\r\n        this._lowercasePattern = '';\r\n        this.disposables = new DisposableStore();\r\n        tree.onWillRefilter(this.reset, this, this.disposables);\r\n    }\r\n    get totalCount() { return this._totalCount; }\r\n    get matchCount() { return this._matchCount; }\r\n    set pattern(pattern) {\r\n        this._pattern = pattern;\r\n        this._lowercasePattern = pattern.toLowerCase();\r\n    }\r\n    filter(element, parentVisibility) {\r\n        if (this._filter) {\r\n            const result = this._filter.filter(element, parentVisibility);\r\n            if (this.tree.options.simpleKeyboardNavigation) {\r\n                return result;\r\n            }\r\n            let visibility;\r\n            if (typeof result === 'boolean') {\r\n                visibility = result ? 1 /* Visible */ : 0 /* Hidden */;\r\n            }\r\n            else if (isFilterResult(result)) {\r\n                visibility = getVisibleState(result.visibility);\r\n            }\r\n            else {\r\n                visibility = result;\r\n            }\r\n            if (visibility === 0 /* Hidden */) {\r\n                return false;\r\n            }\r\n        }\r\n        this._totalCount++;\r\n        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\r\n            this._matchCount++;\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\r\n        const labels = Array.isArray(label) ? label : [label];\r\n        for (const l of labels) {\r\n            const labelStr = l && l.toString();\r\n            if (typeof labelStr === 'undefined') {\r\n                return { data: FuzzyScore.Default, visibility: true };\r\n            }\r\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\r\n            if (score) {\r\n                this._matchCount++;\r\n                return labels.length === 1 ?\r\n                    { data: score, visibility: true } :\r\n                    { data: { label: labelStr, score: score }, visibility: true };\r\n            }\r\n        }\r\n        if (this.tree.options.filterOnType) {\r\n            return 2 /* Recurse */;\r\n        }\r\n        else {\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n    }\r\n    reset() {\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nclass TypeFilterController {\r\n    constructor(tree, model, view, filter, keyboardNavigationDelegate) {\r\n        this.tree = tree;\r\n        this.view = view;\r\n        this.filter = filter;\r\n        this.keyboardNavigationDelegate = keyboardNavigationDelegate;\r\n        this._enabled = false;\r\n        this._pattern = '';\r\n        this._empty = false;\r\n        this._onDidChangeEmptyState = new Emitter();\r\n        this.positionClassName = 'ne';\r\n        this.automaticKeyboardNavigation = true;\r\n        this.triggered = false;\r\n        this._onDidChangePattern = new Emitter();\r\n        this.enabledDisposables = new DisposableStore();\r\n        this.disposables = new DisposableStore();\r\n        this.domNode = $(`.monaco-list-type-filter.${this.positionClassName}`);\r\n        this.domNode.draggable = true;\r\n        domEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\r\n        this.messageDomNode = append(view.getHTMLElement(), $(`.monaco-list-type-filter-message`));\r\n        this.labelDomNode = append(this.domNode, $('span.label'));\r\n        const controls = append(this.domNode, $('.controls'));\r\n        this._filterOnType = !!tree.options.filterOnType;\r\n        this.filterOnTypeDomNode = append(controls, $('input.filter'));\r\n        this.filterOnTypeDomNode.type = 'checkbox';\r\n        this.filterOnTypeDomNode.checked = this._filterOnType;\r\n        this.filterOnTypeDomNode.tabIndex = -1;\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n        domEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\r\n        this.clearDomNode = append(controls, $('button.clear' + treeFilterClearIcon.cssSelector));\r\n        this.clearDomNode.tabIndex = -1;\r\n        this.clearDomNode.title = localize('clear', \"Clear\");\r\n        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\r\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\r\n        this.updateOptions(tree.options);\r\n    }\r\n    get enabled() { return this._enabled; }\r\n    get pattern() { return this._pattern; }\r\n    get filterOnType() { return this._filterOnType; }\r\n    updateOptions(options) {\r\n        if (options.simpleKeyboardNavigation) {\r\n            this.disable();\r\n        }\r\n        else {\r\n            this.enable();\r\n        }\r\n        if (typeof options.filterOnType !== 'undefined') {\r\n            this._filterOnType = !!options.filterOnType;\r\n            this.filterOnTypeDomNode.checked = this._filterOnType;\r\n        }\r\n        if (typeof options.automaticKeyboardNavigation !== 'undefined') {\r\n            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n        if (!this.automaticKeyboardNavigation) {\r\n            this.onEventOrInput('');\r\n        }\r\n    }\r\n    enable() {\r\n        if (this._enabled) {\r\n            return;\r\n        }\r\n        const onKeyDown = Event.chain(domEvent(this.view.getHTMLElement(), 'keydown'))\r\n            .filter(e => !isInputElement(e.target) || e.target === this.filterOnTypeDomNode)\r\n            .filter(e => e.key !== 'Dead' && !/^Media/.test(e.key))\r\n            .map(e => new StandardKeyboardEvent(e))\r\n            .filter(this.keyboardNavigationEventFilter || (() => true))\r\n            .filter(() => this.automaticKeyboardNavigation || this.triggered)\r\n            .filter(e => (this.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18 /* DownArrow */ || e.keyCode === 16 /* UpArrow */ || e.keyCode === 15 /* LeftArrow */ || e.keyCode === 17 /* RightArrow */)) || ((this.pattern.length > 0 || this.triggered) && ((e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)))\r\n            .forEach(e => { e.stopPropagation(); e.preventDefault(); })\r\n            .event;\r\n        const onClear = domEvent(this.clearDomNode, 'click');\r\n        Event.chain(Event.any(onKeyDown, onClear))\r\n            .event(this.onEventOrInput, this, this.enabledDisposables);\r\n        this.filter.pattern = '';\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = true;\r\n        this.triggered = false;\r\n    }\r\n    disable() {\r\n        if (!this._enabled) {\r\n            return;\r\n        }\r\n        this.domNode.remove();\r\n        this.enabledDisposables.clear();\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = false;\r\n        this.triggered = false;\r\n    }\r\n    onEventOrInput(e) {\r\n        if (typeof e === 'string') {\r\n            this.onInput(e);\r\n        }\r\n        else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey : e.ctrlKey))) {\r\n            this.onInput('');\r\n        }\r\n        else if (e.keyCode === 1 /* Backspace */) {\r\n            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\r\n        }\r\n        else {\r\n            this.onInput(this.pattern + e.browserEvent.key);\r\n        }\r\n    }\r\n    onInput(pattern) {\r\n        const container = this.view.getHTMLElement();\r\n        if (pattern && !this.domNode.parentElement) {\r\n            container.append(this.domNode);\r\n        }\r\n        else if (!pattern && this.domNode.parentElement) {\r\n            this.domNode.remove();\r\n            this.tree.domFocus();\r\n        }\r\n        this._pattern = pattern;\r\n        this._onDidChangePattern.fire(pattern);\r\n        this.filter.pattern = pattern;\r\n        this.tree.refilter();\r\n        if (pattern) {\r\n            this.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData));\r\n        }\r\n        const focus = this.tree.getFocus();\r\n        if (focus.length > 0) {\r\n            const element = focus[0];\r\n            if (this.tree.getRelativeTop(element) === null) {\r\n                this.tree.reveal(element, 0.5);\r\n            }\r\n        }\r\n        this.render();\r\n        if (!pattern) {\r\n            this.triggered = false;\r\n        }\r\n    }\r\n    onDragStart() {\r\n        const container = this.view.getHTMLElement();\r\n        const { left } = getDomNodePagePosition(container);\r\n        const containerWidth = container.clientWidth;\r\n        const midContainerWidth = containerWidth / 2;\r\n        const width = this.domNode.clientWidth;\r\n        const disposables = new DisposableStore();\r\n        let positionClassName = this.positionClassName;\r\n        const updatePosition = () => {\r\n            switch (positionClassName) {\r\n                case 'nw':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `4px`;\r\n                    break;\r\n                case 'ne':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `${containerWidth - width - 6}px`;\r\n                    break;\r\n            }\r\n        };\r\n        const onDragOver = (event) => {\r\n            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\r\n            const x = event.clientX - left;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n            if (x < midContainerWidth) {\r\n                positionClassName = 'nw';\r\n            }\r\n            else {\r\n                positionClassName = 'ne';\r\n            }\r\n            updatePosition();\r\n        };\r\n        const onDragEnd = () => {\r\n            this.positionClassName = positionClassName;\r\n            this.domNode.className = `monaco-list-type-filter ${this.positionClassName}`;\r\n            this.domNode.style.top = '';\r\n            this.domNode.style.left = '';\r\n            dispose(disposables);\r\n        };\r\n        updatePosition();\r\n        this.domNode.classList.remove(positionClassName);\r\n        this.domNode.classList.add('dragging');\r\n        disposables.add(toDisposable(() => this.domNode.classList.remove('dragging')));\r\n        domEvent(document, 'dragover')(onDragOver, null, disposables);\r\n        domEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\r\n        StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\r\n        disposables.add(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\r\n    }\r\n    onDidSpliceModel() {\r\n        if (!this._enabled || this.pattern.length === 0) {\r\n            return;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n    }\r\n    onDidChangeFilterOnType() {\r\n        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\r\n        this.tree.refilter();\r\n        this.tree.domFocus();\r\n        this.render();\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n    }\r\n    updateFilterOnTypeTitleAndIcon() {\r\n        if (this.filterOnType) {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\r\n        }\r\n        else {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\r\n        }\r\n    }\r\n    render() {\r\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\r\n        if (this.pattern && this.tree.options.filterOnType && noMatches) {\r\n            this.messageDomNode.textContent = localize('empty', \"No elements found\");\r\n            this._empty = true;\r\n        }\r\n        else {\r\n            this.messageDomNode.innerText = '';\r\n            this._empty = false;\r\n        }\r\n        this.domNode.classList.toggle('no-matches', noMatches);\r\n        this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\r\n        this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\r\n        this._onDidChangeEmptyState.fire(this._empty);\r\n    }\r\n    shouldAllowFocus(node) {\r\n        if (!this.enabled || !this.pattern || this.filterOnType) {\r\n            return true;\r\n        }\r\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\r\n            return true;\r\n        }\r\n        return !FuzzyScore.isDefault(node.filterData);\r\n    }\r\n    dispose() {\r\n        if (this._enabled) {\r\n            this.domNode.remove();\r\n            this.enabledDisposables.dispose();\r\n            this._enabled = false;\r\n            this.triggered = false;\r\n        }\r\n        this._onDidChangePattern.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nfunction asTreeMouseEvent(event) {\r\n    let target = TreeMouseEventTarget.Unknown;\r\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Twistie;\r\n    }\r\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Element;\r\n    }\r\n    return {\r\n        browserEvent: event.browserEvent,\r\n        element: event.element ? event.element.element : null,\r\n        target\r\n    };\r\n}\r\nfunction dfs(node, fn) {\r\n    fn(node);\r\n    node.children.forEach(child => dfs(child, fn));\r\n}\r\n/**\r\n * The trait concept needs to exist at the tree level, because collapsed\r\n * tree nodes will not be known by the list.\r\n */\r\nclass Trait {\r\n    constructor(identityProvider) {\r\n        this.identityProvider = identityProvider;\r\n        this.nodes = [];\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n    }\r\n    get nodeSet() {\r\n        if (!this._nodeSet) {\r\n            this._nodeSet = this.createNodeSet();\r\n        }\r\n        return this._nodeSet;\r\n    }\r\n    set(nodes, browserEvent) {\r\n        var _a;\r\n        if (!((_a = browserEvent) === null || _a === void 0 ? void 0 : _a.__forceEvent) && equals(this.nodes, nodes)) {\r\n            return;\r\n        }\r\n        this._set(nodes, false, browserEvent);\r\n    }\r\n    _set(nodes, silent, browserEvent) {\r\n        this.nodes = [...nodes];\r\n        this.elements = undefined;\r\n        this._nodeSet = undefined;\r\n        if (!silent) {\r\n            const that = this;\r\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\r\n        }\r\n    }\r\n    get() {\r\n        if (!this.elements) {\r\n            this.elements = this.nodes.map(node => node.element);\r\n        }\r\n        return [...this.elements];\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    has(node) {\r\n        return this.nodeSet.has(node);\r\n    }\r\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\r\n        if (!this.identityProvider) {\r\n            const set = this.createNodeSet();\r\n            const visit = (node) => set.delete(node);\r\n            deletedNodes.forEach(node => dfs(node, visit));\r\n            this.set([...set.values()]);\r\n            return;\r\n        }\r\n        const deletedNodesIdSet = new Set();\r\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\r\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\r\n        const insertedNodesMap = new Map();\r\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\r\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\r\n        const nodes = [];\r\n        for (const node of this.nodes) {\r\n            const id = this.identityProvider.getId(node.element).toString();\r\n            const wasDeleted = deletedNodesIdSet.has(id);\r\n            if (!wasDeleted) {\r\n                nodes.push(node);\r\n            }\r\n            else {\r\n                const insertedNode = insertedNodesMap.get(id);\r\n                if (insertedNode) {\r\n                    nodes.push(insertedNode);\r\n                }\r\n            }\r\n        }\r\n        this._set(nodes, true);\r\n    }\r\n    createNodeSet() {\r\n        const set = new Set();\r\n        for (const node of this.nodes) {\r\n            set.add(node);\r\n        }\r\n        return set;\r\n    }\r\n}\r\nclass TreeNodeListMouseController extends MouseController {\r\n    constructor(list, tree) {\r\n        super(list);\r\n        this.tree = tree;\r\n    }\r\n    onViewPointer(e) {\r\n        if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\r\n            return;\r\n        }\r\n        const node = e.element;\r\n        if (!node) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        const target = e.browserEvent.target;\r\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\r\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\r\n        let expandOnlyOnTwistieClick = false;\r\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\r\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\r\n        }\r\n        else {\r\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\r\n        }\r\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (this.tree.expandOnlyOnDoubleClick && e.browserEvent.detail !== 2 && !onTwistie) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (node.collapsible) {\r\n            const model = this.tree.model; // internal\r\n            const location = model.getNodeLocation(node);\r\n            const recursive = e.browserEvent.altKey;\r\n            model.setCollapsed(location, undefined, recursive);\r\n            if (expandOnlyOnTwistieClick && onTwistie) {\r\n                return;\r\n            }\r\n        }\r\n        super.onViewPointer(e);\r\n    }\r\n    onDoubleClick(e) {\r\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\r\n        if (onTwistie) {\r\n            return;\r\n        }\r\n        super.onDoubleClick(e);\r\n    }\r\n}\r\n/**\r\n * We use this List subclass to restore selection and focus as nodes\r\n * get rendered in the list, possibly due to a node expand() call.\r\n */\r\nclass TreeNodeList extends List {\r\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {\r\n        super(user, container, virtualDelegate, renderers, options);\r\n        this.focusTrait = focusTrait;\r\n        this.selectionTrait = selectionTrait;\r\n    }\r\n    createMouseController(options) {\r\n        return new TreeNodeListMouseController(this, options.tree);\r\n    }\r\n    splice(start, deleteCount, elements = []) {\r\n        super.splice(start, deleteCount, elements);\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n        const additionalFocus = [];\r\n        const additionalSelection = [];\r\n        elements.forEach((node, index) => {\r\n            if (this.focusTrait.has(node)) {\r\n                additionalFocus.push(start + index);\r\n            }\r\n            if (this.selectionTrait.has(node)) {\r\n                additionalSelection.push(start + index);\r\n            }\r\n        });\r\n        if (additionalFocus.length > 0) {\r\n            super.setFocus(distinctES6([...super.getFocus(), ...additionalFocus]));\r\n        }\r\n        if (additionalSelection.length > 0) {\r\n            super.setSelection(distinctES6([...super.getSelection(), ...additionalSelection]));\r\n        }\r\n    }\r\n    setFocus(indexes, browserEvent, fromAPI = false) {\r\n        super.setFocus(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n    setSelection(indexes, browserEvent, fromAPI = false) {\r\n        super.setSelection(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n}\r\nexport class AbstractTree {\r\n    constructor(user, container, delegate, renderers, _options = {}) {\r\n        this._options = _options;\r\n        this.eventBufferer = new EventBufferer();\r\n        this.disposables = new DisposableStore();\r\n        this._onWillRefilter = new Emitter();\r\n        this.onWillRefilter = this._onWillRefilter.event;\r\n        this._onDidUpdateOptions = new Emitter();\r\n        const treeDelegate = new ComposedTreeDelegate(delegate);\r\n        const onDidChangeCollapseStateRelay = new Relay();\r\n        const onDidChangeActiveNodes = new Relay();\r\n        const activeNodes = new EventCollection(onDidChangeActiveNodes.event);\r\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\r\n        for (let r of this.renderers) {\r\n            this.disposables.add(r);\r\n        }\r\n        let filter;\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\r\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\r\n            this.disposables.add(filter);\r\n        }\r\n        this.focus = new Trait(_options.identityProvider);\r\n        this.selection = new Trait(_options.identityProvider);\r\n        this.view = new TreeNodeList(user, container, treeDelegate, this.renderers, this.focus, this.selection, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\r\n        this.model = this.createModel(user, this.view, _options);\r\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\r\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\r\n            this.eventBufferer.bufferEvents(() => {\r\n                this.focus.onDidModelSplice(e);\r\n                this.selection.onDidModelSplice(e);\r\n            });\r\n        });\r\n        // Make sure the `forEach` always runs\r\n        onDidModelSplice(() => null, null, this.disposables);\r\n        // Active nodes can change when the model changes or when focus or selection change.\r\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\r\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\r\n        // a nice to have UI feature.\r\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\r\n            .debounce(() => null, 0)\r\n            .map(() => {\r\n            const set = new Set();\r\n            for (const node of this.focus.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            for (const node of this.selection.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            return [...set.values()];\r\n        }).event;\r\n        if (_options.keyboardSupport !== false) {\r\n            const onKeyDown = Event.chain(this.view.onKeyDown)\r\n                .filter(e => !isInputElement(e.target))\r\n                .map(e => new StandardKeyboardEvent(e));\r\n            onKeyDown.filter(e => e.keyCode === 15 /* LeftArrow */).on(this.onLeftArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 17 /* RightArrow */).on(this.onRightArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 10 /* Space */).on(this.onSpace, this, this.disposables);\r\n        }\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            const delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\r\n            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, delegate);\r\n            this.focusNavigationFilter = node => this.typeFilterController.shouldAllowFocus(node);\r\n            this.disposables.add(this.typeFilterController);\r\n        }\r\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\r\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\r\n    get onMouseDblClick() { return Event.map(this.view.onMouseDblClick, asTreeMouseEvent); }\r\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\r\n    get onDidFocus() { return this.view.onDidFocus; }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    get expandOnlyOnDoubleClick() { var _a; return (_a = this._options.expandOnlyOnDoubleClick) !== null && _a !== void 0 ? _a : false; }\r\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick; }\r\n    get onDidDispose() { return this.view.onDidDispose; }\r\n    updateOptions(optionsUpdate = {}) {\r\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\r\n        for (const renderer of this.renderers) {\r\n            renderer.updateOptions(optionsUpdate);\r\n        }\r\n        this.view.updateOptions({\r\n            enableKeyboardNavigation: this._options.simpleKeyboardNavigation,\r\n            automaticKeyboardNavigation: this._options.automaticKeyboardNavigation,\r\n            smoothScrolling: this._options.smoothScrolling,\r\n            horizontalScrolling: this._options.horizontalScrolling\r\n        });\r\n        if (this.typeFilterController) {\r\n            this.typeFilterController.updateOptions(this._options);\r\n        }\r\n        this._onDidUpdateOptions.fire(this._options);\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    // Widget\r\n    getHTMLElement() {\r\n        return this.view.getHTMLElement();\r\n    }\r\n    get scrollTop() {\r\n        return this.view.scrollTop;\r\n    }\r\n    set scrollTop(scrollTop) {\r\n        this.view.scrollTop = scrollTop;\r\n    }\r\n    domFocus() {\r\n        this.view.domFocus();\r\n    }\r\n    layout(height, width) {\r\n        this.view.layout(height, width);\r\n    }\r\n    style(styles) {\r\n        const suffix = `.${this.view.domId}`;\r\n        const content = [];\r\n        if (styles.treeIndentGuidesStroke) {\r\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\r\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\r\n        }\r\n        this.styleElement.textContent = content.join('\\n');\r\n        this.view.style(styles);\r\n    }\r\n    collapse(location, recursive = false) {\r\n        return this.model.setCollapsed(location, true, recursive);\r\n    }\r\n    expand(location, recursive = false) {\r\n        return this.model.setCollapsed(location, false, recursive);\r\n    }\r\n    isCollapsible(location) {\r\n        return this.model.isCollapsible(location);\r\n    }\r\n    setCollapsible(location, collapsible) {\r\n        return this.model.setCollapsible(location, collapsible);\r\n    }\r\n    isCollapsed(location) {\r\n        return this.model.isCollapsed(location);\r\n    }\r\n    refilter() {\r\n        this._onWillRefilter.fire(undefined);\r\n        this.model.refilter();\r\n    }\r\n    setSelection(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.selection.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setSelection(indexes, browserEvent, true);\r\n    }\r\n    getSelection() {\r\n        return this.selection.get();\r\n    }\r\n    setFocus(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.focus.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setFocus(indexes, browserEvent, true);\r\n    }\r\n    focusNext(n = 1, loop = false, browserEvent, filter = this.focusNavigationFilter) {\r\n        this.view.focusNext(n, loop, browserEvent, filter);\r\n    }\r\n    getFocus() {\r\n        return this.focus.get();\r\n    }\r\n    reveal(location, relativeTop) {\r\n        this.model.expandTo(location);\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        this.view.reveal(index, relativeTop);\r\n    }\r\n    /**\r\n     * Returns the relative position of an element rendered in the list.\r\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\r\n     */\r\n    getRelativeTop(location) {\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return null;\r\n        }\r\n        return this.view.getRelativeTop(index);\r\n    }\r\n    // List\r\n    onLeftArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, true);\r\n        if (!didChange) {\r\n            const parentLocation = this.model.getParentNodeLocation(location);\r\n            if (!parentLocation) {\r\n                return;\r\n            }\r\n            const parentListIndex = this.model.getListIndex(parentLocation);\r\n            this.view.reveal(parentListIndex);\r\n            this.view.setFocus([parentListIndex]);\r\n        }\r\n    }\r\n    onRightArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, false);\r\n        if (!didChange) {\r\n            if (!node.children.some(child => child.visible)) {\r\n                return;\r\n            }\r\n            const [focusedIndex] = this.view.getFocus();\r\n            const firstChildIndex = focusedIndex + 1;\r\n            this.view.reveal(firstChildIndex);\r\n            this.view.setFocus([firstChildIndex]);\r\n        }\r\n    }\r\n    onSpace(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const recursive = e.browserEvent.altKey;\r\n        this.model.setCollapsed(location, undefined, recursive);\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n        this.view.dispose();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}