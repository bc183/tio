{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport * as browser from '../../../../base/browser/browser.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorInactiveSelection, editorSelectionBackground, editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\n\nvar HorizontalRangeWithStyle = function HorizontalRangeWithStyle(other) {\n  _classCallCheck(this, HorizontalRangeWithStyle);\n\n  this.left = other.left;\n  this.width = other.width;\n  this.startStyle = null;\n  this.endStyle = null;\n};\n\nvar LineVisibleRangesWithStyle = function LineVisibleRangesWithStyle(lineNumber, ranges) {\n  _classCallCheck(this, LineVisibleRangesWithStyle);\n\n  this.lineNumber = lineNumber;\n  this.ranges = ranges;\n};\n\nfunction toStyledRange(item) {\n  return new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item) {\n  return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n} // TODO@Alex: Remove this once IE11 fixes Bug #524217\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\n\n\nvar isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeLegacy;\nexport var SelectionsOverlay = /*#__PURE__*/function (_DynamicViewOverlay) {\n  _inherits(SelectionsOverlay, _DynamicViewOverlay);\n\n  var _super = _createSuper(SelectionsOverlay);\n\n  function SelectionsOverlay(context) {\n    var _this;\n\n    _classCallCheck(this, SelectionsOverlay);\n\n    _this = _super.call(this);\n    _this._previousFrameVisibleRangesWithStyle = [];\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    _this._lineHeight = options.get(53\n    /* lineHeight */\n    );\n    _this._roundedSelection = options.get(85\n    /* roundedSelection */\n    );\n    _this._typicalHalfwidthCharacterWidth = options.get(38\n    /* fontInfo */\n    ).typicalHalfwidthCharacterWidth;\n    _this._selections = [];\n    _this._renderResult = null;\n\n    _this._context.addEventHandler(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(SelectionsOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n\n      this._renderResult = null;\n\n      _get(_getPrototypeOf(SelectionsOverlay.prototype), \"dispose\", this).call(this);\n    } // --- begin event handlers\n\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      this._lineHeight = options.get(53\n      /* lineHeight */\n      );\n      this._roundedSelection = options.get(85\n      /* roundedSelection */\n      );\n      this._typicalHalfwidthCharacterWidth = options.get(38\n      /* fontInfo */\n      ).typicalHalfwidthCharacterWidth;\n      return true;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._selections = e.selections.slice(0);\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      // true for inline decorations that can end up relayouting text\n      return true; //e.inlineDecorationsChanged;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    } // --- end event handlers\n\n  }, {\n    key: \"_visibleRangesHaveGaps\",\n    value: function _visibleRangesHaveGaps(linesVisibleRanges) {\n      for (var i = 0, len = linesVisibleRanges.length; i < len; i++) {\n        var lineVisibleRanges = linesVisibleRanges[i];\n\n        if (lineVisibleRanges.ranges.length > 1) {\n          // There are two ranges on the same line\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_enrichVisibleRangesWithStyle\",\n    value: function _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n      var epsilon = this._typicalHalfwidthCharacterWidth / 4;\n      var previousFrameTop = null;\n      var previousFrameBottom = null;\n\n      if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n        var topLineNumber = linesVisibleRanges[0].lineNumber;\n\n        if (topLineNumber === viewport.startLineNumber) {\n          for (var i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n            if (previousFrame[i].lineNumber === topLineNumber) {\n              previousFrameTop = previousFrame[i].ranges[0];\n            }\n          }\n        }\n\n        var bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\n        if (bottomLineNumber === viewport.endLineNumber) {\n          for (var _i = previousFrame.length - 1; !previousFrameBottom && _i >= 0; _i--) {\n            if (previousFrame[_i].lineNumber === bottomLineNumber) {\n              previousFrameBottom = previousFrame[_i].ranges[0];\n            }\n          }\n        }\n\n        if (previousFrameTop && !previousFrameTop.startStyle) {\n          previousFrameTop = null;\n        }\n\n        if (previousFrameBottom && !previousFrameBottom.startStyle) {\n          previousFrameBottom = null;\n        }\n      }\n\n      for (var _i2 = 0, len = linesVisibleRanges.length; _i2 < len; _i2++) {\n        // We know for a fact that there is precisely one range on each line\n        var curLineRange = linesVisibleRanges[_i2].ranges[0];\n        var curLeft = curLineRange.left;\n        var curRight = curLineRange.left + curLineRange.width;\n        var startStyle = {\n          top: 0\n          /* EXTERN */\n          ,\n          bottom: 0\n          /* EXTERN */\n\n        };\n        var endStyle = {\n          top: 0\n          /* EXTERN */\n          ,\n          bottom: 0\n          /* EXTERN */\n\n        };\n\n        if (_i2 > 0) {\n          // Look above\n          var prevLeft = linesVisibleRanges[_i2 - 1].ranges[0].left;\n          var prevRight = linesVisibleRanges[_i2 - 1].ranges[0].left + linesVisibleRanges[_i2 - 1].ranges[0].width;\n\n          if (abs(curLeft - prevLeft) < epsilon) {\n            startStyle.top = 2\n            /* FLAT */\n            ;\n          } else if (curLeft > prevLeft) {\n            startStyle.top = 1\n            /* INTERN */\n            ;\n          }\n\n          if (abs(curRight - prevRight) < epsilon) {\n            endStyle.top = 2\n            /* FLAT */\n            ;\n          } else if (prevLeft < curRight && curRight < prevRight) {\n            endStyle.top = 1\n            /* INTERN */\n            ;\n          }\n        } else if (previousFrameTop) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.top = previousFrameTop.startStyle.top;\n          endStyle.top = previousFrameTop.endStyle.top;\n        }\n\n        if (_i2 + 1 < len) {\n          // Look below\n          var nextLeft = linesVisibleRanges[_i2 + 1].ranges[0].left;\n          var nextRight = linesVisibleRanges[_i2 + 1].ranges[0].left + linesVisibleRanges[_i2 + 1].ranges[0].width;\n\n          if (abs(curLeft - nextLeft) < epsilon) {\n            startStyle.bottom = 2\n            /* FLAT */\n            ;\n          } else if (nextLeft < curLeft && curLeft < nextRight) {\n            startStyle.bottom = 1\n            /* INTERN */\n            ;\n          }\n\n          if (abs(curRight - nextRight) < epsilon) {\n            endStyle.bottom = 2\n            /* FLAT */\n            ;\n          } else if (curRight < nextRight) {\n            endStyle.bottom = 1\n            /* INTERN */\n            ;\n          }\n        } else if (previousFrameBottom) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.bottom = previousFrameBottom.startStyle.bottom;\n          endStyle.bottom = previousFrameBottom.endStyle.bottom;\n        }\n\n        curLineRange.startStyle = startStyle;\n        curLineRange.endStyle = endStyle;\n      }\n    }\n  }, {\n    key: \"_getVisibleRangesWithStyle\",\n    value: function _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n      var _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n\n      var linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\n      var visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n\n      if (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\n        this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n      } // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\n\n      return linesVisibleRanges;\n    }\n  }, {\n    key: \"_createSelectionPiece\",\n    value: function _createSelectionPiece(top, height, className, left, width) {\n      return '<div class=\"cslr ' + className + '\" style=\"top:' + top.toString() + 'px;left:' + left.toString() + 'px;width:' + width.toString() + 'px;height:' + height + 'px;\"></div>';\n    }\n  }, {\n    key: \"_actualRenderOneSelection\",\n    value: function _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n      if (visibleRanges.length === 0) {\n        return;\n      }\n\n      var visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n\n      var fullLineHeight = this._lineHeight.toString();\n\n      var reducedLineHeight = (this._lineHeight - 1).toString();\n      var firstLineNumber = visibleRanges[0].lineNumber;\n      var lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n\n      for (var i = 0, len = visibleRanges.length; i < len; i++) {\n        var lineVisibleRanges = visibleRanges[i];\n        var lineNumber = lineVisibleRanges.lineNumber;\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var lineHeight = hasMultipleSelections ? lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight : fullLineHeight;\n        var top = hasMultipleSelections ? lineNumber === firstLineNumber ? 1 : 0 : 0;\n        var innerCornerOutput = '';\n        var restOfSelectionOutput = '';\n\n        for (var j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n          var visibleRange = lineVisibleRanges.ranges[j];\n\n          if (visibleRangesHaveStyle) {\n            var startStyle = visibleRange.startStyle;\n            var endStyle = visibleRange.endStyle;\n\n            if (startStyle.top === 1\n            /* INTERN */\n            || startStyle.bottom === 1\n            /* INTERN */\n            ) {\n                // Reverse rounded corner to the left\n                // First comes the selection (blue layer)\n                innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH); // Second comes the background (white layer) with inverse border radius\n\n                var _className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\n                if (startStyle.top === 1\n                /* INTERN */\n                ) {\n                    _className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                  }\n\n                if (startStyle.bottom === 1\n                /* INTERN */\n                ) {\n                    _className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                  }\n\n                innerCornerOutput += this._createSelectionPiece(top, lineHeight, _className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              }\n\n            if (endStyle.top === 1\n            /* INTERN */\n            || endStyle.bottom === 1\n            /* INTERN */\n            ) {\n                // Reverse rounded corner to the right\n                // First comes the selection (blue layer)\n                innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH); // Second comes the background (white layer) with inverse border radius\n\n                var _className2 = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\n                if (endStyle.top === 1\n                /* INTERN */\n                ) {\n                    _className2 += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                  }\n\n                if (endStyle.bottom === 1\n                /* INTERN */\n                ) {\n                    _className2 += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                  }\n\n                innerCornerOutput += this._createSelectionPiece(top, lineHeight, _className2, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              }\n          }\n\n          var className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\n          if (visibleRangesHaveStyle) {\n            var _startStyle = visibleRange.startStyle;\n            var _endStyle = visibleRange.endStyle;\n\n            if (_startStyle.top === 0\n            /* EXTERN */\n            ) {\n                className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n              }\n\n            if (_startStyle.bottom === 0\n            /* EXTERN */\n            ) {\n                className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n              }\n\n            if (_endStyle.top === 0\n            /* EXTERN */\n            ) {\n                className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n              }\n\n            if (_endStyle.bottom === 0\n            /* EXTERN */\n            ) {\n                className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n              }\n          }\n\n          restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n        }\n\n        output2[lineIndex][0] += innerCornerOutput;\n        output2[lineIndex][1] += restOfSelectionOutput;\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      // Build HTML for inner corners separate from HTML for the rest of selections,\n      // as the inner corner HTML can interfere with that of other selections.\n      // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n      var output = [];\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        output[lineIndex] = ['', ''];\n      }\n\n      var thisFrameVisibleRangesWithStyle = [];\n\n      for (var i = 0, len = this._selections.length; i < len; i++) {\n        var selection = this._selections[i];\n\n        if (selection.isEmpty()) {\n          thisFrameVisibleRangesWithStyle[i] = null;\n          continue;\n        }\n\n        var visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n\n        thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\n        this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n      }\n\n      this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n      this._renderResult = output.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            internalCorners = _ref2[0],\n            restOfSelection = _ref2[1];\n\n        return internalCorners + restOfSelection;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n\n      var lineIndex = lineNumber - startLineNumber;\n\n      if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n        return '';\n      }\n\n      return this._renderResult[lineIndex];\n    }\n  }]);\n\n  return SelectionsOverlay;\n}(DynamicViewOverlay);\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant(function (theme, collector) {\n  var editorSelectionColor = theme.getColor(editorSelectionBackground);\n\n  if (editorSelectionColor) {\n    collector.addRule(\".monaco-editor .focused .selected-text { background-color: \".concat(editorSelectionColor, \"; }\"));\n  }\n\n  var editorInactiveSelectionColor = theme.getColor(editorInactiveSelection);\n\n  if (editorInactiveSelectionColor) {\n    collector.addRule(\".monaco-editor .selected-text { background-color: \".concat(editorInactiveSelectionColor, \"; }\"));\n  }\n\n  var editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n\n  if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n    collector.addRule(\".monaco-editor .view-line span.inline-selected-text { color: \".concat(editorSelectionForegroundColor, \"; }\"));\n  }\n});\n\nfunction abs(n) {\n  return n < 0 ? -n : n;\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js"],"names":["browser","DynamicViewOverlay","editorInactiveSelection","editorSelectionBackground","editorSelectionForeground","registerThemingParticipant","HorizontalRangeWithStyle","other","left","width","startStyle","endStyle","LineVisibleRangesWithStyle","lineNumber","ranges","toStyledRange","item","toStyled","map","isIEWithZoomingIssuesNearRoundedBorders","isEdgeLegacy","SelectionsOverlay","context","_previousFrameVisibleRangesWithStyle","_context","options","configuration","_lineHeight","get","_roundedSelection","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_selections","_renderResult","addEventHandler","removeEventHandler","e","selections","slice","scrollTopChanged","linesVisibleRanges","i","len","length","lineVisibleRanges","viewport","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","startLineNumber","bottomLineNumber","endLineNumber","curLineRange","curLeft","curRight","top","bottom","prevLeft","prevRight","abs","nextLeft","nextRight","selection","ctx","_linesVisibleRanges","linesVisibleRangesForRange","visibleRangesHaveGaps","_visibleRangesHaveGaps","_enrichVisibleRangesWithStyle","visibleRange","height","className","toString","output2","visibleStartLineNumber","hasMultipleSelections","visibleRanges","visibleRangesHaveStyle","fullLineHeight","reducedLineHeight","firstLineNumber","lastLineNumber","lineIndex","lineHeight","innerCornerOutput","restOfSelectionOutput","j","lenJ","_createSelectionPiece","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","output","visibleEndLineNumber","thisFrameVisibleRangesWithStyle","isEmpty","visibleRangesWithStyle","_getVisibleRangesWithStyle","_actualRenderOneSelection","internalCorners","restOfSelection","theme","collector","editorSelectionColor","getColor","addRule","editorInactiveSelectionColor","editorSelectionForegroundColor","isTransparent","n"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './selections.css';\r\nimport * as browser from '../../../../base/browser/browser.js';\r\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\r\nimport { editorInactiveSelection, editorSelectionBackground, editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nclass HorizontalRangeWithStyle {\r\n    constructor(other) {\r\n        this.left = other.left;\r\n        this.width = other.width;\r\n        this.startStyle = null;\r\n        this.endStyle = null;\r\n    }\r\n}\r\nclass LineVisibleRangesWithStyle {\r\n    constructor(lineNumber, ranges) {\r\n        this.lineNumber = lineNumber;\r\n        this.ranges = ranges;\r\n    }\r\n}\r\nfunction toStyledRange(item) {\r\n    return new HorizontalRangeWithStyle(item);\r\n}\r\nfunction toStyled(item) {\r\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\r\n}\r\n// TODO@Alex: Remove this once IE11 fixes Bug #524217\r\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\r\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\r\nconst isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeLegacy;\r\nexport class SelectionsOverlay extends DynamicViewOverlay {\r\n    constructor(context) {\r\n        super();\r\n        this._previousFrameVisibleRangesWithStyle = [];\r\n        this._context = context;\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._roundedSelection = options.get(85 /* roundedSelection */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        this._selections = [];\r\n        this._renderResult = null;\r\n        this._context.addEventHandler(this);\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        this._renderResult = null;\r\n        super.dispose();\r\n    }\r\n    // --- begin event handlers\r\n    onConfigurationChanged(e) {\r\n        const options = this._context.configuration.options;\r\n        this._lineHeight = options.get(53 /* lineHeight */);\r\n        this._roundedSelection = options.get(85 /* roundedSelection */);\r\n        this._typicalHalfwidthCharacterWidth = options.get(38 /* fontInfo */).typicalHalfwidthCharacterWidth;\r\n        return true;\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._selections = e.selections.slice(0);\r\n        return true;\r\n    }\r\n    onDecorationsChanged(e) {\r\n        // true for inline decorations that can end up relayouting text\r\n        return true; //e.inlineDecorationsChanged;\r\n    }\r\n    onFlushed(e) {\r\n        return true;\r\n    }\r\n    onLinesChanged(e) {\r\n        return true;\r\n    }\r\n    onLinesDeleted(e) {\r\n        return true;\r\n    }\r\n    onLinesInserted(e) {\r\n        return true;\r\n    }\r\n    onScrollChanged(e) {\r\n        return e.scrollTopChanged;\r\n    }\r\n    onZonesChanged(e) {\r\n        return true;\r\n    }\r\n    // --- end event handlers\r\n    _visibleRangesHaveGaps(linesVisibleRanges) {\r\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\r\n            const lineVisibleRanges = linesVisibleRanges[i];\r\n            if (lineVisibleRanges.ranges.length > 1) {\r\n                // There are two ranges on the same line\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\r\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\r\n        let previousFrameTop = null;\r\n        let previousFrameBottom = null;\r\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\r\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\r\n            if (topLineNumber === viewport.startLineNumber) {\r\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\r\n                    if (previousFrame[i].lineNumber === topLineNumber) {\r\n                        previousFrameTop = previousFrame[i].ranges[0];\r\n                    }\r\n                }\r\n            }\r\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\r\n            if (bottomLineNumber === viewport.endLineNumber) {\r\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\r\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\r\n                        previousFrameBottom = previousFrame[i].ranges[0];\r\n                    }\r\n                }\r\n            }\r\n            if (previousFrameTop && !previousFrameTop.startStyle) {\r\n                previousFrameTop = null;\r\n            }\r\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\r\n                previousFrameBottom = null;\r\n            }\r\n        }\r\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\r\n            // We know for a fact that there is precisely one range on each line\r\n            const curLineRange = linesVisibleRanges[i].ranges[0];\r\n            const curLeft = curLineRange.left;\r\n            const curRight = curLineRange.left + curLineRange.width;\r\n            const startStyle = {\r\n                top: 0 /* EXTERN */,\r\n                bottom: 0 /* EXTERN */\r\n            };\r\n            const endStyle = {\r\n                top: 0 /* EXTERN */,\r\n                bottom: 0 /* EXTERN */\r\n            };\r\n            if (i > 0) {\r\n                // Look above\r\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\r\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\r\n                if (abs(curLeft - prevLeft) < epsilon) {\r\n                    startStyle.top = 2 /* FLAT */;\r\n                }\r\n                else if (curLeft > prevLeft) {\r\n                    startStyle.top = 1 /* INTERN */;\r\n                }\r\n                if (abs(curRight - prevRight) < epsilon) {\r\n                    endStyle.top = 2 /* FLAT */;\r\n                }\r\n                else if (prevLeft < curRight && curRight < prevRight) {\r\n                    endStyle.top = 1 /* INTERN */;\r\n                }\r\n            }\r\n            else if (previousFrameTop) {\r\n                // Accept some hiccups near the viewport edges to save on repaints\r\n                startStyle.top = previousFrameTop.startStyle.top;\r\n                endStyle.top = previousFrameTop.endStyle.top;\r\n            }\r\n            if (i + 1 < len) {\r\n                // Look below\r\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\r\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\r\n                if (abs(curLeft - nextLeft) < epsilon) {\r\n                    startStyle.bottom = 2 /* FLAT */;\r\n                }\r\n                else if (nextLeft < curLeft && curLeft < nextRight) {\r\n                    startStyle.bottom = 1 /* INTERN */;\r\n                }\r\n                if (abs(curRight - nextRight) < epsilon) {\r\n                    endStyle.bottom = 2 /* FLAT */;\r\n                }\r\n                else if (curRight < nextRight) {\r\n                    endStyle.bottom = 1 /* INTERN */;\r\n                }\r\n            }\r\n            else if (previousFrameBottom) {\r\n                // Accept some hiccups near the viewport edges to save on repaints\r\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\r\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\r\n            }\r\n            curLineRange.startStyle = startStyle;\r\n            curLineRange.endStyle = endStyle;\r\n        }\r\n    }\r\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\r\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\r\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\r\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\r\n        if (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\r\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\r\n        }\r\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\r\n        return linesVisibleRanges;\r\n    }\r\n    _createSelectionPiece(top, height, className, left, width) {\r\n        return ('<div class=\"cslr '\r\n            + className\r\n            + '\" style=\"top:'\r\n            + top.toString()\r\n            + 'px;left:'\r\n            + left.toString()\r\n            + 'px;width:'\r\n            + width.toString()\r\n            + 'px;height:'\r\n            + height\r\n            + 'px;\"></div>');\r\n    }\r\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\r\n        if (visibleRanges.length === 0) {\r\n            return;\r\n        }\r\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\r\n        const fullLineHeight = (this._lineHeight).toString();\r\n        const reducedLineHeight = (this._lineHeight - 1).toString();\r\n        const firstLineNumber = visibleRanges[0].lineNumber;\r\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\r\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\r\n            const lineVisibleRanges = visibleRanges[i];\r\n            const lineNumber = lineVisibleRanges.lineNumber;\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            const lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\r\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\r\n            let innerCornerOutput = '';\r\n            let restOfSelectionOutput = '';\r\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\r\n                const visibleRange = lineVisibleRanges.ranges[j];\r\n                if (visibleRangesHaveStyle) {\r\n                    const startStyle = visibleRange.startStyle;\r\n                    const endStyle = visibleRange.endStyle;\r\n                    if (startStyle.top === 1 /* INTERN */ || startStyle.bottom === 1 /* INTERN */) {\r\n                        // Reverse rounded corner to the left\r\n                        // First comes the selection (blue layer)\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                        // Second comes the background (white layer) with inverse border radius\r\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\r\n                        if (startStyle.top === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\r\n                        }\r\n                        if (startStyle.bottom === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\r\n                        }\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                    }\r\n                    if (endStyle.top === 1 /* INTERN */ || endStyle.bottom === 1 /* INTERN */) {\r\n                        // Reverse rounded corner to the right\r\n                        // First comes the selection (blue layer)\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                        // Second comes the background (white layer) with inverse border radius\r\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\r\n                        if (endStyle.top === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\r\n                        }\r\n                        if (endStyle.bottom === 1 /* INTERN */) {\r\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\r\n                        }\r\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\r\n                    }\r\n                }\r\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\r\n                if (visibleRangesHaveStyle) {\r\n                    const startStyle = visibleRange.startStyle;\r\n                    const endStyle = visibleRange.endStyle;\r\n                    if (startStyle.top === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\r\n                    }\r\n                    if (startStyle.bottom === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\r\n                    }\r\n                    if (endStyle.top === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\r\n                    }\r\n                    if (endStyle.bottom === 0 /* EXTERN */) {\r\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\r\n                    }\r\n                }\r\n                restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\r\n            }\r\n            output2[lineIndex][0] += innerCornerOutput;\r\n            output2[lineIndex][1] += restOfSelectionOutput;\r\n        }\r\n    }\r\n    prepareRender(ctx) {\r\n        // Build HTML for inner corners separate from HTML for the rest of selections,\r\n        // as the inner corner HTML can interfere with that of other selections.\r\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\r\n        const output = [];\r\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\r\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\r\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\r\n            const lineIndex = lineNumber - visibleStartLineNumber;\r\n            output[lineIndex] = ['', ''];\r\n        }\r\n        const thisFrameVisibleRangesWithStyle = [];\r\n        for (let i = 0, len = this._selections.length; i < len; i++) {\r\n            const selection = this._selections[i];\r\n            if (selection.isEmpty()) {\r\n                thisFrameVisibleRangesWithStyle[i] = null;\r\n                continue;\r\n            }\r\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\r\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\r\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\r\n        }\r\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\r\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\r\n    }\r\n    render(startLineNumber, lineNumber) {\r\n        if (!this._renderResult) {\r\n            return '';\r\n        }\r\n        const lineIndex = lineNumber - startLineNumber;\r\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\r\n            return '';\r\n        }\r\n        return this._renderResult[lineIndex];\r\n    }\r\n}\r\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\r\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\r\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\r\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\r\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\r\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\r\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorSelectionColor = theme.getColor(editorSelectionBackground);\r\n    if (editorSelectionColor) {\r\n        collector.addRule(`.monaco-editor .focused .selected-text { background-color: ${editorSelectionColor}; }`);\r\n    }\r\n    const editorInactiveSelectionColor = theme.getColor(editorInactiveSelection);\r\n    if (editorInactiveSelectionColor) {\r\n        collector.addRule(`.monaco-editor .selected-text { background-color: ${editorInactiveSelectionColor}; }`);\r\n    }\r\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\r\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\r\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\r\n    }\r\n});\r\nfunction abs(n) {\r\n    return n < 0 ? -n : n;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}