{"ast":null,"code":"import _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport var ScrollState = /*#__PURE__*/function () {\n  function ScrollState(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n    _classCallCheck(this, ScrollState);\n\n    width = width | 0;\n    scrollWidth = scrollWidth | 0;\n    scrollLeft = scrollLeft | 0;\n    height = height | 0;\n    scrollHeight = scrollHeight | 0;\n    scrollTop = scrollTop | 0;\n    this.rawScrollLeft = scrollLeft; // before validation\n\n    this.rawScrollTop = scrollTop; // before validation\n\n    if (width < 0) {\n      width = 0;\n    }\n\n    if (scrollLeft + width > scrollWidth) {\n      scrollLeft = scrollWidth - width;\n    }\n\n    if (scrollLeft < 0) {\n      scrollLeft = 0;\n    }\n\n    if (height < 0) {\n      height = 0;\n    }\n\n    if (scrollTop + height > scrollHeight) {\n      scrollTop = scrollHeight - height;\n    }\n\n    if (scrollTop < 0) {\n      scrollTop = 0;\n    }\n\n    this.width = width;\n    this.scrollWidth = scrollWidth;\n    this.scrollLeft = scrollLeft;\n    this.height = height;\n    this.scrollHeight = scrollHeight;\n    this.scrollTop = scrollTop;\n  }\n\n  _createClass(ScrollState, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.rawScrollLeft === other.rawScrollLeft && this.rawScrollTop === other.rawScrollTop && this.width === other.width && this.scrollWidth === other.scrollWidth && this.scrollLeft === other.scrollLeft && this.height === other.height && this.scrollHeight === other.scrollHeight && this.scrollTop === other.scrollTop;\n    }\n  }, {\n    key: \"withScrollDimensions\",\n    value: function withScrollDimensions(update, useRawScrollPositions) {\n      return new ScrollState(typeof update.width !== 'undefined' ? update.width : this.width, typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth, useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, typeof update.height !== 'undefined' ? update.height : this.height, typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight, useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n  }, {\n    key: \"withScrollPosition\",\n    value: function withScrollPosition(update) {\n      return new ScrollState(this.width, this.scrollWidth, typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft, this.height, this.scrollHeight, typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop);\n    }\n  }, {\n    key: \"createScrollEvent\",\n    value: function createScrollEvent(previous, inSmoothScrolling) {\n      var widthChanged = this.width !== previous.width;\n      var scrollWidthChanged = this.scrollWidth !== previous.scrollWidth;\n      var scrollLeftChanged = this.scrollLeft !== previous.scrollLeft;\n      var heightChanged = this.height !== previous.height;\n      var scrollHeightChanged = this.scrollHeight !== previous.scrollHeight;\n      var scrollTopChanged = this.scrollTop !== previous.scrollTop;\n      return {\n        inSmoothScrolling: inSmoothScrolling,\n        oldWidth: previous.width,\n        oldScrollWidth: previous.scrollWidth,\n        oldScrollLeft: previous.scrollLeft,\n        width: this.width,\n        scrollWidth: this.scrollWidth,\n        scrollLeft: this.scrollLeft,\n        oldHeight: previous.height,\n        oldScrollHeight: previous.scrollHeight,\n        oldScrollTop: previous.scrollTop,\n        height: this.height,\n        scrollHeight: this.scrollHeight,\n        scrollTop: this.scrollTop,\n        widthChanged: widthChanged,\n        scrollWidthChanged: scrollWidthChanged,\n        scrollLeftChanged: scrollLeftChanged,\n        heightChanged: heightChanged,\n        scrollHeightChanged: scrollHeightChanged,\n        scrollTopChanged: scrollTopChanged\n      };\n    }\n  }]);\n\n  return ScrollState;\n}();\nexport var Scrollable = /*#__PURE__*/function (_Disposable) {\n  _inherits(Scrollable, _Disposable);\n\n  var _super = _createSuper(Scrollable);\n\n  function Scrollable(smoothScrollDuration, scheduleAtNextAnimationFrame) {\n    var _this;\n\n    _classCallCheck(this, Scrollable);\n\n    _this = _super.call(this);\n    _this._onScroll = _this._register(new Emitter());\n    _this.onScroll = _this._onScroll.event;\n    _this._smoothScrollDuration = smoothScrollDuration;\n    _this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;\n    _this._state = new ScrollState(0, 0, 0, 0, 0, 0);\n    _this._smoothScrolling = null;\n    return _this;\n  }\n\n  _createClass(Scrollable, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._smoothScrolling) {\n        this._smoothScrolling.dispose();\n\n        this._smoothScrolling = null;\n      }\n\n      _get(_getPrototypeOf(Scrollable.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"setSmoothScrollDuration\",\n    value: function setSmoothScrollDuration(smoothScrollDuration) {\n      this._smoothScrollDuration = smoothScrollDuration;\n    }\n  }, {\n    key: \"validateScrollPosition\",\n    value: function validateScrollPosition(scrollPosition) {\n      return this._state.withScrollPosition(scrollPosition);\n    }\n  }, {\n    key: \"getScrollDimensions\",\n    value: function getScrollDimensions() {\n      return this._state;\n    }\n  }, {\n    key: \"setScrollDimensions\",\n    value: function setScrollDimensions(dimensions, useRawScrollPositions) {\n      var newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n\n      this._setState(newState, Boolean(this._smoothScrolling)); // Validate outstanding animated scroll position target\n\n\n      if (this._smoothScrolling) {\n        this._smoothScrolling.acceptScrollDimensions(this._state);\n      }\n    }\n    /**\r\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\r\n     * If no scroll animation is occurring, it will return the current scroll position instead.\r\n     */\n\n  }, {\n    key: \"getFutureScrollPosition\",\n    value: function getFutureScrollPosition() {\n      if (this._smoothScrolling) {\n        return this._smoothScrolling.to;\n      }\n\n      return this._state;\n    }\n    /**\r\n     * Returns the current scroll position.\r\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\r\n     */\n\n  }, {\n    key: \"getCurrentScrollPosition\",\n    value: function getCurrentScrollPosition() {\n      return this._state;\n    }\n  }, {\n    key: \"setScrollPositionNow\",\n    value: function setScrollPositionNow(update) {\n      // no smooth scrolling requested\n      var newState = this._state.withScrollPosition(update); // Terminate any outstanding smooth scrolling\n\n\n      if (this._smoothScrolling) {\n        this._smoothScrolling.dispose();\n\n        this._smoothScrolling = null;\n      }\n\n      this._setState(newState, false);\n    }\n  }, {\n    key: \"setScrollPositionSmooth\",\n    value: function setScrollPositionSmooth(update, reuseAnimation) {\n      var _this2 = this;\n\n      if (this._smoothScrollDuration === 0) {\n        // Smooth scrolling not supported.\n        return this.setScrollPositionNow(update);\n      }\n\n      if (this._smoothScrolling) {\n        // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n        update = {\n          scrollLeft: typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft,\n          scrollTop: typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop\n        }; // Validate `update`\n\n        var validTarget = this._state.withScrollPosition(update);\n\n        if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n          // No need to interrupt or extend the current animation since we're going to the same place\n          return;\n        }\n\n        var newSmoothScrolling;\n\n        if (reuseAnimation) {\n          newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n        } else {\n          newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n        }\n\n        this._smoothScrolling.dispose();\n\n        this._smoothScrolling = newSmoothScrolling;\n      } else {\n        // Validate `update`\n        var _validTarget = this._state.withScrollPosition(update);\n\n        this._smoothScrolling = SmoothScrollingOperation.start(this._state, _validTarget, this._smoothScrollDuration);\n      } // Begin smooth scrolling animation\n\n\n      this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {\n        if (!_this2._smoothScrolling) {\n          return;\n        }\n\n        _this2._smoothScrolling.animationFrameDisposable = null;\n\n        _this2._performSmoothScrolling();\n      });\n    }\n  }, {\n    key: \"_performSmoothScrolling\",\n    value: function _performSmoothScrolling() {\n      var _this3 = this;\n\n      if (!this._smoothScrolling) {\n        return;\n      }\n\n      var update = this._smoothScrolling.tick();\n\n      var newState = this._state.withScrollPosition(update);\n\n      this._setState(newState, true);\n\n      if (!this._smoothScrolling) {\n        // Looks like someone canceled the smooth scrolling\n        // from the scroll event handler\n        return;\n      }\n\n      if (update.isDone) {\n        this._smoothScrolling.dispose();\n\n        this._smoothScrolling = null;\n        return;\n      } // Continue smooth scrolling animation\n\n\n      this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {\n        if (!_this3._smoothScrolling) {\n          return;\n        }\n\n        _this3._smoothScrolling.animationFrameDisposable = null;\n\n        _this3._performSmoothScrolling();\n      });\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(newState, inSmoothScrolling) {\n      var oldState = this._state;\n\n      if (oldState.equals(newState)) {\n        // no change\n        return;\n      }\n\n      this._state = newState;\n\n      this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n  }]);\n\n  return Scrollable;\n}(Disposable);\nexport var SmoothScrollingUpdate = function SmoothScrollingUpdate(scrollLeft, scrollTop, isDone) {\n  _classCallCheck(this, SmoothScrollingUpdate);\n\n  this.scrollLeft = scrollLeft;\n  this.scrollTop = scrollTop;\n  this.isDone = isDone;\n};\n\nfunction createEaseOutCubic(from, to) {\n  var delta = to - from;\n  return function (completion) {\n    return from + delta * easeOutCubic(completion);\n  };\n}\n\nfunction createComposed(a, b, cut) {\n  return function (completion) {\n    if (completion < cut) {\n      return a(completion / cut);\n    }\n\n    return b((completion - cut) / (1 - cut));\n  };\n}\n\nexport var SmoothScrollingOperation = /*#__PURE__*/function () {\n  function SmoothScrollingOperation(from, to, startTime, duration) {\n    _classCallCheck(this, SmoothScrollingOperation);\n\n    this.from = from;\n    this.to = to;\n    this.duration = duration;\n    this.startTime = startTime;\n    this.animationFrameDisposable = null;\n\n    this._initAnimations();\n  }\n\n  _createClass(SmoothScrollingOperation, [{\n    key: \"_initAnimations\",\n    value: function _initAnimations() {\n      this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n      this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n  }, {\n    key: \"_initAnimation\",\n    value: function _initAnimation(from, to, viewportSize) {\n      var delta = Math.abs(from - to);\n\n      if (delta > 2.5 * viewportSize) {\n        var stop1, stop2;\n\n        if (from < to) {\n          // scroll to 75% of the viewportSize\n          stop1 = from + 0.75 * viewportSize;\n          stop2 = to - 0.75 * viewportSize;\n        } else {\n          stop1 = from - 0.75 * viewportSize;\n          stop2 = to + 0.75 * viewportSize;\n        }\n\n        return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n      }\n\n      return createEaseOutCubic(from, to);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.animationFrameDisposable !== null) {\n        this.animationFrameDisposable.dispose();\n        this.animationFrameDisposable = null;\n      }\n    }\n  }, {\n    key: \"acceptScrollDimensions\",\n    value: function acceptScrollDimensions(state) {\n      this.to = state.withScrollPosition(this.to);\n\n      this._initAnimations();\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      return this._tick(Date.now());\n    }\n  }, {\n    key: \"_tick\",\n    value: function _tick(now) {\n      var completion = (now - this.startTime) / this.duration;\n\n      if (completion < 1) {\n        var newScrollLeft = this.scrollLeft(completion);\n        var newScrollTop = this.scrollTop(completion);\n        return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n      }\n\n      return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n  }, {\n    key: \"combine\",\n    value: function combine(from, to, duration) {\n      return SmoothScrollingOperation.start(from, to, duration);\n    }\n  }], [{\n    key: \"start\",\n    value: function start(from, to, duration) {\n      // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n      duration = duration + 10;\n      var startTime = Date.now() - 10;\n      return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n  }]);\n\n  return SmoothScrollingOperation;\n}();\n\nfunction easeInCubic(t) {\n  return Math.pow(t, 3);\n}\n\nfunction easeOutCubic(t) {\n  return 1 - easeInCubic(1 - t);\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/scrollable.js"],"names":["Emitter","Disposable","ScrollState","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","rawScrollLeft","rawScrollTop","other","update","useRawScrollPositions","previous","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","smoothScrollDuration","scheduleAtNextAnimationFrame","_onScroll","_register","onScroll","event","_smoothScrollDuration","_scheduleAtNextAnimationFrame","_state","_smoothScrolling","dispose","scrollPosition","withScrollPosition","dimensions","newState","withScrollDimensions","_setState","Boolean","acceptScrollDimensions","to","reuseAnimation","setScrollPositionNow","validTarget","newSmoothScrolling","SmoothScrollingOperation","from","startTime","duration","combine","start","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","equals","fire","createScrollEvent","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","easeOutCubic","createComposed","a","b","cut","_initAnimations","_initAnimation","viewportSize","Math","abs","stop1","stop2","state","_tick","Date","now","newScrollLeft","newScrollTop","easeInCubic","t","pow"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from './event.js';\r\nimport { Disposable } from './lifecycle.js';\r\nexport class ScrollState {\r\n    constructor(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\r\n        width = width | 0;\r\n        scrollWidth = scrollWidth | 0;\r\n        scrollLeft = scrollLeft | 0;\r\n        height = height | 0;\r\n        scrollHeight = scrollHeight | 0;\r\n        scrollTop = scrollTop | 0;\r\n        this.rawScrollLeft = scrollLeft; // before validation\r\n        this.rawScrollTop = scrollTop; // before validation\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n        if (scrollLeft + width > scrollWidth) {\r\n            scrollLeft = scrollWidth - width;\r\n        }\r\n        if (scrollLeft < 0) {\r\n            scrollLeft = 0;\r\n        }\r\n        if (height < 0) {\r\n            height = 0;\r\n        }\r\n        if (scrollTop + height > scrollHeight) {\r\n            scrollTop = scrollHeight - height;\r\n        }\r\n        if (scrollTop < 0) {\r\n            scrollTop = 0;\r\n        }\r\n        this.width = width;\r\n        this.scrollWidth = scrollWidth;\r\n        this.scrollLeft = scrollLeft;\r\n        this.height = height;\r\n        this.scrollHeight = scrollHeight;\r\n        this.scrollTop = scrollTop;\r\n    }\r\n    equals(other) {\r\n        return (this.rawScrollLeft === other.rawScrollLeft\r\n            && this.rawScrollTop === other.rawScrollTop\r\n            && this.width === other.width\r\n            && this.scrollWidth === other.scrollWidth\r\n            && this.scrollLeft === other.scrollLeft\r\n            && this.height === other.height\r\n            && this.scrollHeight === other.scrollHeight\r\n            && this.scrollTop === other.scrollTop);\r\n    }\r\n    withScrollDimensions(update, useRawScrollPositions) {\r\n        return new ScrollState((typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\r\n    }\r\n    withScrollPosition(update) {\r\n        return new ScrollState(this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\r\n    }\r\n    createScrollEvent(previous, inSmoothScrolling) {\r\n        const widthChanged = (this.width !== previous.width);\r\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\r\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\r\n        const heightChanged = (this.height !== previous.height);\r\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\r\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\r\n        return {\r\n            inSmoothScrolling: inSmoothScrolling,\r\n            oldWidth: previous.width,\r\n            oldScrollWidth: previous.scrollWidth,\r\n            oldScrollLeft: previous.scrollLeft,\r\n            width: this.width,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollLeft: this.scrollLeft,\r\n            oldHeight: previous.height,\r\n            oldScrollHeight: previous.scrollHeight,\r\n            oldScrollTop: previous.scrollTop,\r\n            height: this.height,\r\n            scrollHeight: this.scrollHeight,\r\n            scrollTop: this.scrollTop,\r\n            widthChanged: widthChanged,\r\n            scrollWidthChanged: scrollWidthChanged,\r\n            scrollLeftChanged: scrollLeftChanged,\r\n            heightChanged: heightChanged,\r\n            scrollHeightChanged: scrollHeightChanged,\r\n            scrollTopChanged: scrollTopChanged,\r\n        };\r\n    }\r\n}\r\nexport class Scrollable extends Disposable {\r\n    constructor(smoothScrollDuration, scheduleAtNextAnimationFrame) {\r\n        super();\r\n        this._onScroll = this._register(new Emitter());\r\n        this.onScroll = this._onScroll.event;\r\n        this._smoothScrollDuration = smoothScrollDuration;\r\n        this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;\r\n        this._state = new ScrollState(0, 0, 0, 0, 0, 0);\r\n        this._smoothScrolling = null;\r\n    }\r\n    dispose() {\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n    setSmoothScrollDuration(smoothScrollDuration) {\r\n        this._smoothScrollDuration = smoothScrollDuration;\r\n    }\r\n    validateScrollPosition(scrollPosition) {\r\n        return this._state.withScrollPosition(scrollPosition);\r\n    }\r\n    getScrollDimensions() {\r\n        return this._state;\r\n    }\r\n    setScrollDimensions(dimensions, useRawScrollPositions) {\r\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\r\n        this._setState(newState, Boolean(this._smoothScrolling));\r\n        // Validate outstanding animated scroll position target\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.acceptScrollDimensions(this._state);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\r\n     * If no scroll animation is occurring, it will return the current scroll position instead.\r\n     */\r\n    getFutureScrollPosition() {\r\n        if (this._smoothScrolling) {\r\n            return this._smoothScrolling.to;\r\n        }\r\n        return this._state;\r\n    }\r\n    /**\r\n     * Returns the current scroll position.\r\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\r\n     */\r\n    getCurrentScrollPosition() {\r\n        return this._state;\r\n    }\r\n    setScrollPositionNow(update) {\r\n        // no smooth scrolling requested\r\n        const newState = this._state.withScrollPosition(update);\r\n        // Terminate any outstanding smooth scrolling\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        this._setState(newState, false);\r\n    }\r\n    setScrollPositionSmooth(update, reuseAnimation) {\r\n        if (this._smoothScrollDuration === 0) {\r\n            // Smooth scrolling not supported.\r\n            return this.setScrollPositionNow(update);\r\n        }\r\n        if (this._smoothScrolling) {\r\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\r\n            update = {\r\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\r\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\r\n            };\r\n            // Validate `update`\r\n            const validTarget = this._state.withScrollPosition(update);\r\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\r\n                // No need to interrupt or extend the current animation since we're going to the same place\r\n                return;\r\n            }\r\n            let newSmoothScrolling;\r\n            if (reuseAnimation) {\r\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\r\n            }\r\n            else {\r\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\r\n            }\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = newSmoothScrolling;\r\n        }\r\n        else {\r\n            // Validate `update`\r\n            const validTarget = this._state.withScrollPosition(update);\r\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\r\n        }\r\n        // Begin smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\r\n            if (!this._smoothScrolling) {\r\n                return;\r\n            }\r\n            this._smoothScrolling.animationFrameDisposable = null;\r\n            this._performSmoothScrolling();\r\n        });\r\n    }\r\n    _performSmoothScrolling() {\r\n        if (!this._smoothScrolling) {\r\n            return;\r\n        }\r\n        const update = this._smoothScrolling.tick();\r\n        const newState = this._state.withScrollPosition(update);\r\n        this._setState(newState, true);\r\n        if (!this._smoothScrolling) {\r\n            // Looks like someone canceled the smooth scrolling\r\n            // from the scroll event handler\r\n            return;\r\n        }\r\n        if (update.isDone) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n            return;\r\n        }\r\n        // Continue smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\r\n            if (!this._smoothScrolling) {\r\n                return;\r\n            }\r\n            this._smoothScrolling.animationFrameDisposable = null;\r\n            this._performSmoothScrolling();\r\n        });\r\n    }\r\n    _setState(newState, inSmoothScrolling) {\r\n        const oldState = this._state;\r\n        if (oldState.equals(newState)) {\r\n            // no change\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\r\n    }\r\n}\r\nexport class SmoothScrollingUpdate {\r\n    constructor(scrollLeft, scrollTop, isDone) {\r\n        this.scrollLeft = scrollLeft;\r\n        this.scrollTop = scrollTop;\r\n        this.isDone = isDone;\r\n    }\r\n}\r\nfunction createEaseOutCubic(from, to) {\r\n    const delta = to - from;\r\n    return function (completion) {\r\n        return from + delta * easeOutCubic(completion);\r\n    };\r\n}\r\nfunction createComposed(a, b, cut) {\r\n    return function (completion) {\r\n        if (completion < cut) {\r\n            return a(completion / cut);\r\n        }\r\n        return b((completion - cut) / (1 - cut));\r\n    };\r\n}\r\nexport class SmoothScrollingOperation {\r\n    constructor(from, to, startTime, duration) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.duration = duration;\r\n        this.startTime = startTime;\r\n        this.animationFrameDisposable = null;\r\n        this._initAnimations();\r\n    }\r\n    _initAnimations() {\r\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\r\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\r\n    }\r\n    _initAnimation(from, to, viewportSize) {\r\n        const delta = Math.abs(from - to);\r\n        if (delta > 2.5 * viewportSize) {\r\n            let stop1, stop2;\r\n            if (from < to) {\r\n                // scroll to 75% of the viewportSize\r\n                stop1 = from + 0.75 * viewportSize;\r\n                stop2 = to - 0.75 * viewportSize;\r\n            }\r\n            else {\r\n                stop1 = from - 0.75 * viewportSize;\r\n                stop2 = to + 0.75 * viewportSize;\r\n            }\r\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\r\n        }\r\n        return createEaseOutCubic(from, to);\r\n    }\r\n    dispose() {\r\n        if (this.animationFrameDisposable !== null) {\r\n            this.animationFrameDisposable.dispose();\r\n            this.animationFrameDisposable = null;\r\n        }\r\n    }\r\n    acceptScrollDimensions(state) {\r\n        this.to = state.withScrollPosition(this.to);\r\n        this._initAnimations();\r\n    }\r\n    tick() {\r\n        return this._tick(Date.now());\r\n    }\r\n    _tick(now) {\r\n        const completion = (now - this.startTime) / this.duration;\r\n        if (completion < 1) {\r\n            const newScrollLeft = this.scrollLeft(completion);\r\n            const newScrollTop = this.scrollTop(completion);\r\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\r\n        }\r\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\r\n    }\r\n    combine(from, to, duration) {\r\n        return SmoothScrollingOperation.start(from, to, duration);\r\n    }\r\n    static start(from, to, duration) {\r\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\r\n        duration = duration + 10;\r\n        const startTime = Date.now() - 10;\r\n        return new SmoothScrollingOperation(from, to, startTime, duration);\r\n    }\r\n}\r\nfunction easeInCubic(t) {\r\n    return Math.pow(t, 3);\r\n}\r\nfunction easeOutCubic(t) {\r\n    return 1 - easeInCubic(1 - t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}