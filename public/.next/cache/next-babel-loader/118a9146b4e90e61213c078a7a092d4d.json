{"ast":null,"code":"import _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/modelService.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nexport var Command = /*#__PURE__*/function () {\n  function Command(opts) {\n    _classCallCheck(this, Command);\n\n    this.id = opts.id;\n    this.precondition = opts.precondition;\n    this._kbOpts = opts.kbOpts;\n    this._menuOpts = opts.menuOpts;\n    this._description = opts.description;\n  }\n\n  _createClass(Command, [{\n    key: \"register\",\n    value: function register() {\n      var _this = this;\n\n      if (Array.isArray(this._menuOpts)) {\n        this._menuOpts.forEach(this._registerMenuItem, this);\n      } else if (this._menuOpts) {\n        this._registerMenuItem(this._menuOpts);\n      }\n\n      if (this._kbOpts) {\n        var kbWhen = this._kbOpts.kbExpr;\n\n        if (this.precondition) {\n          if (kbWhen) {\n            kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n          } else {\n            kbWhen = this.precondition;\n          }\n        }\n\n        KeybindingsRegistry.registerCommandAndKeybindingRule({\n          id: this.id,\n          handler: function handler(accessor, args) {\n            return _this.runCommand(accessor, args);\n          },\n          weight: this._kbOpts.weight,\n          args: this._kbOpts.args,\n          when: kbWhen,\n          primary: this._kbOpts.primary,\n          secondary: this._kbOpts.secondary,\n          win: this._kbOpts.win,\n          linux: this._kbOpts.linux,\n          mac: this._kbOpts.mac,\n          description: this._description\n        });\n      } else {\n        CommandsRegistry.registerCommand({\n          id: this.id,\n          handler: function handler(accessor, args) {\n            return _this.runCommand(accessor, args);\n          },\n          description: this._description\n        });\n      }\n    }\n  }, {\n    key: \"_registerMenuItem\",\n    value: function _registerMenuItem(item) {\n      MenuRegistry.appendMenuItem(item.menuId, {\n        group: item.group,\n        command: {\n          id: this.id,\n          title: item.title,\n          icon: item.icon,\n          precondition: this.precondition\n        },\n        when: item.when,\n        order: item.order\n      });\n    }\n  }]);\n\n  return Command;\n}();\nexport var MultiCommand = /*#__PURE__*/function (_Command) {\n  _inherits(MultiCommand, _Command);\n\n  var _super = _createSuper(MultiCommand);\n\n  function MultiCommand() {\n    var _this2;\n\n    _classCallCheck(this, MultiCommand);\n\n    _this2 = _super.apply(this, arguments);\n    _this2._implementations = [];\n    return _this2;\n  }\n  /**\r\n   * A higher priority gets to be looked at first\r\n   */\n\n\n  _createClass(MultiCommand, [{\n    key: \"addImplementation\",\n    value: function addImplementation(priority, implementation) {\n      var _this3 = this;\n\n      this._implementations.push([priority, implementation]);\n\n      this._implementations.sort(function (a, b) {\n        return b[0] - a[0];\n      });\n\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this3._implementations.length; i++) {\n            if (_this3._implementations[i][1] === implementation) {\n              _this3._implementations.splice(i, 1);\n\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var _iterator = _createForOfIteratorHelper(this._implementations),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var impl = _step.value;\n          var result = impl[1](accessor, args);\n\n          if (result) {\n            if (typeof result === 'boolean') {\n              return;\n            }\n\n            return result;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return MultiCommand;\n}(Command); //#endregion\n\n/**\r\n * A command that delegates to another command's implementation.\r\n *\r\n * This lets different commands be registered but share the same implementation\r\n */\n\nexport var ProxyCommand = /*#__PURE__*/function (_Command2) {\n  _inherits(ProxyCommand, _Command2);\n\n  var _super2 = _createSuper(ProxyCommand);\n\n  function ProxyCommand(command, opts) {\n    var _this4;\n\n    _classCallCheck(this, ProxyCommand);\n\n    _this4 = _super2.call(this, opts);\n    _this4.command = command;\n    return _this4;\n  }\n\n  _createClass(ProxyCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      return this.command.runCommand(accessor, args);\n    }\n  }]);\n\n  return ProxyCommand;\n}(Command);\nexport var EditorCommand = /*#__PURE__*/function (_Command3) {\n  _inherits(EditorCommand, _Command3);\n\n  var _super3 = _createSuper(EditorCommand);\n\n  function EditorCommand() {\n    _classCallCheck(this, EditorCommand);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(EditorCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var _this5 = this;\n\n      var codeEditorService = accessor.get(ICodeEditorService); // Find the editor with text focus or active\n\n      var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\n      if (!editor) {\n        // well, at least we tried...\n        return;\n      }\n\n      return editor.invokeWithinContext(function (editorAccessor) {\n        var kbService = editorAccessor.get(IContextKeyService);\n\n        if (!kbService.contextMatchesRules(withNullAsUndefined(_this5.precondition))) {\n          // precondition does not hold\n          return;\n        }\n\n        return _this5.runEditorCommand(editorAccessor, editor, args);\n      });\n    }\n  }], [{\n    key: \"bindToContribution\",\n\n    /**\r\n     * Create a command class that is bound to a certain editor contribution.\r\n     */\n    value: function bindToContribution(controllerGetter) {\n      return /*#__PURE__*/function (_EditorCommand) {\n        _inherits(EditorControllerCommandImpl, _EditorCommand);\n\n        var _super4 = _createSuper(EditorControllerCommandImpl);\n\n        function EditorControllerCommandImpl(opts) {\n          var _this6;\n\n          _classCallCheck(this, EditorControllerCommandImpl);\n\n          _this6 = _super4.call(this, opts);\n          _this6._callback = opts.handler;\n          return _this6;\n        }\n\n        _createClass(EditorControllerCommandImpl, [{\n          key: \"runEditorCommand\",\n          value: function runEditorCommand(accessor, editor, args) {\n            var controller = controllerGetter(editor);\n\n            if (controller) {\n              this._callback(controllerGetter(editor), args);\n            }\n          }\n        }]);\n\n        return EditorControllerCommandImpl;\n      }(EditorCommand);\n    }\n  }]);\n\n  return EditorCommand;\n}(Command);\nexport var EditorAction = /*#__PURE__*/function (_EditorCommand2) {\n  _inherits(EditorAction, _EditorCommand2);\n\n  var _super5 = _createSuper(EditorAction);\n\n  function EditorAction(opts) {\n    var _this7;\n\n    _classCallCheck(this, EditorAction);\n\n    _this7 = _super5.call(this, EditorAction.convertOptions(opts));\n    _this7.label = opts.label;\n    _this7.alias = opts.alias;\n    return _this7;\n  }\n\n  _createClass(EditorAction, [{\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, editor, args) {\n      this.reportTelemetry(accessor, editor);\n      return this.run(accessor, editor, args || {});\n    }\n  }, {\n    key: \"reportTelemetry\",\n    value: function reportTelemetry(accessor, editor) {\n      accessor.get(ITelemetryService).publicLog2('editorActionInvoked', {\n        name: this.label,\n        id: this.id\n      });\n    }\n  }], [{\n    key: \"convertOptions\",\n    value: function convertOptions(opts) {\n      var menuOpts;\n\n      if (Array.isArray(opts.menuOpts)) {\n        menuOpts = opts.menuOpts;\n      } else if (opts.menuOpts) {\n        menuOpts = [opts.menuOpts];\n      } else {\n        menuOpts = [];\n      }\n\n      function withDefaults(item) {\n        if (!item.menuId) {\n          item.menuId = MenuId.EditorContext;\n        }\n\n        if (!item.title) {\n          item.title = opts.label;\n        }\n\n        item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        return item;\n      }\n\n      if (Array.isArray(opts.contextMenuOpts)) {\n        var _menuOpts;\n\n        (_menuOpts = menuOpts).push.apply(_menuOpts, _toConsumableArray(opts.contextMenuOpts.map(withDefaults)));\n      } else if (opts.contextMenuOpts) {\n        menuOpts.push(withDefaults(opts.contextMenuOpts));\n      }\n\n      opts.menuOpts = menuOpts;\n      return opts;\n    }\n  }]);\n\n  return EditorAction;\n}(EditorCommand);\nexport var MultiEditorAction = /*#__PURE__*/function (_EditorAction) {\n  _inherits(MultiEditorAction, _EditorAction);\n\n  var _super6 = _createSuper(MultiEditorAction);\n\n  function MultiEditorAction(opts) {\n    var _this8;\n\n    _classCallCheck(this, MultiEditorAction);\n\n    _this8 = _super6.call(this, opts);\n    _this8._implementations = [];\n    return _this8;\n  }\n\n  _createClass(MultiEditorAction, [{\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, editor, args) {\n      this.reportTelemetry(accessor, editor);\n\n      var _iterator2 = _createForOfIteratorHelper(this._implementations),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var impl = _step2.value;\n\n          if (impl[1](accessor, args)) {\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return this.run(accessor, editor, args || {});\n    }\n  }]);\n\n  return MultiEditorAction;\n}(EditorAction); //#endregion\n// --- Registration of commands and actions\n\nexport function registerModelAndPositionCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var resource = args[0],\n        position = args[1];\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    var model = accessor.get(IModelService).getModel(resource);\n\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return handler.apply(void 0, [model, editorPosition].concat(_toConsumableArray(args.slice(2))));\n    }\n\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      })[\"finally\"](function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerModelCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var resource = args[0];\n    assertType(URI.isUri(resource));\n    var model = accessor.get(IModelService).getModel(resource);\n\n    if (model) {\n      return handler.apply(void 0, [model].concat(_toConsumableArray(args.slice(1))));\n    }\n\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = handler(reference.object.textEditorModel, args.slice(1));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      })[\"finally\"](function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerEditorCommand(editorCommand) {\n  EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n  return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n  var action = new ctor();\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerMultiEditorAction(action) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\nexport function registerEditorContribution(id, ctor) {\n  EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\nexport var EditorExtensionsRegistry;\n\n(function (EditorExtensionsRegistry) {\n  function getEditorCommand(commandId) {\n    return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n  }\n\n  EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n\n  function getEditorActions() {\n    return EditorContributionRegistry.INSTANCE.getEditorActions();\n  }\n\n  EditorExtensionsRegistry.getEditorActions = getEditorActions;\n\n  function getEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions();\n  }\n\n  EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n\n  function getSomeEditorContributions(ids) {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) {\n      return ids.indexOf(c.id) >= 0;\n    });\n  }\n\n  EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n\n  function getDiffEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n  }\n\n  EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {})); // Editor extension points\n\n\nvar Extensions = {\n  EditorCommonContributions: 'editor.contributions'\n};\n\nvar EditorContributionRegistry = /*#__PURE__*/function () {\n  function EditorContributionRegistry() {\n    _classCallCheck(this, EditorContributionRegistry);\n\n    this.editorContributions = [];\n    this.diffEditorContributions = [];\n    this.editorActions = [];\n    this.editorCommands = Object.create(null);\n  }\n\n  _createClass(EditorContributionRegistry, [{\n    key: \"registerEditorContribution\",\n    value: function registerEditorContribution(id, ctor) {\n      this.editorContributions.push({\n        id: id,\n        ctor: ctor\n      });\n    }\n  }, {\n    key: \"getEditorContributions\",\n    value: function getEditorContributions() {\n      return this.editorContributions.slice(0);\n    }\n  }, {\n    key: \"getDiffEditorContributions\",\n    value: function getDiffEditorContributions() {\n      return this.diffEditorContributions.slice(0);\n    }\n  }, {\n    key: \"registerEditorAction\",\n    value: function registerEditorAction(action) {\n      action.register();\n      this.editorActions.push(action);\n    }\n  }, {\n    key: \"getEditorActions\",\n    value: function getEditorActions() {\n      return this.editorActions.slice(0);\n    }\n  }, {\n    key: \"registerEditorCommand\",\n    value: function registerEditorCommand(editorCommand) {\n      editorCommand.register();\n      this.editorCommands[editorCommand.id] = editorCommand;\n    }\n  }, {\n    key: \"getEditorCommand\",\n    value: function getEditorCommand(commandId) {\n      return this.editorCommands[commandId] || null;\n    }\n  }]);\n\n  return EditorContributionRegistry;\n}();\n\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\n\nfunction registerCommand(command) {\n  command.register();\n  return command;\n}\n\nexport var UndoCommand = registerCommand(new MultiCommand({\n  id: 'undo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0\n    /* EditorCore */\n    ,\n    primary: 2048\n    /* CtrlCmd */\n    | 56\n    /* KEY_Z */\n\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miUndo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Undo\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('undo', \"Undo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, {\n  id: 'default:undo',\n  precondition: undefined\n}));\nexport var RedoCommand = registerCommand(new MultiCommand({\n  id: 'redo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0\n    /* EditorCore */\n    ,\n    primary: 2048\n    /* CtrlCmd */\n    | 55\n    /* KEY_Y */\n    ,\n    secondary: [2048\n    /* CtrlCmd */\n    | 1024\n    /* Shift */\n    | 56\n    /* KEY_Z */\n    ],\n    mac: {\n      primary: 2048\n      /* CtrlCmd */\n      | 1024\n      /* Shift */\n      | 56\n      /* KEY_Z */\n\n    }\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miRedo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Redo\"),\n    order: 2\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('redo', \"Redo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, {\n  id: 'default:redo',\n  precondition: undefined\n}));\nexport var SelectAllCommand = registerCommand(new MultiCommand({\n  id: 'editor.action.selectAll',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0\n    /* EditorCore */\n    ,\n    kbExpr: null,\n    primary: 2048\n    /* CtrlCmd */\n    | 31\n    /* KEY_A */\n\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarSelectionMenu,\n    group: '1_basic',\n    title: nls.localize({\n      key: 'miSelectAll',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Select All\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('selectAll', \"Select All\"),\n    order: 1\n  }]\n}));","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"names":["nls","URI","ICodeEditorService","Position","IModelService","ITextModelService","MenuId","MenuRegistry","CommandsRegistry","ContextKeyExpr","IContextKeyService","KeybindingsRegistry","Registry","ITelemetryService","withNullAsUndefined","assertType","Command","opts","id","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","Array","isArray","forEach","_registerMenuItem","kbWhen","kbExpr","and","registerCommandAndKeybindingRule","handler","accessor","args","runCommand","weight","when","primary","secondary","win","linux","mac","registerCommand","item","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","arguments","_implementations","priority","implementation","push","sort","a","b","dispose","i","length","splice","impl","result","ProxyCommand","EditorCommand","codeEditorService","get","editor","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","kbService","contextMatchesRules","runEditorCommand","controllerGetter","_callback","controller","EditorAction","convertOptions","label","alias","reportTelemetry","run","publicLog2","name","withDefaults","EditorContext","contextMenuOpts","map","MultiEditorAction","registerModelAndPositionCommand","resource","position","isUri","isIPosition","model","getModel","editorPosition","lift","slice","createModelReference","then","reference","Promise","resolve","reject","object","textEditorModel","err","registerModelCommand","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","Extensions","EditorCommonContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Object","create","register","add","UndoCommand","undefined","MenubarEditMenu","localize","key","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nimport { URI } from '../../base/common/uri.js';\r\nimport { ICodeEditorService } from './services/codeEditorService.js';\r\nimport { Position } from '../common/core/position.js';\r\nimport { IModelService } from '../common/services/modelService.js';\r\nimport { ITextModelService } from '../common/services/resolverService.js';\r\nimport { MenuId, MenuRegistry } from '../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Registry } from '../../platform/registry/common/platform.js';\r\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\r\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\r\nexport class Command {\r\n    constructor(opts) {\r\n        this.id = opts.id;\r\n        this.precondition = opts.precondition;\r\n        this._kbOpts = opts.kbOpts;\r\n        this._menuOpts = opts.menuOpts;\r\n        this._description = opts.description;\r\n    }\r\n    register() {\r\n        if (Array.isArray(this._menuOpts)) {\r\n            this._menuOpts.forEach(this._registerMenuItem, this);\r\n        }\r\n        else if (this._menuOpts) {\r\n            this._registerMenuItem(this._menuOpts);\r\n        }\r\n        if (this._kbOpts) {\r\n            let kbWhen = this._kbOpts.kbExpr;\r\n            if (this.precondition) {\r\n                if (kbWhen) {\r\n                    kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\r\n                }\r\n                else {\r\n                    kbWhen = this.precondition;\r\n                }\r\n            }\r\n            KeybindingsRegistry.registerCommandAndKeybindingRule({\r\n                id: this.id,\r\n                handler: (accessor, args) => this.runCommand(accessor, args),\r\n                weight: this._kbOpts.weight,\r\n                args: this._kbOpts.args,\r\n                when: kbWhen,\r\n                primary: this._kbOpts.primary,\r\n                secondary: this._kbOpts.secondary,\r\n                win: this._kbOpts.win,\r\n                linux: this._kbOpts.linux,\r\n                mac: this._kbOpts.mac,\r\n                description: this._description\r\n            });\r\n        }\r\n        else {\r\n            CommandsRegistry.registerCommand({\r\n                id: this.id,\r\n                handler: (accessor, args) => this.runCommand(accessor, args),\r\n                description: this._description\r\n            });\r\n        }\r\n    }\r\n    _registerMenuItem(item) {\r\n        MenuRegistry.appendMenuItem(item.menuId, {\r\n            group: item.group,\r\n            command: {\r\n                id: this.id,\r\n                title: item.title,\r\n                icon: item.icon,\r\n                precondition: this.precondition\r\n            },\r\n            when: item.when,\r\n            order: item.order\r\n        });\r\n    }\r\n}\r\nexport class MultiCommand extends Command {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._implementations = [];\r\n    }\r\n    /**\r\n     * A higher priority gets to be looked at first\r\n     */\r\n    addImplementation(priority, implementation) {\r\n        this._implementations.push([priority, implementation]);\r\n        this._implementations.sort((a, b) => b[0] - a[0]);\r\n        return {\r\n            dispose: () => {\r\n                for (let i = 0; i < this._implementations.length; i++) {\r\n                    if (this._implementations[i][1] === implementation) {\r\n                        this._implementations.splice(i, 1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    runCommand(accessor, args) {\r\n        for (const impl of this._implementations) {\r\n            const result = impl[1](accessor, args);\r\n            if (result) {\r\n                if (typeof result === 'boolean') {\r\n                    return;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n}\r\n//#endregion\r\n/**\r\n * A command that delegates to another command's implementation.\r\n *\r\n * This lets different commands be registered but share the same implementation\r\n */\r\nexport class ProxyCommand extends Command {\r\n    constructor(command, opts) {\r\n        super(opts);\r\n        this.command = command;\r\n    }\r\n    runCommand(accessor, args) {\r\n        return this.command.runCommand(accessor, args);\r\n    }\r\n}\r\nexport class EditorCommand extends Command {\r\n    /**\r\n     * Create a command class that is bound to a certain editor contribution.\r\n     */\r\n    static bindToContribution(controllerGetter) {\r\n        return class EditorControllerCommandImpl extends EditorCommand {\r\n            constructor(opts) {\r\n                super(opts);\r\n                this._callback = opts.handler;\r\n            }\r\n            runEditorCommand(accessor, editor, args) {\r\n                const controller = controllerGetter(editor);\r\n                if (controller) {\r\n                    this._callback(controllerGetter(editor), args);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    runCommand(accessor, args) {\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        // Find the editor with text focus or active\r\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\r\n        if (!editor) {\r\n            // well, at least we tried...\r\n            return;\r\n        }\r\n        return editor.invokeWithinContext((editorAccessor) => {\r\n            const kbService = editorAccessor.get(IContextKeyService);\r\n            if (!kbService.contextMatchesRules(withNullAsUndefined(this.precondition))) {\r\n                // precondition does not hold\r\n                return;\r\n            }\r\n            return this.runEditorCommand(editorAccessor, editor, args);\r\n        });\r\n    }\r\n}\r\nexport class EditorAction extends EditorCommand {\r\n    constructor(opts) {\r\n        super(EditorAction.convertOptions(opts));\r\n        this.label = opts.label;\r\n        this.alias = opts.alias;\r\n    }\r\n    static convertOptions(opts) {\r\n        let menuOpts;\r\n        if (Array.isArray(opts.menuOpts)) {\r\n            menuOpts = opts.menuOpts;\r\n        }\r\n        else if (opts.menuOpts) {\r\n            menuOpts = [opts.menuOpts];\r\n        }\r\n        else {\r\n            menuOpts = [];\r\n        }\r\n        function withDefaults(item) {\r\n            if (!item.menuId) {\r\n                item.menuId = MenuId.EditorContext;\r\n            }\r\n            if (!item.title) {\r\n                item.title = opts.label;\r\n            }\r\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\r\n            return item;\r\n        }\r\n        if (Array.isArray(opts.contextMenuOpts)) {\r\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\r\n        }\r\n        else if (opts.contextMenuOpts) {\r\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\r\n        }\r\n        opts.menuOpts = menuOpts;\r\n        return opts;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        this.reportTelemetry(accessor, editor);\r\n        return this.run(accessor, editor, args || {});\r\n    }\r\n    reportTelemetry(accessor, editor) {\r\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\r\n    }\r\n}\r\nexport class MultiEditorAction extends EditorAction {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._implementations = [];\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        this.reportTelemetry(accessor, editor);\r\n        for (const impl of this._implementations) {\r\n            if (impl[1](accessor, args)) {\r\n                return;\r\n            }\r\n        }\r\n        return this.run(accessor, editor, args || {});\r\n    }\r\n}\r\n//#endregion\r\n// --- Registration of commands and actions\r\nexport function registerModelAndPositionCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\r\n        const [resource, position] = args;\r\n        assertType(URI.isUri(resource));\r\n        assertType(Position.isIPosition(position));\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            const editorPosition = Position.lift(position);\r\n            return handler(model, editorPosition, ...args.slice(2));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    const result = handler(reference.object.textEditorModel, Position.lift(position), args.slice(2));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(() => {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerModelCommand(id, handler) {\r\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\r\n        const [resource] = args;\r\n        assertType(URI.isUri(resource));\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return handler(model, ...args.slice(1));\r\n        }\r\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    const result = handler(reference.object.textEditorModel, args.slice(1));\r\n                    resolve(result);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            }).finally(() => {\r\n                reference.dispose();\r\n            });\r\n        });\r\n    });\r\n}\r\nexport function registerEditorCommand(editorCommand) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\r\n    return editorCommand;\r\n}\r\nexport function registerEditorAction(ctor) {\r\n    const action = new ctor();\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\r\n    return action;\r\n}\r\nexport function registerMultiEditorAction(action) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\r\n    return action;\r\n}\r\nexport function registerInstantiatedEditorAction(editorAction) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\r\n}\r\nexport function registerEditorContribution(id, ctor) {\r\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\r\n}\r\nexport var EditorExtensionsRegistry;\r\n(function (EditorExtensionsRegistry) {\r\n    function getEditorCommand(commandId) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\r\n    }\r\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\r\n    function getEditorActions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\r\n    function getEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\r\n    function getSomeEditorContributions(ids) {\r\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\r\n    }\r\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\r\n    function getDiffEditorContributions() {\r\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\r\n    }\r\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\r\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\r\n// Editor extension points\r\nconst Extensions = {\r\n    EditorCommonContributions: 'editor.contributions'\r\n};\r\nclass EditorContributionRegistry {\r\n    constructor() {\r\n        this.editorContributions = [];\r\n        this.diffEditorContributions = [];\r\n        this.editorActions = [];\r\n        this.editorCommands = Object.create(null);\r\n    }\r\n    registerEditorContribution(id, ctor) {\r\n        this.editorContributions.push({ id, ctor: ctor });\r\n    }\r\n    getEditorContributions() {\r\n        return this.editorContributions.slice(0);\r\n    }\r\n    getDiffEditorContributions() {\r\n        return this.diffEditorContributions.slice(0);\r\n    }\r\n    registerEditorAction(action) {\r\n        action.register();\r\n        this.editorActions.push(action);\r\n    }\r\n    getEditorActions() {\r\n        return this.editorActions.slice(0);\r\n    }\r\n    registerEditorCommand(editorCommand) {\r\n        editorCommand.register();\r\n        this.editorCommands[editorCommand.id] = editorCommand;\r\n    }\r\n    getEditorCommand(commandId) {\r\n        return (this.editorCommands[commandId] || null);\r\n    }\r\n}\r\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\r\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\r\nfunction registerCommand(command) {\r\n    command.register();\r\n    return command;\r\n}\r\nexport const UndoCommand = registerCommand(new MultiCommand({\r\n    id: 'undo',\r\n    precondition: undefined,\r\n    kbOpts: {\r\n        weight: 0 /* EditorCore */,\r\n        primary: 2048 /* CtrlCmd */ | 56 /* KEY_Z */\r\n    },\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '1_do',\r\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('undo', \"Undo\"),\r\n            order: 1\r\n        }]\r\n}));\r\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\r\nexport const RedoCommand = registerCommand(new MultiCommand({\r\n    id: 'redo',\r\n    precondition: undefined,\r\n    kbOpts: {\r\n        weight: 0 /* EditorCore */,\r\n        primary: 2048 /* CtrlCmd */ | 55 /* KEY_Y */,\r\n        secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KEY_Z */],\r\n        mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KEY_Z */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '1_do',\r\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\r\n            order: 2\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('redo', \"Redo\"),\r\n            order: 1\r\n        }]\r\n}));\r\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\r\nexport const SelectAllCommand = registerCommand(new MultiCommand({\r\n    id: 'editor.action.selectAll',\r\n    precondition: undefined,\r\n    kbOpts: {\r\n        weight: 0 /* EditorCore */,\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 31 /* KEY_A */\r\n    },\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarSelectionMenu,\r\n            group: '1_basic',\r\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('selectAll', \"Select All\"),\r\n            order: 1\r\n        }]\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}