{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\n\nimport { EditorOptions } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/standalone/standaloneBase.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { globals } from '../base/common/platform.js';\nimport { FormattingConflicts } from './contrib/format/format.js'; // Set defaults for standalone editor\n\nEditorOptions.wrappingIndent.defaultValue = 0\n/* None */\n;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = 3\n/* Advanced */\n;\nEditorOptions.overviewRulerLanes.defaultValue = 2; // We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\n\nFormattingConflicts.setFormatterSelector(function (formatter, document, mode) {\n  return Promise.resolve(formatter[0]);\n});\nvar api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport var CancellationTokenSource = api.CancellationTokenSource;\nexport var Emitter = api.Emitter;\nexport var KeyCode = api.KeyCode;\nexport var KeyMod = api.KeyMod;\nexport var Position = api.Position;\nexport var Range = api.Range;\nexport var Selection = api.Selection;\nexport var SelectionDirection = api.SelectionDirection;\nexport var MarkerSeverity = api.MarkerSeverity;\nexport var MarkerTag = api.MarkerTag;\nexport var Uri = api.Uri;\nexport var Token = api.Token;\nexport var editor = api.editor;\nexport var languages = api.languages;\n\nif (((_a = globals.MonacoEnvironment) === null || _a === void 0 ? void 0 : _a.globalAPI) || ((_b = globals.define) === null || _b === void 0 ? void 0 : _b.amd)) {\n  self.monaco = api;\n}\n\nif (typeof self.require !== 'undefined' && typeof self.require.config === 'function') {\n  self.require.config({\n    ignoreDuplicateModules: ['vscode-languageserver-types', 'vscode-languageserver-types/main', 'vscode-languageserver-textdocument', 'vscode-languageserver-textdocument/main', 'vscode-nls', 'vscode-nls/vscode-nls', 'jsonc-parser', 'jsonc-parser/main', 'vscode-uri', 'vscode-uri/index', 'vs/basic-languages/typescript/typescript']\n  });\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/editor.api.js"],"names":["_a","_b","EditorOptions","createMonacoBaseAPI","createMonacoEditorAPI","createMonacoLanguagesAPI","globals","FormattingConflicts","wrappingIndent","defaultValue","glyphMargin","autoIndent","overviewRulerLanes","setFormatterSelector","formatter","document","mode","Promise","resolve","api","editor","languages","CancellationTokenSource","Emitter","KeyCode","KeyMod","Position","Range","Selection","SelectionDirection","MarkerSeverity","MarkerTag","Uri","Token","MonacoEnvironment","globalAPI","define","amd","self","monaco","require","config","ignoreDuplicateModules"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,EAAJ,EAAQC,EAAR;;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,qBAAT,QAAsC,0CAAtC;AACA,SAASC,wBAAT,QAAyC,6CAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,mBAAT,QAAoC,4BAApC,C,CACA;;AACAL,aAAa,CAACM,cAAd,CAA6BC,YAA7B,GAA4C;AAAE;AAA9C;AACAP,aAAa,CAACQ,WAAd,CAA0BD,YAA1B,GAAyC,KAAzC;AACAP,aAAa,CAACS,UAAd,CAAyBF,YAAzB,GAAwC;AAAE;AAA1C;AACAP,aAAa,CAACU,kBAAd,CAAiCH,YAAjC,GAAgD,CAAhD,C,CACA;AACA;;AACAF,mBAAmB,CAACM,oBAApB,CAAyC,UAACC,SAAD,EAAYC,QAAZ,EAAsBC,IAAtB;AAAA,SAA+BC,OAAO,CAACC,OAAR,CAAgBJ,SAAS,CAAC,CAAD,CAAzB,CAA/B;AAAA,CAAzC;AACA,IAAMK,GAAG,GAAGhB,mBAAmB,EAA/B;AACAgB,GAAG,CAACC,MAAJ,GAAahB,qBAAqB,EAAlC;AACAe,GAAG,CAACE,SAAJ,GAAgBhB,wBAAwB,EAAxC;AACA,OAAO,IAAMiB,uBAAuB,GAAGH,GAAG,CAACG,uBAApC;AACP,OAAO,IAAMC,OAAO,GAAGJ,GAAG,CAACI,OAApB;AACP,OAAO,IAAMC,OAAO,GAAGL,GAAG,CAACK,OAApB;AACP,OAAO,IAAMC,MAAM,GAAGN,GAAG,CAACM,MAAnB;AACP,OAAO,IAAMC,QAAQ,GAAGP,GAAG,CAACO,QAArB;AACP,OAAO,IAAMC,KAAK,GAAGR,GAAG,CAACQ,KAAlB;AACP,OAAO,IAAMC,SAAS,GAAGT,GAAG,CAACS,SAAtB;AACP,OAAO,IAAMC,kBAAkB,GAAGV,GAAG,CAACU,kBAA/B;AACP,OAAO,IAAMC,cAAc,GAAGX,GAAG,CAACW,cAA3B;AACP,OAAO,IAAMC,SAAS,GAAGZ,GAAG,CAACY,SAAtB;AACP,OAAO,IAAMC,GAAG,GAAGb,GAAG,CAACa,GAAhB;AACP,OAAO,IAAMC,KAAK,GAAGd,GAAG,CAACc,KAAlB;AACP,OAAO,IAAMb,MAAM,GAAGD,GAAG,CAACC,MAAnB;AACP,OAAO,IAAMC,SAAS,GAAGF,GAAG,CAACE,SAAtB;;AACP,IAAI,CAAC,CAACrB,EAAE,GAAGM,OAAO,CAAC4B,iBAAd,MAAqC,IAArC,IAA6ClC,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACmC,SAA1E,MAAyF,CAAClC,EAAE,GAAGK,OAAO,CAAC8B,MAAd,MAA0B,IAA1B,IAAkCnC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACoC,GAAvJ,CAAJ,EAAiK;AAC7JC,EAAAA,IAAI,CAACC,MAAL,GAAcpB,GAAd;AACH;;AACD,IAAI,OAAOmB,IAAI,CAACE,OAAZ,KAAwB,WAAxB,IAAuC,OAAOF,IAAI,CAACE,OAAL,CAAaC,MAApB,KAA+B,UAA1E,EAAsF;AAClFH,EAAAA,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoB;AAChBC,IAAAA,sBAAsB,EAAE,CACpB,6BADoB,EAEpB,kCAFoB,EAGpB,oCAHoB,EAIpB,yCAJoB,EAKpB,YALoB,EAMpB,uBANoB,EAOpB,cAPoB,EAQpB,mBARoB,EASpB,YAToB,EAUpB,kBAVoB,EAWpB,0CAXoB;AADR,GAApB;AAeH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a, _b;\r\nimport { EditorOptions } from './common/config/editorOptions.js';\r\nimport { createMonacoBaseAPI } from './common/standalone/standaloneBase.js';\r\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\r\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\r\nimport { globals } from '../base/common/platform.js';\r\nimport { FormattingConflicts } from './contrib/format/format.js';\r\n// Set defaults for standalone editor\r\nEditorOptions.wrappingIndent.defaultValue = 0 /* None */;\r\nEditorOptions.glyphMargin.defaultValue = false;\r\nEditorOptions.autoIndent.defaultValue = 3 /* Advanced */;\r\nEditorOptions.overviewRulerLanes.defaultValue = 2;\r\n// We need to register a formatter selector which simply picks the first available formatter.\r\n// See https://github.com/microsoft/monaco-editor/issues/2327\r\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\r\nconst api = createMonacoBaseAPI();\r\napi.editor = createMonacoEditorAPI();\r\napi.languages = createMonacoLanguagesAPI();\r\nexport const CancellationTokenSource = api.CancellationTokenSource;\r\nexport const Emitter = api.Emitter;\r\nexport const KeyCode = api.KeyCode;\r\nexport const KeyMod = api.KeyMod;\r\nexport const Position = api.Position;\r\nexport const Range = api.Range;\r\nexport const Selection = api.Selection;\r\nexport const SelectionDirection = api.SelectionDirection;\r\nexport const MarkerSeverity = api.MarkerSeverity;\r\nexport const MarkerTag = api.MarkerTag;\r\nexport const Uri = api.Uri;\r\nexport const Token = api.Token;\r\nexport const editor = api.editor;\r\nexport const languages = api.languages;\r\nif (((_a = globals.MonacoEnvironment) === null || _a === void 0 ? void 0 : _a.globalAPI) || ((_b = globals.define) === null || _b === void 0 ? void 0 : _b.amd)) {\r\n    self.monaco = api;\r\n}\r\nif (typeof self.require !== 'undefined' && typeof self.require.config === 'function') {\r\n    self.require.config({\r\n        ignoreDuplicateModules: [\r\n            'vscode-languageserver-types',\r\n            'vscode-languageserver-types/main',\r\n            'vscode-languageserver-textdocument',\r\n            'vscode-languageserver-textdocument/main',\r\n            'vscode-nls',\r\n            'vscode-nls/vscode-nls',\r\n            'jsonc-parser',\r\n            'jsonc-parser/main',\r\n            'vscode-uri',\r\n            'vscode-uri/index',\r\n            'vs/basic-languages/typescript/typescript'\r\n        ]\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}