{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { MouseTarget } from '../controller/mouseTarget.js';\nexport var ViewUserInputEvents = /*#__PURE__*/function () {\n  function ViewUserInputEvents(coordinatesConverter) {\n    _classCallCheck(this, ViewUserInputEvents);\n\n    this.onKeyDown = null;\n    this.onKeyUp = null;\n    this.onContextMenu = null;\n    this.onMouseMove = null;\n    this.onMouseLeave = null;\n    this.onMouseDown = null;\n    this.onMouseUp = null;\n    this.onMouseDrag = null;\n    this.onMouseDrop = null;\n    this.onMouseDropCanceled = null;\n    this.onMouseWheel = null;\n    this._coordinatesConverter = coordinatesConverter;\n  }\n\n  _createClass(ViewUserInputEvents, [{\n    key: \"emitKeyDown\",\n    value: function emitKeyDown(e) {\n      if (this.onKeyDown) {\n        this.onKeyDown(e);\n      }\n    }\n  }, {\n    key: \"emitKeyUp\",\n    value: function emitKeyUp(e) {\n      if (this.onKeyUp) {\n        this.onKeyUp(e);\n      }\n    }\n  }, {\n    key: \"emitContextMenu\",\n    value: function emitContextMenu(e) {\n      if (this.onContextMenu) {\n        this.onContextMenu(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseMove\",\n    value: function emitMouseMove(e) {\n      if (this.onMouseMove) {\n        this.onMouseMove(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseLeave\",\n    value: function emitMouseLeave(e) {\n      if (this.onMouseLeave) {\n        this.onMouseLeave(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseDown\",\n    value: function emitMouseDown(e) {\n      if (this.onMouseDown) {\n        this.onMouseDown(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseUp\",\n    value: function emitMouseUp(e) {\n      if (this.onMouseUp) {\n        this.onMouseUp(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseDrag\",\n    value: function emitMouseDrag(e) {\n      if (this.onMouseDrag) {\n        this.onMouseDrag(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseDrop\",\n    value: function emitMouseDrop(e) {\n      if (this.onMouseDrop) {\n        this.onMouseDrop(this._convertViewToModelMouseEvent(e));\n      }\n    }\n  }, {\n    key: \"emitMouseDropCanceled\",\n    value: function emitMouseDropCanceled() {\n      if (this.onMouseDropCanceled) {\n        this.onMouseDropCanceled();\n      }\n    }\n  }, {\n    key: \"emitMouseWheel\",\n    value: function emitMouseWheel(e) {\n      if (this.onMouseWheel) {\n        this.onMouseWheel(e);\n      }\n    }\n  }, {\n    key: \"_convertViewToModelMouseEvent\",\n    value: function _convertViewToModelMouseEvent(e) {\n      if (e.target) {\n        return {\n          event: e.event,\n          target: this._convertViewToModelMouseTarget(e.target)\n        };\n      }\n\n      return e;\n    }\n  }, {\n    key: \"_convertViewToModelMouseTarget\",\n    value: function _convertViewToModelMouseTarget(target) {\n      return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n  }], [{\n    key: \"convertViewToModelMouseTarget\",\n    value: function convertViewToModelMouseTarget(target, coordinatesConverter) {\n      return new ExternalMouseTarget(target.element, target.type, target.mouseColumn, target.position ? coordinatesConverter.convertViewPositionToModelPosition(target.position) : null, target.range ? coordinatesConverter.convertViewRangeToModelRange(target.range) : null, target.detail);\n    }\n  }]);\n\n  return ViewUserInputEvents;\n}();\n\nvar ExternalMouseTarget = /*#__PURE__*/function () {\n  function ExternalMouseTarget(element, type, mouseColumn, position, range, detail) {\n    _classCallCheck(this, ExternalMouseTarget);\n\n    this.element = element;\n    this.type = type;\n    this.mouseColumn = mouseColumn;\n    this.position = position;\n    this.range = range;\n    this.detail = detail;\n  }\n\n  _createClass(ExternalMouseTarget, [{\n    key: \"toString\",\n    value: function toString() {\n      return MouseTarget.toString(this);\n    }\n  }]);\n\n  return ExternalMouseTarget;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js"],"names":["MouseTarget","ViewUserInputEvents","coordinatesConverter","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","e","_convertViewToModelMouseEvent","target","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","ExternalMouseTarget","element","type","mouseColumn","position","convertViewPositionToModelPosition","range","convertViewRangeToModelRange","detail","toString"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { MouseTarget } from '../controller/mouseTarget.js';\r\nexport class ViewUserInputEvents {\r\n    constructor(coordinatesConverter) {\r\n        this.onKeyDown = null;\r\n        this.onKeyUp = null;\r\n        this.onContextMenu = null;\r\n        this.onMouseMove = null;\r\n        this.onMouseLeave = null;\r\n        this.onMouseDown = null;\r\n        this.onMouseUp = null;\r\n        this.onMouseDrag = null;\r\n        this.onMouseDrop = null;\r\n        this.onMouseDropCanceled = null;\r\n        this.onMouseWheel = null;\r\n        this._coordinatesConverter = coordinatesConverter;\r\n    }\r\n    emitKeyDown(e) {\r\n        if (this.onKeyDown) {\r\n            this.onKeyDown(e);\r\n        }\r\n    }\r\n    emitKeyUp(e) {\r\n        if (this.onKeyUp) {\r\n            this.onKeyUp(e);\r\n        }\r\n    }\r\n    emitContextMenu(e) {\r\n        if (this.onContextMenu) {\r\n            this.onContextMenu(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseMove(e) {\r\n        if (this.onMouseMove) {\r\n            this.onMouseMove(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseLeave(e) {\r\n        if (this.onMouseLeave) {\r\n            this.onMouseLeave(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseDown(e) {\r\n        if (this.onMouseDown) {\r\n            this.onMouseDown(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseUp(e) {\r\n        if (this.onMouseUp) {\r\n            this.onMouseUp(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseDrag(e) {\r\n        if (this.onMouseDrag) {\r\n            this.onMouseDrag(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseDrop(e) {\r\n        if (this.onMouseDrop) {\r\n            this.onMouseDrop(this._convertViewToModelMouseEvent(e));\r\n        }\r\n    }\r\n    emitMouseDropCanceled() {\r\n        if (this.onMouseDropCanceled) {\r\n            this.onMouseDropCanceled();\r\n        }\r\n    }\r\n    emitMouseWheel(e) {\r\n        if (this.onMouseWheel) {\r\n            this.onMouseWheel(e);\r\n        }\r\n    }\r\n    _convertViewToModelMouseEvent(e) {\r\n        if (e.target) {\r\n            return {\r\n                event: e.event,\r\n                target: this._convertViewToModelMouseTarget(e.target)\r\n            };\r\n        }\r\n        return e;\r\n    }\r\n    _convertViewToModelMouseTarget(target) {\r\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\r\n    }\r\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\r\n        return new ExternalMouseTarget(target.element, target.type, target.mouseColumn, target.position ? coordinatesConverter.convertViewPositionToModelPosition(target.position) : null, target.range ? coordinatesConverter.convertViewRangeToModelRange(target.range) : null, target.detail);\r\n    }\r\n}\r\nclass ExternalMouseTarget {\r\n    constructor(element, type, mouseColumn, position, range, detail) {\r\n        this.element = element;\r\n        this.type = type;\r\n        this.mouseColumn = mouseColumn;\r\n        this.position = position;\r\n        this.range = range;\r\n        this.detail = detail;\r\n    }\r\n    toString() {\r\n        return MouseTarget.toString(this);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}