{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { InlineDecoration, ViewModelDecoration } from './viewModel.js';\nimport { filterValidationDecorations } from '../config/editorOptions.js';\nexport var ViewModelDecorations = /*#__PURE__*/function () {\n  function ViewModelDecorations(editorId, model, configuration, linesCollection, coordinatesConverter) {\n    _classCallCheck(this, ViewModelDecorations);\n\n    this.editorId = editorId;\n    this.model = model;\n    this.configuration = configuration;\n    this._linesCollection = linesCollection;\n    this._coordinatesConverter = coordinatesConverter;\n    this._decorationsCache = Object.create(null);\n    this._cachedModelDecorationsResolver = null;\n    this._cachedModelDecorationsResolverViewRange = null;\n  }\n\n  _createClass(ViewModelDecorations, [{\n    key: \"_clearCachedModelDecorationsResolver\",\n    value: function _clearCachedModelDecorationsResolver() {\n      this._cachedModelDecorationsResolver = null;\n      this._cachedModelDecorationsResolverViewRange = null;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._decorationsCache = Object.create(null);\n\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._decorationsCache = Object.create(null);\n\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"onModelDecorationsChanged\",\n    value: function onModelDecorationsChanged() {\n      this._decorationsCache = Object.create(null);\n\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged() {\n      this._decorationsCache = Object.create(null);\n\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"_getOrCreateViewModelDecoration\",\n    value: function _getOrCreateViewModelDecoration(modelDecoration) {\n      var id = modelDecoration.id;\n      var r = this._decorationsCache[id];\n\n      if (!r) {\n        var modelRange = modelDecoration.range;\n        var options = modelDecoration.options;\n        var viewRange;\n\n        if (options.isWholeLine) {\n          var start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1));\n\n          var end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)));\n\n          viewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        } else {\n          viewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange);\n        }\n\n        r = new ViewModelDecoration(viewRange, options);\n        this._decorationsCache[id] = r;\n      }\n\n      return r;\n    }\n  }, {\n    key: \"getDecorationsViewportData\",\n    value: function getDecorationsViewportData(viewRange) {\n      var cacheIsValid = this._cachedModelDecorationsResolver !== null;\n      cacheIsValid = cacheIsValid && viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange);\n\n      if (!cacheIsValid) {\n        this._cachedModelDecorationsResolver = this._getDecorationsViewportData(viewRange);\n        this._cachedModelDecorationsResolverViewRange = viewRange;\n      }\n\n      return this._cachedModelDecorationsResolver;\n    }\n  }, {\n    key: \"_getDecorationsViewportData\",\n    value: function _getDecorationsViewportData(viewportRange) {\n      var modelDecorations = this._linesCollection.getDecorationsInRange(viewportRange, this.editorId, filterValidationDecorations(this.configuration.options));\n\n      var startLineNumber = viewportRange.startLineNumber;\n      var endLineNumber = viewportRange.endLineNumber;\n      var decorationsInViewport = [],\n          decorationsInViewportLen = 0;\n      var inlineDecorations = [];\n\n      for (var j = startLineNumber; j <= endLineNumber; j++) {\n        inlineDecorations[j - startLineNumber] = [];\n      }\n\n      for (var i = 0, len = modelDecorations.length; i < len; i++) {\n        var modelDecoration = modelDecorations[i];\n        var decorationOptions = modelDecoration.options;\n\n        var viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n\n        var viewRange = viewModelDecoration.range;\n        decorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n\n        if (decorationOptions.inlineClassName) {\n          var inlineDecoration = new InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? 3\n          /* RegularAffectingLetterSpacing */\n          : 0\n          /* Regular */\n          );\n          var intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\n          var intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\n\n          for (var _j = intersectedStartLineNumber; _j <= intersectedEndLineNumber; _j++) {\n            inlineDecorations[_j - startLineNumber].push(inlineDecoration);\n          }\n        }\n\n        if (decorationOptions.beforeContentClassName) {\n          if (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\n            var _inlineDecoration = new InlineDecoration(new Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn), decorationOptions.beforeContentClassName, 1\n            /* Before */\n            );\n\n            inlineDecorations[viewRange.startLineNumber - startLineNumber].push(_inlineDecoration);\n          }\n        }\n\n        if (decorationOptions.afterContentClassName) {\n          if (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\n            var _inlineDecoration2 = new InlineDecoration(new Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn), decorationOptions.afterContentClassName, 2\n            /* After */\n            );\n\n            inlineDecorations[viewRange.endLineNumber - startLineNumber].push(_inlineDecoration2);\n          }\n        }\n      }\n\n      return {\n        decorations: decorationsInViewport,\n        inlineDecorations: inlineDecorations\n      };\n    }\n  }]);\n\n  return ViewModelDecorations;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewModelDecorations.js"],"names":["Position","Range","InlineDecoration","ViewModelDecoration","filterValidationDecorations","ViewModelDecorations","editorId","model","configuration","linesCollection","coordinatesConverter","_linesCollection","_coordinatesConverter","_decorationsCache","Object","create","_cachedModelDecorationsResolver","_cachedModelDecorationsResolverViewRange","_clearCachedModelDecorationsResolver","modelDecoration","id","r","modelRange","range","options","viewRange","isWholeLine","start","convertModelPositionToViewPosition","startLineNumber","end","endLineNumber","getLineMaxColumn","lineNumber","column","convertModelRangeToViewRange","cacheIsValid","equalsRange","_getDecorationsViewportData","viewportRange","modelDecorations","getDecorationsInRange","decorationsInViewport","decorationsInViewportLen","inlineDecorations","j","i","len","length","decorationOptions","viewModelDecoration","_getOrCreateViewModelDecoration","inlineClassName","inlineDecoration","inlineClassNameAffectsLetterSpacing","intersectedStartLineNumber","Math","max","intersectedEndLineNumber","min","push","beforeContentClassName","startColumn","afterContentClassName","endColumn","decorations"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { InlineDecoration, ViewModelDecoration } from './viewModel.js';\r\nimport { filterValidationDecorations } from '../config/editorOptions.js';\r\nexport class ViewModelDecorations {\r\n    constructor(editorId, model, configuration, linesCollection, coordinatesConverter) {\r\n        this.editorId = editorId;\r\n        this.model = model;\r\n        this.configuration = configuration;\r\n        this._linesCollection = linesCollection;\r\n        this._coordinatesConverter = coordinatesConverter;\r\n        this._decorationsCache = Object.create(null);\r\n        this._cachedModelDecorationsResolver = null;\r\n        this._cachedModelDecorationsResolverViewRange = null;\r\n    }\r\n    _clearCachedModelDecorationsResolver() {\r\n        this._cachedModelDecorationsResolver = null;\r\n        this._cachedModelDecorationsResolverViewRange = null;\r\n    }\r\n    dispose() {\r\n        this._decorationsCache = Object.create(null);\r\n        this._clearCachedModelDecorationsResolver();\r\n    }\r\n    reset() {\r\n        this._decorationsCache = Object.create(null);\r\n        this._clearCachedModelDecorationsResolver();\r\n    }\r\n    onModelDecorationsChanged() {\r\n        this._decorationsCache = Object.create(null);\r\n        this._clearCachedModelDecorationsResolver();\r\n    }\r\n    onLineMappingChanged() {\r\n        this._decorationsCache = Object.create(null);\r\n        this._clearCachedModelDecorationsResolver();\r\n    }\r\n    _getOrCreateViewModelDecoration(modelDecoration) {\r\n        const id = modelDecoration.id;\r\n        let r = this._decorationsCache[id];\r\n        if (!r) {\r\n            const modelRange = modelDecoration.range;\r\n            const options = modelDecoration.options;\r\n            let viewRange;\r\n            if (options.isWholeLine) {\r\n                const start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1));\r\n                const end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)));\r\n                viewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n            }\r\n            else {\r\n                viewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange);\r\n            }\r\n            r = new ViewModelDecoration(viewRange, options);\r\n            this._decorationsCache[id] = r;\r\n        }\r\n        return r;\r\n    }\r\n    getDecorationsViewportData(viewRange) {\r\n        let cacheIsValid = (this._cachedModelDecorationsResolver !== null);\r\n        cacheIsValid = cacheIsValid && (viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange));\r\n        if (!cacheIsValid) {\r\n            this._cachedModelDecorationsResolver = this._getDecorationsViewportData(viewRange);\r\n            this._cachedModelDecorationsResolverViewRange = viewRange;\r\n        }\r\n        return this._cachedModelDecorationsResolver;\r\n    }\r\n    _getDecorationsViewportData(viewportRange) {\r\n        const modelDecorations = this._linesCollection.getDecorationsInRange(viewportRange, this.editorId, filterValidationDecorations(this.configuration.options));\r\n        const startLineNumber = viewportRange.startLineNumber;\r\n        const endLineNumber = viewportRange.endLineNumber;\r\n        let decorationsInViewport = [], decorationsInViewportLen = 0;\r\n        let inlineDecorations = [];\r\n        for (let j = startLineNumber; j <= endLineNumber; j++) {\r\n            inlineDecorations[j - startLineNumber] = [];\r\n        }\r\n        for (let i = 0, len = modelDecorations.length; i < len; i++) {\r\n            let modelDecoration = modelDecorations[i];\r\n            let decorationOptions = modelDecoration.options;\r\n            let viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\r\n            let viewRange = viewModelDecoration.range;\r\n            decorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\r\n            if (decorationOptions.inlineClassName) {\r\n                let inlineDecoration = new InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? 3 /* RegularAffectingLetterSpacing */ : 0 /* Regular */);\r\n                let intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\r\n                let intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\r\n                for (let j = intersectedStartLineNumber; j <= intersectedEndLineNumber; j++) {\r\n                    inlineDecorations[j - startLineNumber].push(inlineDecoration);\r\n                }\r\n            }\r\n            if (decorationOptions.beforeContentClassName) {\r\n                if (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\r\n                    let inlineDecoration = new InlineDecoration(new Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn), decorationOptions.beforeContentClassName, 1 /* Before */);\r\n                    inlineDecorations[viewRange.startLineNumber - startLineNumber].push(inlineDecoration);\r\n                }\r\n            }\r\n            if (decorationOptions.afterContentClassName) {\r\n                if (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\r\n                    let inlineDecoration = new InlineDecoration(new Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn), decorationOptions.afterContentClassName, 2 /* After */);\r\n                    inlineDecorations[viewRange.endLineNumber - startLineNumber].push(inlineDecoration);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            decorations: decorationsInViewport,\r\n            inlineDecorations: inlineDecorations\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}