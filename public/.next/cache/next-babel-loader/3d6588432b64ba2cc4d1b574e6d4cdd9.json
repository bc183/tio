{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Event as BaseEvent, Emitter } from '../common/event.js';\nexport var domEvent = function domEvent(element, type, useCapture) {\n  var fn = function fn(e) {\n    return emitter.fire(e);\n  };\n\n  var emitter = new Emitter({\n    onFirstListenerAdd: function onFirstListenerAdd() {\n      element.addEventListener(type, fn, useCapture);\n    },\n    onLastListenerRemove: function onLastListenerRemove() {\n      element.removeEventListener(type, fn, useCapture);\n    }\n  });\n  return emitter.event;\n};\nexport function stop(event) {\n  return BaseEvent.map(event, function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    return e;\n  });\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/event.js"],"names":["Event","BaseEvent","Emitter","domEvent","element","type","useCapture","fn","e","emitter","fire","onFirstListenerAdd","addEventListener","onLastListenerRemove","removeEventListener","event","stop","map","preventDefault","stopPropagation"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,SAAlB,EAA6BC,OAA7B,QAA4C,oBAA5C;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,UAAhB,EAA+B;AACnD,MAAMC,EAAE,GAAG,SAALA,EAAK,CAACC,CAAD;AAAA,WAAOC,OAAO,CAACC,IAAR,CAAaF,CAAb,CAAP;AAAA,GAAX;;AACA,MAAMC,OAAO,GAAG,IAAIP,OAAJ,CAAY;AACxBS,IAAAA,kBAAkB,EAAE,8BAAM;AACtBP,MAAAA,OAAO,CAACQ,gBAAR,CAAyBP,IAAzB,EAA+BE,EAA/B,EAAmCD,UAAnC;AACH,KAHuB;AAIxBO,IAAAA,oBAAoB,EAAE,gCAAM;AACxBT,MAAAA,OAAO,CAACU,mBAAR,CAA4BT,IAA5B,EAAkCE,EAAlC,EAAsCD,UAAtC;AACH;AANuB,GAAZ,CAAhB;AAQA,SAAOG,OAAO,CAACM,KAAf;AACH,CAXM;AAYP,OAAO,SAASC,IAAT,CAAcD,KAAd,EAAqB;AACxB,SAAOd,SAAS,CAACgB,GAAV,CAAcF,KAAd,EAAqB,UAAAP,CAAC,EAAI;AAC7BA,IAAAA,CAAC,CAACU,cAAF;AACAV,IAAAA,CAAC,CAACW,eAAF;AACA,WAAOX,CAAP;AACH,GAJM,CAAP;AAKH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event as BaseEvent, Emitter } from '../common/event.js';\r\nexport const domEvent = (element, type, useCapture) => {\r\n    const fn = (e) => emitter.fire(e);\r\n    const emitter = new Emitter({\r\n        onFirstListenerAdd: () => {\r\n            element.addEventListener(type, fn, useCapture);\r\n        },\r\n        onLastListenerRemove: () => {\r\n            element.removeEventListener(type, fn, useCapture);\r\n        }\r\n    });\r\n    return emitter.event;\r\n};\r\nexport function stop(event) {\r\n    return BaseEvent.map(event, e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return e;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}