{"ast":null,"code":"import _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var Node = function Node(data) {\n  _classCallCheck(this, Node);\n\n  this.incoming = new Map();\n  this.outgoing = new Map();\n  this.data = data;\n};\nexport var Graph = /*#__PURE__*/function () {\n  function Graph(_hashFn) {\n    _classCallCheck(this, Graph);\n\n    this._hashFn = _hashFn;\n    this._nodes = new Map(); // empty\n  }\n\n  _createClass(Graph, [{\n    key: \"roots\",\n    value: function roots() {\n      var ret = [];\n\n      var _iterator = _createForOfIteratorHelper(this._nodes.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n\n          if (node.outgoing.size === 0) {\n            ret.push(node);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"insertEdge\",\n    value: function insertEdge(from, to) {\n      var fromNode = this.lookupOrInsertNode(from);\n      var toNode = this.lookupOrInsertNode(to);\n      fromNode.outgoing.set(this._hashFn(to), toNode);\n      toNode.incoming.set(this._hashFn(from), fromNode);\n    }\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(data) {\n      var key = this._hashFn(data);\n\n      this._nodes[\"delete\"](key);\n\n      var _iterator2 = _createForOfIteratorHelper(this._nodes.values()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var node = _step2.value;\n          node.outgoing[\"delete\"](key);\n          node.incoming[\"delete\"](key);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"lookupOrInsertNode\",\n    value: function lookupOrInsertNode(data) {\n      var key = this._hashFn(data);\n\n      var node = this._nodes.get(key);\n\n      if (!node) {\n        node = new Node(data);\n\n        this._nodes.set(key, node);\n      }\n\n      return node;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._nodes.size === 0;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var data = [];\n\n      var _iterator3 = _createForOfIteratorHelper(this._nodes),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              value = _step3$value[1];\n\n          data.push(\"\".concat(key, \", (incoming)[\").concat(_toConsumableArray(value.incoming.keys()).join(', '), \"], (outgoing)[\").concat(_toConsumableArray(value.outgoing.keys()).join(','), \"]\"));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return data.join('\\n');\n    }\n  }]);\n\n  return Graph;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/instantiation/common/graph.js"],"names":["Node","data","incoming","Map","outgoing","Graph","_hashFn","_nodes","ret","values","node","size","push","from","to","fromNode","lookupOrInsertNode","toNode","set","key","get","value","keys","join"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,IAAb,GACI,cAAYC,IAAZ,EAAkB;AAAA;;AACd,OAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACA,OAAKC,QAAL,GAAgB,IAAID,GAAJ,EAAhB;AACA,OAAKF,IAAL,GAAYA,IAAZ;AACH,CALL;AAOA,WAAaI,KAAb;AACI,iBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAc,IAAIJ,GAAJ,EAAd,CAFiB,CAGjB;AACH;;AALL;AAAA;AAAA,4BAMY;AACJ,UAAMK,GAAG,GAAG,EAAZ;;AADI,iDAEa,KAAKD,MAAL,CAAYE,MAAZ,EAFb;AAAA;;AAAA;AAEJ,4DAAuC;AAAA,cAA9BC,IAA8B;;AACnC,cAAIA,IAAI,CAACN,QAAL,CAAcO,IAAd,KAAuB,CAA3B,EAA8B;AAC1BH,YAAAA,GAAG,CAACI,IAAJ,CAASF,IAAT;AACH;AACJ;AANG;AAAA;AAAA;AAAA;AAAA;;AAOJ,aAAOF,GAAP;AACH;AAdL;AAAA;AAAA,+BAeeK,IAff,EAeqBC,EAfrB,EAeyB;AACjB,UAAMC,QAAQ,GAAG,KAAKC,kBAAL,CAAwBH,IAAxB,CAAjB;AACA,UAAMI,MAAM,GAAG,KAAKD,kBAAL,CAAwBF,EAAxB,CAAf;AACAC,MAAAA,QAAQ,CAACX,QAAT,CAAkBc,GAAlB,CAAsB,KAAKZ,OAAL,CAAaQ,EAAb,CAAtB,EAAwCG,MAAxC;AACAA,MAAAA,MAAM,CAACf,QAAP,CAAgBgB,GAAhB,CAAoB,KAAKZ,OAAL,CAAaO,IAAb,CAApB,EAAwCE,QAAxC;AACH;AApBL;AAAA;AAAA,+BAqBed,IArBf,EAqBqB;AACb,UAAMkB,GAAG,GAAG,KAAKb,OAAL,CAAaL,IAAb,CAAZ;;AACA,WAAKM,MAAL,WAAmBY,GAAnB;;AAFa,kDAGI,KAAKZ,MAAL,CAAYE,MAAZ,EAHJ;AAAA;;AAAA;AAGb,+DAAuC;AAAA,cAA9BC,IAA8B;AACnCA,UAAAA,IAAI,CAACN,QAAL,WAAqBe,GAArB;AACAT,UAAAA,IAAI,CAACR,QAAL,WAAqBiB,GAArB;AACH;AANY;AAAA;AAAA;AAAA;AAAA;AAOhB;AA5BL;AAAA;AAAA,uCA6BuBlB,IA7BvB,EA6B6B;AACrB,UAAMkB,GAAG,GAAG,KAAKb,OAAL,CAAaL,IAAb,CAAZ;;AACA,UAAIS,IAAI,GAAG,KAAKH,MAAL,CAAYa,GAAZ,CAAgBD,GAAhB,CAAX;;AACA,UAAI,CAACT,IAAL,EAAW;AACPA,QAAAA,IAAI,GAAG,IAAIV,IAAJ,CAASC,IAAT,CAAP;;AACA,aAAKM,MAAL,CAAYW,GAAZ,CAAgBC,GAAhB,EAAqBT,IAArB;AACH;;AACD,aAAOA,IAAP;AACH;AArCL;AAAA;AAAA,8BAsCc;AACN,aAAO,KAAKH,MAAL,CAAYI,IAAZ,KAAqB,CAA5B;AACH;AAxCL;AAAA;AAAA,+BAyCe;AACP,UAAIV,IAAI,GAAG,EAAX;;AADO,kDAEkB,KAAKM,MAFvB;AAAA;;AAAA;AAEP,+DAAsC;AAAA;AAAA,cAA5BY,GAA4B;AAAA,cAAvBE,KAAuB;;AAClCpB,UAAAA,IAAI,CAACW,IAAL,WAAaO,GAAb,0BAAgC,mBAAIE,KAAK,CAACnB,QAAN,CAAeoB,IAAf,EAAJ,EAA2BC,IAA3B,CAAgC,IAAhC,CAAhC,2BAAsF,mBAAIF,KAAK,CAACjB,QAAN,CAAekB,IAAf,EAAJ,EAA2BC,IAA3B,CAAgC,GAAhC,CAAtF;AACH;AAJM;AAAA;AAAA;AAAA;AAAA;;AAKP,aAAOtB,IAAI,CAACsB,IAAL,CAAU,IAAV,CAAP;AACH;AA/CL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Node {\r\n    constructor(data) {\r\n        this.incoming = new Map();\r\n        this.outgoing = new Map();\r\n        this.data = data;\r\n    }\r\n}\r\nexport class Graph {\r\n    constructor(_hashFn) {\r\n        this._hashFn = _hashFn;\r\n        this._nodes = new Map();\r\n        // empty\r\n    }\r\n    roots() {\r\n        const ret = [];\r\n        for (let node of this._nodes.values()) {\r\n            if (node.outgoing.size === 0) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    insertEdge(from, to) {\r\n        const fromNode = this.lookupOrInsertNode(from);\r\n        const toNode = this.lookupOrInsertNode(to);\r\n        fromNode.outgoing.set(this._hashFn(to), toNode);\r\n        toNode.incoming.set(this._hashFn(from), fromNode);\r\n    }\r\n    removeNode(data) {\r\n        const key = this._hashFn(data);\r\n        this._nodes.delete(key);\r\n        for (let node of this._nodes.values()) {\r\n            node.outgoing.delete(key);\r\n            node.incoming.delete(key);\r\n        }\r\n    }\r\n    lookupOrInsertNode(data) {\r\n        const key = this._hashFn(data);\r\n        let node = this._nodes.get(key);\r\n        if (!node) {\r\n            node = new Node(data);\r\n            this._nodes.set(key, node);\r\n        }\r\n        return node;\r\n    }\r\n    isEmpty() {\r\n        return this._nodes.size === 0;\r\n    }\r\n    toString() {\r\n        let data = [];\r\n        for (let [key, value] of this._nodes) {\r\n            data.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\r\n        }\r\n        return data.join('\\n');\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}