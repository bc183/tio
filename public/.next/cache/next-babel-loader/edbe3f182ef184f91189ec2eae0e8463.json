{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport var ScrollbarVisibilityController = /*#__PURE__*/function (_Disposable) {\n  _inherits(ScrollbarVisibilityController, _Disposable);\n\n  var _super = _createSuper(ScrollbarVisibilityController);\n\n  function ScrollbarVisibilityController(visibility, visibleClassName, invisibleClassName) {\n    var _this;\n\n    _classCallCheck(this, ScrollbarVisibilityController);\n\n    _this = _super.call(this);\n    _this._visibility = visibility;\n    _this._visibleClassName = visibleClassName;\n    _this._invisibleClassName = invisibleClassName;\n    _this._domNode = null;\n    _this._isVisible = false;\n    _this._isNeeded = false;\n    _this._shouldBeVisible = false;\n    _this._revealTimer = _this._register(new TimeoutTimer());\n    return _this;\n  } // ----------------- Hide / Reveal\n\n\n  _createClass(ScrollbarVisibilityController, [{\n    key: \"applyVisibilitySetting\",\n    value: function applyVisibilitySetting(shouldBeVisible) {\n      if (this._visibility === 2\n      /* Hidden */\n      ) {\n          return false;\n        }\n\n      if (this._visibility === 3\n      /* Visible */\n      ) {\n          return true;\n        }\n\n      return shouldBeVisible;\n    }\n  }, {\n    key: \"setShouldBeVisible\",\n    value: function setShouldBeVisible(rawShouldBeVisible) {\n      var shouldBeVisible = this.applyVisibilitySetting(rawShouldBeVisible);\n\n      if (this._shouldBeVisible !== shouldBeVisible) {\n        this._shouldBeVisible = shouldBeVisible;\n        this.ensureVisibility();\n      }\n    }\n  }, {\n    key: \"setIsNeeded\",\n    value: function setIsNeeded(isNeeded) {\n      if (this._isNeeded !== isNeeded) {\n        this._isNeeded = isNeeded;\n        this.ensureVisibility();\n      }\n    }\n  }, {\n    key: \"setDomNode\",\n    value: function setDomNode(domNode) {\n      this._domNode = domNode;\n\n      this._domNode.setClassName(this._invisibleClassName); // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n\n\n      this.setShouldBeVisible(false);\n    }\n  }, {\n    key: \"ensureVisibility\",\n    value: function ensureVisibility() {\n      if (!this._isNeeded) {\n        // Nothing to be rendered\n        this._hide(false);\n\n        return;\n      }\n\n      if (this._shouldBeVisible) {\n        this._reveal();\n      } else {\n        this._hide(true);\n      }\n    }\n  }, {\n    key: \"_reveal\",\n    value: function _reveal() {\n      var _this2 = this;\n\n      if (this._isVisible) {\n        return;\n      }\n\n      this._isVisible = true; // The CSS animation doesn't play otherwise\n\n      this._revealTimer.setIfNotSet(function () {\n        if (_this2._domNode) {\n          _this2._domNode.setClassName(_this2._visibleClassName);\n        }\n      }, 0);\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide(withFadeAway) {\n      this._revealTimer.cancel();\n\n      if (!this._isVisible) {\n        return;\n      }\n\n      this._isVisible = false;\n\n      if (this._domNode) {\n        this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n      }\n    }\n  }]);\n\n  return ScrollbarVisibilityController;\n}(Disposable);","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js"],"names":["TimeoutTimer","Disposable","ScrollbarVisibilityController","visibility","visibleClassName","invisibleClassName","_visibility","_visibleClassName","_invisibleClassName","_domNode","_isVisible","_isNeeded","_shouldBeVisible","_revealTimer","_register","shouldBeVisible","rawShouldBeVisible","applyVisibilitySetting","ensureVisibility","isNeeded","domNode","setClassName","setShouldBeVisible","_hide","_reveal","setIfNotSet","withFadeAway","cancel"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,WAAaC,6BAAb;AAAA;;AAAA;;AACI,yCAAYC,UAAZ,EAAwBC,gBAAxB,EAA0CC,kBAA1C,EAA8D;AAAA;;AAAA;;AAC1D;AACA,UAAKC,WAAL,GAAmBH,UAAnB;AACA,UAAKI,iBAAL,GAAyBH,gBAAzB;AACA,UAAKI,mBAAL,GAA2BH,kBAA3B;AACA,UAAKI,QAAL,GAAgB,IAAhB;AACA,UAAKC,UAAL,GAAkB,KAAlB;AACA,UAAKC,SAAL,GAAiB,KAAjB;AACA,UAAKC,gBAAL,GAAwB,KAAxB;AACA,UAAKC,YAAL,GAAoB,MAAKC,SAAL,CAAe,IAAId,YAAJ,EAAf,CAApB;AAT0D;AAU7D,GAXL,CAYI;;;AAZJ;AAAA;AAAA,2CAa2Be,eAb3B,EAa4C;AACpC,UAAI,KAAKT,WAAL,KAAqB;AAAE;AAA3B,QAAyC;AACrC,iBAAO,KAAP;AACH;;AACD,UAAI,KAAKA,WAAL,KAAqB;AAAE;AAA3B,QAA0C;AACtC,iBAAO,IAAP;AACH;;AACD,aAAOS,eAAP;AACH;AArBL;AAAA;AAAA,uCAsBuBC,kBAtBvB,EAsB2C;AACnC,UAAMD,eAAe,GAAG,KAAKE,sBAAL,CAA4BD,kBAA5B,CAAxB;;AACA,UAAI,KAAKJ,gBAAL,KAA0BG,eAA9B,EAA+C;AAC3C,aAAKH,gBAAL,GAAwBG,eAAxB;AACA,aAAKG,gBAAL;AACH;AACJ;AA5BL;AAAA;AAAA,gCA6BgBC,QA7BhB,EA6B0B;AAClB,UAAI,KAAKR,SAAL,KAAmBQ,QAAvB,EAAiC;AAC7B,aAAKR,SAAL,GAAiBQ,QAAjB;AACA,aAAKD,gBAAL;AACH;AACJ;AAlCL;AAAA;AAAA,+BAmCeE,OAnCf,EAmCwB;AAChB,WAAKX,QAAL,GAAgBW,OAAhB;;AACA,WAAKX,QAAL,CAAcY,YAAd,CAA2B,KAAKb,mBAAhC,EAFgB,CAGhB;;;AACA,WAAKc,kBAAL,CAAwB,KAAxB;AACH;AAxCL;AAAA;AAAA,uCAyCuB;AACf,UAAI,CAAC,KAAKX,SAAV,EAAqB;AACjB;AACA,aAAKY,KAAL,CAAW,KAAX;;AACA;AACH;;AACD,UAAI,KAAKX,gBAAT,EAA2B;AACvB,aAAKY,OAAL;AACH,OAFD,MAGK;AACD,aAAKD,KAAL,CAAW,IAAX;AACH;AACJ;AArDL;AAAA;AAAA,8BAsDc;AAAA;;AACN,UAAI,KAAKb,UAAT,EAAqB;AACjB;AACH;;AACD,WAAKA,UAAL,GAAkB,IAAlB,CAJM,CAKN;;AACA,WAAKG,YAAL,CAAkBY,WAAlB,CAA8B,YAAM;AAChC,YAAI,MAAI,CAAChB,QAAT,EAAmB;AACf,UAAA,MAAI,CAACA,QAAL,CAAcY,YAAd,CAA2B,MAAI,CAACd,iBAAhC;AACH;AACJ,OAJD,EAIG,CAJH;AAKH;AAjEL;AAAA;AAAA,0BAkEUmB,YAlEV,EAkEwB;AAChB,WAAKb,YAAL,CAAkBc,MAAlB;;AACA,UAAI,CAAC,KAAKjB,UAAV,EAAsB;AAClB;AACH;;AACD,WAAKA,UAAL,GAAkB,KAAlB;;AACA,UAAI,KAAKD,QAAT,EAAmB;AACf,aAAKA,QAAL,CAAcY,YAAd,CAA2B,KAAKb,mBAAL,IAA4BkB,YAAY,GAAG,OAAH,GAAa,EAArD,CAA3B;AACH;AACJ;AA3EL;;AAAA;AAAA,EAAmDzB,UAAnD","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { TimeoutTimer } from '../../../common/async.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nexport class ScrollbarVisibilityController extends Disposable {\r\n    constructor(visibility, visibleClassName, invisibleClassName) {\r\n        super();\r\n        this._visibility = visibility;\r\n        this._visibleClassName = visibleClassName;\r\n        this._invisibleClassName = invisibleClassName;\r\n        this._domNode = null;\r\n        this._isVisible = false;\r\n        this._isNeeded = false;\r\n        this._shouldBeVisible = false;\r\n        this._revealTimer = this._register(new TimeoutTimer());\r\n    }\r\n    // ----------------- Hide / Reveal\r\n    applyVisibilitySetting(shouldBeVisible) {\r\n        if (this._visibility === 2 /* Hidden */) {\r\n            return false;\r\n        }\r\n        if (this._visibility === 3 /* Visible */) {\r\n            return true;\r\n        }\r\n        return shouldBeVisible;\r\n    }\r\n    setShouldBeVisible(rawShouldBeVisible) {\r\n        const shouldBeVisible = this.applyVisibilitySetting(rawShouldBeVisible);\r\n        if (this._shouldBeVisible !== shouldBeVisible) {\r\n            this._shouldBeVisible = shouldBeVisible;\r\n            this.ensureVisibility();\r\n        }\r\n    }\r\n    setIsNeeded(isNeeded) {\r\n        if (this._isNeeded !== isNeeded) {\r\n            this._isNeeded = isNeeded;\r\n            this.ensureVisibility();\r\n        }\r\n    }\r\n    setDomNode(domNode) {\r\n        this._domNode = domNode;\r\n        this._domNode.setClassName(this._invisibleClassName);\r\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\r\n        this.setShouldBeVisible(false);\r\n    }\r\n    ensureVisibility() {\r\n        if (!this._isNeeded) {\r\n            // Nothing to be rendered\r\n            this._hide(false);\r\n            return;\r\n        }\r\n        if (this._shouldBeVisible) {\r\n            this._reveal();\r\n        }\r\n        else {\r\n            this._hide(true);\r\n        }\r\n    }\r\n    _reveal() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        // The CSS animation doesn't play otherwise\r\n        this._revealTimer.setIfNotSet(() => {\r\n            if (this._domNode) {\r\n                this._domNode.setClassName(this._visibleClassName);\r\n            }\r\n        }, 0);\r\n    }\r\n    _hide(withFadeAway) {\r\n        this._revealTimer.cancel();\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        if (this._domNode) {\r\n            this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}