{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\n\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\n\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\n\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\n\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\n\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? \"Unexpected type, expected '\".concat(type, \"'\") : 'Unexpected type');\n  }\n}\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\n\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n\n  return arg;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  var len = Math.min(args.length, constraints.length);\n\n  for (var i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \".concat(constraint));\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {// ignore\n    }\n\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}\nexport function getAllPropertyNames(obj) {\n  var res = [];\n  var proto = Object.getPrototypeOf(obj);\n\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  var methods = [];\n\n  var _iterator = _createForOfIteratorHelper(getAllPropertyNames(obj)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n\n      if (typeof obj[prop] === 'function') {\n        methods.push(prop);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  var createProxyMethod = function createProxyMethod(method) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n\n  var result = {};\n\n  var _iterator2 = _createForOfIteratorHelper(methodNames),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var methodName = _step2.value;\n      result[methodName] = createProxyMethod(methodName);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return result;\n}\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\n\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/types.js"],"names":["isArray","array","Array","isString","str","isObject","obj","RegExp","Date","isNumber","isNaN","isBoolean","isUndefined","isUndefinedOrNull","assertType","condition","type","Error","assertIsDefined","arg","isFunction","validateConstraints","args","constraints","len","Math","min","length","i","validateConstraint","constraint","_a","constructor","call","undefined","getAllPropertyNames","res","proto","Object","getPrototypeOf","prototype","concat","getOwnPropertyNames","getAllMethodNames","methods","prop","push","createProxyObject","methodNames","invoke","createProxyMethod","method","slice","arguments","result","methodName","withNullAsUndefined","x"],"mappings":"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","sourcesContent":["/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array) {\r\n    return Array.isArray(array);\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str) {\r\n    return (typeof str === 'string');\r\n}\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj) {\r\n    // The method can't do a type cast since there are type (like strings) which\r\n    // are subclasses of any put not positvely matched by the function. Hence type\r\n    // narrowing results in wrong results.\r\n    return typeof obj === 'object'\r\n        && obj !== null\r\n        && !Array.isArray(obj)\r\n        && !(obj instanceof RegExp)\r\n        && !(obj instanceof Date);\r\n}\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj) {\r\n    return (typeof obj === 'number' && !isNaN(obj));\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj) {\r\n    return (obj === true || obj === false);\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj) {\r\n    return (typeof obj === 'undefined');\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj) {\r\n    return (isUndefined(obj) || obj === null);\r\n}\r\nexport function assertType(condition, type) {\r\n    if (!condition) {\r\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\r\n    }\r\n}\r\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\r\nexport function assertIsDefined(arg) {\r\n    if (isUndefinedOrNull(arg)) {\r\n        throw new Error('Assertion Failed: argument is undefined or null');\r\n    }\r\n    return arg;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj) {\r\n    return (typeof obj === 'function');\r\n}\r\nexport function validateConstraints(args, constraints) {\r\n    const len = Math.min(args.length, constraints.length);\r\n    for (let i = 0; i < len; i++) {\r\n        validateConstraint(args[i], constraints[i]);\r\n    }\r\n}\r\nexport function validateConstraint(arg, constraint) {\r\n    if (isString(constraint)) {\r\n        if (typeof arg !== constraint) {\r\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\r\n        }\r\n    }\r\n    else if (isFunction(constraint)) {\r\n        try {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore\r\n        }\r\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\r\n            return;\r\n        }\r\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n            return;\r\n        }\r\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\r\n    }\r\n}\r\nexport function getAllPropertyNames(obj) {\r\n    let res = [];\r\n    let proto = Object.getPrototypeOf(obj);\r\n    while (Object.prototype !== proto) {\r\n        res = res.concat(Object.getOwnPropertyNames(proto));\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return res;\r\n}\r\nexport function getAllMethodNames(obj) {\r\n    const methods = [];\r\n    for (const prop of getAllPropertyNames(obj)) {\r\n        if (typeof obj[prop] === 'function') {\r\n            methods.push(prop);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\nexport function createProxyObject(methodNames, invoke) {\r\n    const createProxyMethod = (method) => {\r\n        return function () {\r\n            const args = Array.prototype.slice.call(arguments, 0);\r\n            return invoke(method, args);\r\n        };\r\n    };\r\n    let result = {};\r\n    for (const methodName of methodNames) {\r\n        result[methodName] = createProxyMethod(methodName);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined(x) {\r\n    return x === null ? undefined : x;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}