{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport var HistoryNavigator = /*#__PURE__*/function () {\n  function HistoryNavigator() {\n    var history = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n    _classCallCheck(this, HistoryNavigator);\n\n    this._initialize(history);\n\n    this._limit = limit;\n\n    this._onChange();\n  }\n\n  _createClass(HistoryNavigator, [{\n    key: \"add\",\n    value: function add(t) {\n      this._history[\"delete\"](t);\n\n      this._history.add(t);\n\n      this._onChange();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this._currentPosition() !== this._elements.length - 1) {\n        return this._navigator.next();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      if (this._currentPosition() !== 0) {\n        return this._navigator.previous();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"current\",\n    value: function current() {\n      return this._navigator.current();\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this._navigator.first();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this._navigator.last();\n    }\n  }, {\n    key: \"has\",\n    value: function has(t) {\n      return this._history.has(t);\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      this._reduceToLimit();\n\n      var elements = this._elements;\n      this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n  }, {\n    key: \"_reduceToLimit\",\n    value: function _reduceToLimit() {\n      var data = this._elements;\n\n      if (data.length > this._limit) {\n        this._initialize(data.slice(data.length - this._limit));\n      }\n    }\n  }, {\n    key: \"_currentPosition\",\n    value: function _currentPosition() {\n      var currentElement = this._navigator.current();\n\n      if (!currentElement) {\n        return -1;\n      }\n\n      return this._elements.indexOf(currentElement);\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize(history) {\n      this._history = new Set();\n\n      var _iterator = _createForOfIteratorHelper(history),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var entry = _step.value;\n\n          this._history.add(entry);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_elements\",\n    get: function get() {\n      var elements = [];\n\n      this._history.forEach(function (e) {\n        return elements.push(e);\n      });\n\n      return elements;\n    }\n  }]);\n\n  return HistoryNavigator;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/base/common/history.js"],"names":["ArrayNavigator","HistoryNavigator","history","limit","_initialize","_limit","_onChange","t","_history","add","_currentPosition","_elements","length","_navigator","next","previous","current","first","last","has","_reduceToLimit","elements","data","slice","currentElement","indexOf","Set","entry","forEach","e","push"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,cAAT,QAA+B,gBAA/B;AACA,WAAaC,gBAAb;AACI,8BAAsC;AAAA,QAA1BC,OAA0B,uEAAhB,EAAgB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;;AAAA;;AAClC,SAAKC,WAAL,CAAiBF,OAAjB;;AACA,SAAKG,MAAL,GAAcF,KAAd;;AACA,SAAKG,SAAL;AACH;;AALL;AAAA;AAAA,wBAMQC,CANR,EAMW;AACH,WAAKC,QAAL,WAAqBD,CAArB;;AACA,WAAKC,QAAL,CAAcC,GAAd,CAAkBF,CAAlB;;AACA,WAAKD,SAAL;AACH;AAVL;AAAA;AAAA,2BAWW;AACH,UAAI,KAAKI,gBAAL,OAA4B,KAAKC,SAAL,CAAeC,MAAf,GAAwB,CAAxD,EAA2D;AACvD,eAAO,KAAKC,UAAL,CAAgBC,IAAhB,EAAP;AACH;;AACD,aAAO,IAAP;AACH;AAhBL;AAAA;AAAA,+BAiBe;AACP,UAAI,KAAKJ,gBAAL,OAA4B,CAAhC,EAAmC;AAC/B,eAAO,KAAKG,UAAL,CAAgBE,QAAhB,EAAP;AACH;;AACD,aAAO,IAAP;AACH;AAtBL;AAAA;AAAA,8BAuBc;AACN,aAAO,KAAKF,UAAL,CAAgBG,OAAhB,EAAP;AACH;AAzBL;AAAA;AAAA,4BA0BY;AACJ,aAAO,KAAKH,UAAL,CAAgBI,KAAhB,EAAP;AACH;AA5BL;AAAA;AAAA,2BA6BW;AACH,aAAO,KAAKJ,UAAL,CAAgBK,IAAhB,EAAP;AACH;AA/BL;AAAA;AAAA,wBAgCQX,CAhCR,EAgCW;AACH,aAAO,KAAKC,QAAL,CAAcW,GAAd,CAAkBZ,CAAlB,CAAP;AACH;AAlCL;AAAA;AAAA,gCAmCgB;AACR,WAAKa,cAAL;;AACA,UAAMC,QAAQ,GAAG,KAAKV,SAAtB;AACA,WAAKE,UAAL,GAAkB,IAAIb,cAAJ,CAAmBqB,QAAnB,EAA6B,CAA7B,EAAgCA,QAAQ,CAACT,MAAzC,EAAiDS,QAAQ,CAACT,MAA1D,CAAlB;AACH;AAvCL;AAAA;AAAA,qCAwCqB;AACb,UAAMU,IAAI,GAAG,KAAKX,SAAlB;;AACA,UAAIW,IAAI,CAACV,MAAL,GAAc,KAAKP,MAAvB,EAA+B;AAC3B,aAAKD,WAAL,CAAiBkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACV,MAAL,GAAc,KAAKP,MAA9B,CAAjB;AACH;AACJ;AA7CL;AAAA;AAAA,uCA8CuB;AACf,UAAMmB,cAAc,GAAG,KAAKX,UAAL,CAAgBG,OAAhB,EAAvB;;AACA,UAAI,CAACQ,cAAL,EAAqB;AACjB,eAAO,CAAC,CAAR;AACH;;AACD,aAAO,KAAKb,SAAL,CAAec,OAAf,CAAuBD,cAAvB,CAAP;AACH;AApDL;AAAA;AAAA,gCAqDgBtB,OArDhB,EAqDyB;AACjB,WAAKM,QAAL,GAAgB,IAAIkB,GAAJ,EAAhB;;AADiB,iDAEGxB,OAFH;AAAA;;AAAA;AAEjB,4DAA6B;AAAA,cAAlByB,KAAkB;;AACzB,eAAKnB,QAAL,CAAcC,GAAd,CAAkBkB,KAAlB;AACH;AAJgB;AAAA;AAAA;AAAA;AAAA;AAKpB;AA1DL;AAAA;AAAA,wBA2DoB;AACZ,UAAMN,QAAQ,GAAG,EAAjB;;AACA,WAAKb,QAAL,CAAcoB,OAAd,CAAsB,UAAAC,CAAC;AAAA,eAAIR,QAAQ,CAACS,IAAT,CAAcD,CAAd,CAAJ;AAAA,OAAvB;;AACA,aAAOR,QAAP;AACH;AA/DL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ArrayNavigator } from './navigator.js';\r\nexport class HistoryNavigator {\r\n    constructor(history = [], limit = 10) {\r\n        this._initialize(history);\r\n        this._limit = limit;\r\n        this._onChange();\r\n    }\r\n    add(t) {\r\n        this._history.delete(t);\r\n        this._history.add(t);\r\n        this._onChange();\r\n    }\r\n    next() {\r\n        if (this._currentPosition() !== this._elements.length - 1) {\r\n            return this._navigator.next();\r\n        }\r\n        return null;\r\n    }\r\n    previous() {\r\n        if (this._currentPosition() !== 0) {\r\n            return this._navigator.previous();\r\n        }\r\n        return null;\r\n    }\r\n    current() {\r\n        return this._navigator.current();\r\n    }\r\n    first() {\r\n        return this._navigator.first();\r\n    }\r\n    last() {\r\n        return this._navigator.last();\r\n    }\r\n    has(t) {\r\n        return this._history.has(t);\r\n    }\r\n    _onChange() {\r\n        this._reduceToLimit();\r\n        const elements = this._elements;\r\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\r\n    }\r\n    _reduceToLimit() {\r\n        const data = this._elements;\r\n        if (data.length > this._limit) {\r\n            this._initialize(data.slice(data.length - this._limit));\r\n        }\r\n    }\r\n    _currentPosition() {\r\n        const currentElement = this._navigator.current();\r\n        if (!currentElement) {\r\n            return -1;\r\n        }\r\n        return this._elements.indexOf(currentElement);\r\n    }\r\n    _initialize(history) {\r\n        this._history = new Set();\r\n        for (const entry of history) {\r\n            this._history.add(entry);\r\n        }\r\n    }\r\n    get _elements() {\r\n        const elements = [];\r\n        this._history.forEach(e => elements.push(e));\r\n        return elements;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}