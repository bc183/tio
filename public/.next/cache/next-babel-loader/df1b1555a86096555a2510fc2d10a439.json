{"ast":null,"code":"import _slicedToArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var ServiceCollection = /*#__PURE__*/function () {\n  function ServiceCollection() {\n    _classCallCheck(this, ServiceCollection);\n\n    this._entries = new Map();\n\n    for (var _len = arguments.length, entries = new Array(_len), _key = 0; _key < _len; _key++) {\n      entries[_key] = arguments[_key];\n    }\n\n    for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n      var _entries$_i = _slicedToArray(_entries[_i], 2),\n          id = _entries$_i[0],\n          service = _entries$_i[1];\n\n      this.set(id, service);\n    }\n  }\n\n  _createClass(ServiceCollection, [{\n    key: \"set\",\n    value: function set(id, instanceOrDescriptor) {\n      var result = this._entries.get(id);\n\n      this._entries.set(id, instanceOrDescriptor);\n\n      return result;\n    }\n  }, {\n    key: \"has\",\n    value: function has(id) {\n      return this._entries.has(id);\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this._entries.get(id);\n    }\n  }]);\n\n  return ServiceCollection;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js"],"names":["ServiceCollection","_entries","Map","entries","id","service","set","instanceOrDescriptor","result","get","has"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,iBAAb;AACI,+BAAwB;AAAA;;AACpB,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;;AADoB,sCAATC,OAAS;AAATA,MAAAA,OAAS;AAAA;;AAEpB,gCAA0BA,OAA1B,8BAAmC;AAAA;AAAA,UAAzBC,EAAyB;AAAA,UAArBC,OAAqB;;AAC/B,WAAKC,GAAL,CAASF,EAAT,EAAaC,OAAb;AACH;AACJ;;AANL;AAAA;AAAA,wBAOQD,EAPR,EAOYG,oBAPZ,EAOkC;AAC1B,UAAMC,MAAM,GAAG,KAAKP,QAAL,CAAcQ,GAAd,CAAkBL,EAAlB,CAAf;;AACA,WAAKH,QAAL,CAAcK,GAAd,CAAkBF,EAAlB,EAAsBG,oBAAtB;;AACA,aAAOC,MAAP;AACH;AAXL;AAAA;AAAA,wBAYQJ,EAZR,EAYY;AACJ,aAAO,KAAKH,QAAL,CAAcS,GAAd,CAAkBN,EAAlB,CAAP;AACH;AAdL;AAAA;AAAA,wBAeQA,EAfR,EAeY;AACJ,aAAO,KAAKH,QAAL,CAAcQ,GAAd,CAAkBL,EAAlB,CAAP;AACH;AAjBL;;AAAA;AAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class ServiceCollection {\r\n    constructor(...entries) {\r\n        this._entries = new Map();\r\n        for (let [id, service] of entries) {\r\n            this.set(id, service);\r\n        }\r\n    }\r\n    set(id, instanceOrDescriptor) {\r\n        const result = this._entries.get(id);\r\n        this._entries.set(id, instanceOrDescriptor);\r\n        return result;\r\n    }\r\n    has(id) {\r\n        return this._entries.has(id);\r\n    }\r\n    get(id) {\r\n        return this._entries.get(id);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}