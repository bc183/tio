{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var ResolvedKeybindingItem = function ResolvedKeybindingItem(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\n  _classCallCheck(this, ResolvedKeybindingItem);\n\n  this.resolvedKeybinding = resolvedKeybinding;\n  this.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\n  this.bubble = command ? command.charCodeAt(0) === 94\n  /* Caret */\n  : false;\n  this.command = this.bubble ? command.substr(1) : command;\n  this.commandArgs = commandArgs;\n  this.when = when;\n  this.isDefault = isDefault;\n  this.extensionId = extensionId;\n  this.isBuiltinExtension = isBuiltinExtension;\n};\nexport function removeElementsAfterNulls(arr) {\n  var result = [];\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n\n    if (!element) {\n      // stop processing at first encountered null\n      return result;\n    }\n\n    result.push(element);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/keybinding/common/resolvedKeybindingItem.js"],"names":["ResolvedKeybindingItem","resolvedKeybinding","command","commandArgs","when","isDefault","extensionId","isBuiltinExtension","keypressParts","removeElementsAfterNulls","getDispatchParts","bubble","charCodeAt","substr","arr","result","i","len","length","element","push"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,WAAaA,sBAAb,GACI,gCAAYC,kBAAZ,EAAgCC,OAAhC,EAAyCC,WAAzC,EAAsDC,IAAtD,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,kBAApF,EAAwG;AAAA;;AACpG,OAAKN,kBAAL,GAA0BA,kBAA1B;AACA,OAAKO,aAAL,GAAqBP,kBAAkB,GAAGQ,wBAAwB,CAACR,kBAAkB,CAACS,gBAAnB,EAAD,CAA3B,GAAqE,EAA5G;AACA,OAAKC,MAAL,GAAeT,OAAO,GAAGA,OAAO,CAACU,UAAR,CAAmB,CAAnB,MAA0B;AAAG;AAAhC,IAA8C,KAApE;AACA,OAAKV,OAAL,GAAe,KAAKS,MAAL,GAAcT,OAAO,CAACW,MAAR,CAAe,CAAf,CAAd,GAAkCX,OAAjD;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACA,OAAKC,kBAAL,GAA0BA,kBAA1B;AACH,CAXL;AAaA,OAAO,SAASE,wBAAT,CAAkCK,GAAlC,EAAuC;AAC1C,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,GAAG,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,QAAMG,OAAO,GAAGL,GAAG,CAACE,CAAD,CAAnB;;AACA,QAAI,CAACG,OAAL,EAAc;AACV;AACA,aAAOJ,MAAP;AACH;;AACDA,IAAAA,MAAM,CAACK,IAAP,CAAYD,OAAZ;AACH;;AACD,SAAOJ,MAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class ResolvedKeybindingItem {\r\n    constructor(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\r\n        this.resolvedKeybinding = resolvedKeybinding;\r\n        this.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\r\n        this.bubble = (command ? command.charCodeAt(0) === 94 /* Caret */ : false);\r\n        this.command = this.bubble ? command.substr(1) : command;\r\n        this.commandArgs = commandArgs;\r\n        this.when = when;\r\n        this.isDefault = isDefault;\r\n        this.extensionId = extensionId;\r\n        this.isBuiltinExtension = isBuiltinExtension;\r\n    }\r\n}\r\nexport function removeElementsAfterNulls(arr) {\r\n    let result = [];\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        const element = arr[i];\r\n        if (!element) {\r\n            // stop processing at first encountered null\r\n            return result;\r\n        }\r\n        result.push(element);\r\n    }\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}