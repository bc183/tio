{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/barath007/projects/tio/client/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/tailwind.css';\nimport '../styles/icons.css';\nimport Axios from 'axios';\nimport { SWRConfig } from 'swr';\nimport NavBar from '../components/NavBar';\nimport { useRouter } from 'next/router';\nimport { AuthProvider } from '../context/auth';\nAxios.defaults.baseURL = process.env.NEXT_PUBLIC_SERVER_BASE_URL + '/api';\nAxios.defaults.withCredentials = true;\n\nconst fetcher = async url => {\n  try {\n    const res = await Axios.get(url);\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  const {\n    pathname\n  } = useRouter();\n  const authRoutes = ['/login', '/register'];\n  const authRoute = authRoutes.includes(pathname);\n  return /*#__PURE__*/_jsxDEV(SWRConfig, {\n    value: {\n      fetcher\n    },\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: [!authRoute && /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: authRoute ? '' : 'pt-12',\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/barath007/projects/tio/client/pages/_app.tsx"],"names":["Axios","SWRConfig","NavBar","useRouter","AuthProvider","defaults","baseURL","process","env","NEXT_PUBLIC_SERVER_BASE_URL","withCredentials","fetcher","url","res","get","data","error","response","App","Component","pageProps","pathname","authRoutes","authRoute","includes"],"mappings":";;;;;;;;;AAAA,OAAO,wBAAP;AACA,OAAO,qBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAGAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,GAA0C,MAAnE;AACAT,KAAK,CAACK,QAAN,CAAeK,eAAf,GAAiC,IAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAsB;AACpC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUF,GAAV,CAAlB;AACA,WAAOC,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMA,KAAK,CAACC,QAAN,CAAeF,IAArB;AACD;AACF,CAPD;;AASA,SAASG,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAiD;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAelB,SAAS,EAA9B;AACA,QAAMmB,UAAU,GAAG,CAAC,QAAD,EAAW,WAAX,CAAnB;AACA,QAAMC,SAAS,GAAGD,UAAU,CAACE,QAAX,CAAoBH,QAApB,CAAlB;AACA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA;AADK,KADT;AAAA,2BAKE,QAAC,YAAD;AAAA,iBACC,CAACY,SAAD,iBAAc,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEA;AAAK,QAAA,SAAS,EAAEA,SAAS,GAAE,EAAF,GAAO,OAAhC;AAAA,+BACE,QAAC,SAAD,oBAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAED,eAAeF,GAAf","sourcesContent":["import '../styles/tailwind.css'\nimport '../styles/icons.css'\nimport { AppProps } from 'next/app'\nimport Axios from 'axios';\nimport { SWRConfig } from 'swr';\nimport NavBar from '../components/NavBar';\nimport { useRouter } from 'next/router';\nimport { AuthProvider } from '../context/auth';\n\n\nAxios.defaults.baseURL = process.env.NEXT_PUBLIC_SERVER_BASE_URL + '/api';\nAxios.defaults.withCredentials = true;\n\nconst fetcher = async (url:string) => {\n  try {\n    const res = await Axios.get(url);\n    return res.data\n  } catch (error) {\n    throw error.response.data\n  }\n}\n\nfunction App({ Component, pageProps }: AppProps) {\n  const { pathname } = useRouter()\n  const authRoutes = ['/login', '/register']\n  const authRoute = authRoutes.includes(pathname);\n  return (\n    <SWRConfig\n      value={{\n        fetcher\n      }}\n    >\n      <AuthProvider>\n      {!authRoute && <NavBar />}\n      <div className={authRoute? '' : 'pt-12'}>\n        <Component {...pageProps}/>\n      </div>\n    </AuthProvider>\n    </SWRConfig>\n    \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}