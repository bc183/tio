{"ast":null,"code":"import _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEventFactory, GlobalEditorMouseMoveMonitor, createEditorPagePosition } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\n/**\r\n * Merges mouse events when mouse move events are throttled\r\n */\n\nexport function createMouseMoveEventMerger(mouseTargetFactory) {\n  return function (lastEvent, currentEvent) {\n    var targetIsWidget = false;\n\n    if (mouseTargetFactory) {\n      targetIsWidget = mouseTargetFactory.mouseTargetIsWidget(currentEvent);\n    }\n\n    if (!targetIsWidget) {\n      currentEvent.preventDefault();\n    }\n\n    return currentEvent;\n  };\n}\nexport var MouseHandler = /*#__PURE__*/function (_ViewEventHandler) {\n  _inherits(MouseHandler, _ViewEventHandler);\n\n  var _super = _createSuper(MouseHandler);\n\n  function MouseHandler(context, viewController, viewHelper) {\n    var _this;\n\n    _classCallCheck(this, MouseHandler);\n\n    _this = _super.call(this);\n    _this._context = context;\n    _this.viewController = viewController;\n    _this.viewHelper = viewHelper;\n    _this.mouseTargetFactory = new MouseTargetFactory(_this._context, viewHelper);\n    _this._mouseDownOperation = _this._register(new MouseDownOperation(_this._context, _this.viewController, _this.viewHelper, function (e, testEventTarget) {\n      return _this._createMouseTarget(e, testEventTarget);\n    }, function (e) {\n      return _this._getMouseColumn(e);\n    }));\n    _this.lastMouseLeaveTime = -1;\n    var mouseEvents = new EditorMouseEventFactory(_this.viewHelper.viewDomNode);\n\n    _this._register(mouseEvents.onContextMenu(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onContextMenu(e, true);\n    }));\n\n    _this._register(mouseEvents.onMouseMoveThrottled(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseMove(e);\n    }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\n\n    _this._register(mouseEvents.onMouseUp(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseUp(e);\n    }));\n\n    _this._register(mouseEvents.onMouseLeave(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseLeave(e);\n    }));\n\n    _this._register(mouseEvents.onMouseDown(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseDown(e);\n    }));\n\n    var onMouseWheel = function onMouseWheel(browserEvent) {\n      _this.viewController.emitMouseWheel(browserEvent);\n\n      if (!_this._context.configuration.options.get(62\n      /* mouseWheelZoom */\n      )) {\n        return;\n      }\n\n      var e = new StandardWheelEvent(browserEvent);\n      var doMouseWheelZoom = platform.isMacintosh ? browserEvent.metaKey && !browserEvent.ctrlKey && !browserEvent.shiftKey && !browserEvent.altKey : browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey;\n\n      if (doMouseWheelZoom) {\n        var zoomLevel = EditorZoom.getZoomLevel();\n        var delta = e.deltaY > 0 ? 1 : -1;\n        EditorZoom.setZoomLevel(zoomLevel + delta);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n\n    _this._register(dom.addDisposableListener(_this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, {\n      capture: true,\n      passive: false\n    }));\n\n    _this._context.addEventHandler(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(MouseHandler, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n\n      _get(_getPrototypeOf(MouseHandler.prototype), \"dispose\", this).call(this);\n    } // --- begin event handlers\n\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._mouseDownOperation.onCursorStateChanged(e);\n\n      return false;\n    }\n  }, {\n    key: \"onFocusChanged\",\n    value: function onFocusChanged(e) {\n      return false;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      this._mouseDownOperation.onScrollChanged();\n\n      return false;\n    } // --- end event handlers\n\n  }, {\n    key: \"getTargetAtClientPoint\",\n    value: function getTargetAtClientPoint(clientX, clientY) {\n      var clientPos = new ClientCoordinates(clientX, clientY);\n      var pos = clientPos.toPageCoordinates();\n      var editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n\n      if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n        return null;\n      }\n\n      return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, null);\n    }\n  }, {\n    key: \"_createMouseTarget\",\n    value: function _createMouseTarget(e, testEventTarget) {\n      return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, testEventTarget ? e.target : null);\n    }\n  }, {\n    key: \"_getMouseColumn\",\n    value: function _getMouseColumn(e) {\n      return this.mouseTargetFactory.getMouseColumn(e.editorPos, e.pos);\n    }\n  }, {\n    key: \"_onContextMenu\",\n    value: function _onContextMenu(e, testEventTarget) {\n      this.viewController.emitContextMenu({\n        event: e,\n        target: this._createMouseTarget(e, testEventTarget)\n      });\n    }\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(e) {\n      if (this._mouseDownOperation.isActive()) {\n        // In selection/drag operation\n        return;\n      }\n\n      var actualMouseMoveTime = e.timestamp;\n\n      if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n        // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n        return;\n      }\n\n      this.viewController.emitMouseMove({\n        event: e,\n        target: this._createMouseTarget(e, true)\n      });\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(e) {\n      this.lastMouseLeaveTime = new Date().getTime();\n      this.viewController.emitMouseLeave({\n        event: e,\n        target: null\n      });\n    }\n  }, {\n    key: \"_onMouseUp\",\n    value: function _onMouseUp(e) {\n      this.viewController.emitMouseUp({\n        event: e,\n        target: this._createMouseTarget(e, true)\n      });\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(e) {\n      var _this2 = this;\n\n      var t = this._createMouseTarget(e, true);\n\n      var targetIsContent = t.type === 6\n      /* CONTENT_TEXT */\n      || t.type === 7\n      /* CONTENT_EMPTY */\n      ;\n      var targetIsGutter = t.type === 2\n      /* GUTTER_GLYPH_MARGIN */\n      || t.type === 3\n      /* GUTTER_LINE_NUMBERS */\n      || t.type === 4\n      /* GUTTER_LINE_DECORATIONS */\n      ;\n      var targetIsLineNumbers = t.type === 3\n      /* GUTTER_LINE_NUMBERS */\n      ;\n\n      var selectOnLineNumbers = this._context.configuration.options.get(93\n      /* selectOnLineNumbers */\n      );\n\n      var targetIsViewZone = t.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || t.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ;\n      var targetIsWidget = t.type === 9\n      /* CONTENT_WIDGET */\n      ;\n      var shouldHandle = e.leftButton || e.middleButton;\n\n      if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n        shouldHandle = false;\n      }\n\n      var focus = function focus() {\n        e.preventDefault();\n\n        _this2.viewHelper.focusTextArea();\n      };\n\n      if (shouldHandle && (targetIsContent || targetIsLineNumbers && selectOnLineNumbers)) {\n        focus();\n\n        this._mouseDownOperation.start(t.type, e);\n      } else if (targetIsGutter) {\n        // Do not steal focus\n        e.preventDefault();\n      } else if (targetIsViewZone) {\n        var viewZoneData = t.detail;\n\n        if (this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n          focus();\n\n          this._mouseDownOperation.start(t.type, e);\n\n          e.preventDefault();\n        }\n      } else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n        focus();\n        e.preventDefault();\n      }\n\n      this.viewController.emitMouseDown({\n        event: e,\n        target: t\n      });\n    }\n  }]);\n\n  return MouseHandler;\n}(ViewEventHandler);\nMouseHandler.MOUSE_MOVE_MINIMUM_TIME = 100; // ms\n\nvar MouseDownOperation = /*#__PURE__*/function (_Disposable) {\n  _inherits(MouseDownOperation, _Disposable);\n\n  var _super2 = _createSuper(MouseDownOperation);\n\n  function MouseDownOperation(context, viewController, viewHelper, createMouseTarget, getMouseColumn) {\n    var _this3;\n\n    _classCallCheck(this, MouseDownOperation);\n\n    _this3 = _super2.call(this);\n    _this3._context = context;\n    _this3._viewController = viewController;\n    _this3._viewHelper = viewHelper;\n    _this3._createMouseTarget = createMouseTarget;\n    _this3._getMouseColumn = getMouseColumn;\n    _this3._mouseMoveMonitor = _this3._register(new GlobalEditorMouseMoveMonitor(_this3._viewHelper.viewDomNode));\n    _this3._onScrollTimeout = _this3._register(new TimeoutTimer());\n    _this3._mouseState = new MouseDownState();\n    _this3._currentSelection = new Selection(1, 1, 1, 1);\n    _this3._isActive = false;\n    _this3._lastMouseEvent = null;\n    return _this3;\n  }\n\n  _createClass(MouseDownOperation, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MouseDownOperation.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this._isActive;\n    }\n  }, {\n    key: \"_onMouseDownThenMove\",\n    value: function _onMouseDownThenMove(e) {\n      this._lastMouseEvent = e;\n\n      this._mouseState.setModifiers(e);\n\n      var position = this._findMousePosition(e, true);\n\n      if (!position) {\n        // Ignoring because position is unknown\n        return;\n      }\n\n      if (this._mouseState.isDragAndDrop) {\n        this._viewController.emitMouseDrag({\n          event: e,\n          target: position\n        });\n      } else {\n        this._dispatchMouse(position, true);\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(targetType, e) {\n      var _this4 = this;\n\n      this._lastMouseEvent = e;\n\n      this._mouseState.setStartedOnLineNumbers(targetType === 3\n      /* GUTTER_LINE_NUMBERS */\n      );\n\n      this._mouseState.setStartButtons(e);\n\n      this._mouseState.setModifiers(e);\n\n      var position = this._findMousePosition(e, true);\n\n      if (!position || !position.position) {\n        // Ignoring because position is unknown\n        return;\n      }\n\n      this._mouseState.trySetCount(e.detail, position.position); // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n\n\n      e.detail = this._mouseState.count;\n      var options = this._context.configuration.options;\n\n      if (!options.get(75\n      /* readOnly */\n      ) && options.get(27\n      /* dragAndDrop */\n      ) && !options.get(15\n      /* columnSelection */\n      ) && !this._mouseState.altKey // we don't support multiple mouse\n      && e.detail < 2 // only single click on a selection can work\n      && !this._isActive // the mouse is not down yet\n      && !this._currentSelection.isEmpty() // we don't drag single cursor\n      && position.type === 6\n      /* CONTENT_TEXT */\n      // single click on text\n      && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n      ) {\n          this._mouseState.isDragAndDrop = true;\n          this._isActive = true;\n\n          this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, createMouseMoveEventMerger(null), function (e) {\n            return _this4._onMouseDownThenMove(e);\n          }, function (browserEvent) {\n            var position = _this4._findMousePosition(_this4._lastMouseEvent, true);\n\n            if (browserEvent && browserEvent instanceof KeyboardEvent) {\n              // cancel\n              _this4._viewController.emitMouseDropCanceled();\n            } else {\n              _this4._viewController.emitMouseDrop({\n                event: _this4._lastMouseEvent,\n                target: position ? _this4._createMouseTarget(_this4._lastMouseEvent, true) : null // Ignoring because position is unknown, e.g., Content View Zone\n\n              });\n            }\n\n            _this4._stop();\n          });\n\n          return;\n        }\n\n      this._mouseState.isDragAndDrop = false;\n\n      this._dispatchMouse(position, e.shiftKey);\n\n      if (!this._isActive) {\n        this._isActive = true;\n\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, createMouseMoveEventMerger(null), function (e) {\n          return _this4._onMouseDownThenMove(e);\n        }, function () {\n          return _this4._stop();\n        });\n      }\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      this._isActive = false;\n\n      this._onScrollTimeout.cancel();\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged() {\n      var _this5 = this;\n\n      if (!this._isActive) {\n        return;\n      }\n\n      this._onScrollTimeout.setIfNotSet(function () {\n        if (!_this5._lastMouseEvent) {\n          return;\n        }\n\n        var position = _this5._findMousePosition(_this5._lastMouseEvent, false);\n\n        if (!position) {\n          // Ignoring because position is unknown\n          return;\n        }\n\n        if (_this5._mouseState.isDragAndDrop) {\n          // Ignoring because users are dragging the text\n          return;\n        }\n\n        _this5._dispatchMouse(position, true);\n      }, 10);\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._currentSelection = e.selections[0];\n    }\n  }, {\n    key: \"_getPositionOutsideEditor\",\n    value: function _getPositionOutsideEditor(e) {\n      var editorContent = e.editorPos;\n      var model = this._context.model;\n      var viewLayout = this._context.viewLayout;\n\n      var mouseColumn = this._getMouseColumn(e);\n\n      if (e.posy < editorContent.y) {\n        var verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - (editorContent.y - e.posy), 0);\n        var viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\n        if (viewZoneData) {\n          var newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\n          if (newPosition) {\n            return new MouseTarget(null, 13\n            /* OUTSIDE_EDITOR */\n            , mouseColumn, newPosition);\n          }\n        }\n\n        var aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n        return new MouseTarget(null, 13\n        /* OUTSIDE_EDITOR */\n        , mouseColumn, new Position(aboveLineNumber, 1));\n      }\n\n      if (e.posy > editorContent.y + editorContent.height) {\n        var _verticalOffset = viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y);\n\n        var _viewZoneData = HitTestContext.getZoneAtCoord(this._context, _verticalOffset);\n\n        if (_viewZoneData) {\n          var _newPosition = this._helpPositionJumpOverViewZone(_viewZoneData);\n\n          if (_newPosition) {\n            return new MouseTarget(null, 13\n            /* OUTSIDE_EDITOR */\n            , mouseColumn, _newPosition);\n          }\n        }\n\n        var belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(_verticalOffset);\n        return new MouseTarget(null, 13\n        /* OUTSIDE_EDITOR */\n        , mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)));\n      }\n\n      var possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y));\n\n      if (e.posx < editorContent.x) {\n        return new MouseTarget(null, 13\n        /* OUTSIDE_EDITOR */\n        , mouseColumn, new Position(possibleLineNumber, 1));\n      }\n\n      if (e.posx > editorContent.x + editorContent.width) {\n        return new MouseTarget(null, 13\n        /* OUTSIDE_EDITOR */\n        , mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_findMousePosition\",\n    value: function _findMousePosition(e, testEventTarget) {\n      var positionOutsideEditor = this._getPositionOutsideEditor(e);\n\n      if (positionOutsideEditor) {\n        return positionOutsideEditor;\n      }\n\n      var t = this._createMouseTarget(e, testEventTarget);\n\n      var hintedPosition = t.position;\n\n      if (!hintedPosition) {\n        return null;\n      }\n\n      if (t.type === 8\n      /* CONTENT_VIEW_ZONE */\n      || t.type === 5\n      /* GUTTER_VIEW_ZONE */\n      ) {\n          var newPosition = this._helpPositionJumpOverViewZone(t.detail);\n\n          if (newPosition) {\n            return new MouseTarget(t.element, t.type, t.mouseColumn, newPosition, null, t.detail);\n          }\n        }\n\n      return t;\n    }\n  }, {\n    key: \"_helpPositionJumpOverViewZone\",\n    value: function _helpPositionJumpOverViewZone(viewZoneData) {\n      // Force position on view zones to go above or below depending on where selection started from\n      var selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n      var positionBefore = viewZoneData.positionBefore;\n      var positionAfter = viewZoneData.positionAfter;\n\n      if (positionBefore && positionAfter) {\n        if (positionBefore.isBefore(selectionStart)) {\n          return positionBefore;\n        } else {\n          return positionAfter;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_dispatchMouse\",\n    value: function _dispatchMouse(position, inSelectionMode) {\n      if (!position.position) {\n        return;\n      }\n\n      this._viewController.dispatchMouse({\n        position: position.position,\n        mouseColumn: position.mouseColumn,\n        startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n        inSelectionMode: inSelectionMode,\n        mouseDownCount: this._mouseState.count,\n        altKey: this._mouseState.altKey,\n        ctrlKey: this._mouseState.ctrlKey,\n        metaKey: this._mouseState.metaKey,\n        shiftKey: this._mouseState.shiftKey,\n        leftButton: this._mouseState.leftButton,\n        middleButton: this._mouseState.middleButton\n      });\n    }\n  }]);\n\n  return MouseDownOperation;\n}(Disposable);\n\nvar MouseDownState = /*#__PURE__*/function () {\n  function MouseDownState() {\n    _classCallCheck(this, MouseDownState);\n\n    this._altKey = false;\n    this._ctrlKey = false;\n    this._metaKey = false;\n    this._shiftKey = false;\n    this._leftButton = false;\n    this._middleButton = false;\n    this._startedOnLineNumbers = false;\n    this._lastMouseDownPosition = null;\n    this._lastMouseDownPositionEqualCount = 0;\n    this._lastMouseDownCount = 0;\n    this._lastSetMouseDownCountTime = 0;\n    this.isDragAndDrop = false;\n  }\n\n  _createClass(MouseDownState, [{\n    key: \"setModifiers\",\n    value: function setModifiers(source) {\n      this._altKey = source.altKey;\n      this._ctrlKey = source.ctrlKey;\n      this._metaKey = source.metaKey;\n      this._shiftKey = source.shiftKey;\n    }\n  }, {\n    key: \"setStartButtons\",\n    value: function setStartButtons(source) {\n      this._leftButton = source.leftButton;\n      this._middleButton = source.middleButton;\n    }\n  }, {\n    key: \"setStartedOnLineNumbers\",\n    value: function setStartedOnLineNumbers(startedOnLineNumbers) {\n      this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n  }, {\n    key: \"trySetCount\",\n    value: function trySetCount(setMouseDownCount, newMouseDownPosition) {\n      // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n      var currentTime = new Date().getTime();\n\n      if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n        setMouseDownCount = 1;\n      }\n\n      this._lastSetMouseDownCountTime = currentTime; // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\n      if (setMouseDownCount > this._lastMouseDownCount + 1) {\n        setMouseDownCount = this._lastMouseDownCount + 1;\n      } // c. Invalidate multiple clicking if the logical position is different\n\n\n      if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n        this._lastMouseDownPositionEqualCount++;\n      } else {\n        this._lastMouseDownPositionEqualCount = 1;\n      }\n\n      this._lastMouseDownPosition = newMouseDownPosition; // Finally set the lastMouseDownCount\n\n      this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n  }, {\n    key: \"altKey\",\n    get: function get() {\n      return this._altKey;\n    }\n  }, {\n    key: \"ctrlKey\",\n    get: function get() {\n      return this._ctrlKey;\n    }\n  }, {\n    key: \"metaKey\",\n    get: function get() {\n      return this._metaKey;\n    }\n  }, {\n    key: \"shiftKey\",\n    get: function get() {\n      return this._shiftKey;\n    }\n  }, {\n    key: \"leftButton\",\n    get: function get() {\n      return this._leftButton;\n    }\n  }, {\n    key: \"middleButton\",\n    get: function get() {\n      return this._middleButton;\n    }\n  }, {\n    key: \"startedOnLineNumbers\",\n    get: function get() {\n      return this._startedOnLineNumbers;\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._lastMouseDownCount;\n    }\n  }]);\n\n  return MouseDownState;\n}();\n\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js"],"names":["dom","StandardWheelEvent","TimeoutTimer","Disposable","platform","HitTestContext","MouseTarget","MouseTargetFactory","ClientCoordinates","EditorMouseEventFactory","GlobalEditorMouseMoveMonitor","createEditorPagePosition","EditorZoom","Position","Selection","ViewEventHandler","createMouseMoveEventMerger","mouseTargetFactory","lastEvent","currentEvent","targetIsWidget","mouseTargetIsWidget","preventDefault","MouseHandler","context","viewController","viewHelper","_context","_mouseDownOperation","_register","MouseDownOperation","e","testEventTarget","_createMouseTarget","_getMouseColumn","lastMouseLeaveTime","mouseEvents","viewDomNode","onContextMenu","_onContextMenu","onMouseMoveThrottled","_onMouseMove","MOUSE_MOVE_MINIMUM_TIME","onMouseUp","_onMouseUp","onMouseLeave","_onMouseLeave","onMouseDown","_onMouseDown","onMouseWheel","browserEvent","emitMouseWheel","configuration","options","get","doMouseWheelZoom","isMacintosh","metaKey","ctrlKey","shiftKey","altKey","zoomLevel","getZoomLevel","delta","deltaY","setZoomLevel","stopPropagation","addDisposableListener","EventType","MOUSE_WHEEL","capture","passive","addEventHandler","removeEventHandler","onCursorStateChanged","onScrollChanged","clientX","clientY","clientPos","pos","toPageCoordinates","editorPos","y","height","x","width","createMouseTarget","getLastRenderData","target","getMouseColumn","emitContextMenu","event","isActive","actualMouseMoveTime","timestamp","emitMouseMove","Date","getTime","emitMouseLeave","emitMouseUp","t","targetIsContent","type","targetIsGutter","targetIsLineNumbers","selectOnLineNumbers","targetIsViewZone","shouldHandle","leftButton","middleButton","focus","focusTextArea","start","viewZoneData","detail","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","emitMouseDown","_viewController","_viewHelper","_mouseMoveMonitor","_onScrollTimeout","_mouseState","MouseDownState","_currentSelection","_isActive","_lastMouseEvent","setModifiers","position","_findMousePosition","isDragAndDrop","emitMouseDrag","_dispatchMouse","targetType","setStartedOnLineNumbers","setStartButtons","trySetCount","count","isEmpty","containsPosition","startMonitoring","buttons","_onMouseDownThenMove","KeyboardEvent","emitMouseDropCanceled","emitMouseDrop","_stop","cancel","setIfNotSet","selections","editorContent","model","viewLayout","mouseColumn","posy","verticalOffset","Math","max","getCurrentScrollTop","getZoneAtCoord","newPosition","_helpPositionJumpOverViewZone","aboveLineNumber","getLineNumberAtVerticalOffset","belowLineNumber","getLineMaxColumn","possibleLineNumber","posx","positionOutsideEditor","_getPositionOutsideEditor","hintedPosition","element","selectionStart","selectionStartLineNumber","selectionStartColumn","positionBefore","positionAfter","isBefore","inSelectionMode","dispatchMouse","startedOnLineNumbers","mouseDownCount","_altKey","_ctrlKey","_metaKey","_shiftKey","_leftButton","_middleButton","_startedOnLineNumbers","_lastMouseDownPosition","_lastMouseDownPositionEqualCount","_lastMouseDownCount","_lastSetMouseDownCountTime","source","setMouseDownCount","newMouseDownPosition","currentTime","CLEAR_MOUSE_DOWN_COUNT_TIME","equals","min"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\r\nimport { ClientCoordinates, EditorMouseEventFactory, GlobalEditorMouseMoveMonitor, createEditorPagePosition } from '../editorDom.js';\r\nimport { EditorZoom } from '../../common/config/editorZoom.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ViewEventHandler } from '../../common/viewModel/viewEventHandler.js';\r\n/**\r\n * Merges mouse events when mouse move events are throttled\r\n */\r\nexport function createMouseMoveEventMerger(mouseTargetFactory) {\r\n    return function (lastEvent, currentEvent) {\r\n        let targetIsWidget = false;\r\n        if (mouseTargetFactory) {\r\n            targetIsWidget = mouseTargetFactory.mouseTargetIsWidget(currentEvent);\r\n        }\r\n        if (!targetIsWidget) {\r\n            currentEvent.preventDefault();\r\n        }\r\n        return currentEvent;\r\n    };\r\n}\r\nexport class MouseHandler extends ViewEventHandler {\r\n    constructor(context, viewController, viewHelper) {\r\n        super();\r\n        this._context = context;\r\n        this.viewController = viewController;\r\n        this.viewHelper = viewHelper;\r\n        this.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\r\n        this._mouseDownOperation = this._register(new MouseDownOperation(this._context, this.viewController, this.viewHelper, (e, testEventTarget) => this._createMouseTarget(e, testEventTarget), (e) => this._getMouseColumn(e)));\r\n        this.lastMouseLeaveTime = -1;\r\n        const mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\r\n        this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\r\n        this._register(mouseEvents.onMouseMoveThrottled(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e), createMouseMoveEventMerger(this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\r\n        this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\r\n        this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\r\n        this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e)));\r\n        const onMouseWheel = (browserEvent) => {\r\n            this.viewController.emitMouseWheel(browserEvent);\r\n            if (!this._context.configuration.options.get(62 /* mouseWheelZoom */)) {\r\n                return;\r\n            }\r\n            const e = new StandardWheelEvent(browserEvent);\r\n            const doMouseWheelZoom = (platform.isMacintosh\r\n                ? (browserEvent.metaKey && !browserEvent.ctrlKey && !browserEvent.shiftKey && !browserEvent.altKey)\r\n                : (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey));\r\n            if (doMouseWheelZoom) {\r\n                const zoomLevel = EditorZoom.getZoomLevel();\r\n                const delta = e.deltaY > 0 ? 1 : -1;\r\n                EditorZoom.setZoomLevel(zoomLevel + delta);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        };\r\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\r\n        this._context.addEventHandler(this);\r\n    }\r\n    dispose() {\r\n        this._context.removeEventHandler(this);\r\n        super.dispose();\r\n    }\r\n    // --- begin event handlers\r\n    onCursorStateChanged(e) {\r\n        this._mouseDownOperation.onCursorStateChanged(e);\r\n        return false;\r\n    }\r\n    onFocusChanged(e) {\r\n        return false;\r\n    }\r\n    onScrollChanged(e) {\r\n        this._mouseDownOperation.onScrollChanged();\r\n        return false;\r\n    }\r\n    // --- end event handlers\r\n    getTargetAtClientPoint(clientX, clientY) {\r\n        const clientPos = new ClientCoordinates(clientX, clientY);\r\n        const pos = clientPos.toPageCoordinates();\r\n        const editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\r\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\r\n            return null;\r\n        }\r\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, null);\r\n    }\r\n    _createMouseTarget(e, testEventTarget) {\r\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, testEventTarget ? e.target : null);\r\n    }\r\n    _getMouseColumn(e) {\r\n        return this.mouseTargetFactory.getMouseColumn(e.editorPos, e.pos);\r\n    }\r\n    _onContextMenu(e, testEventTarget) {\r\n        this.viewController.emitContextMenu({\r\n            event: e,\r\n            target: this._createMouseTarget(e, testEventTarget)\r\n        });\r\n    }\r\n    _onMouseMove(e) {\r\n        if (this._mouseDownOperation.isActive()) {\r\n            // In selection/drag operation\r\n            return;\r\n        }\r\n        const actualMouseMoveTime = e.timestamp;\r\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\r\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\r\n            return;\r\n        }\r\n        this.viewController.emitMouseMove({\r\n            event: e,\r\n            target: this._createMouseTarget(e, true)\r\n        });\r\n    }\r\n    _onMouseLeave(e) {\r\n        this.lastMouseLeaveTime = (new Date()).getTime();\r\n        this.viewController.emitMouseLeave({\r\n            event: e,\r\n            target: null\r\n        });\r\n    }\r\n    _onMouseUp(e) {\r\n        this.viewController.emitMouseUp({\r\n            event: e,\r\n            target: this._createMouseTarget(e, true)\r\n        });\r\n    }\r\n    _onMouseDown(e) {\r\n        const t = this._createMouseTarget(e, true);\r\n        const targetIsContent = (t.type === 6 /* CONTENT_TEXT */ || t.type === 7 /* CONTENT_EMPTY */);\r\n        const targetIsGutter = (t.type === 2 /* GUTTER_GLYPH_MARGIN */ || t.type === 3 /* GUTTER_LINE_NUMBERS */ || t.type === 4 /* GUTTER_LINE_DECORATIONS */);\r\n        const targetIsLineNumbers = (t.type === 3 /* GUTTER_LINE_NUMBERS */);\r\n        const selectOnLineNumbers = this._context.configuration.options.get(93 /* selectOnLineNumbers */);\r\n        const targetIsViewZone = (t.type === 8 /* CONTENT_VIEW_ZONE */ || t.type === 5 /* GUTTER_VIEW_ZONE */);\r\n        const targetIsWidget = (t.type === 9 /* CONTENT_WIDGET */);\r\n        let shouldHandle = e.leftButton || e.middleButton;\r\n        if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\r\n            shouldHandle = false;\r\n        }\r\n        const focus = () => {\r\n            e.preventDefault();\r\n            this.viewHelper.focusTextArea();\r\n        };\r\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\r\n            focus();\r\n            this._mouseDownOperation.start(t.type, e);\r\n        }\r\n        else if (targetIsGutter) {\r\n            // Do not steal focus\r\n            e.preventDefault();\r\n        }\r\n        else if (targetIsViewZone) {\r\n            const viewZoneData = t.detail;\r\n            if (this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\r\n                focus();\r\n                this._mouseDownOperation.start(t.type, e);\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\r\n            focus();\r\n            e.preventDefault();\r\n        }\r\n        this.viewController.emitMouseDown({\r\n            event: e,\r\n            target: t\r\n        });\r\n    }\r\n}\r\nMouseHandler.MOUSE_MOVE_MINIMUM_TIME = 100; // ms\r\nclass MouseDownOperation extends Disposable {\r\n    constructor(context, viewController, viewHelper, createMouseTarget, getMouseColumn) {\r\n        super();\r\n        this._context = context;\r\n        this._viewController = viewController;\r\n        this._viewHelper = viewHelper;\r\n        this._createMouseTarget = createMouseTarget;\r\n        this._getMouseColumn = getMouseColumn;\r\n        this._mouseMoveMonitor = this._register(new GlobalEditorMouseMoveMonitor(this._viewHelper.viewDomNode));\r\n        this._onScrollTimeout = this._register(new TimeoutTimer());\r\n        this._mouseState = new MouseDownState();\r\n        this._currentSelection = new Selection(1, 1, 1, 1);\r\n        this._isActive = false;\r\n        this._lastMouseEvent = null;\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    isActive() {\r\n        return this._isActive;\r\n    }\r\n    _onMouseDownThenMove(e) {\r\n        this._lastMouseEvent = e;\r\n        this._mouseState.setModifiers(e);\r\n        const position = this._findMousePosition(e, true);\r\n        if (!position) {\r\n            // Ignoring because position is unknown\r\n            return;\r\n        }\r\n        if (this._mouseState.isDragAndDrop) {\r\n            this._viewController.emitMouseDrag({\r\n                event: e,\r\n                target: position\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchMouse(position, true);\r\n        }\r\n    }\r\n    start(targetType, e) {\r\n        this._lastMouseEvent = e;\r\n        this._mouseState.setStartedOnLineNumbers(targetType === 3 /* GUTTER_LINE_NUMBERS */);\r\n        this._mouseState.setStartButtons(e);\r\n        this._mouseState.setModifiers(e);\r\n        const position = this._findMousePosition(e, true);\r\n        if (!position || !position.position) {\r\n            // Ignoring because position is unknown\r\n            return;\r\n        }\r\n        this._mouseState.trySetCount(e.detail, position.position);\r\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\r\n        e.detail = this._mouseState.count;\r\n        const options = this._context.configuration.options;\r\n        if (!options.get(75 /* readOnly */)\r\n            && options.get(27 /* dragAndDrop */)\r\n            && !options.get(15 /* columnSelection */)\r\n            && !this._mouseState.altKey // we don't support multiple mouse\r\n            && e.detail < 2 // only single click on a selection can work\r\n            && !this._isActive // the mouse is not down yet\r\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\r\n            && (position.type === 6 /* CONTENT_TEXT */) // single click on text\r\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\r\n        ) {\r\n            this._mouseState.isDragAndDrop = true;\r\n            this._isActive = true;\r\n            this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, createMouseMoveEventMerger(null), (e) => this._onMouseDownThenMove(e), (browserEvent) => {\r\n                const position = this._findMousePosition(this._lastMouseEvent, true);\r\n                if (browserEvent && browserEvent instanceof KeyboardEvent) {\r\n                    // cancel\r\n                    this._viewController.emitMouseDropCanceled();\r\n                }\r\n                else {\r\n                    this._viewController.emitMouseDrop({\r\n                        event: this._lastMouseEvent,\r\n                        target: (position ? this._createMouseTarget(this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\r\n                    });\r\n                }\r\n                this._stop();\r\n            });\r\n            return;\r\n        }\r\n        this._mouseState.isDragAndDrop = false;\r\n        this._dispatchMouse(position, e.shiftKey);\r\n        if (!this._isActive) {\r\n            this._isActive = true;\r\n            this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, createMouseMoveEventMerger(null), (e) => this._onMouseDownThenMove(e), () => this._stop());\r\n        }\r\n    }\r\n    _stop() {\r\n        this._isActive = false;\r\n        this._onScrollTimeout.cancel();\r\n    }\r\n    onScrollChanged() {\r\n        if (!this._isActive) {\r\n            return;\r\n        }\r\n        this._onScrollTimeout.setIfNotSet(() => {\r\n            if (!this._lastMouseEvent) {\r\n                return;\r\n            }\r\n            const position = this._findMousePosition(this._lastMouseEvent, false);\r\n            if (!position) {\r\n                // Ignoring because position is unknown\r\n                return;\r\n            }\r\n            if (this._mouseState.isDragAndDrop) {\r\n                // Ignoring because users are dragging the text\r\n                return;\r\n            }\r\n            this._dispatchMouse(position, true);\r\n        }, 10);\r\n    }\r\n    onCursorStateChanged(e) {\r\n        this._currentSelection = e.selections[0];\r\n    }\r\n    _getPositionOutsideEditor(e) {\r\n        const editorContent = e.editorPos;\r\n        const model = this._context.model;\r\n        const viewLayout = this._context.viewLayout;\r\n        const mouseColumn = this._getMouseColumn(e);\r\n        if (e.posy < editorContent.y) {\r\n            const verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - (editorContent.y - e.posy), 0);\r\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\r\n            if (viewZoneData) {\r\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\r\n                if (newPosition) {\r\n                    return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, newPosition);\r\n                }\r\n            }\r\n            const aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\r\n            return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, new Position(aboveLineNumber, 1));\r\n        }\r\n        if (e.posy > editorContent.y + editorContent.height) {\r\n            const verticalOffset = viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y);\r\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\r\n            if (viewZoneData) {\r\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\r\n                if (newPosition) {\r\n                    return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, newPosition);\r\n                }\r\n            }\r\n            const belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\r\n            return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)));\r\n        }\r\n        const possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y));\r\n        if (e.posx < editorContent.x) {\r\n            return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, new Position(possibleLineNumber, 1));\r\n        }\r\n        if (e.posx > editorContent.x + editorContent.width) {\r\n            return new MouseTarget(null, 13 /* OUTSIDE_EDITOR */, mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)));\r\n        }\r\n        return null;\r\n    }\r\n    _findMousePosition(e, testEventTarget) {\r\n        const positionOutsideEditor = this._getPositionOutsideEditor(e);\r\n        if (positionOutsideEditor) {\r\n            return positionOutsideEditor;\r\n        }\r\n        const t = this._createMouseTarget(e, testEventTarget);\r\n        const hintedPosition = t.position;\r\n        if (!hintedPosition) {\r\n            return null;\r\n        }\r\n        if (t.type === 8 /* CONTENT_VIEW_ZONE */ || t.type === 5 /* GUTTER_VIEW_ZONE */) {\r\n            const newPosition = this._helpPositionJumpOverViewZone(t.detail);\r\n            if (newPosition) {\r\n                return new MouseTarget(t.element, t.type, t.mouseColumn, newPosition, null, t.detail);\r\n            }\r\n        }\r\n        return t;\r\n    }\r\n    _helpPositionJumpOverViewZone(viewZoneData) {\r\n        // Force position on view zones to go above or below depending on where selection started from\r\n        const selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\r\n        const positionBefore = viewZoneData.positionBefore;\r\n        const positionAfter = viewZoneData.positionAfter;\r\n        if (positionBefore && positionAfter) {\r\n            if (positionBefore.isBefore(selectionStart)) {\r\n                return positionBefore;\r\n            }\r\n            else {\r\n                return positionAfter;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    _dispatchMouse(position, inSelectionMode) {\r\n        if (!position.position) {\r\n            return;\r\n        }\r\n        this._viewController.dispatchMouse({\r\n            position: position.position,\r\n            mouseColumn: position.mouseColumn,\r\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\r\n            inSelectionMode: inSelectionMode,\r\n            mouseDownCount: this._mouseState.count,\r\n            altKey: this._mouseState.altKey,\r\n            ctrlKey: this._mouseState.ctrlKey,\r\n            metaKey: this._mouseState.metaKey,\r\n            shiftKey: this._mouseState.shiftKey,\r\n            leftButton: this._mouseState.leftButton,\r\n            middleButton: this._mouseState.middleButton,\r\n        });\r\n    }\r\n}\r\nclass MouseDownState {\r\n    constructor() {\r\n        this._altKey = false;\r\n        this._ctrlKey = false;\r\n        this._metaKey = false;\r\n        this._shiftKey = false;\r\n        this._leftButton = false;\r\n        this._middleButton = false;\r\n        this._startedOnLineNumbers = false;\r\n        this._lastMouseDownPosition = null;\r\n        this._lastMouseDownPositionEqualCount = 0;\r\n        this._lastMouseDownCount = 0;\r\n        this._lastSetMouseDownCountTime = 0;\r\n        this.isDragAndDrop = false;\r\n    }\r\n    get altKey() { return this._altKey; }\r\n    get ctrlKey() { return this._ctrlKey; }\r\n    get metaKey() { return this._metaKey; }\r\n    get shiftKey() { return this._shiftKey; }\r\n    get leftButton() { return this._leftButton; }\r\n    get middleButton() { return this._middleButton; }\r\n    get startedOnLineNumbers() { return this._startedOnLineNumbers; }\r\n    get count() {\r\n        return this._lastMouseDownCount;\r\n    }\r\n    setModifiers(source) {\r\n        this._altKey = source.altKey;\r\n        this._ctrlKey = source.ctrlKey;\r\n        this._metaKey = source.metaKey;\r\n        this._shiftKey = source.shiftKey;\r\n    }\r\n    setStartButtons(source) {\r\n        this._leftButton = source.leftButton;\r\n        this._middleButton = source.middleButton;\r\n    }\r\n    setStartedOnLineNumbers(startedOnLineNumbers) {\r\n        this._startedOnLineNumbers = startedOnLineNumbers;\r\n    }\r\n    trySetCount(setMouseDownCount, newMouseDownPosition) {\r\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\r\n        const currentTime = (new Date()).getTime();\r\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\r\n            setMouseDownCount = 1;\r\n        }\r\n        this._lastSetMouseDownCountTime = currentTime;\r\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\r\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\r\n            setMouseDownCount = this._lastMouseDownCount + 1;\r\n        }\r\n        // c. Invalidate multiple clicking if the logical position is different\r\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\r\n            this._lastMouseDownPositionEqualCount++;\r\n        }\r\n        else {\r\n            this._lastMouseDownPositionEqualCount = 1;\r\n        }\r\n        this._lastMouseDownPosition = newMouseDownPosition;\r\n        // Finally set the lastMouseDownCount\r\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\r\n    }\r\n}\r\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\r\n"]},"metadata":{},"sourceType":"module"}