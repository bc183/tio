{"ast":null,"code":"import _toConsumableArray from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bar007/Desktop/projects/tio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty } from '../../../base/common/arrays.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { MarkerSeverity } from './markers.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Iterable } from '../../../base/common/iterator.js';\n\nvar DoubleResourceMap = /*#__PURE__*/function () {\n  function DoubleResourceMap() {\n    _classCallCheck(this, DoubleResourceMap);\n\n    this._byResource = new ResourceMap();\n    this._byOwner = new Map();\n  }\n\n  _createClass(DoubleResourceMap, [{\n    key: \"set\",\n    value: function set(resource, owner, value) {\n      var ownerMap = this._byResource.get(resource);\n\n      if (!ownerMap) {\n        ownerMap = new Map();\n\n        this._byResource.set(resource, ownerMap);\n      }\n\n      ownerMap.set(owner, value);\n\n      var resourceMap = this._byOwner.get(owner);\n\n      if (!resourceMap) {\n        resourceMap = new ResourceMap();\n\n        this._byOwner.set(owner, resourceMap);\n      }\n\n      resourceMap.set(resource, value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(resource, owner) {\n      var ownerMap = this._byResource.get(resource);\n\n      return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(resource, owner) {\n      var removedA = false;\n      var removedB = false;\n\n      var ownerMap = this._byResource.get(resource);\n\n      if (ownerMap) {\n        removedA = ownerMap[\"delete\"](owner);\n      }\n\n      var resourceMap = this._byOwner.get(owner);\n\n      if (resourceMap) {\n        removedB = resourceMap[\"delete\"](resource);\n      }\n\n      if (removedA !== removedB) {\n        throw new Error('illegal state');\n      }\n\n      return removedA && removedB;\n    }\n  }, {\n    key: \"values\",\n    value: function values(key) {\n      var _a, _b, _c, _d;\n\n      if (typeof key === 'string') {\n        return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n      }\n\n      if (URI.isUri(key)) {\n        return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n      }\n\n      return Iterable.map(Iterable.concat.apply(Iterable, _toConsumableArray(this._byOwner.values())), function (map) {\n        return map[1];\n      });\n    }\n  }]);\n\n  return DoubleResourceMap;\n}();\n\nvar MarkerStats = /*#__PURE__*/function () {\n  function MarkerStats(service) {\n    _classCallCheck(this, MarkerStats);\n\n    this.errors = 0;\n    this.infos = 0;\n    this.warnings = 0;\n    this.unknowns = 0;\n    this._data = new ResourceMap();\n    this._service = service;\n    this._subscription = service.onMarkerChanged(this._update, this);\n  }\n\n  _createClass(MarkerStats, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._subscription.dispose();\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(resources) {\n      var _iterator = _createForOfIteratorHelper(resources),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var resource = _step.value;\n\n          var oldStats = this._data.get(resource);\n\n          if (oldStats) {\n            this._substract(oldStats);\n          }\n\n          var newStats = this._resourceStats(resource);\n\n          this._add(newStats);\n\n          this._data.set(resource, newStats);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_resourceStats\",\n    value: function _resourceStats(resource) {\n      var result = {\n        errors: 0,\n        warnings: 0,\n        infos: 0,\n        unknowns: 0\n      }; // TODO this is a hack\n\n      if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet) {\n        return result;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this._service.read({\n        resource: resource\n      })),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var severity = _step2.value.severity;\n\n          if (severity === MarkerSeverity.Error) {\n            result.errors += 1;\n          } else if (severity === MarkerSeverity.Warning) {\n            result.warnings += 1;\n          } else if (severity === MarkerSeverity.Info) {\n            result.infos += 1;\n          } else {\n            result.unknowns += 1;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_substract\",\n    value: function _substract(op) {\n      this.errors -= op.errors;\n      this.warnings -= op.warnings;\n      this.infos -= op.infos;\n      this.unknowns -= op.unknowns;\n    }\n  }, {\n    key: \"_add\",\n    value: function _add(op) {\n      this.errors += op.errors;\n      this.warnings += op.warnings;\n      this.infos += op.infos;\n      this.unknowns += op.unknowns;\n    }\n  }]);\n\n  return MarkerStats;\n}();\n\nexport var MarkerService = /*#__PURE__*/function () {\n  function MarkerService() {\n    _classCallCheck(this, MarkerService);\n\n    this._onMarkerChanged = new Emitter();\n    this.onMarkerChanged = Event.debounce(this._onMarkerChanged.event, MarkerService._debouncer, 0);\n    this._data = new DoubleResourceMap();\n    this._stats = new MarkerStats(this);\n  }\n\n  _createClass(MarkerService, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._stats.dispose();\n\n      this._onMarkerChanged.dispose();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(owner, resources) {\n      var _iterator3 = _createForOfIteratorHelper(resources || []),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var resource = _step3.value;\n          this.changeOne(owner, resource, []);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"changeOne\",\n    value: function changeOne(owner, resource, markerData) {\n      if (isFalsyOrEmpty(markerData)) {\n        // remove marker for this (owner,resource)-tuple\n        var removed = this._data[\"delete\"](resource, owner);\n\n        if (removed) {\n          this._onMarkerChanged.fire([resource]);\n        }\n      } else {\n        // insert marker for this (owner,resource)-tuple\n        var markers = [];\n\n        var _iterator4 = _createForOfIteratorHelper(markerData),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var data = _step4.value;\n\n            var marker = MarkerService._toMarker(owner, resource, data);\n\n            if (marker) {\n              markers.push(marker);\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        this._data.set(resource, owner, markers);\n\n        this._onMarkerChanged.fire([resource]);\n      }\n    }\n  }, {\n    key: \"read\",\n    value: function read() {\n      var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n      var owner = filter.owner,\n          resource = filter.resource,\n          severities = filter.severities,\n          take = filter.take;\n\n      if (!take || take < 0) {\n        take = -1;\n      }\n\n      if (owner && resource) {\n        // exactly one owner AND resource\n        var data = this._data.get(resource, owner);\n\n        if (!data) {\n          return [];\n        } else {\n          var result = [];\n\n          var _iterator5 = _createForOfIteratorHelper(data),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var marker = _step5.value;\n\n              if (MarkerService._accept(marker, severities)) {\n                var newLen = result.push(marker);\n\n                if (take > 0 && newLen === take) {\n                  break;\n                }\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          return result;\n        }\n      } else if (!owner && !resource) {\n        // all\n        var _result = [];\n\n        var _iterator6 = _createForOfIteratorHelper(this._data.values()),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var markers = _step6.value;\n\n            var _iterator7 = _createForOfIteratorHelper(markers),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _data = _step7.value;\n\n                if (MarkerService._accept(_data, severities)) {\n                  var _newLen = _result.push(_data);\n\n                  if (take > 0 && _newLen === take) {\n                    return _result;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        return _result;\n      } else {\n        // of one resource OR owner\n        var iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n\n        var _result2 = [];\n\n        var _iterator8 = _createForOfIteratorHelper(iterable),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _markers = _step8.value;\n\n            var _iterator9 = _createForOfIteratorHelper(_markers),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var _data2 = _step9.value;\n\n                if (MarkerService._accept(_data2, severities)) {\n                  var _newLen2 = _result2.push(_data2);\n\n                  if (take > 0 && _newLen2 === take) {\n                    return _result2;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        return _result2;\n      }\n    }\n  }], [{\n    key: \"_toMarker\",\n    value: function _toMarker(owner, resource, data) {\n      var code = data.code,\n          severity = data.severity,\n          message = data.message,\n          source = data.source,\n          startLineNumber = data.startLineNumber,\n          startColumn = data.startColumn,\n          endLineNumber = data.endLineNumber,\n          endColumn = data.endColumn,\n          relatedInformation = data.relatedInformation,\n          tags = data.tags;\n\n      if (!message) {\n        return undefined;\n      } // santize data\n\n\n      startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n      startColumn = startColumn > 0 ? startColumn : 1;\n      endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n      endColumn = endColumn > 0 ? endColumn : startColumn;\n      return {\n        resource: resource,\n        owner: owner,\n        code: code,\n        severity: severity,\n        message: message,\n        source: source,\n        startLineNumber: startLineNumber,\n        startColumn: startColumn,\n        endLineNumber: endLineNumber,\n        endColumn: endColumn,\n        relatedInformation: relatedInformation,\n        tags: tags\n      };\n    }\n  }, {\n    key: \"_accept\",\n    value: function _accept(marker, severities) {\n      return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n  }, {\n    key: \"_debouncer\",\n    value: function _debouncer(last, event) {\n      if (!last) {\n        MarkerService._dedupeMap = new ResourceMap();\n        last = [];\n      }\n\n      var _iterator10 = _createForOfIteratorHelper(event),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var uri = _step10.value;\n\n          if (!MarkerService._dedupeMap.has(uri)) {\n            MarkerService._dedupeMap.set(uri, true);\n\n            last.push(uri);\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return last;\n    }\n  }]);\n\n  return MarkerService;\n}();","map":{"version":3,"sources":["/home/bar007/Desktop/projects/tio/client/node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js"],"names":["isFalsyOrEmpty","Schemas","URI","Event","Emitter","MarkerSeverity","ResourceMap","Iterable","DoubleResourceMap","_byResource","_byOwner","Map","resource","owner","value","ownerMap","get","set","resourceMap","removedA","removedB","Error","key","_a","_b","_c","_d","values","empty","isUri","map","concat","MarkerStats","service","errors","infos","warnings","unknowns","_data","_service","_subscription","onMarkerChanged","_update","dispose","resources","oldStats","_substract","newStats","_resourceStats","_add","result","scheme","inMemory","walkThrough","walkThroughSnippet","read","severity","Warning","Info","op","MarkerService","_onMarkerChanged","debounce","event","_debouncer","_stats","changeOne","markerData","removed","fire","markers","data","marker","_toMarker","push","filter","Object","create","severities","take","_accept","newLen","iterable","code","message","source","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","undefined","last","_dedupeMap","uri","has"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Event, Emitter } from '../../../base/common/event.js';\r\nimport { MarkerSeverity } from './markers.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nclass DoubleResourceMap {\r\n    constructor() {\r\n        this._byResource = new ResourceMap();\r\n        this._byOwner = new Map();\r\n    }\r\n    set(resource, owner, value) {\r\n        let ownerMap = this._byResource.get(resource);\r\n        if (!ownerMap) {\r\n            ownerMap = new Map();\r\n            this._byResource.set(resource, ownerMap);\r\n        }\r\n        ownerMap.set(owner, value);\r\n        let resourceMap = this._byOwner.get(owner);\r\n        if (!resourceMap) {\r\n            resourceMap = new ResourceMap();\r\n            this._byOwner.set(owner, resourceMap);\r\n        }\r\n        resourceMap.set(resource, value);\r\n    }\r\n    get(resource, owner) {\r\n        let ownerMap = this._byResource.get(resource);\r\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\r\n    }\r\n    delete(resource, owner) {\r\n        let removedA = false;\r\n        let removedB = false;\r\n        let ownerMap = this._byResource.get(resource);\r\n        if (ownerMap) {\r\n            removedA = ownerMap.delete(owner);\r\n        }\r\n        let resourceMap = this._byOwner.get(owner);\r\n        if (resourceMap) {\r\n            removedB = resourceMap.delete(resource);\r\n        }\r\n        if (removedA !== removedB) {\r\n            throw new Error('illegal state');\r\n        }\r\n        return removedA && removedB;\r\n    }\r\n    values(key) {\r\n        var _a, _b, _c, _d;\r\n        if (typeof key === 'string') {\r\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\r\n        }\r\n        if (URI.isUri(key)) {\r\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\r\n        }\r\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\r\n    }\r\n}\r\nclass MarkerStats {\r\n    constructor(service) {\r\n        this.errors = 0;\r\n        this.infos = 0;\r\n        this.warnings = 0;\r\n        this.unknowns = 0;\r\n        this._data = new ResourceMap();\r\n        this._service = service;\r\n        this._subscription = service.onMarkerChanged(this._update, this);\r\n    }\r\n    dispose() {\r\n        this._subscription.dispose();\r\n    }\r\n    _update(resources) {\r\n        for (const resource of resources) {\r\n            const oldStats = this._data.get(resource);\r\n            if (oldStats) {\r\n                this._substract(oldStats);\r\n            }\r\n            const newStats = this._resourceStats(resource);\r\n            this._add(newStats);\r\n            this._data.set(resource, newStats);\r\n        }\r\n    }\r\n    _resourceStats(resource) {\r\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\r\n        // TODO this is a hack\r\n        if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet) {\r\n            return result;\r\n        }\r\n        for (const { severity } of this._service.read({ resource })) {\r\n            if (severity === MarkerSeverity.Error) {\r\n                result.errors += 1;\r\n            }\r\n            else if (severity === MarkerSeverity.Warning) {\r\n                result.warnings += 1;\r\n            }\r\n            else if (severity === MarkerSeverity.Info) {\r\n                result.infos += 1;\r\n            }\r\n            else {\r\n                result.unknowns += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _substract(op) {\r\n        this.errors -= op.errors;\r\n        this.warnings -= op.warnings;\r\n        this.infos -= op.infos;\r\n        this.unknowns -= op.unknowns;\r\n    }\r\n    _add(op) {\r\n        this.errors += op.errors;\r\n        this.warnings += op.warnings;\r\n        this.infos += op.infos;\r\n        this.unknowns += op.unknowns;\r\n    }\r\n}\r\nexport class MarkerService {\r\n    constructor() {\r\n        this._onMarkerChanged = new Emitter();\r\n        this.onMarkerChanged = Event.debounce(this._onMarkerChanged.event, MarkerService._debouncer, 0);\r\n        this._data = new DoubleResourceMap();\r\n        this._stats = new MarkerStats(this);\r\n    }\r\n    dispose() {\r\n        this._stats.dispose();\r\n        this._onMarkerChanged.dispose();\r\n    }\r\n    remove(owner, resources) {\r\n        for (const resource of resources || []) {\r\n            this.changeOne(owner, resource, []);\r\n        }\r\n    }\r\n    changeOne(owner, resource, markerData) {\r\n        if (isFalsyOrEmpty(markerData)) {\r\n            // remove marker for this (owner,resource)-tuple\r\n            const removed = this._data.delete(resource, owner);\r\n            if (removed) {\r\n                this._onMarkerChanged.fire([resource]);\r\n            }\r\n        }\r\n        else {\r\n            // insert marker for this (owner,resource)-tuple\r\n            const markers = [];\r\n            for (const data of markerData) {\r\n                const marker = MarkerService._toMarker(owner, resource, data);\r\n                if (marker) {\r\n                    markers.push(marker);\r\n                }\r\n            }\r\n            this._data.set(resource, owner, markers);\r\n            this._onMarkerChanged.fire([resource]);\r\n        }\r\n    }\r\n    static _toMarker(owner, resource, data) {\r\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\r\n        if (!message) {\r\n            return undefined;\r\n        }\r\n        // santize data\r\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\r\n        startColumn = startColumn > 0 ? startColumn : 1;\r\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\r\n        endColumn = endColumn > 0 ? endColumn : startColumn;\r\n        return {\r\n            resource,\r\n            owner,\r\n            code,\r\n            severity,\r\n            message,\r\n            source,\r\n            startLineNumber,\r\n            startColumn,\r\n            endLineNumber,\r\n            endColumn,\r\n            relatedInformation,\r\n            tags,\r\n        };\r\n    }\r\n    read(filter = Object.create(null)) {\r\n        let { owner, resource, severities, take } = filter;\r\n        if (!take || take < 0) {\r\n            take = -1;\r\n        }\r\n        if (owner && resource) {\r\n            // exactly one owner AND resource\r\n            const data = this._data.get(resource, owner);\r\n            if (!data) {\r\n                return [];\r\n            }\r\n            else {\r\n                const result = [];\r\n                for (const marker of data) {\r\n                    if (MarkerService._accept(marker, severities)) {\r\n                        const newLen = result.push(marker);\r\n                        if (take > 0 && newLen === take) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        else if (!owner && !resource) {\r\n            // all\r\n            const result = [];\r\n            for (let markers of this._data.values()) {\r\n                for (let data of markers) {\r\n                    if (MarkerService._accept(data, severities)) {\r\n                        const newLen = result.push(data);\r\n                        if (take > 0 && newLen === take) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            // of one resource OR owner\r\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\r\n            const result = [];\r\n            for (const markers of iterable) {\r\n                for (const data of markers) {\r\n                    if (MarkerService._accept(data, severities)) {\r\n                        const newLen = result.push(data);\r\n                        if (take > 0 && newLen === take) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    static _accept(marker, severities) {\r\n        return severities === undefined || (severities & marker.severity) === marker.severity;\r\n    }\r\n    static _debouncer(last, event) {\r\n        if (!last) {\r\n            MarkerService._dedupeMap = new ResourceMap();\r\n            last = [];\r\n        }\r\n        for (const uri of event) {\r\n            if (!MarkerService._dedupeMap.has(uri)) {\r\n                MarkerService._dedupeMap.set(uri, true);\r\n                last.push(uri);\r\n            }\r\n        }\r\n        return last;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}